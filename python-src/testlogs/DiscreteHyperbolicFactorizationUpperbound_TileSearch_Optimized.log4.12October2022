('Spark Python version:', '3.10.4 (main, Jun 29 2022, 12:14:53) [GCC 11.2.0]')
('factors of ', 99832839829839289382939239728378871872172871827817287187281728718271872817827182781728718271872871287182781721792819898198298298291829189389829892891839018098908918398293918989083981983989182983918283928139829389283989038190809028989108390891839028090283098120938183908192839809180923092039029309203920390293203920392093092302382838182381289839829839823892839829839288392893829839829839829839283982198392819812080989238193891823908983918319898398989898982983989189289382983928928398293892898938981983921898391382198391898198319283982382839839130923090302939230293029039029309203902839289382983828382938982938283982983291909, '(', 2069.5587894854657, ' bits integer) are:')
factorization start (in nanoseconds): 1665563264790731629
tiles_start: 1
tiles_end: 851
tiles_start: 851
tiles_end: 1702
spark-3.0.1-bin-hadoop3.2/bin/spark-submit DiscreteHyperbolicFactorizationUpperbound_TileSearch_Optimized.py 99832839829839289382939239728378871872172871827817287187281728718271872817827182781728718271872871287182781721792819898198298298291829189389829892891839018098908918398293918989083981983989182983918283928139829389283989038190809028989108390891839028090283098120938183908192839809180923092039029309203920390293203920392093092302382838182381289839829839823892839829839288392893829839829839829839283982198392819812080989238193891823908983918319898398989898982983989189289382983928928398293892898938981983921898391382198391898198319283982382839839130923090302939230293029039029309203902839289382983828382938982938283982983291909 187 False False 2>&1 > testlogs/DiscreteHyperbolicFactorizationUpperbound_TileSearch_Optimized.log4.12October2022 
=================================================
xl + intervalmidpoint =  14261834261405612768991319961196981696024695975402469598183104102610267545403883254532674038838981612454683103113259985456899756898832741341404270413119859728415559771184845569869140283427026140559754846877118484183427005455829861284158341555977004012897585445848311986884691401311560441719861329886274341470457702913156156043197548311768755691404262831984691404262755484699118548547119975691326283171198974258868712748313413117701283416902842628427128426140569884184197569132704056899127556991283140560271198768885484556885474183426054691405590131870043277032899004148432758457700405612768997689768991283276897711854755987
xr + intervalmidpoint =  14261834261405612768991319961196981696024695975402469598183104102610267545403883254532674038838981612454683103113259985456899756898832741341404270413119859728415559771184845569869140283427026140559754846877118484183427005455829861284158341555977004012897585445848311986884691401311560441719861329886274341470457702913156156043197548311768755691404262831984691404262755484699118548547119975691326283171198974258868712748313413117701283416902842628427128426140569884184197569132704056899127556991283140560271198768885484556885474183426054691405590131870043277032899004148432758457700405612768997689768991283276897711854755990
xl =  14261834261405612768991319961196981696024695975402469598183104102610267545403883254532674038838981612454683103113259985456899756898832741341404270413119859728415559771184845569869140283427026140559754846877118484183427005455829861284158341555977004012897585445848311986884691401311560441719861329886274341470457702913156156043197548311768755691404262831984691404262755484699118548547119975691326283171198974258868712748313413117701283416902842628427128426140569884184197569132704056899127556991283140560271198768885484556885474183426054691405590131870043277032899004148432758457700405612768997689768991283276897711854755986
yl =  7
Factor point verification: (xl + intervalmidpoint)*yl == number_to_factorize =  True
Factor point verification: xl*yl == number_to_factorize =  False
('Factors are: (', 7, ',', 14261834261405612768991319961196981696024695975402469598183104102610267545403883254532674038838981612454683103113259985456899756898832741341404270413119859728415559771184845569869140283427026140559754846877118484183427005455829861284158341555977004012897585445848311986884691401311560441719861329886274341470457702913156156043197548311768755691404262831984691404262755484699118548547119975691326283171198974258868712748313413117701283416902842628427128426140569884184197569132704056899127556991283140560271198768885484556885474183426054691405590131870043277032899004148432758457700405612768997689768991283276897711854755987, ') (at ', 'Wed, 12 Oct 2022 08:27:50 GMT', ')')
nanoseconds elapsed so far in finding all factors:  5248493533
=================================================
factors_accum._value:  [14261834261405612768991319961196981696024695975402469598183104102610267545403883254532674038838981612454683103113259985456899756898832741341404270413119859728415559771184845569869140283427026140559754846877118484183427005455829861284158341555977004012897585445848311986884691401311560441719861329886274341470457702913156156043197548311768755691404262831984691404262755484699118548547119975691326283171198974258868712748313413117701283416902842628427128426140569884184197569132704056899127556991283140560271198768885484556885474183426054691405590131870043277032899004148432758457700405612768997689768991283276897711854755986, 7]
Traceback (most recent call last):
  File "/media/ksrinivasan/84f7d6fd-3d43-4215-8dcc-52b5fe1bffc6/home/ksrinivasan/Krishna_iResearch_OpenSource_wc1/GitHub/asfer-github-code/python-src/DiscreteHyperbolicFactorizationUpperbound_TileSearch_Optimized.py", line 498, in <module>
    factors = SearchTiles_and_Factorize(number_to_factorize, int(sys.argv[2]), Parallel_for)
  File "/media/ksrinivasan/84f7d6fd-3d43-4215-8dcc-52b5fe1bffc6/home/ksrinivasan/Krishna_iResearch_OpenSource_wc1/GitHub/asfer-github-code/python-src/DiscreteHyperbolicFactorizationUpperbound_TileSearch_Optimized.py", line 430, in SearchTiles_and_Factorize
    spcon.parallelize(tiles).foreach(
  File "/media/ksrinivasan/84f7d6fd-3d43-4215-8dcc-52b5fe1bffc6/home/ksrinivasan/spark-3.0.1-bin-hadoop3.2/python/lib/pyspark.zip/pyspark/rdd.py", line 862, in foreach
  File "/media/ksrinivasan/84f7d6fd-3d43-4215-8dcc-52b5fe1bffc6/home/ksrinivasan/spark-3.0.1-bin-hadoop3.2/python/lib/pyspark.zip/pyspark/rdd.py", line 1141, in count
  File "/media/ksrinivasan/84f7d6fd-3d43-4215-8dcc-52b5fe1bffc6/home/ksrinivasan/spark-3.0.1-bin-hadoop3.2/python/lib/pyspark.zip/pyspark/rdd.py", line 1132, in sum
  File "/media/ksrinivasan/84f7d6fd-3d43-4215-8dcc-52b5fe1bffc6/home/ksrinivasan/spark-3.0.1-bin-hadoop3.2/python/lib/pyspark.zip/pyspark/rdd.py", line 1003, in fold
  File "/media/ksrinivasan/84f7d6fd-3d43-4215-8dcc-52b5fe1bffc6/home/ksrinivasan/spark-3.0.1-bin-hadoop3.2/python/lib/pyspark.zip/pyspark/rdd.py", line 889, in collect
  File "/media/ksrinivasan/84f7d6fd-3d43-4215-8dcc-52b5fe1bffc6/home/ksrinivasan/spark-3.0.1-bin-hadoop3.2/python/lib/py4j-0.10.9-src.zip/py4j/java_gateway.py", line 1303, in __call__
  File "/media/ksrinivasan/84f7d6fd-3d43-4215-8dcc-52b5fe1bffc6/home/ksrinivasan/spark-3.0.1-bin-hadoop3.2/python/lib/py4j-0.10.9-src.zip/py4j/java_gateway.py", line 1033, in send_command
  File "/media/ksrinivasan/84f7d6fd-3d43-4215-8dcc-52b5fe1bffc6/home/ksrinivasan/spark-3.0.1-bin-hadoop3.2/python/lib/py4j-0.10.9-src.zip/py4j/java_gateway.py", line 1200, in send_command
  File "/usr/lib/python3.10/socket.py", line 705, in readinto
    return self._sock.recv_into(b)
  File "/media/ksrinivasan/84f7d6fd-3d43-4215-8dcc-52b5fe1bffc6/home/ksrinivasan/spark-3.0.1-bin-hadoop3.2/python/lib/pyspark.zip/pyspark/context.py", line 279, in signal_handler
KeyboardInterrupt
