##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#0#7#0#9#0#2#0#0#0#58#36]:#0#7#0#

##################################################################
lcs= #0#7#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#7#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 5
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 3 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 7
asferfind(): issubstring = True, beg= 7
lcsbeg= 7
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 7 ,prefix= 14a#9#0
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Cancer | Saturn  in  Leo | Unoccupied  in  Virgo |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [2345a#169#7#0#0#0#0#8#0#0#0#0]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [a#0#59#0#0#0#6#127#48#3#0#0]:9#0#0#

##################################################################
lcs= 9#0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 9#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= 9 ; str2[s2]= 9 ;s2= 0 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 1 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 2 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 3 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 4 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 5 ;len(str2)= 7 ; s1= 4
asferfind(): issubstring = True, beg= 4
lcsbeg= 4
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 4 ,prefix= 14a#
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Ketu  in  Taurus | Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and :

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and :

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#0#7#0#9#0#2#0#0#0#58#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#7#0#

##################################################################
lcs= #0#7#0#

encstr= 14a#0#7#0#9#0#2#0#0#0#58#36 ; lcs= #0#7#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 3 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 3
asferfind(): issubstring = True, beg= 3
lcsbeg= 3
computebhava(): str1= 14a#0#7#0#9#0#2#0#0#0#58#36 ,lcsbeg= 3 ,prefix= 14a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Saturn  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#0#7#0#9#0#2#0#0#0#58#36] and [14a#0#7#0#9#0#2#0#0#0#58#36]:[14a#0#7#0#9#0#2#0#0#0#58#36]

##################################################################
lcs= [14a#0#7#0#9#0#2#0#0#0#58#36]

encstr= 14a#0#7#0#9#0#2#0#0#0#58#36 ; lcs= [14a#0#7#0#9#0#2#0#0#0#58#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#0#7#0#9#0#2#0#0#0#58#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#7#0#

##################################################################
lcs= #0#7#0#

encstr= 14a#0#7#0#9#0#2#0#0#0#58#36 ; lcs= #0#7#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 3 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 3
asferfind(): issubstring = True, beg= 3
lcsbeg= 3
computebhava(): str1= 14a#0#7#0#9#0#2#0#0#0#58#36 ,lcsbeg= 3 ,prefix= 14a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Saturn  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#0#7#0#9#0#2#0#0#0#58#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#0#

##################################################################
lcs= #0#0#0#

encstr= 14a#0#7#0#9#0#2#0#0#0#58#36 ; lcs= #0#0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 7
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 9
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 11
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 13
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 15
asferfind(): issubstring = True, beg= 15
lcsbeg= 15
computebhava(): str1= 14a#0#7#0#9#0#2#0#0#0#58#36 ,lcsbeg= 15 ,prefix= 14a#0#7#0#9#0#2
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Scorpio | Unoccupied  in  Sagittarius | Unoccupied  in  Capricorn |
=====================================
##################################################################
: Longest Common Substring for [14a#0#7#0#9#0#2#0#0#0#58#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#0#

##################################################################
lcs= #0#0#0#

encstr= 14a#0#7#0#9#0#2#0#0#0#58#36 ; lcs= #0#0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 7
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 9
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 11
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 13
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 15
asferfind(): issubstring = True, beg= 15
lcsbeg= 15
computebhava(): str1= 14a#0#7#0#9#0#2#0#0#0#58#36 ,lcsbeg= 15 ,prefix= 14a#0#7#0#9#0#2
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Scorpio | Unoccupied  in  Sagittarius | Unoccupied  in  Capricorn |
=====================================
##################################################################
: Longest Common Substring for [14a#0#7#0#9#0#2#0#0#0#58#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#7#0#

##################################################################
lcs= #0#7#0#

encstr= 14a#0#7#0#9#0#2#0#0#0#58#36 ; lcs= #0#7#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 3 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 3
asferfind(): issubstring = True, beg= 3
lcsbeg= 3
computebhava(): str1= 14a#0#7#0#9#0#2#0#0#0#58#36 ,lcsbeg= 3 ,prefix= 14a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Saturn  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#0#7#0#9#0#2#0#0#0#58#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#0#

##################################################################
lcs= #0#0#0#

encstr= 14a#0#7#0#9#0#2#0#0#0#58#36 ; lcs= #0#0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 7
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 9
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 11
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 13
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 15
asferfind(): issubstring = True, beg= 15
lcsbeg= 15
computebhava(): str1= 14a#0#7#0#9#0#2#0#0#0#58#36 ,lcsbeg= 15 ,prefix= 14a#0#7#0#9#0#2
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Scorpio | Unoccupied  in  Sagittarius | Unoccupied  in  Capricorn |
=====================================
##################################################################
: Longest Common Substring for [14a#0#7#0#9#0#2#0#0#0#58#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#0#

##################################################################
lcs= #0#0#0#

encstr= 14a#0#7#0#9#0#2#0#0#0#58#36 ; lcs= #0#0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 7
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 9
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 11
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 13
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 15
asferfind(): issubstring = True, beg= 15
lcsbeg= 15
computebhava(): str1= 14a#0#7#0#9#0#2#0#0#0#58#36 ,lcsbeg= 15 ,prefix= 14a#0#7#0#9#0#2
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Scorpio | Unoccupied  in  Sagittarius | Unoccupied  in  Capricorn |
=====================================
##################################################################
: Longest Common Substring for [14a#0#7#0#9#0#2#0#0#0#58#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#0#

##################################################################
lcs= #0#0#0#

encstr= 14a#0#7#0#9#0#2#0#0#0#58#36 ; lcs= #0#0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 7
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 9
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 11
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 13
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 15
asferfind(): issubstring = True, beg= 15
lcsbeg= 15
computebhava(): str1= 14a#0#7#0#9#0#2#0#0#0#58#36 ,lcsbeg= 15 ,prefix= 14a#0#7#0#9#0#2
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Scorpio | Unoccupied  in  Sagittarius | Unoccupied  in  Capricorn |
=====================================
##################################################################
: Longest Common Substring for [14a#0#7#0#9#0#2#0#0#0#58#36] and [2345a#169#7#0#0#0#0#8#0#0#0#0]:#0#0#0#

##################################################################
lcs= #0#0#0#

encstr= 14a#0#7#0#9#0#2#0#0#0#58#36 ; lcs= #0#0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 7
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 9
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 11
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 13
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 15
asferfind(): issubstring = True, beg= 15
lcsbeg= 15
computebhava(): str1= 14a#0#7#0#9#0#2#0#0#0#58#36 ,lcsbeg= 15 ,prefix= 14a#0#7#0#9#0#2
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Scorpio | Unoccupied  in  Sagittarius | Unoccupied  in  Capricorn |
=====================================
##################################################################
: Longest Common Substring for [14a#0#7#0#9#0#2#0#0#0#58#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#7#0#

##################################################################
lcs= #0#7#0#

encstr= 14a#0#7#0#9#0#2#0#0#0#58#36 ; lcs= #0#7#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 3 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 3
asferfind(): issubstring = True, beg= 3
lcsbeg= 3
computebhava(): str1= 14a#0#7#0#9#0#2#0#0#0#58#36 ,lcsbeg= 3 ,prefix= 14a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Saturn  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#0#7#0#9#0#2#0#0#0#58#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#7#0#

##################################################################
lcs= #0#7#0#

encstr= 14a#0#7#0#9#0#2#0#0#0#58#36 ; lcs= #0#7#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 3 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 3
asferfind(): issubstring = True, beg= 3
lcsbeg= 3
computebhava(): str1= 14a#0#7#0#9#0#2#0#0#0#58#36 ,lcsbeg= 3 ,prefix= 14a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Saturn  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#0#7#0#9#0#2#0#0#0#58#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#7#0#

##################################################################
lcs= #0#7#0#

encstr= 14a#0#7#0#9#0#2#0#0#0#58#36 ; lcs= #0#7#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 3 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 3
asferfind(): issubstring = True, beg= 3
lcsbeg= 3
computebhava(): str1= 14a#0#7#0#9#0#2#0#0#0#58#36 ,lcsbeg= 3 ,prefix= 14a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Saturn  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#0#7#0#9#0#2#0#0#0#58#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#7#0#

##################################################################
lcs= #0#7#0#

encstr= 14a#0#7#0#9#0#2#0#0#0#58#36 ; lcs= #0#7#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 3 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 3
asferfind(): issubstring = True, beg= 3
lcsbeg= 3
computebhava(): str1= 14a#0#7#0#9#0#2#0#0#0#58#36 ,lcsbeg= 3 ,prefix= 14a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Saturn  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#0#7#0#9#0#2#0#0#0#58#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#7#0#

##################################################################
lcs= #0#7#0#

encstr= 14a#0#7#0#9#0#2#0#0#0#58#36 ; lcs= #0#7#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 3 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 3
asferfind(): issubstring = True, beg= 3
lcsbeg= 3
computebhava(): str1= 14a#0#7#0#9#0#2#0#0#0#58#36 ,lcsbeg= 3 ,prefix= 14a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Saturn  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#0#7#0#9#0#2#0#0#0#58#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#7#0#

##################################################################
lcs= #0#7#0#

encstr= 14a#0#7#0#9#0#2#0#0#0#58#36 ; lcs= #0#7#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 3 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 3
asferfind(): issubstring = True, beg= 3
lcsbeg= 3
computebhava(): str1= 14a#0#7#0#9#0#2#0#0#0#58#36 ,lcsbeg= 3 ,prefix= 14a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Saturn  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#0#7#0#9#0#2#0#0#0#58#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#7#0#

##################################################################
lcs= #0#7#0#

encstr= 14a#0#7#0#9#0#2#0#0#0#58#36 ; lcs= #0#7#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 3 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 3
asferfind(): issubstring = True, beg= 3
lcsbeg= 3
computebhava(): str1= 14a#0#7#0#9#0#2#0#0#0#58#36 ,lcsbeg= 3 ,prefix= 14a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Saturn  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#0#7#0#9#0#2#0#0#0#58#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#7#0#

##################################################################
lcs= #0#7#0#

encstr= 14a#0#7#0#9#0#2#0#0#0#58#36 ; lcs= #0#7#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 3 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 3
asferfind(): issubstring = True, beg= 3
lcsbeg= 3
computebhava(): str1= 14a#0#7#0#9#0#2#0#0#0#58#36 ,lcsbeg= 3 ,prefix= 14a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Saturn  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#0#7#0#9#0#2#0#0#0#58#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#7#0#

##################################################################
lcs= #0#7#0#

encstr= 14a#0#7#0#9#0#2#0#0#0#58#36 ; lcs= #0#7#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 3 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 3
asferfind(): issubstring = True, beg= 3
lcsbeg= 3
computebhava(): str1= 14a#0#7#0#9#0#2#0#0#0#58#36 ,lcsbeg= 3 ,prefix= 14a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Saturn  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#0#7#0#9#0#2#0#0#0#58#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#7#0#

##################################################################
lcs= #0#7#0#

encstr= 14a#0#7#0#9#0#2#0#0#0#58#36 ; lcs= #0#7#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 3 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 3
asferfind(): issubstring = True, beg= 3
lcsbeg= 3
computebhava(): str1= 14a#0#7#0#9#0#2#0#0#0#58#36 ,lcsbeg= 3 ,prefix= 14a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Saturn  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#0#7#0#9#0#2#0#0#0#58#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#7#0#

##################################################################
lcs= #0#7#0#

encstr= 14a#0#7#0#9#0#2#0#0#0#58#36 ; lcs= #0#7#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 3 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 3
asferfind(): issubstring = True, beg= 3
lcsbeg= 3
computebhava(): str1= 14a#0#7#0#9#0#2#0#0#0#58#36 ,lcsbeg= 3 ,prefix= 14a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Saturn  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#0#7#0#9#0#2#0#0#0#58#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#0#

##################################################################
lcs= #0#0#0#

encstr= 14a#0#7#0#9#0#2#0#0#0#58#36 ; lcs= #0#0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 7
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 9
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 11
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 13
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 15
asferfind(): issubstring = True, beg= 15
lcsbeg= 15
computebhava(): str1= 14a#0#7#0#9#0#2#0#0#0#58#36 ,lcsbeg= 15 ,prefix= 14a#0#7#0#9#0#2
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Scorpio | Unoccupied  in  Sagittarius | Unoccupied  in  Capricorn |
=====================================
##################################################################
: Longest Common Substring for [14a#0#7#0#9#0#2#0#0#0#58#36] and [a#0#59#0#0#0#6#127#48#3#0#0]:#0#0#0#

##################################################################
lcs= #0#0#0#

encstr= 14a#0#7#0#9#0#2#0#0#0#58#36 ; lcs= #0#0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 7
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 9
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 11
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 13
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 15
asferfind(): issubstring = True, beg= 15
lcsbeg= 15
computebhava(): str1= 14a#0#7#0#9#0#2#0#0#0#58#36 ,lcsbeg= 15 ,prefix= 14a#0#7#0#9#0#2
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Scorpio | Unoccupied  in  Sagittarius | Unoccupied  in  Capricorn |
=====================================
##################################################################
: Longest Common Substring for [14a#0#7#0#9#0#2#0#0#0#58#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#0#

##################################################################
lcs= #0#0#0#

encstr= 14a#0#7#0#9#0#2#0#0#0#58#36 ; lcs= #0#0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 7
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 9
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 11
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 13
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 15
asferfind(): issubstring = True, beg= 15
lcsbeg= 15
computebhava(): str1= 14a#0#7#0#9#0#2#0#0#0#58#36 ,lcsbeg= 15 ,prefix= 14a#0#7#0#9#0#2
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Scorpio | Unoccupied  in  Sagittarius | Unoccupied  in  Capricorn |
=====================================
##################################################################
: Longest Common Substring for [14a#0#7#0#9#0#2#0#0#0#58#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#7#0#

##################################################################
lcs= #0#7#0#

encstr= 14a#0#7#0#9#0#2#0#0#0#58#36 ; lcs= #0#7#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 3 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 3
asferfind(): issubstring = True, beg= 3
lcsbeg= 3
computebhava(): str1= 14a#0#7#0#9#0#2#0#0#0#58#36 ,lcsbeg= 3 ,prefix= 14a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Saturn  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#0#7#0#9#0#2#0#0#0#58#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#7#0#

##################################################################
lcs= #0#7#0#

encstr= 14a#0#7#0#9#0#2#0#0#0#58#36 ; lcs= #0#7#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 3 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 3
asferfind(): issubstring = True, beg= 3
lcsbeg= 3
computebhava(): str1= 14a#0#7#0#9#0#2#0#0#0#58#36 ,lcsbeg= 3 ,prefix= 14a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Saturn  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#0#7#0#9#0#2#0#0#0#58#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#7#0#

##################################################################
lcs= #0#7#0#

encstr= 14a#0#7#0#9#0#2#0#0#0#58#36 ; lcs= #0#7#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 3 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 3
asferfind(): issubstring = True, beg= 3
lcsbeg= 3
computebhava(): str1= 14a#0#7#0#9#0#2#0#0#0#58#36 ,lcsbeg= 3 ,prefix= 14a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Saturn  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#0#7#0#9#0#2#0#0#0#58#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#7#0#

##################################################################
lcs= #0#7#0#

encstr= 14a#0#7#0#9#0#2#0#0#0#58#36 ; lcs= #0#7#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 3 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 3
asferfind(): issubstring = True, beg= 3
lcsbeg= 3
computebhava(): str1= 14a#0#7#0#9#0#2#0#0#0#58#36 ,lcsbeg= 3 ,prefix= 14a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Saturn  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#0#7#0#9#0#2#0#0#0#58#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#7#0#

##################################################################
lcs= #0#7#0#

encstr= 14a#0#7#0#9#0#2#0#0#0#58#36 ; lcs= #0#7#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 3 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 3
asferfind(): issubstring = True, beg= 3
lcsbeg= 3
computebhava(): str1= 14a#0#7#0#9#0#2#0#0#0#58#36 ,lcsbeg= 3 ,prefix= 14a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Saturn  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#0#7#0#9#0#2#0#0#0#58#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#7#0#

##################################################################
lcs= #0#7#0#

encstr= 14a#0#7#0#9#0#2#0#0#0#58#36 ; lcs= #0#7#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 3 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 3
asferfind(): issubstring = True, beg= 3
lcsbeg= 3
computebhava(): str1= 14a#0#7#0#9#0#2#0#0#0#58#36 ,lcsbeg= 3 ,prefix= 14a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Saturn  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#0#7#0#9#0#2#0#0#0#58#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#0#

##################################################################
lcs= #0#0#0#

encstr= 14a#0#7#0#9#0#2#0#0#0#58#36 ; lcs= #0#0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 7
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 9
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 11
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 13
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 15
asferfind(): issubstring = True, beg= 15
lcsbeg= 15
computebhava(): str1= 14a#0#7#0#9#0#2#0#0#0#58#36 ,lcsbeg= 15 ,prefix= 14a#0#7#0#9#0#2
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Scorpio | Unoccupied  in  Sagittarius | Unoccupied  in  Capricorn |
=====================================
##################################################################
: Longest Common Substring for [14a#0#7#0#9#0#2#0#0#0#58#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#7#0#

##################################################################
lcs= #0#7#0#

encstr= 14a#0#7#0#9#0#2#0#0#0#58#36 ; lcs= #0#7#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 3 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 3
asferfind(): issubstring = True, beg= 3
lcsbeg= 3
computebhava(): str1= 14a#0#7#0#9#0#2#0#0#0#58#36 ,lcsbeg= 3 ,prefix= 14a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Saturn  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#0#7#0#9#0#2#0#0#0#58#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#7#0#

##################################################################
lcs= #0#7#0#

encstr= 14a#0#7#0#9#0#2#0#0#0#58#36 ; lcs= #0#7#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 3 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 3
asferfind(): issubstring = True, beg= 3
lcsbeg= 3
computebhava(): str1= 14a#0#7#0#9#0#2#0#0#0#58#36 ,lcsbeg= 3 ,prefix= 14a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Saturn  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#0#7#0#9#0#2#0#0#0#58#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#7#0#

##################################################################
lcs= #0#7#0#

encstr= 14a#0#7#0#9#0#2#0#0#0#58#36 ; lcs= #0#7#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 3 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 3
asferfind(): issubstring = True, beg= 3
lcsbeg= 3
computebhava(): str1= 14a#0#7#0#9#0#2#0#0#0#58#36 ,lcsbeg= 3 ,prefix= 14a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Saturn  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#0#7#0#9#0#2#0#0#0#58#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#7#0#

##################################################################
lcs= #0#7#0#

encstr= 14a#0#7#0#9#0#2#0#0#0#58#36 ; lcs= #0#7#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 3 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 3
asferfind(): issubstring = True, beg= 3
lcsbeg= 3
computebhava(): str1= 14a#0#7#0#9#0#2#0#0#0#58#36 ,lcsbeg= 3 ,prefix= 14a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Saturn  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#0#7#0#9#0#2#0#0#0#58#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#0#

##################################################################
lcs= #0#0#0#

encstr= 14a#0#7#0#9#0#2#0#0#0#58#36 ; lcs= #0#0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 3
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 7
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 9
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 11
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 13
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 15
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 15
asferfind(): issubstring = True, beg= 15
lcsbeg= 15
computebhava(): str1= 14a#0#7#0#9#0#2#0#0#0#58#36 ,lcsbeg= 15 ,prefix= 14a#0#7#0#9#0#2
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Scorpio | Unoccupied  in  Sagittarius | Unoccupied  in  Capricorn |
=====================================
##################################################################
: Longest Common Substring for [14a#0#7#0#9#0#2#0#0#0#58#36] and :

##################################################################
lcs= 

encstr= 14a#0#7#0#9#0#2#0#0#0#58#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#0#7#0#9#0#2#0#0#0#58#36] and :

##################################################################
lcs= 

encstr= 14a#0#7#0#9#0#2#0#0#0#58#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#0#7#0#9#0#2#0#0#0#58#36]:#0#7#0#

##################################################################
lcs= #0#7#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#7#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 5
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 3 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 7
asferfind(): issubstring = True, beg= 7
lcsbeg= 7
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 7 ,prefix= 14a#9#0
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Cancer | Saturn  in  Leo | Unoccupied  in  Virgo |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [2345a#169#7#0#0#0#0#8#0#0#0#0]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [a#0#59#0#0#0#6#127#48#3#0#0]:9#0#0#

##################################################################
lcs= 9#0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 9#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= 9 ; str2[s2]= 9 ;s2= 0 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 1 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 2 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 3 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 4 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 5 ;len(str2)= 7 ; s1= 4
asferfind(): issubstring = True, beg= 4
lcsbeg= 4
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 4 ,prefix= 14a#
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Ketu  in  Taurus | Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and :

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and :

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#0#7#0#9#0#2#0#0#0#58#36]:#0#0#0#

##################################################################
lcs= #0#0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [2345a#169#7#0#0#0#0#8#0#0#0#0]:#0#0#0#0#8#0#0#

##################################################################
lcs= #0#0#0#0#8#0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#0#0#8#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 7 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 8 ;len(str2)= 16 ; s1= 5
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 7 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 8 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 8 ; str2[s2]= 8 ;s2= 9 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 10 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 11 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 12 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 13 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 14 ;len(str2)= 16 ; s1= 7
asferfind(): issubstring = True, beg= 7
lcsbeg= 7
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 7 ,prefix= 1349a#0
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer | Unoccupied  in  Leo | Unoccupied  in  Virgo | Rahu  in  Libra | Unoccupied  in  Scorpio | Unoccupied  in  Sagittarius |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [a#0#59#0#0#0#6#127#48#3#0#0]:#0#0#0#

##################################################################
lcs= #0#0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and :

##################################################################
lcs= 

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and :

##################################################################
lcs= 

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#0#7#0#9#0#2#0#0#0#58#36]:#0#0#0#

##################################################################
lcs= #0#0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [2345a#169#7#0#0#0#0#8#0#0#0#0]:#0#0#0#0#8#0#0#

##################################################################
lcs= #0#0#0#0#8#0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#0#0#8#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 7 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 8 ;len(str2)= 16 ; s1= 5
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 7 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 8 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 8 ; str2[s2]= 8 ;s2= 9 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 10 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 11 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 12 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 13 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 14 ;len(str2)= 16 ; s1= 7
asferfind(): issubstring = True, beg= 7
lcsbeg= 7
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 7 ,prefix= 1349a#0
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer | Unoccupied  in  Leo | Unoccupied  in  Virgo | Rahu  in  Libra | Unoccupied  in  Scorpio | Unoccupied  in  Sagittarius |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [a#0#59#0#0#0#6#127#48#3#0#0]:#0#0#0#

##################################################################
lcs= #0#0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and :

##################################################################
lcs= 

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and :

##################################################################
lcs= 

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#0#7#0#9#0#2#0#0#0#58#36]:#0#7#0#

##################################################################
lcs= #0#7#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#7#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 5
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 3 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 7
asferfind(): issubstring = True, beg= 7
lcsbeg= 7
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 7 ,prefix= 14a#9#0
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Cancer | Saturn  in  Leo | Unoccupied  in  Virgo |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [2345a#169#7#0#0#0#0#8#0#0#0#0]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [a#0#59#0#0#0#6#127#48#3#0#0]:9#0#0#

##################################################################
lcs= 9#0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 9#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= 9 ; str2[s2]= 9 ;s2= 0 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 1 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 2 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 3 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 4 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 5 ;len(str2)= 7 ; s1= 4
asferfind(): issubstring = True, beg= 4
lcsbeg= 4
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 4 ,prefix= 14a#
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Ketu  in  Taurus | Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and :

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and :

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#0#7#0#9#0#2#0#0#0#58#36]:#0#0#0#

##################################################################
lcs= #0#0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [2345a#169#7#0#0#0#0#8#0#0#0#0]:#0#0#0#0#8#0#0#

##################################################################
lcs= #0#0#0#0#8#0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#0#0#8#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 7 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 8 ;len(str2)= 16 ; s1= 5
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 7 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 8 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 8 ; str2[s2]= 8 ;s2= 9 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 10 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 11 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 12 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 13 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 14 ;len(str2)= 16 ; s1= 7
asferfind(): issubstring = True, beg= 7
lcsbeg= 7
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 7 ,prefix= 1349a#0
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer | Unoccupied  in  Leo | Unoccupied  in  Virgo | Rahu  in  Libra | Unoccupied  in  Scorpio | Unoccupied  in  Sagittarius |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [a#0#59#0#0#0#6#127#48#3#0#0]:#0#0#0#

##################################################################
lcs= #0#0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and :

##################################################################
lcs= 

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and :

##################################################################
lcs= 

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#0#7#0#9#0#2#0#0#0#58#36]:#0#0#0#

##################################################################
lcs= #0#0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [2345a#169#7#0#0#0#0#8#0#0#0#0]:#0#0#0#0#8#0#0#

##################################################################
lcs= #0#0#0#0#8#0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#0#0#8#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 7 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 8 ;len(str2)= 16 ; s1= 5
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 7 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 8 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 8 ; str2[s2]= 8 ;s2= 9 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 10 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 11 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 12 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 13 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 14 ;len(str2)= 16 ; s1= 7
asferfind(): issubstring = True, beg= 7
lcsbeg= 7
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 7 ,prefix= 1349a#0
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer | Unoccupied  in  Leo | Unoccupied  in  Virgo | Rahu  in  Libra | Unoccupied  in  Scorpio | Unoccupied  in  Sagittarius |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [a#0#59#0#0#0#6#127#48#3#0#0]:#0#0#0#

##################################################################
lcs= #0#0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and :

##################################################################
lcs= 

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and :

##################################################################
lcs= 

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#0#7#0#9#0#2#0#0#0#58#36]:#0#0#0#

##################################################################
lcs= #0#0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [2345a#169#7#0#0#0#0#8#0#0#0#0]:#0#0#0#0#8#0#0#

##################################################################
lcs= #0#0#0#0#8#0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#0#0#8#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 7 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 8 ;len(str2)= 16 ; s1= 5
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 7 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 8 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 8 ; str2[s2]= 8 ;s2= 9 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 10 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 11 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 12 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 13 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 14 ;len(str2)= 16 ; s1= 7
asferfind(): issubstring = True, beg= 7
lcsbeg= 7
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 7 ,prefix= 1349a#0
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer | Unoccupied  in  Leo | Unoccupied  in  Virgo | Rahu  in  Libra | Unoccupied  in  Scorpio | Unoccupied  in  Sagittarius |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [a#0#59#0#0#0#6#127#48#3#0#0]:#0#0#0#

##################################################################
lcs= #0#0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and :

##################################################################
lcs= 

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and :

##################################################################
lcs= 

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [2345a#169#7#0#0#0#0#8#0#0#0#0] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#7#0#

##################################################################
lcs= #7#0#

encstr= 2345a#169#7#0#0#0#0#8#0#0#0#0 ; lcs= #7#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 1 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 9
asferfind(): issubstring = True, beg= 9
lcsbeg= 9
computebhava(): str1= 2345a#169#7#0#0#0#0#8#0#0#0#0 ,lcsbeg= 9 ,prefix= 2345a#169
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Saturn  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [2345a#169#7#0#0#0#0#8#0#0#0#0] and [14a#0#7#0#9#0#2#0#0#0#58#36]:#0#0#0#

##################################################################
lcs= #0#0#0#

encstr= 2345a#169#7#0#0#0#0#8#0#0#0#0 ; lcs= #0#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 9
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 8 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 11
asferfind(): issubstring = True, beg= 11
lcsbeg= 11
computebhava(): str1= 2345a#169#7#0#0#0#0#8#0#0#0#0 ,lcsbeg= 11 ,prefix= 2345a#169#7
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Cancer | Unoccupied  in  Leo | Unoccupied  in  Virgo |
=====================================
##################################################################
: Longest Common Substring for [2345a#169#7#0#0#0#0#8#0#0#0#0] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#7#0#

##################################################################
lcs= #7#0#

encstr= 2345a#169#7#0#0#0#0#8#0#0#0#0 ; lcs= #7#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 1 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 9
asferfind(): issubstring = True, beg= 9
lcsbeg= 9
computebhava(): str1= 2345a#169#7#0#0#0#0#8#0#0#0#0 ,lcsbeg= 9 ,prefix= 2345a#169
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Saturn  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [2345a#169#7#0#0#0#0#8#0#0#0#0] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#0#0#8#0#0#

##################################################################
lcs= #0#0#0#0#8#0#0#

encstr= 2345a#169#7#0#0#0#0#8#0#0#0#0 ; lcs= #0#0#0#0#8#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 16 ; s1= 5
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 16 ; s1= 9
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 7 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 8 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 8 ; str2[s2]= 8 ;s2= 9 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 10 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 11 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 12 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 13 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 14 ;len(str2)= 16 ; s1= 11
asferfind(): issubstring = True, beg= 11
lcsbeg= 11
computebhava(): str1= 2345a#169#7#0#0#0#0#8#0#0#0#0 ,lcsbeg= 11 ,prefix= 2345a#169#7
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Cancer | Unoccupied  in  Leo | Unoccupied  in  Virgo | Unoccupied  in  Libra | Rahu  in  Scorpio | Unoccupied  in  Sagittarius | Unoccupied  in  Capricorn |
=====================================
##################################################################
: Longest Common Substring for [2345a#169#7#0#0#0#0#8#0#0#0#0] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#0#0#8#0#0#

##################################################################
lcs= #0#0#0#0#8#0#0#

encstr= 2345a#169#7#0#0#0#0#8#0#0#0#0 ; lcs= #0#0#0#0#8#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 16 ; s1= 5
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 16 ; s1= 9
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 7 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 8 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 8 ; str2[s2]= 8 ;s2= 9 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 10 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 11 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 12 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 13 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 14 ;len(str2)= 16 ; s1= 11
asferfind(): issubstring = True, beg= 11
lcsbeg= 11
computebhava(): str1= 2345a#169#7#0#0#0#0#8#0#0#0#0 ,lcsbeg= 11 ,prefix= 2345a#169#7
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Cancer | Unoccupied  in  Leo | Unoccupied  in  Virgo | Unoccupied  in  Libra | Rahu  in  Scorpio | Unoccupied  in  Sagittarius | Unoccupied  in  Capricorn |
=====================================
##################################################################
: Longest Common Substring for [2345a#169#7#0#0#0#0#8#0#0#0#0] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#7#0#

##################################################################
lcs= #7#0#

encstr= 2345a#169#7#0#0#0#0#8#0#0#0#0 ; lcs= #7#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 1 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 9
asferfind(): issubstring = True, beg= 9
lcsbeg= 9
computebhava(): str1= 2345a#169#7#0#0#0#0#8#0#0#0#0 ,lcsbeg= 9 ,prefix= 2345a#169
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Saturn  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [2345a#169#7#0#0#0#0#8#0#0#0#0] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#0#0#8#0#0#

##################################################################
lcs= #0#0#0#0#8#0#0#

encstr= 2345a#169#7#0#0#0#0#8#0#0#0#0 ; lcs= #0#0#0#0#8#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 16 ; s1= 5
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 16 ; s1= 9
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 7 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 8 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 8 ; str2[s2]= 8 ;s2= 9 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 10 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 11 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 12 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 13 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 14 ;len(str2)= 16 ; s1= 11
asferfind(): issubstring = True, beg= 11
lcsbeg= 11
computebhava(): str1= 2345a#169#7#0#0#0#0#8#0#0#0#0 ,lcsbeg= 11 ,prefix= 2345a#169#7
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Cancer | Unoccupied  in  Leo | Unoccupied  in  Virgo | Unoccupied  in  Libra | Rahu  in  Scorpio | Unoccupied  in  Sagittarius | Unoccupied  in  Capricorn |
=====================================
##################################################################
: Longest Common Substring for [2345a#169#7#0#0#0#0#8#0#0#0#0] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#0#0#8#0#0#

##################################################################
lcs= #0#0#0#0#8#0#0#

encstr= 2345a#169#7#0#0#0#0#8#0#0#0#0 ; lcs= #0#0#0#0#8#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 16 ; s1= 5
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 16 ; s1= 9
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 7 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 8 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 8 ; str2[s2]= 8 ;s2= 9 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 10 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 11 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 12 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 13 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 14 ;len(str2)= 16 ; s1= 11
asferfind(): issubstring = True, beg= 11
lcsbeg= 11
computebhava(): str1= 2345a#169#7#0#0#0#0#8#0#0#0#0 ,lcsbeg= 11 ,prefix= 2345a#169#7
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Cancer | Unoccupied  in  Leo | Unoccupied  in  Virgo | Unoccupied  in  Libra | Rahu  in  Scorpio | Unoccupied  in  Sagittarius | Unoccupied  in  Capricorn |
=====================================
##################################################################
: Longest Common Substring for [2345a#169#7#0#0#0#0#8#0#0#0#0] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#0#0#8#0#0#

##################################################################
lcs= #0#0#0#0#8#0#0#

encstr= 2345a#169#7#0#0#0#0#8#0#0#0#0 ; lcs= #0#0#0#0#8#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 16 ; s1= 5
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 16 ; s1= 9
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 7 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 8 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 8 ; str2[s2]= 8 ;s2= 9 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 10 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 11 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 12 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 13 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 14 ;len(str2)= 16 ; s1= 11
asferfind(): issubstring = True, beg= 11
lcsbeg= 11
computebhava(): str1= 2345a#169#7#0#0#0#0#8#0#0#0#0 ,lcsbeg= 11 ,prefix= 2345a#169#7
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Cancer | Unoccupied  in  Leo | Unoccupied  in  Virgo | Unoccupied  in  Libra | Rahu  in  Scorpio | Unoccupied  in  Sagittarius | Unoccupied  in  Capricorn |
=====================================
##################################################################
: Longest Common Substring for [2345a#169#7#0#0#0#0#8#0#0#0#0] and [2345a#169#7#0#0#0#0#8#0#0#0#0]:[2345a#169#7#0#0#0#0#8#0#0#0#0]

##################################################################
lcs= [2345a#169#7#0#0#0#0#8#0#0#0#0]

encstr= 2345a#169#7#0#0#0#0#8#0#0#0#0 ; lcs= [2345a#169#7#0#0#0#0#8#0#0#0#0]

lcsbeg= -1
##################################################################
: Longest Common Substring for [2345a#169#7#0#0#0#0#8#0#0#0#0] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#7#0#

##################################################################
lcs= #7#0#

encstr= 2345a#169#7#0#0#0#0#8#0#0#0#0 ; lcs= #7#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 1 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 9
asferfind(): issubstring = True, beg= 9
lcsbeg= 9
computebhava(): str1= 2345a#169#7#0#0#0#0#8#0#0#0#0 ,lcsbeg= 9 ,prefix= 2345a#169
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Saturn  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [2345a#169#7#0#0#0#0#8#0#0#0#0] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#7#0#

##################################################################
lcs= #7#0#

encstr= 2345a#169#7#0#0#0#0#8#0#0#0#0 ; lcs= #7#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 1 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 9
asferfind(): issubstring = True, beg= 9
lcsbeg= 9
computebhava(): str1= 2345a#169#7#0#0#0#0#8#0#0#0#0 ,lcsbeg= 9 ,prefix= 2345a#169
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Saturn  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [2345a#169#7#0#0#0#0#8#0#0#0#0] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#7#0#

##################################################################
lcs= #7#0#

encstr= 2345a#169#7#0#0#0#0#8#0#0#0#0 ; lcs= #7#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 1 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 9
asferfind(): issubstring = True, beg= 9
lcsbeg= 9
computebhava(): str1= 2345a#169#7#0#0#0#0#8#0#0#0#0 ,lcsbeg= 9 ,prefix= 2345a#169
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Saturn  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [2345a#169#7#0#0#0#0#8#0#0#0#0] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#7#0#

##################################################################
lcs= #7#0#

encstr= 2345a#169#7#0#0#0#0#8#0#0#0#0 ; lcs= #7#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 1 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 9
asferfind(): issubstring = True, beg= 9
lcsbeg= 9
computebhava(): str1= 2345a#169#7#0#0#0#0#8#0#0#0#0 ,lcsbeg= 9 ,prefix= 2345a#169
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Saturn  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [2345a#169#7#0#0#0#0#8#0#0#0#0] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#7#0#

##################################################################
lcs= #7#0#

encstr= 2345a#169#7#0#0#0#0#8#0#0#0#0 ; lcs= #7#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 1 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 9
asferfind(): issubstring = True, beg= 9
lcsbeg= 9
computebhava(): str1= 2345a#169#7#0#0#0#0#8#0#0#0#0 ,lcsbeg= 9 ,prefix= 2345a#169
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Saturn  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [2345a#169#7#0#0#0#0#8#0#0#0#0] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#7#0#

##################################################################
lcs= #7#0#

encstr= 2345a#169#7#0#0#0#0#8#0#0#0#0 ; lcs= #7#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 1 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 9
asferfind(): issubstring = True, beg= 9
lcsbeg= 9
computebhava(): str1= 2345a#169#7#0#0#0#0#8#0#0#0#0 ,lcsbeg= 9 ,prefix= 2345a#169
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Saturn  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [2345a#169#7#0#0#0#0#8#0#0#0#0] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#7#0#

##################################################################
lcs= #7#0#

encstr= 2345a#169#7#0#0#0#0#8#0#0#0#0 ; lcs= #7#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 1 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 9
asferfind(): issubstring = True, beg= 9
lcsbeg= 9
computebhava(): str1= 2345a#169#7#0#0#0#0#8#0#0#0#0 ,lcsbeg= 9 ,prefix= 2345a#169
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Saturn  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [2345a#169#7#0#0#0#0#8#0#0#0#0] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#7#0#

##################################################################
lcs= #7#0#

encstr= 2345a#169#7#0#0#0#0#8#0#0#0#0 ; lcs= #7#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 1 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 9
asferfind(): issubstring = True, beg= 9
lcsbeg= 9
computebhava(): str1= 2345a#169#7#0#0#0#0#8#0#0#0#0 ,lcsbeg= 9 ,prefix= 2345a#169
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Saturn  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [2345a#169#7#0#0#0#0#8#0#0#0#0] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#7#0#

##################################################################
lcs= #7#0#

encstr= 2345a#169#7#0#0#0#0#8#0#0#0#0 ; lcs= #7#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 1 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 9
asferfind(): issubstring = True, beg= 9
lcsbeg= 9
computebhava(): str1= 2345a#169#7#0#0#0#0#8#0#0#0#0 ,lcsbeg= 9 ,prefix= 2345a#169
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Saturn  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [2345a#169#7#0#0#0#0#8#0#0#0#0] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#7#0#

##################################################################
lcs= #7#0#

encstr= 2345a#169#7#0#0#0#0#8#0#0#0#0 ; lcs= #7#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 1 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 9
asferfind(): issubstring = True, beg= 9
lcsbeg= 9
computebhava(): str1= 2345a#169#7#0#0#0#0#8#0#0#0#0 ,lcsbeg= 9 ,prefix= 2345a#169
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Saturn  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [2345a#169#7#0#0#0#0#8#0#0#0#0] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#7#0#

##################################################################
lcs= #7#0#

encstr= 2345a#169#7#0#0#0#0#8#0#0#0#0 ; lcs= #7#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 1 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 9
asferfind(): issubstring = True, beg= 9
lcsbeg= 9
computebhava(): str1= 2345a#169#7#0#0#0#0#8#0#0#0#0 ,lcsbeg= 9 ,prefix= 2345a#169
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Saturn  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [2345a#169#7#0#0#0#0#8#0#0#0#0] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#0#0#8#0#0#

##################################################################
lcs= #0#0#0#0#8#0#0#

encstr= 2345a#169#7#0#0#0#0#8#0#0#0#0 ; lcs= #0#0#0#0#8#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 16 ; s1= 5
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 16 ; s1= 9
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 7 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 8 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 8 ; str2[s2]= 8 ;s2= 9 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 10 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 11 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 12 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 13 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 14 ;len(str2)= 16 ; s1= 11
asferfind(): issubstring = True, beg= 11
lcsbeg= 11
computebhava(): str1= 2345a#169#7#0#0#0#0#8#0#0#0#0 ,lcsbeg= 11 ,prefix= 2345a#169#7
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Cancer | Unoccupied  in  Leo | Unoccupied  in  Virgo | Unoccupied  in  Libra | Rahu  in  Scorpio | Unoccupied  in  Sagittarius | Unoccupied  in  Capricorn |
=====================================
##################################################################
: Longest Common Substring for [2345a#169#7#0#0#0#0#8#0#0#0#0] and [a#0#59#0#0#0#6#127#48#3#0#0]:#0#0#0#

##################################################################
lcs= #0#0#0#

encstr= 2345a#169#7#0#0#0#0#8#0#0#0#0 ; lcs= #0#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 9
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 8 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 11
asferfind(): issubstring = True, beg= 11
lcsbeg= 11
computebhava(): str1= 2345a#169#7#0#0#0#0#8#0#0#0#0 ,lcsbeg= 11 ,prefix= 2345a#169#7
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Cancer | Unoccupied  in  Leo | Unoccupied  in  Virgo |
=====================================
##################################################################
: Longest Common Substring for [2345a#169#7#0#0#0#0#8#0#0#0#0] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#0#0#8#0#0#

##################################################################
lcs= #0#0#0#0#8#0#0#

encstr= 2345a#169#7#0#0#0#0#8#0#0#0#0 ; lcs= #0#0#0#0#8#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 16 ; s1= 5
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 16 ; s1= 9
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 7 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 8 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 8 ; str2[s2]= 8 ;s2= 9 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 10 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 11 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 12 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 13 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 14 ;len(str2)= 16 ; s1= 11
asferfind(): issubstring = True, beg= 11
lcsbeg= 11
computebhava(): str1= 2345a#169#7#0#0#0#0#8#0#0#0#0 ,lcsbeg= 11 ,prefix= 2345a#169#7
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Cancer | Unoccupied  in  Leo | Unoccupied  in  Virgo | Unoccupied  in  Libra | Rahu  in  Scorpio | Unoccupied  in  Sagittarius | Unoccupied  in  Capricorn |
=====================================
##################################################################
: Longest Common Substring for [2345a#169#7#0#0#0#0#8#0#0#0#0] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#7#0#

##################################################################
lcs= #7#0#

encstr= 2345a#169#7#0#0#0#0#8#0#0#0#0 ; lcs= #7#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 1 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 9
asferfind(): issubstring = True, beg= 9
lcsbeg= 9
computebhava(): str1= 2345a#169#7#0#0#0#0#8#0#0#0#0 ,lcsbeg= 9 ,prefix= 2345a#169
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Saturn  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [2345a#169#7#0#0#0#0#8#0#0#0#0] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#7#0#

##################################################################
lcs= #7#0#

encstr= 2345a#169#7#0#0#0#0#8#0#0#0#0 ; lcs= #7#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 1 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 9
asferfind(): issubstring = True, beg= 9
lcsbeg= 9
computebhava(): str1= 2345a#169#7#0#0#0#0#8#0#0#0#0 ,lcsbeg= 9 ,prefix= 2345a#169
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Saturn  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [2345a#169#7#0#0#0#0#8#0#0#0#0] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#7#0#

##################################################################
lcs= #7#0#

encstr= 2345a#169#7#0#0#0#0#8#0#0#0#0 ; lcs= #7#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 1 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 9
asferfind(): issubstring = True, beg= 9
lcsbeg= 9
computebhava(): str1= 2345a#169#7#0#0#0#0#8#0#0#0#0 ,lcsbeg= 9 ,prefix= 2345a#169
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Saturn  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [2345a#169#7#0#0#0#0#8#0#0#0#0] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#7#0#

##################################################################
lcs= #7#0#

encstr= 2345a#169#7#0#0#0#0#8#0#0#0#0 ; lcs= #7#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 1 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 9
asferfind(): issubstring = True, beg= 9
lcsbeg= 9
computebhava(): str1= 2345a#169#7#0#0#0#0#8#0#0#0#0 ,lcsbeg= 9 ,prefix= 2345a#169
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Saturn  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [2345a#169#7#0#0#0#0#8#0#0#0#0] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#7#0#

##################################################################
lcs= #7#0#

encstr= 2345a#169#7#0#0#0#0#8#0#0#0#0 ; lcs= #7#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 1 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 9
asferfind(): issubstring = True, beg= 9
lcsbeg= 9
computebhava(): str1= 2345a#169#7#0#0#0#0#8#0#0#0#0 ,lcsbeg= 9 ,prefix= 2345a#169
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Saturn  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [2345a#169#7#0#0#0#0#8#0#0#0#0] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#7#0#

##################################################################
lcs= #7#0#

encstr= 2345a#169#7#0#0#0#0#8#0#0#0#0 ; lcs= #7#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 1 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 9
asferfind(): issubstring = True, beg= 9
lcsbeg= 9
computebhava(): str1= 2345a#169#7#0#0#0#0#8#0#0#0#0 ,lcsbeg= 9 ,prefix= 2345a#169
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Saturn  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [2345a#169#7#0#0#0#0#8#0#0#0#0] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#0#0#8#0#0#

##################################################################
lcs= #0#0#0#0#8#0#0#

encstr= 2345a#169#7#0#0#0#0#8#0#0#0#0 ; lcs= #0#0#0#0#8#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 16 ; s1= 5
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 16 ; s1= 9
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 7 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 8 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 8 ; str2[s2]= 8 ;s2= 9 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 10 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 11 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 12 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 13 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 14 ;len(str2)= 16 ; s1= 11
asferfind(): issubstring = True, beg= 11
lcsbeg= 11
computebhava(): str1= 2345a#169#7#0#0#0#0#8#0#0#0#0 ,lcsbeg= 11 ,prefix= 2345a#169#7
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Cancer | Unoccupied  in  Leo | Unoccupied  in  Virgo | Unoccupied  in  Libra | Rahu  in  Scorpio | Unoccupied  in  Sagittarius | Unoccupied  in  Capricorn |
=====================================
##################################################################
: Longest Common Substring for [2345a#169#7#0#0#0#0#8#0#0#0#0] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#7#0#

##################################################################
lcs= #7#0#

encstr= 2345a#169#7#0#0#0#0#8#0#0#0#0 ; lcs= #7#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 1 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 9
asferfind(): issubstring = True, beg= 9
lcsbeg= 9
computebhava(): str1= 2345a#169#7#0#0#0#0#8#0#0#0#0 ,lcsbeg= 9 ,prefix= 2345a#169
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Saturn  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [2345a#169#7#0#0#0#0#8#0#0#0#0] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#7#0#

##################################################################
lcs= #7#0#

encstr= 2345a#169#7#0#0#0#0#8#0#0#0#0 ; lcs= #7#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 1 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 9
asferfind(): issubstring = True, beg= 9
lcsbeg= 9
computebhava(): str1= 2345a#169#7#0#0#0#0#8#0#0#0#0 ,lcsbeg= 9 ,prefix= 2345a#169
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Saturn  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [2345a#169#7#0#0#0#0#8#0#0#0#0] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#7#0#

##################################################################
lcs= #7#0#

encstr= 2345a#169#7#0#0#0#0#8#0#0#0#0 ; lcs= #7#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 1 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 9
asferfind(): issubstring = True, beg= 9
lcsbeg= 9
computebhava(): str1= 2345a#169#7#0#0#0#0#8#0#0#0#0 ,lcsbeg= 9 ,prefix= 2345a#169
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Saturn  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [2345a#169#7#0#0#0#0#8#0#0#0#0] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#7#0#

##################################################################
lcs= #7#0#

encstr= 2345a#169#7#0#0#0#0#8#0#0#0#0 ; lcs= #7#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 1 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 9
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 9
asferfind(): issubstring = True, beg= 9
lcsbeg= 9
computebhava(): str1= 2345a#169#7#0#0#0#0#8#0#0#0#0 ,lcsbeg= 9 ,prefix= 2345a#169
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Saturn  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [2345a#169#7#0#0#0#0#8#0#0#0#0] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#0#0#8#0#0#

##################################################################
lcs= #0#0#0#0#8#0#0#

encstr= 2345a#169#7#0#0#0#0#8#0#0#0#0 ; lcs= #0#0#0#0#8#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 16 ; s1= 5
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 16 ; s1= 9
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 7 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 8 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 8 ; str2[s2]= 8 ;s2= 9 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 10 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 11 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 12 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 13 ;len(str2)= 16 ; s1= 11
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 14 ;len(str2)= 16 ; s1= 11
asferfind(): issubstring = True, beg= 11
lcsbeg= 11
computebhava(): str1= 2345a#169#7#0#0#0#0#8#0#0#0#0 ,lcsbeg= 11 ,prefix= 2345a#169#7
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Cancer | Unoccupied  in  Leo | Unoccupied  in  Virgo | Unoccupied  in  Libra | Rahu  in  Scorpio | Unoccupied  in  Sagittarius | Unoccupied  in  Capricorn |
=====================================
##################################################################
: Longest Common Substring for [2345a#169#7#0#0#0#0#8#0#0#0#0] and :

##################################################################
lcs= 

encstr= 2345a#169#7#0#0#0#0#8#0#0#0#0 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [2345a#169#7#0#0#0#0#8#0#0#0#0] and :

##################################################################
lcs= 

encstr= 2345a#169#7#0#0#0#0#8#0#0#0#0 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#0#7#0#9#0#2#0#0#0#58#36]:#0#7#0#

##################################################################
lcs= #0#7#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#7#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 5
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 3 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 7
asferfind(): issubstring = True, beg= 7
lcsbeg= 7
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 7 ,prefix= 14a#9#0
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Cancer | Saturn  in  Leo | Unoccupied  in  Virgo |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [2345a#169#7#0#0#0#0#8#0#0#0#0]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [a#0#59#0#0#0#6#127#48#3#0#0]:9#0#0#

##################################################################
lcs= 9#0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 9#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= 9 ; str2[s2]= 9 ;s2= 0 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 1 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 2 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 3 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 4 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 5 ;len(str2)= 7 ; s1= 4
asferfind(): issubstring = True, beg= 4
lcsbeg= 4
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 4 ,prefix= 14a#
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Ketu  in  Taurus | Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and :

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and :

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#0#7#0#9#0#2#0#0#0#58#36]:#0#7#0#

##################################################################
lcs= #0#7#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#7#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 5
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 3 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 7
asferfind(): issubstring = True, beg= 7
lcsbeg= 7
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 7 ,prefix= 14a#9#0
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Cancer | Saturn  in  Leo | Unoccupied  in  Virgo |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [2345a#169#7#0#0#0#0#8#0#0#0#0]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [a#0#59#0#0#0#6#127#48#3#0#0]:9#0#0#

##################################################################
lcs= 9#0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 9#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= 9 ; str2[s2]= 9 ;s2= 0 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 1 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 2 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 3 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 4 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 5 ;len(str2)= 7 ; s1= 4
asferfind(): issubstring = True, beg= 4
lcsbeg= 4
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 4 ,prefix= 14a#
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Ketu  in  Taurus | Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and :

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and :

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#0#7#0#9#0#2#0#0#0#58#36]:#0#7#0#

##################################################################
lcs= #0#7#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#7#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 5
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 3 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 7
asferfind(): issubstring = True, beg= 7
lcsbeg= 7
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 7 ,prefix= 14a#9#0
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Cancer | Saturn  in  Leo | Unoccupied  in  Virgo |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [2345a#169#7#0#0#0#0#8#0#0#0#0]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [a#0#59#0#0#0#6#127#48#3#0#0]:9#0#0#

##################################################################
lcs= 9#0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 9#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= 9 ; str2[s2]= 9 ;s2= 0 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 1 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 2 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 3 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 4 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 5 ;len(str2)= 7 ; s1= 4
asferfind(): issubstring = True, beg= 4
lcsbeg= 4
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 4 ,prefix= 14a#
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Ketu  in  Taurus | Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and :

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and :

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#0#7#0#9#0#2#0#0#0#58#36]:#0#7#0#

##################################################################
lcs= #0#7#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#7#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 5
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 3 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 7
asferfind(): issubstring = True, beg= 7
lcsbeg= 7
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 7 ,prefix= 14a#9#0
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Cancer | Saturn  in  Leo | Unoccupied  in  Virgo |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [2345a#169#7#0#0#0#0#8#0#0#0#0]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [a#0#59#0#0#0#6#127#48#3#0#0]:9#0#0#

##################################################################
lcs= 9#0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 9#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= 9 ; str2[s2]= 9 ;s2= 0 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 1 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 2 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 3 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 4 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 5 ;len(str2)= 7 ; s1= 4
asferfind(): issubstring = True, beg= 4
lcsbeg= 4
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 4 ,prefix= 14a#
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Ketu  in  Taurus | Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and :

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and :

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#0#7#0#9#0#2#0#0#0#58#36]:#0#7#0#

##################################################################
lcs= #0#7#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#7#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 5
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 3 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 7
asferfind(): issubstring = True, beg= 7
lcsbeg= 7
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 7 ,prefix= 14a#9#0
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Cancer | Saturn  in  Leo | Unoccupied  in  Virgo |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [2345a#169#7#0#0#0#0#8#0#0#0#0]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [a#0#59#0#0#0#6#127#48#3#0#0]:9#0#0#

##################################################################
lcs= 9#0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 9#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= 9 ; str2[s2]= 9 ;s2= 0 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 1 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 2 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 3 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 4 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 5 ;len(str2)= 7 ; s1= 4
asferfind(): issubstring = True, beg= 4
lcsbeg= 4
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 4 ,prefix= 14a#
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Ketu  in  Taurus | Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and :

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and :

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#0#7#0#9#0#2#0#0#0#58#36]:#0#7#0#

##################################################################
lcs= #0#7#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#7#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 5
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 3 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 7
asferfind(): issubstring = True, beg= 7
lcsbeg= 7
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 7 ,prefix= 14a#9#0
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Cancer | Saturn  in  Leo | Unoccupied  in  Virgo |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [2345a#169#7#0#0#0#0#8#0#0#0#0]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [a#0#59#0#0#0#6#127#48#3#0#0]:9#0#0#

##################################################################
lcs= 9#0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 9#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= 9 ; str2[s2]= 9 ;s2= 0 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 1 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 2 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 3 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 4 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 5 ;len(str2)= 7 ; s1= 4
asferfind(): issubstring = True, beg= 4
lcsbeg= 4
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 4 ,prefix= 14a#
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Ketu  in  Taurus | Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and :

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and :

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#0#7#0#9#0#2#0#0#0#58#36]:#0#7#0#

##################################################################
lcs= #0#7#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#7#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 5
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 3 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 7
asferfind(): issubstring = True, beg= 7
lcsbeg= 7
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 7 ,prefix= 14a#9#0
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Cancer | Saturn  in  Leo | Unoccupied  in  Virgo |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [2345a#169#7#0#0#0#0#8#0#0#0#0]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [a#0#59#0#0#0#6#127#48#3#0#0]:9#0#0#

##################################################################
lcs= 9#0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 9#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= 9 ; str2[s2]= 9 ;s2= 0 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 1 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 2 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 3 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 4 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 5 ;len(str2)= 7 ; s1= 4
asferfind(): issubstring = True, beg= 4
lcsbeg= 4
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 4 ,prefix= 14a#
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Ketu  in  Taurus | Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and :

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and :

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#0#7#0#9#0#2#0#0#0#58#36]:#0#7#0#

##################################################################
lcs= #0#7#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#7#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 5
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 3 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 7
asferfind(): issubstring = True, beg= 7
lcsbeg= 7
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 7 ,prefix= 14a#9#0
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Cancer | Saturn  in  Leo | Unoccupied  in  Virgo |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [2345a#169#7#0#0#0#0#8#0#0#0#0]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [a#0#59#0#0#0#6#127#48#3#0#0]:9#0#0#

##################################################################
lcs= 9#0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 9#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= 9 ; str2[s2]= 9 ;s2= 0 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 1 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 2 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 3 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 4 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 5 ;len(str2)= 7 ; s1= 4
asferfind(): issubstring = True, beg= 4
lcsbeg= 4
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 4 ,prefix= 14a#
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Ketu  in  Taurus | Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and :

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and :

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#0#7#0#9#0#2#0#0#0#58#36]:#0#7#0#

##################################################################
lcs= #0#7#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#7#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 5
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 3 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 7
asferfind(): issubstring = True, beg= 7
lcsbeg= 7
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 7 ,prefix= 14a#9#0
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Cancer | Saturn  in  Leo | Unoccupied  in  Virgo |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [2345a#169#7#0#0#0#0#8#0#0#0#0]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [a#0#59#0#0#0#6#127#48#3#0#0]:9#0#0#

##################################################################
lcs= 9#0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 9#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= 9 ; str2[s2]= 9 ;s2= 0 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 1 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 2 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 3 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 4 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 5 ;len(str2)= 7 ; s1= 4
asferfind(): issubstring = True, beg= 4
lcsbeg= 4
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 4 ,prefix= 14a#
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Ketu  in  Taurus | Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and :

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and :

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#0#7#0#9#0#2#0#0#0#58#36]:#0#7#0#

##################################################################
lcs= #0#7#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#7#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 5
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 3 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 7
asferfind(): issubstring = True, beg= 7
lcsbeg= 7
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 7 ,prefix= 14a#9#0
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Cancer | Saturn  in  Leo | Unoccupied  in  Virgo |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [2345a#169#7#0#0#0#0#8#0#0#0#0]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [a#0#59#0#0#0#6#127#48#3#0#0]:9#0#0#

##################################################################
lcs= 9#0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 9#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= 9 ; str2[s2]= 9 ;s2= 0 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 1 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 2 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 3 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 4 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 5 ;len(str2)= 7 ; s1= 4
asferfind(): issubstring = True, beg= 4
lcsbeg= 4
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 4 ,prefix= 14a#
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Ketu  in  Taurus | Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and :

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and :

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#0#7#0#9#0#2#0#0#0#58#36]:#0#7#0#

##################################################################
lcs= #0#7#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#7#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 5
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 3 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 7
asferfind(): issubstring = True, beg= 7
lcsbeg= 7
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 7 ,prefix= 14a#9#0
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Cancer | Saturn  in  Leo | Unoccupied  in  Virgo |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [2345a#169#7#0#0#0#0#8#0#0#0#0]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [a#0#59#0#0#0#6#127#48#3#0#0]:9#0#0#

##################################################################
lcs= 9#0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 9#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= 9 ; str2[s2]= 9 ;s2= 0 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 1 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 2 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 3 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 4 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 5 ;len(str2)= 7 ; s1= 4
asferfind(): issubstring = True, beg= 4
lcsbeg= 4
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 4 ,prefix= 14a#
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Ketu  in  Taurus | Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and :

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and :

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#0#7#0#9#0#2#0#0#0#58#36]:#0#0#0#

##################################################################
lcs= #0#0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [2345a#169#7#0#0#0#0#8#0#0#0#0]:#0#0#0#0#8#0#0#

##################################################################
lcs= #0#0#0#0#8#0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#0#0#8#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 7 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 8 ;len(str2)= 16 ; s1= 5
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 7 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 8 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 8 ; str2[s2]= 8 ;s2= 9 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 10 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 11 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 12 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 13 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 14 ;len(str2)= 16 ; s1= 7
asferfind(): issubstring = True, beg= 7
lcsbeg= 7
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 7 ,prefix= 1349a#0
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer | Unoccupied  in  Leo | Unoccupied  in  Virgo | Rahu  in  Libra | Unoccupied  in  Scorpio | Unoccupied  in  Sagittarius |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [a#0#59#0#0#0#6#127#48#3#0#0]:#0#0#0#

##################################################################
lcs= #0#0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and :

##################################################################
lcs= 

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and :

##################################################################
lcs= 

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [a#0#59#0#0#0#6#127#48#3#0#0] and [14a#9#0#0#7#0#2#8#0#5#0#36]:9#0#0#

##################################################################
lcs= 9#0#0#

encstr= a#0#59#0#0#0#6#127#48#3#0#0 ; lcs= 9#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= 9 ; str2[s2]= 9 ;s2= 0 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 1 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 2 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 3 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 4 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 5 ;len(str2)= 7 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= a#0#59#0#0#0#6#127#48#3#0#0 ,lcsbeg= 5 ,prefix= a#0#5
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Ketu  in  Gemini | Unoccupied  in  Cancer | Unoccupied  in  Leo |
=====================================
##################################################################
: Longest Common Substring for [a#0#59#0#0#0#6#127#48#3#0#0] and [14a#0#7#0#9#0#2#0#0#0#58#36]:#0#0#0#

##################################################################
lcs= #0#0#0#

encstr= a#0#59#0#0#0#6#127#48#3#0#0 ; lcs= #0#0#0#

##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 1
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 1
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 1
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 6
asferfind(): issubstring = True, beg= 6
lcsbeg= 6
computebhava(): str1= a#0#59#0#0#0#6#127#48#3#0#0 ,lcsbeg= 6 ,prefix= a#0#59
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Cancer | Unoccupied  in  Leo | Unoccupied  in  Virgo |
=====================================
##################################################################
: Longest Common Substring for [a#0#59#0#0#0#6#127#48#3#0#0] and [14a#9#0#0#7#0#2#8#0#5#0#36]:9#0#0#

##################################################################
lcs= 9#0#0#

encstr= a#0#59#0#0#0#6#127#48#3#0#0 ; lcs= 9#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= 9 ; str2[s2]= 9 ;s2= 0 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 1 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 2 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 3 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 4 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 5 ;len(str2)= 7 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= a#0#59#0#0#0#6#127#48#3#0#0 ,lcsbeg= 5 ,prefix= a#0#5
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Ketu  in  Gemini | Unoccupied  in  Cancer | Unoccupied  in  Leo |
=====================================
##################################################################
: Longest Common Substring for [a#0#59#0#0#0#6#127#48#3#0#0] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#0#

##################################################################
lcs= #0#0#0#

encstr= a#0#59#0#0#0#6#127#48#3#0#0 ; lcs= #0#0#0#

##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 1
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 1
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 1
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 6
asferfind(): issubstring = True, beg= 6
lcsbeg= 6
computebhava(): str1= a#0#59#0#0#0#6#127#48#3#0#0 ,lcsbeg= 6 ,prefix= a#0#59
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Cancer | Unoccupied  in  Leo | Unoccupied  in  Virgo |
=====================================
##################################################################
: Longest Common Substring for [a#0#59#0#0#0#6#127#48#3#0#0] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#0#

##################################################################
lcs= #0#0#0#

encstr= a#0#59#0#0#0#6#127#48#3#0#0 ; lcs= #0#0#0#

##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 1
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 1
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 1
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 6
asferfind(): issubstring = True, beg= 6
lcsbeg= 6
computebhava(): str1= a#0#59#0#0#0#6#127#48#3#0#0 ,lcsbeg= 6 ,prefix= a#0#59
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Cancer | Unoccupied  in  Leo | Unoccupied  in  Virgo |
=====================================
##################################################################
: Longest Common Substring for [a#0#59#0#0#0#6#127#48#3#0#0] and [14a#9#0#0#7#0#2#8#0#5#0#36]:9#0#0#

##################################################################
lcs= 9#0#0#

encstr= a#0#59#0#0#0#6#127#48#3#0#0 ; lcs= 9#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= 9 ; str2[s2]= 9 ;s2= 0 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 1 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 2 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 3 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 4 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 5 ;len(str2)= 7 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= a#0#59#0#0#0#6#127#48#3#0#0 ,lcsbeg= 5 ,prefix= a#0#5
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Ketu  in  Gemini | Unoccupied  in  Cancer | Unoccupied  in  Leo |
=====================================
##################################################################
: Longest Common Substring for [a#0#59#0#0#0#6#127#48#3#0#0] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#0#

##################################################################
lcs= #0#0#0#

encstr= a#0#59#0#0#0#6#127#48#3#0#0 ; lcs= #0#0#0#

##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 1
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 1
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 1
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 6
asferfind(): issubstring = True, beg= 6
lcsbeg= 6
computebhava(): str1= a#0#59#0#0#0#6#127#48#3#0#0 ,lcsbeg= 6 ,prefix= a#0#59
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Cancer | Unoccupied  in  Leo | Unoccupied  in  Virgo |
=====================================
##################################################################
: Longest Common Substring for [a#0#59#0#0#0#6#127#48#3#0#0] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#0#

##################################################################
lcs= #0#0#0#

encstr= a#0#59#0#0#0#6#127#48#3#0#0 ; lcs= #0#0#0#

##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 1
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 1
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 1
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 6
asferfind(): issubstring = True, beg= 6
lcsbeg= 6
computebhava(): str1= a#0#59#0#0#0#6#127#48#3#0#0 ,lcsbeg= 6 ,prefix= a#0#59
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Cancer | Unoccupied  in  Leo | Unoccupied  in  Virgo |
=====================================
##################################################################
: Longest Common Substring for [a#0#59#0#0#0#6#127#48#3#0#0] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#0#

##################################################################
lcs= #0#0#0#

encstr= a#0#59#0#0#0#6#127#48#3#0#0 ; lcs= #0#0#0#

##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 1
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 1
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 1
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 6
asferfind(): issubstring = True, beg= 6
lcsbeg= 6
computebhava(): str1= a#0#59#0#0#0#6#127#48#3#0#0 ,lcsbeg= 6 ,prefix= a#0#59
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Cancer | Unoccupied  in  Leo | Unoccupied  in  Virgo |
=====================================
##################################################################
: Longest Common Substring for [a#0#59#0#0#0#6#127#48#3#0#0] and [2345a#169#7#0#0#0#0#8#0#0#0#0]:#0#0#0#

##################################################################
lcs= #0#0#0#

encstr= a#0#59#0#0#0#6#127#48#3#0#0 ; lcs= #0#0#0#

##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 1
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 1
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 1
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 6
asferfind(): issubstring = True, beg= 6
lcsbeg= 6
computebhava(): str1= a#0#59#0#0#0#6#127#48#3#0#0 ,lcsbeg= 6 ,prefix= a#0#59
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Cancer | Unoccupied  in  Leo | Unoccupied  in  Virgo |
=====================================
##################################################################
: Longest Common Substring for [a#0#59#0#0#0#6#127#48#3#0#0] and [14a#9#0#0#7#0#2#8#0#5#0#36]:9#0#0#

##################################################################
lcs= 9#0#0#

encstr= a#0#59#0#0#0#6#127#48#3#0#0 ; lcs= 9#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= 9 ; str2[s2]= 9 ;s2= 0 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 1 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 2 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 3 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 4 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 5 ;len(str2)= 7 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= a#0#59#0#0#0#6#127#48#3#0#0 ,lcsbeg= 5 ,prefix= a#0#5
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Ketu  in  Gemini | Unoccupied  in  Cancer | Unoccupied  in  Leo |
=====================================
##################################################################
: Longest Common Substring for [a#0#59#0#0#0#6#127#48#3#0#0] and [14a#9#0#0#7#0#2#8#0#5#0#36]:9#0#0#

##################################################################
lcs= 9#0#0#

encstr= a#0#59#0#0#0#6#127#48#3#0#0 ; lcs= 9#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= 9 ; str2[s2]= 9 ;s2= 0 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 1 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 2 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 3 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 4 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 5 ;len(str2)= 7 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= a#0#59#0#0#0#6#127#48#3#0#0 ,lcsbeg= 5 ,prefix= a#0#5
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Ketu  in  Gemini | Unoccupied  in  Cancer | Unoccupied  in  Leo |
=====================================
##################################################################
: Longest Common Substring for [a#0#59#0#0#0#6#127#48#3#0#0] and [14a#9#0#0#7#0#2#8#0#5#0#36]:9#0#0#

##################################################################
lcs= 9#0#0#

encstr= a#0#59#0#0#0#6#127#48#3#0#0 ; lcs= 9#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= 9 ; str2[s2]= 9 ;s2= 0 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 1 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 2 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 3 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 4 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 5 ;len(str2)= 7 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= a#0#59#0#0#0#6#127#48#3#0#0 ,lcsbeg= 5 ,prefix= a#0#5
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Ketu  in  Gemini | Unoccupied  in  Cancer | Unoccupied  in  Leo |
=====================================
##################################################################
: Longest Common Substring for [a#0#59#0#0#0#6#127#48#3#0#0] and [14a#9#0#0#7#0#2#8#0#5#0#36]:9#0#0#

##################################################################
lcs= 9#0#0#

encstr= a#0#59#0#0#0#6#127#48#3#0#0 ; lcs= 9#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= 9 ; str2[s2]= 9 ;s2= 0 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 1 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 2 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 3 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 4 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 5 ;len(str2)= 7 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= a#0#59#0#0#0#6#127#48#3#0#0 ,lcsbeg= 5 ,prefix= a#0#5
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Ketu  in  Gemini | Unoccupied  in  Cancer | Unoccupied  in  Leo |
=====================================
##################################################################
: Longest Common Substring for [a#0#59#0#0#0#6#127#48#3#0#0] and [14a#9#0#0#7#0#2#8#0#5#0#36]:9#0#0#

##################################################################
lcs= 9#0#0#

encstr= a#0#59#0#0#0#6#127#48#3#0#0 ; lcs= 9#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= 9 ; str2[s2]= 9 ;s2= 0 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 1 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 2 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 3 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 4 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 5 ;len(str2)= 7 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= a#0#59#0#0#0#6#127#48#3#0#0 ,lcsbeg= 5 ,prefix= a#0#5
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Ketu  in  Gemini | Unoccupied  in  Cancer | Unoccupied  in  Leo |
=====================================
##################################################################
: Longest Common Substring for [a#0#59#0#0#0#6#127#48#3#0#0] and [14a#9#0#0#7#0#2#8#0#5#0#36]:9#0#0#

##################################################################
lcs= 9#0#0#

encstr= a#0#59#0#0#0#6#127#48#3#0#0 ; lcs= 9#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= 9 ; str2[s2]= 9 ;s2= 0 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 1 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 2 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 3 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 4 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 5 ;len(str2)= 7 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= a#0#59#0#0#0#6#127#48#3#0#0 ,lcsbeg= 5 ,prefix= a#0#5
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Ketu  in  Gemini | Unoccupied  in  Cancer | Unoccupied  in  Leo |
=====================================
##################################################################
: Longest Common Substring for [a#0#59#0#0#0#6#127#48#3#0#0] and [14a#9#0#0#7#0#2#8#0#5#0#36]:9#0#0#

##################################################################
lcs= 9#0#0#

encstr= a#0#59#0#0#0#6#127#48#3#0#0 ; lcs= 9#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= 9 ; str2[s2]= 9 ;s2= 0 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 1 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 2 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 3 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 4 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 5 ;len(str2)= 7 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= a#0#59#0#0#0#6#127#48#3#0#0 ,lcsbeg= 5 ,prefix= a#0#5
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Ketu  in  Gemini | Unoccupied  in  Cancer | Unoccupied  in  Leo |
=====================================
##################################################################
: Longest Common Substring for [a#0#59#0#0#0#6#127#48#3#0#0] and [14a#9#0#0#7#0#2#8#0#5#0#36]:9#0#0#

##################################################################
lcs= 9#0#0#

encstr= a#0#59#0#0#0#6#127#48#3#0#0 ; lcs= 9#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= 9 ; str2[s2]= 9 ;s2= 0 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 1 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 2 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 3 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 4 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 5 ;len(str2)= 7 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= a#0#59#0#0#0#6#127#48#3#0#0 ,lcsbeg= 5 ,prefix= a#0#5
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Ketu  in  Gemini | Unoccupied  in  Cancer | Unoccupied  in  Leo |
=====================================
##################################################################
: Longest Common Substring for [a#0#59#0#0#0#6#127#48#3#0#0] and [14a#9#0#0#7#0#2#8#0#5#0#36]:9#0#0#

##################################################################
lcs= 9#0#0#

encstr= a#0#59#0#0#0#6#127#48#3#0#0 ; lcs= 9#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= 9 ; str2[s2]= 9 ;s2= 0 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 1 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 2 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 3 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 4 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 5 ;len(str2)= 7 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= a#0#59#0#0#0#6#127#48#3#0#0 ,lcsbeg= 5 ,prefix= a#0#5
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Ketu  in  Gemini | Unoccupied  in  Cancer | Unoccupied  in  Leo |
=====================================
##################################################################
: Longest Common Substring for [a#0#59#0#0#0#6#127#48#3#0#0] and [14a#9#0#0#7#0#2#8#0#5#0#36]:9#0#0#

##################################################################
lcs= 9#0#0#

encstr= a#0#59#0#0#0#6#127#48#3#0#0 ; lcs= 9#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= 9 ; str2[s2]= 9 ;s2= 0 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 1 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 2 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 3 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 4 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 5 ;len(str2)= 7 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= a#0#59#0#0#0#6#127#48#3#0#0 ,lcsbeg= 5 ,prefix= a#0#5
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Ketu  in  Gemini | Unoccupied  in  Cancer | Unoccupied  in  Leo |
=====================================
##################################################################
: Longest Common Substring for [a#0#59#0#0#0#6#127#48#3#0#0] and [14a#9#0#0#7#0#2#8#0#5#0#36]:9#0#0#

##################################################################
lcs= 9#0#0#

encstr= a#0#59#0#0#0#6#127#48#3#0#0 ; lcs= 9#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= 9 ; str2[s2]= 9 ;s2= 0 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 1 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 2 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 3 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 4 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 5 ;len(str2)= 7 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= a#0#59#0#0#0#6#127#48#3#0#0 ,lcsbeg= 5 ,prefix= a#0#5
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Ketu  in  Gemini | Unoccupied  in  Cancer | Unoccupied  in  Leo |
=====================================
##################################################################
: Longest Common Substring for [a#0#59#0#0#0#6#127#48#3#0#0] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#0#

##################################################################
lcs= #0#0#0#

encstr= a#0#59#0#0#0#6#127#48#3#0#0 ; lcs= #0#0#0#

##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 1
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 1
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 1
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 6
asferfind(): issubstring = True, beg= 6
lcsbeg= 6
computebhava(): str1= a#0#59#0#0#0#6#127#48#3#0#0 ,lcsbeg= 6 ,prefix= a#0#59
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Cancer | Unoccupied  in  Leo | Unoccupied  in  Virgo |
=====================================
##################################################################
: Longest Common Substring for [a#0#59#0#0#0#6#127#48#3#0#0] and [a#0#59#0#0#0#6#127#48#3#0#0]:[a#0#59#0#0#0#6#127#48#3#0#0]

##################################################################
lcs= [a#0#59#0#0#0#6#127#48#3#0#0]

encstr= a#0#59#0#0#0#6#127#48#3#0#0 ; lcs= [a#0#59#0#0#0#6#127#48#3#0#0]

lcsbeg= -1
##################################################################
: Longest Common Substring for [a#0#59#0#0#0#6#127#48#3#0#0] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#0#

##################################################################
lcs= #0#0#0#

encstr= a#0#59#0#0#0#6#127#48#3#0#0 ; lcs= #0#0#0#

##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 1
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 1
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 1
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 6
asferfind(): issubstring = True, beg= 6
lcsbeg= 6
computebhava(): str1= a#0#59#0#0#0#6#127#48#3#0#0 ,lcsbeg= 6 ,prefix= a#0#59
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Cancer | Unoccupied  in  Leo | Unoccupied  in  Virgo |
=====================================
##################################################################
: Longest Common Substring for [a#0#59#0#0#0#6#127#48#3#0#0] and [14a#9#0#0#7#0#2#8#0#5#0#36]:9#0#0#

##################################################################
lcs= 9#0#0#

encstr= a#0#59#0#0#0#6#127#48#3#0#0 ; lcs= 9#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= 9 ; str2[s2]= 9 ;s2= 0 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 1 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 2 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 3 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 4 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 5 ;len(str2)= 7 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= a#0#59#0#0#0#6#127#48#3#0#0 ,lcsbeg= 5 ,prefix= a#0#5
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Ketu  in  Gemini | Unoccupied  in  Cancer | Unoccupied  in  Leo |
=====================================
##################################################################
: Longest Common Substring for [a#0#59#0#0#0#6#127#48#3#0#0] and [14a#9#0#0#7#0#2#8#0#5#0#36]:9#0#0#

##################################################################
lcs= 9#0#0#

encstr= a#0#59#0#0#0#6#127#48#3#0#0 ; lcs= 9#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= 9 ; str2[s2]= 9 ;s2= 0 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 1 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 2 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 3 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 4 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 5 ;len(str2)= 7 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= a#0#59#0#0#0#6#127#48#3#0#0 ,lcsbeg= 5 ,prefix= a#0#5
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Ketu  in  Gemini | Unoccupied  in  Cancer | Unoccupied  in  Leo |
=====================================
##################################################################
: Longest Common Substring for [a#0#59#0#0#0#6#127#48#3#0#0] and [14a#9#0#0#7#0#2#8#0#5#0#36]:9#0#0#

##################################################################
lcs= 9#0#0#

encstr= a#0#59#0#0#0#6#127#48#3#0#0 ; lcs= 9#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= 9 ; str2[s2]= 9 ;s2= 0 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 1 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 2 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 3 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 4 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 5 ;len(str2)= 7 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= a#0#59#0#0#0#6#127#48#3#0#0 ,lcsbeg= 5 ,prefix= a#0#5
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Ketu  in  Gemini | Unoccupied  in  Cancer | Unoccupied  in  Leo |
=====================================
##################################################################
: Longest Common Substring for [a#0#59#0#0#0#6#127#48#3#0#0] and [14a#9#0#0#7#0#2#8#0#5#0#36]:9#0#0#

##################################################################
lcs= 9#0#0#

encstr= a#0#59#0#0#0#6#127#48#3#0#0 ; lcs= 9#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= 9 ; str2[s2]= 9 ;s2= 0 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 1 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 2 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 3 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 4 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 5 ;len(str2)= 7 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= a#0#59#0#0#0#6#127#48#3#0#0 ,lcsbeg= 5 ,prefix= a#0#5
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Ketu  in  Gemini | Unoccupied  in  Cancer | Unoccupied  in  Leo |
=====================================
##################################################################
: Longest Common Substring for [a#0#59#0#0#0#6#127#48#3#0#0] and [14a#9#0#0#7#0#2#8#0#5#0#36]:9#0#0#

##################################################################
lcs= 9#0#0#

encstr= a#0#59#0#0#0#6#127#48#3#0#0 ; lcs= 9#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= 9 ; str2[s2]= 9 ;s2= 0 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 1 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 2 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 3 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 4 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 5 ;len(str2)= 7 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= a#0#59#0#0#0#6#127#48#3#0#0 ,lcsbeg= 5 ,prefix= a#0#5
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Ketu  in  Gemini | Unoccupied  in  Cancer | Unoccupied  in  Leo |
=====================================
##################################################################
: Longest Common Substring for [a#0#59#0#0#0#6#127#48#3#0#0] and [14a#9#0#0#7#0#2#8#0#5#0#36]:9#0#0#

##################################################################
lcs= 9#0#0#

encstr= a#0#59#0#0#0#6#127#48#3#0#0 ; lcs= 9#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= 9 ; str2[s2]= 9 ;s2= 0 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 1 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 2 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 3 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 4 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 5 ;len(str2)= 7 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= a#0#59#0#0#0#6#127#48#3#0#0 ,lcsbeg= 5 ,prefix= a#0#5
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Ketu  in  Gemini | Unoccupied  in  Cancer | Unoccupied  in  Leo |
=====================================
##################################################################
: Longest Common Substring for [a#0#59#0#0#0#6#127#48#3#0#0] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#0#

##################################################################
lcs= #0#0#0#

encstr= a#0#59#0#0#0#6#127#48#3#0#0 ; lcs= #0#0#0#

##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 1
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 1
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 1
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 6
asferfind(): issubstring = True, beg= 6
lcsbeg= 6
computebhava(): str1= a#0#59#0#0#0#6#127#48#3#0#0 ,lcsbeg= 6 ,prefix= a#0#59
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Cancer | Unoccupied  in  Leo | Unoccupied  in  Virgo |
=====================================
##################################################################
: Longest Common Substring for [a#0#59#0#0#0#6#127#48#3#0#0] and [14a#9#0#0#7#0#2#8#0#5#0#36]:9#0#0#

##################################################################
lcs= 9#0#0#

encstr= a#0#59#0#0#0#6#127#48#3#0#0 ; lcs= 9#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= 9 ; str2[s2]= 9 ;s2= 0 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 1 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 2 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 3 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 4 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 5 ;len(str2)= 7 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= a#0#59#0#0#0#6#127#48#3#0#0 ,lcsbeg= 5 ,prefix= a#0#5
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Ketu  in  Gemini | Unoccupied  in  Cancer | Unoccupied  in  Leo |
=====================================
##################################################################
: Longest Common Substring for [a#0#59#0#0#0#6#127#48#3#0#0] and [14a#9#0#0#7#0#2#8#0#5#0#36]:9#0#0#

##################################################################
lcs= 9#0#0#

encstr= a#0#59#0#0#0#6#127#48#3#0#0 ; lcs= 9#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= 9 ; str2[s2]= 9 ;s2= 0 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 1 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 2 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 3 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 4 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 5 ;len(str2)= 7 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= a#0#59#0#0#0#6#127#48#3#0#0 ,lcsbeg= 5 ,prefix= a#0#5
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Ketu  in  Gemini | Unoccupied  in  Cancer | Unoccupied  in  Leo |
=====================================
##################################################################
: Longest Common Substring for [a#0#59#0#0#0#6#127#48#3#0#0] and [14a#9#0#0#7#0#2#8#0#5#0#36]:9#0#0#

##################################################################
lcs= 9#0#0#

encstr= a#0#59#0#0#0#6#127#48#3#0#0 ; lcs= 9#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= 9 ; str2[s2]= 9 ;s2= 0 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 1 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 2 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 3 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 4 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 5 ;len(str2)= 7 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= a#0#59#0#0#0#6#127#48#3#0#0 ,lcsbeg= 5 ,prefix= a#0#5
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Ketu  in  Gemini | Unoccupied  in  Cancer | Unoccupied  in  Leo |
=====================================
##################################################################
: Longest Common Substring for [a#0#59#0#0#0#6#127#48#3#0#0] and [14a#9#0#0#7#0#2#8#0#5#0#36]:9#0#0#

##################################################################
lcs= 9#0#0#

encstr= a#0#59#0#0#0#6#127#48#3#0#0 ; lcs= 9#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= 9 ; str2[s2]= 9 ;s2= 0 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 1 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 2 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 3 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 4 ;len(str2)= 7 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 5 ;len(str2)= 7 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= a#0#59#0#0#0#6#127#48#3#0#0 ,lcsbeg= 5 ,prefix= a#0#5
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Ketu  in  Gemini | Unoccupied  in  Cancer | Unoccupied  in  Leo |
=====================================
##################################################################
: Longest Common Substring for [a#0#59#0#0#0#6#127#48#3#0#0] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#0#

##################################################################
lcs= #0#0#0#

encstr= a#0#59#0#0#0#6#127#48#3#0#0 ; lcs= #0#0#0#

##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 1
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 1
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 1
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 6
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 6
asferfind(): issubstring = True, beg= 6
lcsbeg= 6
computebhava(): str1= a#0#59#0#0#0#6#127#48#3#0#0 ,lcsbeg= 6 ,prefix= a#0#59
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Cancer | Unoccupied  in  Leo | Unoccupied  in  Virgo |
=====================================
##################################################################
: Longest Common Substring for [a#0#59#0#0#0#6#127#48#3#0#0] and :

##################################################################
lcs= 

encstr= a#0#59#0#0#0#6#127#48#3#0#0 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [a#0#59#0#0#0#6#127#48#3#0#0] and :

##################################################################
lcs= 

encstr= a#0#59#0#0#0#6#127#48#3#0#0 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#0#7#0#9#0#2#0#0#0#58#36]:#0#0#0#

##################################################################
lcs= #0#0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [2345a#169#7#0#0#0#0#8#0#0#0#0]:#0#0#0#0#8#0#0#

##################################################################
lcs= #0#0#0#0#8#0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#0#0#8#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 7 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 8 ;len(str2)= 16 ; s1= 5
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 7 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 8 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 8 ; str2[s2]= 8 ;s2= 9 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 10 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 11 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 12 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 13 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 14 ;len(str2)= 16 ; s1= 7
asferfind(): issubstring = True, beg= 7
lcsbeg= 7
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 7 ,prefix= 1349a#0
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer | Unoccupied  in  Leo | Unoccupied  in  Virgo | Rahu  in  Libra | Unoccupied  in  Scorpio | Unoccupied  in  Sagittarius |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [a#0#59#0#0#0#6#127#48#3#0#0]:#0#0#0#

##################################################################
lcs= #0#0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and :

##################################################################
lcs= 

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and :

##################################################################
lcs= 

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#0#7#0#9#0#2#0#0#0#58#36]:#0#7#0#

##################################################################
lcs= #0#7#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#7#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 5
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 3 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 7
asferfind(): issubstring = True, beg= 7
lcsbeg= 7
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 7 ,prefix= 14a#9#0
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Cancer | Saturn  in  Leo | Unoccupied  in  Virgo |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [2345a#169#7#0#0#0#0#8#0#0#0#0]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [a#0#59#0#0#0#6#127#48#3#0#0]:9#0#0#

##################################################################
lcs= 9#0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 9#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= 9 ; str2[s2]= 9 ;s2= 0 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 1 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 2 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 3 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 4 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 5 ;len(str2)= 7 ; s1= 4
asferfind(): issubstring = True, beg= 4
lcsbeg= 4
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 4 ,prefix= 14a#
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Ketu  in  Taurus | Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and :

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and :

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#0#7#0#9#0#2#0#0#0#58#36]:#0#7#0#

##################################################################
lcs= #0#7#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#7#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 5
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 3 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 7
asferfind(): issubstring = True, beg= 7
lcsbeg= 7
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 7 ,prefix= 14a#9#0
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Cancer | Saturn  in  Leo | Unoccupied  in  Virgo |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [2345a#169#7#0#0#0#0#8#0#0#0#0]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [a#0#59#0#0#0#6#127#48#3#0#0]:9#0#0#

##################################################################
lcs= 9#0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 9#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= 9 ; str2[s2]= 9 ;s2= 0 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 1 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 2 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 3 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 4 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 5 ;len(str2)= 7 ; s1= 4
asferfind(): issubstring = True, beg= 4
lcsbeg= 4
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 4 ,prefix= 14a#
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Ketu  in  Taurus | Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and :

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and :

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#0#7#0#9#0#2#0#0#0#58#36]:#0#7#0#

##################################################################
lcs= #0#7#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#7#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 5
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 3 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 7
asferfind(): issubstring = True, beg= 7
lcsbeg= 7
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 7 ,prefix= 14a#9#0
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Cancer | Saturn  in  Leo | Unoccupied  in  Virgo |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [2345a#169#7#0#0#0#0#8#0#0#0#0]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [a#0#59#0#0#0#6#127#48#3#0#0]:9#0#0#

##################################################################
lcs= 9#0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 9#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= 9 ; str2[s2]= 9 ;s2= 0 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 1 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 2 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 3 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 4 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 5 ;len(str2)= 7 ; s1= 4
asferfind(): issubstring = True, beg= 4
lcsbeg= 4
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 4 ,prefix= 14a#
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Ketu  in  Taurus | Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and :

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and :

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#0#7#0#9#0#2#0#0#0#58#36]:#0#7#0#

##################################################################
lcs= #0#7#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#7#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 5
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 3 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 7
asferfind(): issubstring = True, beg= 7
lcsbeg= 7
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 7 ,prefix= 14a#9#0
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Cancer | Saturn  in  Leo | Unoccupied  in  Virgo |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [2345a#169#7#0#0#0#0#8#0#0#0#0]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [a#0#59#0#0#0#6#127#48#3#0#0]:9#0#0#

##################################################################
lcs= 9#0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 9#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= 9 ; str2[s2]= 9 ;s2= 0 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 1 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 2 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 3 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 4 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 5 ;len(str2)= 7 ; s1= 4
asferfind(): issubstring = True, beg= 4
lcsbeg= 4
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 4 ,prefix= 14a#
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Ketu  in  Taurus | Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and :

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and :

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#0#7#0#9#0#2#0#0#0#58#36]:#0#7#0#

##################################################################
lcs= #0#7#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#7#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 5
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 3 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 7
asferfind(): issubstring = True, beg= 7
lcsbeg= 7
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 7 ,prefix= 14a#9#0
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Cancer | Saturn  in  Leo | Unoccupied  in  Virgo |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [2345a#169#7#0#0#0#0#8#0#0#0#0]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [a#0#59#0#0#0#6#127#48#3#0#0]:9#0#0#

##################################################################
lcs= 9#0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 9#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= 9 ; str2[s2]= 9 ;s2= 0 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 1 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 2 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 3 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 4 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 5 ;len(str2)= 7 ; s1= 4
asferfind(): issubstring = True, beg= 4
lcsbeg= 4
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 4 ,prefix= 14a#
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Ketu  in  Taurus | Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and :

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and :

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#0#7#0#9#0#2#0#0#0#58#36]:#0#7#0#

##################################################################
lcs= #0#7#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#7#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 5
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 3 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 7
asferfind(): issubstring = True, beg= 7
lcsbeg= 7
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 7 ,prefix= 14a#9#0
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Cancer | Saturn  in  Leo | Unoccupied  in  Virgo |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [2345a#169#7#0#0#0#0#8#0#0#0#0]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [a#0#59#0#0#0#6#127#48#3#0#0]:9#0#0#

##################################################################
lcs= 9#0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 9#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= 9 ; str2[s2]= 9 ;s2= 0 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 1 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 2 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 3 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 4 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 5 ;len(str2)= 7 ; s1= 4
asferfind(): issubstring = True, beg= 4
lcsbeg= 4
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 4 ,prefix= 14a#
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Ketu  in  Taurus | Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and :

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and :

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#0#7#0#9#0#2#0#0#0#58#36]:#0#0#0#

##################################################################
lcs= #0#0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [2345a#169#7#0#0#0#0#8#0#0#0#0]:#0#0#0#0#8#0#0#

##################################################################
lcs= #0#0#0#0#8#0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#0#0#8#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 7 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 8 ;len(str2)= 16 ; s1= 5
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 7 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 8 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 8 ; str2[s2]= 8 ;s2= 9 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 10 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 11 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 12 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 13 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 14 ;len(str2)= 16 ; s1= 7
asferfind(): issubstring = True, beg= 7
lcsbeg= 7
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 7 ,prefix= 1349a#0
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer | Unoccupied  in  Leo | Unoccupied  in  Virgo | Rahu  in  Libra | Unoccupied  in  Scorpio | Unoccupied  in  Sagittarius |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [a#0#59#0#0#0#6#127#48#3#0#0]:#0#0#0#

##################################################################
lcs= #0#0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and :

##################################################################
lcs= 

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and :

##################################################################
lcs= 

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#0#7#0#9#0#2#0#0#0#58#36]:#0#7#0#

##################################################################
lcs= #0#7#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#7#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 5
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 3 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 7
asferfind(): issubstring = True, beg= 7
lcsbeg= 7
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 7 ,prefix= 14a#9#0
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Cancer | Saturn  in  Leo | Unoccupied  in  Virgo |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [2345a#169#7#0#0#0#0#8#0#0#0#0]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [a#0#59#0#0#0#6#127#48#3#0#0]:9#0#0#

##################################################################
lcs= 9#0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 9#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= 9 ; str2[s2]= 9 ;s2= 0 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 1 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 2 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 3 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 4 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 5 ;len(str2)= 7 ; s1= 4
asferfind(): issubstring = True, beg= 4
lcsbeg= 4
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 4 ,prefix= 14a#
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Ketu  in  Taurus | Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and :

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and :

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#0#7#0#9#0#2#0#0#0#58#36]:#0#7#0#

##################################################################
lcs= #0#7#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#7#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 5
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 3 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 7
asferfind(): issubstring = True, beg= 7
lcsbeg= 7
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 7 ,prefix= 14a#9#0
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Cancer | Saturn  in  Leo | Unoccupied  in  Virgo |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [2345a#169#7#0#0#0#0#8#0#0#0#0]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [a#0#59#0#0#0#6#127#48#3#0#0]:9#0#0#

##################################################################
lcs= 9#0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 9#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= 9 ; str2[s2]= 9 ;s2= 0 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 1 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 2 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 3 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 4 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 5 ;len(str2)= 7 ; s1= 4
asferfind(): issubstring = True, beg= 4
lcsbeg= 4
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 4 ,prefix= 14a#
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Ketu  in  Taurus | Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and :

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and :

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#0#7#0#9#0#2#0#0#0#58#36]:#0#7#0#

##################################################################
lcs= #0#7#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#7#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 5
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 3 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 7
asferfind(): issubstring = True, beg= 7
lcsbeg= 7
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 7 ,prefix= 14a#9#0
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Cancer | Saturn  in  Leo | Unoccupied  in  Virgo |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [2345a#169#7#0#0#0#0#8#0#0#0#0]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [a#0#59#0#0#0#6#127#48#3#0#0]:9#0#0#

##################################################################
lcs= 9#0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 9#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= 9 ; str2[s2]= 9 ;s2= 0 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 1 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 2 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 3 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 4 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 5 ;len(str2)= 7 ; s1= 4
asferfind(): issubstring = True, beg= 4
lcsbeg= 4
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 4 ,prefix= 14a#
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Ketu  in  Taurus | Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and :

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and :

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#0#7#0#9#0#2#0#0#0#58#36]:#0#7#0#

##################################################################
lcs= #0#7#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#7#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 5
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 7 ; str2[s2]= 7 ;s2= 3 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 7
asferfind(): issubstring = True, beg= 7
lcsbeg= 7
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 7 ,prefix= 14a#9#0
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Cancer | Saturn  in  Leo | Unoccupied  in  Virgo |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [2345a#169#7#0#0#0#0#8#0#0#0#0]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [a#0#59#0#0#0#6#127#48#3#0#0]:9#0#0#

##################################################################
lcs= 9#0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 9#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= 9 ; str2[s2]= 9 ;s2= 0 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 1 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 2 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 3 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 4 ;len(str2)= 7 ; s1= 4
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 5 ;len(str2)= 7 ; s1= 4
asferfind(): issubstring = True, beg= 4
lcsbeg= 4
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 4 ,prefix= 14a#
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Ketu  in  Taurus | Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [14a#9#0#0#7#0#2#8#0#5#0#36]:[14a#9#0#0#7#0#2#8#0#5#0#36]

##################################################################
lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= [14a#9#0#0#7#0#2#8#0#5#0#36]

lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:#0#0#

##################################################################
lcs= #0#0#

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 3
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 14a#9#0#0#7#0#2#8#0#5#0#36 ,lcsbeg= 5 ,prefix= 14a#9
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and :

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [14a#9#0#0#7#0#2#8#0#5#0#36] and :

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#0#7#0#9#0#2#0#0#0#58#36]:#0#0#0#

##################################################################
lcs= #0#0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [2345a#169#7#0#0#0#0#8#0#0#0#0]:#0#0#0#0#8#0#0#

##################################################################
lcs= #0#0#0#0#8#0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#0#0#8#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 7 ;len(str2)= 16 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 8 ;len(str2)= 16 ; s1= 5
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 7 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 8 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 8 ; str2[s2]= 8 ;s2= 9 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 10 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 11 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 12 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 13 ;len(str2)= 16 ; s1= 7
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 14 ;len(str2)= 16 ; s1= 7
asferfind(): issubstring = True, beg= 7
lcsbeg= 7
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 7 ,prefix= 1349a#0
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Gemini | Unoccupied  in  Cancer | Unoccupied  in  Leo | Unoccupied  in  Virgo | Rahu  in  Libra | Unoccupied  in  Scorpio | Unoccupied  in  Sagittarius |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [a#0#59#0#0#0#6#127#48#3#0#0]:#0#0#0#

##################################################################
lcs= #0#0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 5 ;len(str2)= 8 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 6 ;len(str2)= 8 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini | Unoccupied  in  Cancer |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [14a#9#0#0#7#0#2#8#0#5#0#36]:#0#0#

##################################################################
lcs= #0#0#

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= #0#0#

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 0 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 1 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 2 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= 0 ; str2[s2]= 0 ;s2= 3 ;len(str2)= 6 ; s1= 5
asferfind(): str1[s1+s2]= # ; str2[s2]= # ;s2= 4 ;len(str2)= 6 ; s1= 5
asferfind(): issubstring = True, beg= 5
lcsbeg= 5
computebhava(): str1= 1349a#0#0#0#0#0#8#0#0#257#0#6 ,lcsbeg= 5 ,prefix= 1349a
=====================================
Textually Translated Classified or Clustered LCS Pattern Rule: Unoccupied  in  Taurus | Unoccupied  in  Gemini |
=====================================
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and [1349a#0#0#0#0#0#8#0#0#257#0#6]:[1349a#0#0#0#0#0#8#0#0#257#0#6]

##################################################################
lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= [1349a#0#0#0#0#0#8#0#0#257#0#6]

lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and :

##################################################################
lcs= 

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for [1349a#0#0#0#0#0#8#0#0#257#0#6] and :

##################################################################
lcs= 

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#9#0#0#7#0#2#8#0#5#0#36]:

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#0#7#0#9#0#2#0#0#0#58#36]:

##################################################################
lcs= 

encstr= 14a#0#7#0#9#0#2#0#0#0#58#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#9#0#0#7#0#2#8#0#5#0#36]:

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [1349a#0#0#0#0#0#8#0#0#257#0#6]:

##################################################################
lcs= 

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [1349a#0#0#0#0#0#8#0#0#257#0#6]:

##################################################################
lcs= 

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#9#0#0#7#0#2#8#0#5#0#36]:

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [1349a#0#0#0#0#0#8#0#0#257#0#6]:

##################################################################
lcs= 

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [1349a#0#0#0#0#0#8#0#0#257#0#6]:

##################################################################
lcs= 

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [1349a#0#0#0#0#0#8#0#0#257#0#6]:

##################################################################
lcs= 

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [2345a#169#7#0#0#0#0#8#0#0#0#0]:

##################################################################
lcs= 

encstr= 2345a#169#7#0#0#0#0#8#0#0#0#0 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#9#0#0#7#0#2#8#0#5#0#36]:

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#9#0#0#7#0#2#8#0#5#0#36]:

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#9#0#0#7#0#2#8#0#5#0#36]:

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#9#0#0#7#0#2#8#0#5#0#36]:

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#9#0#0#7#0#2#8#0#5#0#36]:

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#9#0#0#7#0#2#8#0#5#0#36]:

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#9#0#0#7#0#2#8#0#5#0#36]:

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#9#0#0#7#0#2#8#0#5#0#36]:

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#9#0#0#7#0#2#8#0#5#0#36]:

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#9#0#0#7#0#2#8#0#5#0#36]:

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#9#0#0#7#0#2#8#0#5#0#36]:

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [1349a#0#0#0#0#0#8#0#0#257#0#6]:

##################################################################
lcs= 

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [a#0#59#0#0#0#6#127#48#3#0#0]:

##################################################################
lcs= 

encstr= a#0#59#0#0#0#6#127#48#3#0#0 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [1349a#0#0#0#0#0#8#0#0#257#0#6]:

##################################################################
lcs= 

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#9#0#0#7#0#2#8#0#5#0#36]:

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#9#0#0#7#0#2#8#0#5#0#36]:

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#9#0#0#7#0#2#8#0#5#0#36]:

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#9#0#0#7#0#2#8#0#5#0#36]:

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#9#0#0#7#0#2#8#0#5#0#36]:

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#9#0#0#7#0#2#8#0#5#0#36]:

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [1349a#0#0#0#0#0#8#0#0#257#0#6]:

##################################################################
lcs= 

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#9#0#0#7#0#2#8#0#5#0#36]:

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#9#0#0#7#0#2#8#0#5#0#36]:

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#9#0#0#7#0#2#8#0#5#0#36]:

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#9#0#0#7#0#2#8#0#5#0#36]:

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [1349a#0#0#0#0#0#8#0#0#257#0#6]:

##################################################################
lcs= 

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and :

##################################################################
lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and :

##################################################################
lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#9#0#0#7#0#2#8#0#5#0#36]:

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#0#7#0#9#0#2#0#0#0#58#36]:

##################################################################
lcs= 

encstr= 14a#0#7#0#9#0#2#0#0#0#58#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#9#0#0#7#0#2#8#0#5#0#36]:

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [1349a#0#0#0#0#0#8#0#0#257#0#6]:

##################################################################
lcs= 

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [1349a#0#0#0#0#0#8#0#0#257#0#6]:

##################################################################
lcs= 

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#9#0#0#7#0#2#8#0#5#0#36]:

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [1349a#0#0#0#0#0#8#0#0#257#0#6]:

##################################################################
lcs= 

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [1349a#0#0#0#0#0#8#0#0#257#0#6]:

##################################################################
lcs= 

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [1349a#0#0#0#0#0#8#0#0#257#0#6]:

##################################################################
lcs= 

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [2345a#169#7#0#0#0#0#8#0#0#0#0]:

##################################################################
lcs= 

encstr= 2345a#169#7#0#0#0#0#8#0#0#0#0 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#9#0#0#7#0#2#8#0#5#0#36]:

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#9#0#0#7#0#2#8#0#5#0#36]:

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#9#0#0#7#0#2#8#0#5#0#36]:

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#9#0#0#7#0#2#8#0#5#0#36]:

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#9#0#0#7#0#2#8#0#5#0#36]:

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#9#0#0#7#0#2#8#0#5#0#36]:

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#9#0#0#7#0#2#8#0#5#0#36]:

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#9#0#0#7#0#2#8#0#5#0#36]:

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#9#0#0#7#0#2#8#0#5#0#36]:

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#9#0#0#7#0#2#8#0#5#0#36]:

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#9#0#0#7#0#2#8#0#5#0#36]:

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [1349a#0#0#0#0#0#8#0#0#257#0#6]:

##################################################################
lcs= 

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [a#0#59#0#0#0#6#127#48#3#0#0]:

##################################################################
lcs= 

encstr= a#0#59#0#0#0#6#127#48#3#0#0 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [1349a#0#0#0#0#0#8#0#0#257#0#6]:

##################################################################
lcs= 

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#9#0#0#7#0#2#8#0#5#0#36]:

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#9#0#0#7#0#2#8#0#5#0#36]:

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#9#0#0#7#0#2#8#0#5#0#36]:

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#9#0#0#7#0#2#8#0#5#0#36]:

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#9#0#0#7#0#2#8#0#5#0#36]:

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#9#0#0#7#0#2#8#0#5#0#36]:

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [1349a#0#0#0#0#0#8#0#0#257#0#6]:

##################################################################
lcs= 

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#9#0#0#7#0#2#8#0#5#0#36]:

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#9#0#0#7#0#2#8#0#5#0#36]:

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#9#0#0#7#0#2#8#0#5#0#36]:

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [14a#9#0#0#7#0#2#8#0#5#0#36]:

##################################################################
lcs= 

encstr= 14a#9#0#0#7#0#2#8#0#5#0#36 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and [1349a#0#0#0#0#0#8#0#0#257#0#6]:

##################################################################
lcs= 

encstr= 1349a#0#0#0#0#0#8#0#0#257#0#6 ; lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and :

##################################################################
lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
##################################################################
: Longest Common Substring for  and :

##################################################################
lcs= 

##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
##########################################
lcsbeg= -1
