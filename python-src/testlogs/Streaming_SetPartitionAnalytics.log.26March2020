('Random Partition:', Partition(FiniteSet(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66), FiniteSet(67, 68, 76), FiniteSet(69, 72), FiniteSet(70), FiniteSet(71), FiniteSet(73, 75), FiniteSet(74, 77)))
('square tiles for partition ', 67, ':', {(1, 4, 5, 5)})
('square tiles for partition ', 3, ':', {(0, 1, 1, 1)})
('square tiles for partition ', 2, ':', {(0, 0, 1, 1)})
('square tiles for partition ', 1, ':', {(0, 0, 0, 1)})
('square tiles for partition ', 1, ':', {(0, 0, 0, 1)})
('square tiles for partition ', 2, ':', {(0, 0, 1, 1)})
('square tiles for partition ', 2, ':', {(0, 0, 1, 1)})
('Lagrange Four Square Tiles Cover reduction of Set Partition ', [67, 3, 2, 1, 1, 2, 2], ':', [(1, 1), (4, 16), (5, 25), (5, 25), (0, 0), (1, 1), (1, 1), (1, 1), (0, 0), (0, 0), (1, 1), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (1, 1), (1, 1), (0, 0), (0, 0), (1, 1), (1, 1)])
20/03/25 19:34:47 WARN Utils: Set SPARK_LOCAL_IP if you need to bind to another address
20/03/25 19:34:49 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
('Spark Python version:', '3.7.5 (default, Nov  7 2019, 10:50:52) \n[GCC 8.3.0]')
('factors of ', 78, '(', 6.285402218862249, ' bits integer) are:')
tiles_start: 1
tiles_end: 1
tiles_start: 1
tiles_end: 2
=================================================
xl + intervalmidpoint =  97
xl =  78
yl =  1
Factor point verification: (xl + intervalmidpoint)*yl == number_to_factorize =  False
Factor point verification: xl*yl == number_to_factorize =  True
('Factors are: (', 1, ',', 78, ') (at ', 'Wed, 25 Mar 2020 14:05:08 GMT', ')')
=================================================
tiles_start: 2
tiles_end: 3
=================================================
xl + intervalmidpoint =  45
xl =  39
yl =  2
Factor point verification: (xl + intervalmidpoint)*yl == number_to_factorize =  False
Factor point verification: xl*yl == number_to_factorize =  True
('Factors are: (', 2, ',', 39, ') (at ', 'Wed, 25 Mar 2020 14:05:08 GMT', ')')
=================================================
tiles_start: 3
tiles_end: 4
=================================================
xl + intervalmidpoint =  29
xl =  26
yl =  3
Factor point verification: (xl + intervalmidpoint)*yl == number_to_factorize =  False
Factor point verification: xl*yl == number_to_factorize =  True
('Factors are: (', 3, ',', 26, ') (at ', 'Wed, 25 Mar 2020 14:05:09 GMT', ')')
=================================================
tiles_start: 4
tiles_end: 5
tiles_start: 5
tiles_end: 6
tiles_start: 6
tiles_end: 7
=================================================
xl + intervalmidpoint =  14
xl =  13
yl =  6
Factor point verification: (xl + intervalmidpoint)*yl == number_to_factorize =  False
Factor point verification: xl*yl == number_to_factorize =  True
('Factors are: (', 6, ',', 13, ') (at ', 'Wed, 25 Mar 2020 14:05:10 GMT', ')')
=================================================
tiles_start: 7
tiles_end: 8
tiles_start: 8
tiles_end: 9
tiles_start: 9
tiles_end: 10
tiles_start: 10
tiles_end: 11
tiles_start: 11
tiles_end: 12
tiles_start: 12
tiles_end: 13
tiles_start: 13
tiles_end: 14
tiles_start: 14
tiles_end: 15
tiles_start: 15
tiles_end: 16
tiles_start: 16
tiles_end: 17
tiles_start: 17
tiles_end: 18
tiles_start: 18
tiles_end: 19
tiles_start: 19
tiles_end: 20
tiles_start: 20
tiles_end: 21
tiles_start: 21
tiles_end: 22
tiles_start: 22
tiles_end: 23
tiles_start: 23
tiles_end: 24
tiles_start: 24
tiles_end: 25
tiles_start: 25
tiles_end: 26
tiles_start: 26
tiles_end: 27
tiles_start: 27
tiles_end: 28
tiles_start: 28
tiles_end: 29
tiles_start: 29
tiles_end: 30
tiles_start: 30
tiles_end: 31
tiles_start: 31
tiles_end: 32
tiles_start: 32
tiles_end: 33
tiles_start: 33
tiles_end: 34
tiles_start: 34
tiles_end: 35
tiles_start: 35
tiles_end: 36
tiles_start: 36
tiles_end: 37
tiles_start: 37
tiles_end: 38
tiles_start: 38
tiles_end: 39
('factors_accum.value = ', [78, 1, 39, 2, 26, 3, 13, 6])
('factors of ', 78, '(', 6.285402218862249, ' bits integer) =', [78, 1, 39, 2, 26, 3, 13, 6])
('factorslist:', [1, 2, 3, 6, 39, 13, 78, 26])
 
LSMR            Least-squares solution of  Ax = b

The matrix A has        2 rows  and       28 cols
damp = 0.00000000000000e+00

atol = 0.00e+00                 conlim = 0.00e+00

btol = 0.00e+00             maxiter =        2

 
   itn      x(1)       norm r    norm Ar  compatible   LS      norm A   cond A
     0  1.00000e-11  3.905e+01  3.621e+02   1.0e+00  2.4e-01
     1  2.62821e-01  2.616e+01  2.440e-14   6.7e-01  7.5e-17  1.2e+01  1.0e+00
 
LSMR finished
The least-squares solution is good enough for this machine
istop =       5    normr = 2.6e+01
    normA = 1.2e+01    normAr = 2.4e-14
itn   =       1    condA = 1.0e+00
    normx = 2.3e+00
     1  2.62821e-01   2.616e+01  2.440e-14
   6.7e-01  7.5e-17   1.2e+01  1.0e+00
('x=', (array([2.62820513e-01, 2.62820513e-01, 1.00000000e-11, 1.00000000e-11,
       2.62820513e-01, 2.62820513e-01, 1.00000000e-11, 1.00000000e-11,
       2.62820513e-01, 1.00000000e-11, 1.00000000e-11, 1.00000000e-11,
       2.62820513e-01, 1.00000000e-11, 1.00000000e-11, 1.00000000e-11,
       2.62820513e-01, 2.62820513e-01, 1.00000000e-11, 1.00000000e-11,
       2.62820513e-01, 2.62820513e-01, 2.62820513e-01, 1.00000000e-11,
       1.31410256e+00, 1.31410256e+00, 1.05128205e+00, 2.62820513e-01]), 5, 1, 26.162950903902257, 2.439696919966372e-14, 12.489995996796797, 1.0, 2.3211679199964212))
('t=', 0, '; cnt=', 0)
('t=', 0, '; cnt=', 1)
('t=', 0, '; cnt=', 2)
('t=', 0, '; cnt=', 3)
('t=', 0, '; cnt=', 4)
('t=', 0, '; cnt=', 5)
('t=', 0, '; cnt=', 6)
('t=', 0, '; cnt=', 7)
('t=', 0, '; cnt=', 8)
('t=', 0, '; cnt=', 9)
('t=', 0, '; cnt=', 10)
('t=', 0, '; cnt=', 11)
('t=', 0, '; cnt=', 12)
('t=', 0, '; cnt=', 13)
('t=', 0, '; cnt=', 14)
('t=', 0, '; cnt=', 15)
('t=', 0, '; cnt=', 16)
('t=', 0, '; cnt=', 17)
('t=', 0, '; cnt=', 18)
('t=', 0, '; cnt=', 19)
('t=', 0, '; cnt=', 20)
('t=', 0, '; cnt=', 21)
('t=', 0, '; cnt=', 22)
('t=', 0, '; cnt=', 23)
('t=', 1, '; cnt=', 24)
('t=', 1, '; cnt=', 25)
('t=', 1, '; cnt=', 26)
('t=', 0, '; cnt=', 27)
('Rectangle periphery - side1:', '0+0+1')
('Rectangle periphery - side2:', '1+4+5+5+0+1+1+1+0+0+1+1+0+0+0+1+0+0+0+1+0+0+1+1+1')
('publicuniqueidhex:', 'd731e10ba2af8ce068d849249cd1425fa46bd10b')
/home/ksrinivasan/Krishna_iResearch_OpenSource/GitHub/asfer-github-code/python-src/Streaming_SetPartitionAnalytics.py:154: DeprecationWarning: the method passlib.handlers.sha2_crypt.sha256_crypt.encrypt() is deprecated as of Passlib 1.7, and will be removed in Passlib 2.0, use .hash() instead.
  publicuniqueidhex))
('Voting_Machine_dict:', defaultdict(<class 'list'>, {'NOTA': ['$5$rounds=535000$ilUYBJEjItaf6Vrb$fFPmci0tTY5gWl8jXjXZbShTMKT7K7XxShgdqLMomy4']}))
('sortedEVM:', [('NOTA', ['$5$rounds=535000$ilUYBJEjItaf6Vrb$fFPmci0tTY5gWl8jXjXZbShTMKT7K7XxShgdqLMomy4'])])
Voter Already Voted
('sortedEVM:', [])
Voter Already Voted
('sortedEVM:', [])
('publicuniqueidhex:', '8af5627efba38ec2b12aa294ec310a8c554c954b')
('Voting_Machine_dict:', defaultdict(<class 'list'>, {'NOTA': ['$5$rounds=535000$ilUYBJEjItaf6Vrb$fFPmci0tTY5gWl8jXjXZbShTMKT7K7XxShgdqLMomy4', '$5$rounds=535000$CKaEtE78/E/sxha9$F3SXPjzShsFOIiAor.vYUiEfUbqm4h3Men17YDCpNt9']}))
('sortedEVM:', [('NOTA', ['$5$rounds=535000$ilUYBJEjItaf6Vrb$fFPmci0tTY5gWl8jXjXZbShTMKT7K7XxShgdqLMomy4', '$5$rounds=535000$CKaEtE78/E/sxha9$F3SXPjzShsFOIiAor.vYUiEfUbqm4h3Men17YDCpNt9'])])
Voter Already Voted
('sortedEVM:', [])
Voter Already Voted
('sortedEVM:', [])
('publicuniqueidhex:', '02f208fe0d21e5b716cc821b29ba9ab4f3219446')
('Voting_Machine_dict:', defaultdict(<class 'list'>, {'NOTA': ['$5$rounds=535000$ilUYBJEjItaf6Vrb$fFPmci0tTY5gWl8jXjXZbShTMKT7K7XxShgdqLMomy4', '$5$rounds=535000$CKaEtE78/E/sxha9$F3SXPjzShsFOIiAor.vYUiEfUbqm4h3Men17YDCpNt9'], 'CandidateA': ['$5$rounds=535000$XpyUS9Pvmj5MQQmg$IqdIwUGKYGFQRaG8UXivzJ923VZnScQgmhFWuWj1w64']}))
('sortedEVM:', [('NOTA', ['$5$rounds=535000$ilUYBJEjItaf6Vrb$fFPmci0tTY5gWl8jXjXZbShTMKT7K7XxShgdqLMomy4', '$5$rounds=535000$CKaEtE78/E/sxha9$F3SXPjzShsFOIiAor.vYUiEfUbqm4h3Men17YDCpNt9']), ('CandidateA', ['$5$rounds=535000$XpyUS9Pvmj5MQQmg$IqdIwUGKYGFQRaG8UXivzJ923VZnScQgmhFWuWj1w64'])])
('Probability of ', 'NOTA', ' winning over nearest rival ', 'CandidateA', ':', 0.3333333333333333)
Voter Already Voted
('sortedEVM:', [])
Voter Already Voted
('sortedEVM:', [])
Voter Already Voted
('sortedEVM:', [('NOTA', ['$5$rounds=535000$ilUYBJEjItaf6Vrb$fFPmci0tTY5gWl8jXjXZbShTMKT7K7XxShgdqLMomy4', '$5$rounds=535000$CKaEtE78/E/sxha9$F3SXPjzShsFOIiAor.vYUiEfUbqm4h3Men17YDCpNt9']), ('CandidateA', ['$5$rounds=535000$XpyUS9Pvmj5MQQmg$IqdIwUGKYGFQRaG8UXivzJ923VZnScQgmhFWuWj1w64'])])
('Probability of ', 'NOTA', ' winning over nearest rival ', 'CandidateA', ':', 0.3333333333333333)
Voter Already Voted
('sortedEVM:', [])
Voter Already Voted
('sortedEVM:', [])
Voter Already Voted
('sortedEVM:', [('NOTA', ['$5$rounds=535000$ilUYBJEjItaf6Vrb$fFPmci0tTY5gWl8jXjXZbShTMKT7K7XxShgdqLMomy4', '$5$rounds=535000$CKaEtE78/E/sxha9$F3SXPjzShsFOIiAor.vYUiEfUbqm4h3Men17YDCpNt9']), ('CandidateA', ['$5$rounds=535000$XpyUS9Pvmj5MQQmg$IqdIwUGKYGFQRaG8UXivzJ923VZnScQgmhFWuWj1w64'])])
('Probability of ', 'NOTA', ' winning over nearest rival ', 'CandidateA', ':', 0.3333333333333333)
Voter Already Voted
('sortedEVM:', [])
Voter Already Voted
('sortedEVM:', [])
Voter Already Voted
('sortedEVM:', [('NOTA', ['$5$rounds=535000$ilUYBJEjItaf6Vrb$fFPmci0tTY5gWl8jXjXZbShTMKT7K7XxShgdqLMomy4', '$5$rounds=535000$CKaEtE78/E/sxha9$F3SXPjzShsFOIiAor.vYUiEfUbqm4h3Men17YDCpNt9']), ('CandidateA', ['$5$rounds=535000$XpyUS9Pvmj5MQQmg$IqdIwUGKYGFQRaG8UXivzJ923VZnScQgmhFWuWj1w64'])])
('Probability of ', 'NOTA', ' winning over nearest rival ', 'CandidateA', ':', 0.3333333333333333)
Voter Already Voted
('sortedEVM:', [])
Voter Already Voted
('sortedEVM:', [])
Voter Already Voted
('sortedEVM:', [('NOTA', ['$5$rounds=535000$ilUYBJEjItaf6Vrb$fFPmci0tTY5gWl8jXjXZbShTMKT7K7XxShgdqLMomy4', '$5$rounds=535000$CKaEtE78/E/sxha9$F3SXPjzShsFOIiAor.vYUiEfUbqm4h3Men17YDCpNt9']), ('CandidateA', ['$5$rounds=535000$XpyUS9Pvmj5MQQmg$IqdIwUGKYGFQRaG8UXivzJ923VZnScQgmhFWuWj1w64'])])
('Probability of ', 'NOTA', ' winning over nearest rival ', 'CandidateA', ':', 0.3333333333333333)
Voter Already Voted
('sortedEVM:', [])
Voter Already Voted
('sortedEVM:', [])
Voter Already Voted
('sortedEVM:', [('NOTA', ['$5$rounds=535000$ilUYBJEjItaf6Vrb$fFPmci0tTY5gWl8jXjXZbShTMKT7K7XxShgdqLMomy4', '$5$rounds=535000$CKaEtE78/E/sxha9$F3SXPjzShsFOIiAor.vYUiEfUbqm4h3Men17YDCpNt9']), ('CandidateA', ['$5$rounds=535000$XpyUS9Pvmj5MQQmg$IqdIwUGKYGFQRaG8UXivzJ923VZnScQgmhFWuWj1w64'])])
('Probability of ', 'NOTA', ' winning over nearest rival ', 'CandidateA', ':', 0.3333333333333333)
Voter Already Voted
('sortedEVM:', [])
Voter Already Voted
('sortedEVM:', [])
Voter Already Voted
('sortedEVM:', [('NOTA', ['$5$rounds=535000$ilUYBJEjItaf6Vrb$fFPmci0tTY5gWl8jXjXZbShTMKT7K7XxShgdqLMomy4', '$5$rounds=535000$CKaEtE78/E/sxha9$F3SXPjzShsFOIiAor.vYUiEfUbqm4h3Men17YDCpNt9']), ('CandidateA', ['$5$rounds=535000$XpyUS9Pvmj5MQQmg$IqdIwUGKYGFQRaG8UXivzJ923VZnScQgmhFWuWj1w64'])])
('Probability of ', 'NOTA', ' winning over nearest rival ', 'CandidateA', ':', 0.3333333333333333)
Voter Already Voted
('sortedEVM:', [])
Voter Already Voted
('sortedEVM:', [])
Voter Already Voted
('sortedEVM:', [('NOTA', ['$5$rounds=535000$ilUYBJEjItaf6Vrb$fFPmci0tTY5gWl8jXjXZbShTMKT7K7XxShgdqLMomy4', '$5$rounds=535000$CKaEtE78/E/sxha9$F3SXPjzShsFOIiAor.vYUiEfUbqm4h3Men17YDCpNt9']), ('CandidateA', ['$5$rounds=535000$XpyUS9Pvmj5MQQmg$IqdIwUGKYGFQRaG8UXivzJ923VZnScQgmhFWuWj1w64'])])
('Probability of ', 'NOTA', ' winning over nearest rival ', 'CandidateA', ':', 0.3333333333333333)
Voter Already Voted
('sortedEVM:', [])
Voter Already Voted
('sortedEVM:', [])
