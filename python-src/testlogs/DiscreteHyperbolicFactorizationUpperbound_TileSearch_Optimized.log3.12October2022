('Spark Python version:', '3.10.4 (main, Jun 29 2022, 12:14:53) [GCC 11.2.0]')
('factors of ', 2137458620009, '(', 40.959033629156515, ' bits integer) are:')
factorization start (in nanoseconds): 1665561518860736646
tiles_start: 1
tiles_end: 18541
tiles_start: 18541
tiles_end: 37082
tiles_start: 37082
tiles_end: 55623
tiles_start: 55623
tiles_end: 74164
tiles_start: 74164
tiles_end: 92705
tiles_start: 92705
tiles_end: 111246
tiles_start: 111246
tiles_end: 129787
tiles_start: 129787
tiles_end: 148328
tiles_start: 148328
tiles_end: 166869
tiles_start: 166869
tiles_end: 185410
tiles_start: 185410
tiles_end: 203951
tiles_start: 203951
tiles_end: 222492
tiles_start: 222492
tiles_end: 241033
tiles_start: 241033
tiles_end: 259574
tiles_start: 259574
tiles_end: 278115
tiles_start: 278115
tiles_end: 296656
tiles_start: 296656
tiles_end: 315197
tiles_start: 315197
tiles_end: 333738
tiles_start: 333738
tiles_end: 352279
tiles_start: 352279
tiles_end: 370820
tiles_start: 370820
tiles_end: 389361
tiles_start: 389361
tiles_end: 407902
tiles_start: 407902
tiles_end: 426443
tiles_start: 426443
tiles_end: 444984
tiles_start: 444984
tiles_end: 463525
tiles_start: 463525
tiles_end: 482066
tiles_start: 482066
tiles_end: 500607
tiles_start: 500607
tiles_end: 519148
tiles_start: 519148
tiles_end: 537689
tiles_start: 537689
tiles_end: 556230
tiles_start: 556230
tiles_end: 574771
tiles_start: 574771
tiles_end: 593312
tiles_start: 593312
tiles_end: 611853
tiles_start: 611853
tiles_end: 630394
tiles_start: 630394
tiles_end: 648935
tiles_start: 648935
tiles_end: 667476
tiles_start: 667476
tiles_end: 686017
tiles_start: 686017
tiles_end: 704558
tiles_start: 704558
tiles_end: 723099
tiles_start: 723099
tiles_end: 741640
tiles_start: 741640
tiles_end: 760181
tiles_start: 760181
tiles_end: 778722
tiles_start: 778722
tiles_end: 797263
tiles_start: 797263
tiles_end: 815804
tiles_start: 815804
tiles_end: 834345
tiles_start: 834345
tiles_end: 852886
tiles_start: 852886
tiles_end: 871427
tiles_start: 871427
tiles_end: 889968
tiles_start: 889968
tiles_end: 908509
tiles_start: 908509
tiles_end: 927050
tiles_start: 927050
tiles_end: 945591
tiles_start: 945591
tiles_end: 964132
tiles_start: 964132
tiles_end: 982673
tiles_start: 982673
tiles_end: 1001214
tiles_start: 1001214
tiles_end: 1019755
tiles_start: 1019755
tiles_end: 1038296
tiles_start: 1038296
tiles_end: 1056837
tiles_start: 1056837
tiles_end: 1075378
tiles_start: 1075378
tiles_end: 1093919
tiles_start: 1093919
tiles_end: 1112460
tiles_start: 1112460
tiles_end: 1131001
tiles_start: 1131001
tiles_end: 1149542
tiles_start: 1149542
tiles_end: 1168083
tiles_start: 1168083
tiles_end: 1186624
tiles_start: 1186624
tiles_end: 1205165
tiles_start: 1205165
tiles_end: 1223706
tiles_start: 1223706
tiles_end: 1242247
tiles_start: 1242247
tiles_end: 1260788
tiles_start: 1260788
tiles_end: 1279329
tiles_start: 1279329
tiles_end: 1297870
tiles_start: 1297870
tiles_end: 1316411
tiles_start: 1316411
tiles_end: 1334952
tiles_start: 1334952
tiles_end: 1353493
tiles_start: 1353493
tiles_end: 1372034
tiles_start: 1372034
tiles_end: 1390575
tiles_start: 1390575
tiles_end: 1409116
tiles_start: 1409116
tiles_end: 1427657
tiles_start: 1427657
tiles_end: 1446198
tiles_start: 1446198
tiles_end: 1464739
spark-3.0.1-bin-hadoop3.2/bin/spark-submit DiscreteHyperbolicFactorizationUpperbound_TileSearch_Optimized.py 2137458620009 5 False False 2>&1 > testlogs/DiscreteHyperbolicFactorizationUpperbound_TileSearch_Optimized.log3.12October2022
=================================================
xl + intervalmidpoint =  2671823275011
xr + intervalmidpoint =  1603093965006
xl =  2137458620009
yl =  1
Factor point verification: (xl + intervalmidpoint)*yl == number_to_factorize =  False
Factor point verification: xl*yl == number_to_factorize =  True
('Factors are: (', 1, ',', 2137458620009, ') (at ', 'Wed, 12 Oct 2022 07:58:43 GMT', ')')
nanoseconds elapsed so far in finding all factors:  4882247925
=================================================
factors_accum._value:  [2137458620009, 1]
=================================================
xl + intervalmidpoint =  1462010
xr + intervalmidpoint =  1462008
xl =  1462009
yl =  1462001
Factor point verification: (xl + intervalmidpoint)*yl == number_to_factorize =  False
Factor point verification: xl*yl == number_to_factorize =  True
('Factors are: (', 1462001, ',', 1462009, ') (at ', 'Wed, 12 Oct 2022 08:00:27 GMT', ')')
nanoseconds elapsed so far in finding all factors:  108538804495
=================================================
factors_accum._value:  [1462009, 1462001]
('factors_accum.value = ', [2137458620009, 1, 1462009, 1462001])
('factors of ', 2137458620009, '(', 40.959033629156515, ' bits integer) =', {1462001, 2137458620009, 1462009, 1})
