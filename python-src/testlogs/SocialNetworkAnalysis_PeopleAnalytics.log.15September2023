SLOC for COCOMO Effort Estimation(Effort = ai(KiloLinesOfCode)^bi(EffortAdjustmentFactor)): ('1413573\n', [['-------------------------------------------------------------------------------\n'], ['Language', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'files', '', '', '', '', '', '', '', '', '', 'blank', '', '', '', '', '', '', '', 'comment', '', '', '', '', '', '', '', '', '', '', 'code\n'], ['-------------------------------------------------------------------------------\n'], ['JavaScript', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '280', '', '', '', '', '', '', '', '', '', '13910', '', '', '', '', '', '', '', '', '138527', '', '', '', '', '', '', '', '', '968723\n'], ['HTML', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '965', '', '', '', '', '', '', '', '', '', '', '2783', '', '', '', '', '', '', '', '', '', '', '4580', '', '', '', '', '', '', '', '', '163258\n'], ['C', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '236', '', '', '', '', '', '', '', '', '', '10823', '', '', '', '', '', '', '', '', '', '20940', '', '', '', '', '', '', '', '', '', '81055\n'], ['TypeScript', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '114', '', '', '', '', '', '', '', '', '', '', '4743', '', '', '', '', '', '', '', '', '', '32805', '', '', '', '', '', '', '', '', '', '51450\n'], ['Python', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '292', '', '', '', '', '', '', '', '', '', '', '4304', '', '', '', '', '', '', '', '', '', '15935', '', '', '', '', '', '', '', '', '', '34518\n'], ['JSON', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '131', '', '', '', '', '', '', '', '', '', '', '', '', '63', '', '', '', '', '', '', '', '', '', '', '', '', '', '0', '', '', '', '', '', '', '', '', '', '30774\n'], ['TeX', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '344', '', '', '', '', '', '', '', '', '', '', '1996', '', '', '', '', '', '', '', '', '', '', '', '565', '', '', '', '', '', '', '', '', '', '22721\n'], ['D', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '50', '', '', '', '', '', '', '', '', '', '', '', '', '56', '', '', '', '', '', '', '', '', '', '', '', '', '', '0', '', '', '', '', '', '', '', '', '', '19719\n'], ['Markdown', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '34', '', '', '', '', '', '', '', '', '', '', '4217', '', '', '', '', '', '', '', '', '', '', '', '', '', '0', '', '', '', '', '', '', '', '', '', '', '9594\n'], ['C/C++', 'Header', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '68', '', '', '', '', '', '', '', '', '', '', '1981', '', '', '', '', '', '', '', '', '', '', '3874', '', '', '', '', '', '', '', '', '', '', '8624\n'], ['C++', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '74', '', '', '', '', '', '', '', '', '', '', '1202', '', '', '', '', '', '', '', '', '', '', '2208', '', '', '', '', '', '', '', '', '', '', '8250\n'], ['XML', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '19', '', '', '', '', '', '', '', '', '', '', '', '', '29', '', '', '', '', '', '', '', '', '', '', '', '', '94', '', '', '', '', '', '', '', '', '', '', '7010\n'], ['CSS', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '10', '', '', '', '', '', '', '', '', '', '', '', '616', '', '', '', '', '', '', '', '', '', '', '', '107', '', '', '', '', '', '', '', '', '', '', '3051\n'], ['make', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '71', '', '', '', '', '', '', '', '', '', '', '', '795', '', '', '', '', '', '', '', '', '', '', '1037', '', '', '', '', '', '', '', '', '', '', '2621\n'], ['Java', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '9', '', '', '', '', '', '', '', '', '', '', '', '137', '', '', '', '', '', '', '', '', '', '', '', '373', '', '', '', '', '', '', '', '', '', '', '', '702\n'], ['Bourne', 'Shell', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '68', '', '', '', '', '', '', '', '', '', '', '', '196', '', '', '', '', '', '', '', '', '', '', '1329', '', '', '', '', '', '', '', '', '', '', '', '470\n'], ['R', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '6', '', '', '', '', '', '', '', '', '', '', '', '', '', '8', '', '', '', '', '', '', '', '', '', '', '', '', '19', '', '', '', '', '', '', '', '', '', '', '', '351\n'], ['YAML', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '6', '', '', '', '', '', '', '', '', '', '', '', '', '90', '', '', '', '', '', '', '', '', '', '', '', '627', '', '', '', '', '', '', '', '', '', '', '', '285\n'], ['Qt', 'Linguist', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '14', '', '', '', '', '', '', '', '', '', '', '', '', '10', '', '', '', '', '', '', '', '', '', '', '', '', '', '0', '', '', '', '', '', '', '', '', '', '', '', '118\n'], ['Rust', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '1', '', '', '', '', '', '', '', '', '', '', '', '', '', '4', '', '', '', '', '', '', '', '', '', '', '', '', '10', '', '', '', '', '', '', '', '', '', '', '', '104\n'], ['Go', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '1', '', '', '', '', '', '', '', '', '', '', '', '', '', '5', '', '', '', '', '', '', '', '', '', '', '', '', '', '0', '', '', '', '', '', '', '', '', '', '', '', '', '57\n'], ['DOS', 'Batch', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '47', '', '', '', '', '', '', '', '', '', '', '', '', '', '0', '', '', '', '', '', '', '', '', '', '', '', '', '', '0', '', '', '', '', '', '', '', '', '', '', '', '', '47\n'], ['Perl', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '1', '', '', '', '', '', '', '', '', '', '', '', '', '', '7', '', '', '', '', '', '', '', '', '', '', '', '', '27', '', '', '', '', '', '', '', '', '', '', '', '', '42\n'], ['Pig', 'Latin', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '3', '', '', '', '', '', '', '', '', '', '', '', '', '', '2', '', '', '', '', '', '', '', '', '', '', '', '', '', '1', '', '', '', '', '', '', '', '', '', '', '', '', '18\n'], ['TOML', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '1', '', '', '', '', '', '', '', '', '', '', '', '', '', '2', '', '', '', '', '', '', '', '', '', '', '', '', '', '1', '', '', '', '', '', '', '', '', '', '', '', '', '', '7\n'], ['Protocol', 'Buffers', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '1', '', '', '', '', '', '', '', '', '', '', '', '', '', '1', '', '', '', '', '', '', '', '', '', '', '', '', '', '0', '', '', '', '', '', '', '', '', '', '', '', '', '', '4\n'], ['CoffeeScript', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '1', '', '', '', '', '', '', '', '', '', '', '', '', '', '1', '', '', '', '', '', '', '', '', '', '', '', '', '', '0', '', '', '', '', '', '', '', '', '', '', '', '', '', '0\n'], ['-------------------------------------------------------------------------------\n'], ['SUM:', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '2847', '', '', '', '', '', '', '', '', '', '47981', '', '', '', '', '', '', '', '', '223059', '', '', '', '', '', '', '', '1413573\n'], ['-------------------------------------------------------------------------------\n'], ['\n']])
==================================
GitHub Code Search for query  shrinivaasanka  - JSON:
==================================
{
  "total_count": 2,
  "incomplete_results": false,
  "items": [
    {
      "login": "shrinivaasanka",
      "id": 8086981,
      "node_id": "MDQ6VXNlcjgwODY5ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shrinivaasanka",
      "html_url": "https://github.com/shrinivaasanka",
      "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
      "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
      "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
      "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
      "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
      "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
      "type": "User",
      "site_admin": false,
      "score": 1.0
    },
    {
      "login": "Krishna-iResearch",
      "id": 8086998,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjgwODY5OTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8086998?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Krishna-iResearch",
      "html_url": "https://github.com/Krishna-iResearch",
      "followers_url": "https://api.github.com/users/Krishna-iResearch/followers",
      "following_url": "https://api.github.com/users/Krishna-iResearch/following{/other_user}",
      "gists_url": "https://api.github.com/users/Krishna-iResearch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Krishna-iResearch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Krishna-iResearch/subscriptions",
      "organizations_url": "https://api.github.com/users/Krishna-iResearch/orgs",
      "repos_url": "https://api.github.com/users/Krishna-iResearch/repos",
      "events_url": "https://api.github.com/users/Krishna-iResearch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Krishna-iResearch/received_events",
      "type": "Organization",
      "site_admin": false,
      "score": 1.0
    }
  ]
}
{
  "total_count": 256,
  "incomplete_results": false,
  "items": [
    {
      "name": "README.md",
      "path": "README.md",
      "sha": "492d29577afa50411acbd52082c0df5dd389c460",
      "url": "https://api.github.com/repositories/21852718/contents/README.md?ref=e51e2b651222859e5f41dd49a986817f1f506e06",
      "git_url": "https://api.github.com/repositories/21852718/git/blobs/492d29577afa50411acbd52082c0df5dd389c460",
      "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/blob/e51e2b651222859e5f41dd49a986817f1f506e06/README.md",
      "repository": {
        "id": 21852718,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMTg1MjcxOA==",
        "name": "Krishna_iResearch_DoxygenDocs",
        "full_name": "shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "description": "Krishna iResearch Open Source Products - Doxygen Documentation",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/deployments"
      },
      "score": 1.0
    },
    {
      "name": "2022-01-31.md",
      "path": "docs/good-messages/2022/2022-01-31.md",
      "sha": "a9b5ded2fce9c4b9fb99ec3428dd56354bea880e",
      "url": "https://api.github.com/repositories/439307083/contents/docs/good-messages/2022/2022-01-31.md?ref=1e2e0c71a449957ecf16a641636857ff9da4371c",
      "git_url": "https://api.github.com/repositories/439307083/git/blobs/a9b5ded2fce9c4b9fb99ec3428dd56354bea880e",
      "html_url": "https://github.com/defgsus/good-github/blob/1e2e0c71a449957ecf16a641636857ff9da4371c/docs/good-messages/2022/2022-01-31.md",
      "repository": {
        "id": 439307083,
        "node_id": "R_kgDOGi9LSw",
        "name": "good-github",
        "full_name": "defgsus/good-github",
        "private": false,
        "owner": {
          "login": "defgsus",
          "id": 6267997,
          "node_id": "MDQ6VXNlcjYyNjc5OTc=",
          "avatar_url": "https://avatars.githubusercontent.com/u/6267997?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/defgsus",
          "html_url": "https://github.com/defgsus",
          "followers_url": "https://api.github.com/users/defgsus/followers",
          "following_url": "https://api.github.com/users/defgsus/following{/other_user}",
          "gists_url": "https://api.github.com/users/defgsus/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/defgsus/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/defgsus/subscriptions",
          "organizations_url": "https://api.github.com/users/defgsus/orgs",
          "repos_url": "https://api.github.com/users/defgsus/repos",
          "events_url": "https://api.github.com/users/defgsus/events{/privacy}",
          "received_events_url": "https://api.github.com/users/defgsus/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/defgsus/good-github",
        "description": "Collector of exceptional / somewhat personal github commit messages - updated daily",
        "fork": false,
        "url": "https://api.github.com/repos/defgsus/good-github",
        "forks_url": "https://api.github.com/repos/defgsus/good-github/forks",
        "keys_url": "https://api.github.com/repos/defgsus/good-github/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/defgsus/good-github/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/defgsus/good-github/teams",
        "hooks_url": "https://api.github.com/repos/defgsus/good-github/hooks",
        "issue_events_url": "https://api.github.com/repos/defgsus/good-github/issues/events{/number}",
        "events_url": "https://api.github.com/repos/defgsus/good-github/events",
        "assignees_url": "https://api.github.com/repos/defgsus/good-github/assignees{/user}",
        "branches_url": "https://api.github.com/repos/defgsus/good-github/branches{/branch}",
        "tags_url": "https://api.github.com/repos/defgsus/good-github/tags",
        "blobs_url": "https://api.github.com/repos/defgsus/good-github/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/defgsus/good-github/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/defgsus/good-github/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/defgsus/good-github/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/defgsus/good-github/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/defgsus/good-github/languages",
        "stargazers_url": "https://api.github.com/repos/defgsus/good-github/stargazers",
        "contributors_url": "https://api.github.com/repos/defgsus/good-github/contributors",
        "subscribers_url": "https://api.github.com/repos/defgsus/good-github/subscribers",
        "subscription_url": "https://api.github.com/repos/defgsus/good-github/subscription",
        "commits_url": "https://api.github.com/repos/defgsus/good-github/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/defgsus/good-github/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/defgsus/good-github/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/defgsus/good-github/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/defgsus/good-github/contents/{+path}",
        "compare_url": "https://api.github.com/repos/defgsus/good-github/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/defgsus/good-github/merges",
        "archive_url": "https://api.github.com/repos/defgsus/good-github/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/defgsus/good-github/downloads",
        "issues_url": "https://api.github.com/repos/defgsus/good-github/issues{/number}",
        "pulls_url": "https://api.github.com/repos/defgsus/good-github/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/defgsus/good-github/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/defgsus/good-github/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/defgsus/good-github/labels{/name}",
        "releases_url": "https://api.github.com/repos/defgsus/good-github/releases{/id}",
        "deployments_url": "https://api.github.com/repos/defgsus/good-github/deployments"
      },
      "score": 1.0
    },
    {
      "name": "GitHubSSL.sh",
      "path": "GitHubSSL.sh",
      "sha": "4c8ef101522c1b85d3ee7fc5a91ad1a075a7e7e9",
      "url": "https://api.github.com/repositories/36945272/contents/GitHubSSL.sh?ref=3acf65ba6096a1bb67d0268b63438e607a026f52",
      "git_url": "https://api.github.com/repositories/36945272/git/blobs/4c8ef101522c1b85d3ee7fc5a91ad1a075a7e7e9",
      "html_url": "https://github.com/shrinivaasanka/asfer-github-code/blob/3acf65ba6096a1bb67d0268b63438e607a026f52/GitHubSSL.sh",
      "repository": {
        "id": 36945272,
        "node_id": "MDEwOlJlcG9zaXRvcnkzNjk0NTI3Mg==",
        "name": "asfer-github-code",
        "full_name": "shrinivaasanka/asfer-github-code",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/asfer-github-code",
        "description": "Derived from http://sourceforge.net/p/asfer/",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/deployments"
      },
      "score": 1.0
    },
    {
      "name": "2021-12-08.md",
      "path": "docs/good-messages/2021/2021-12-08.md",
      "sha": "06313e5823ed76650665c34f68bc9f636b051134",
      "url": "https://api.github.com/repositories/439307083/contents/docs/good-messages/2021/2021-12-08.md?ref=1e2e0c71a449957ecf16a641636857ff9da4371c",
      "git_url": "https://api.github.com/repositories/439307083/git/blobs/06313e5823ed76650665c34f68bc9f636b051134",
      "html_url": "https://github.com/defgsus/good-github/blob/1e2e0c71a449957ecf16a641636857ff9da4371c/docs/good-messages/2021/2021-12-08.md",
      "repository": {
        "id": 439307083,
        "node_id": "R_kgDOGi9LSw",
        "name": "good-github",
        "full_name": "defgsus/good-github",
        "private": false,
        "owner": {
          "login": "defgsus",
          "id": 6267997,
          "node_id": "MDQ6VXNlcjYyNjc5OTc=",
          "avatar_url": "https://avatars.githubusercontent.com/u/6267997?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/defgsus",
          "html_url": "https://github.com/defgsus",
          "followers_url": "https://api.github.com/users/defgsus/followers",
          "following_url": "https://api.github.com/users/defgsus/following{/other_user}",
          "gists_url": "https://api.github.com/users/defgsus/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/defgsus/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/defgsus/subscriptions",
          "organizations_url": "https://api.github.com/users/defgsus/orgs",
          "repos_url": "https://api.github.com/users/defgsus/repos",
          "events_url": "https://api.github.com/users/defgsus/events{/privacy}",
          "received_events_url": "https://api.github.com/users/defgsus/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/defgsus/good-github",
        "description": "Collector of exceptional / somewhat personal github commit messages - updated daily",
        "fork": false,
        "url": "https://api.github.com/repos/defgsus/good-github",
        "forks_url": "https://api.github.com/repos/defgsus/good-github/forks",
        "keys_url": "https://api.github.com/repos/defgsus/good-github/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/defgsus/good-github/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/defgsus/good-github/teams",
        "hooks_url": "https://api.github.com/repos/defgsus/good-github/hooks",
        "issue_events_url": "https://api.github.com/repos/defgsus/good-github/issues/events{/number}",
        "events_url": "https://api.github.com/repos/defgsus/good-github/events",
        "assignees_url": "https://api.github.com/repos/defgsus/good-github/assignees{/user}",
        "branches_url": "https://api.github.com/repos/defgsus/good-github/branches{/branch}",
        "tags_url": "https://api.github.com/repos/defgsus/good-github/tags",
        "blobs_url": "https://api.github.com/repos/defgsus/good-github/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/defgsus/good-github/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/defgsus/good-github/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/defgsus/good-github/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/defgsus/good-github/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/defgsus/good-github/languages",
        "stargazers_url": "https://api.github.com/repos/defgsus/good-github/stargazers",
        "contributors_url": "https://api.github.com/repos/defgsus/good-github/contributors",
        "subscribers_url": "https://api.github.com/repos/defgsus/good-github/subscribers",
        "subscription_url": "https://api.github.com/repos/defgsus/good-github/subscription",
        "commits_url": "https://api.github.com/repos/defgsus/good-github/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/defgsus/good-github/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/defgsus/good-github/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/defgsus/good-github/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/defgsus/good-github/contents/{+path}",
        "compare_url": "https://api.github.com/repos/defgsus/good-github/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/defgsus/good-github/merges",
        "archive_url": "https://api.github.com/repos/defgsus/good-github/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/defgsus/good-github/downloads",
        "issues_url": "https://api.github.com/repos/defgsus/good-github/issues{/number}",
        "pulls_url": "https://api.github.com/repos/defgsus/good-github/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/defgsus/good-github/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/defgsus/good-github/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/defgsus/good-github/labels{/name}",
        "releases_url": "https://api.github.com/repos/defgsus/good-github/releases{/id}",
        "deployments_url": "https://api.github.com/repos/defgsus/good-github/deployments"
      },
      "score": 1.0
    },
    {
      "name": "CV.tex",
      "path": "CV/CV.tex",
      "sha": "3b352892d988073164f27299bdcf9c76bc44d0ab",
      "url": "https://api.github.com/repositories/21852718/contents/CV/CV.tex?ref=e51e2b651222859e5f41dd49a986817f1f506e06",
      "git_url": "https://api.github.com/repositories/21852718/git/blobs/3b352892d988073164f27299bdcf9c76bc44d0ab",
      "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/blob/e51e2b651222859e5f41dd49a986817f1f506e06/CV/CV.tex",
      "repository": {
        "id": 21852718,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMTg1MjcxOA==",
        "name": "Krishna_iResearch_DoxygenDocs",
        "full_name": "shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "description": "Krishna iResearch Open Source Products - Doxygen Documentation",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/deployments"
      },
      "score": 1.0
    },
    {
      "name": "BestPractices.txt",
      "path": "asfer-docs/BestPractices.txt",
      "sha": "e95094eb5c9966a0e2be1b37cab4ac271afb4533",
      "url": "https://api.github.com/repositories/36945272/contents/asfer-docs/BestPractices.txt?ref=3acf65ba6096a1bb67d0268b63438e607a026f52",
      "git_url": "https://api.github.com/repositories/36945272/git/blobs/e95094eb5c9966a0e2be1b37cab4ac271afb4533",
      "html_url": "https://github.com/shrinivaasanka/asfer-github-code/blob/3acf65ba6096a1bb67d0268b63438e607a026f52/asfer-docs/BestPractices.txt",
      "repository": {
        "id": 36945272,
        "node_id": "MDEwOlJlcG9zaXRvcnkzNjk0NTI3Mg==",
        "name": "asfer-github-code",
        "full_name": "shrinivaasanka/asfer-github-code",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/asfer-github-code",
        "description": "Derived from http://sourceforge.net/p/asfer/",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/deployments"
      },
      "score": 1.0
    },
    {
      "name": "2022-06-01.md",
      "path": "docs/good-messages/2022/2022-06-01.md",
      "sha": "bd806277b672e38e92b8a6b2ffde3a9f7c6f2510",
      "url": "https://api.github.com/repositories/439307083/contents/docs/good-messages/2022/2022-06-01.md?ref=1e2e0c71a449957ecf16a641636857ff9da4371c",
      "git_url": "https://api.github.com/repositories/439307083/git/blobs/bd806277b672e38e92b8a6b2ffde3a9f7c6f2510",
      "html_url": "https://github.com/defgsus/good-github/blob/1e2e0c71a449957ecf16a641636857ff9da4371c/docs/good-messages/2022/2022-06-01.md",
      "repository": {
        "id": 439307083,
        "node_id": "R_kgDOGi9LSw",
        "name": "good-github",
        "full_name": "defgsus/good-github",
        "private": false,
        "owner": {
          "login": "defgsus",
          "id": 6267997,
          "node_id": "MDQ6VXNlcjYyNjc5OTc=",
          "avatar_url": "https://avatars.githubusercontent.com/u/6267997?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/defgsus",
          "html_url": "https://github.com/defgsus",
          "followers_url": "https://api.github.com/users/defgsus/followers",
          "following_url": "https://api.github.com/users/defgsus/following{/other_user}",
          "gists_url": "https://api.github.com/users/defgsus/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/defgsus/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/defgsus/subscriptions",
          "organizations_url": "https://api.github.com/users/defgsus/orgs",
          "repos_url": "https://api.github.com/users/defgsus/repos",
          "events_url": "https://api.github.com/users/defgsus/events{/privacy}",
          "received_events_url": "https://api.github.com/users/defgsus/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/defgsus/good-github",
        "description": "Collector of exceptional / somewhat personal github commit messages - updated daily",
        "fork": false,
        "url": "https://api.github.com/repos/defgsus/good-github",
        "forks_url": "https://api.github.com/repos/defgsus/good-github/forks",
        "keys_url": "https://api.github.com/repos/defgsus/good-github/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/defgsus/good-github/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/defgsus/good-github/teams",
        "hooks_url": "https://api.github.com/repos/defgsus/good-github/hooks",
        "issue_events_url": "https://api.github.com/repos/defgsus/good-github/issues/events{/number}",
        "events_url": "https://api.github.com/repos/defgsus/good-github/events",
        "assignees_url": "https://api.github.com/repos/defgsus/good-github/assignees{/user}",
        "branches_url": "https://api.github.com/repos/defgsus/good-github/branches{/branch}",
        "tags_url": "https://api.github.com/repos/defgsus/good-github/tags",
        "blobs_url": "https://api.github.com/repos/defgsus/good-github/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/defgsus/good-github/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/defgsus/good-github/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/defgsus/good-github/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/defgsus/good-github/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/defgsus/good-github/languages",
        "stargazers_url": "https://api.github.com/repos/defgsus/good-github/stargazers",
        "contributors_url": "https://api.github.com/repos/defgsus/good-github/contributors",
        "subscribers_url": "https://api.github.com/repos/defgsus/good-github/subscribers",
        "subscription_url": "https://api.github.com/repos/defgsus/good-github/subscription",
        "commits_url": "https://api.github.com/repos/defgsus/good-github/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/defgsus/good-github/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/defgsus/good-github/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/defgsus/good-github/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/defgsus/good-github/contents/{+path}",
        "compare_url": "https://api.github.com/repos/defgsus/good-github/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/defgsus/good-github/merges",
        "archive_url": "https://api.github.com/repos/defgsus/good-github/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/defgsus/good-github/downloads",
        "issues_url": "https://api.github.com/repos/defgsus/good-github/issues{/number}",
        "pulls_url": "https://api.github.com/repos/defgsus/good-github/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/defgsus/good-github/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/defgsus/good-github/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/defgsus/good-github/labels{/name}",
        "releases_url": "https://api.github.com/repos/defgsus/good-github/releases{/id}",
        "deployments_url": "https://api.github.com/repos/defgsus/good-github/deployments"
      },
      "score": 1.0
    },
    {
      "name": "Spline.py",
      "path": "python-src/Spline.py",
      "sha": "4f3b0939f6dfc3fbaca3c1816c666a63300c353f",
      "url": "https://api.github.com/repositories/36945272/contents/python-src/Spline.py?ref=3acf65ba6096a1bb67d0268b63438e607a026f52",
      "git_url": "https://api.github.com/repositories/36945272/git/blobs/4f3b0939f6dfc3fbaca3c1816c666a63300c353f",
      "html_url": "https://github.com/shrinivaasanka/asfer-github-code/blob/3acf65ba6096a1bb67d0268b63438e607a026f52/python-src/Spline.py",
      "repository": {
        "id": 36945272,
        "node_id": "MDEwOlJlcG9zaXRvcnkzNjk0NTI3Mg==",
        "name": "asfer-github-code",
        "full_name": "shrinivaasanka/asfer-github-code",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/asfer-github-code",
        "description": "Derived from http://sourceforge.net/p/asfer/",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/deployments"
      },
      "score": 1.0
    },
    {
      "name": "Java_CourseNotes.txt",
      "path": "text/NeuronRain_Documents/Java_CourseNotes.txt",
      "sha": "4ed943aa867b3fd1e7e60421231e199415d378dc",
      "url": "https://api.github.com/repositories/21852718/contents/text/NeuronRain_Documents/Java_CourseNotes.txt?ref=e51e2b651222859e5f41dd49a986817f1f506e06",
      "git_url": "https://api.github.com/repositories/21852718/git/blobs/4ed943aa867b3fd1e7e60421231e199415d378dc",
      "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/blob/e51e2b651222859e5f41dd49a986817f1f506e06/text/NeuronRain_Documents/Java_CourseNotes.txt",
      "repository": {
        "id": 21852718,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMTg1MjcxOA==",
        "name": "Krishna_iResearch_DoxygenDocs",
        "full_name": "shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "description": "Krishna iResearch Open Source Products - Doxygen Documentation",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/deployments"
      },
      "score": 1.0
    },
    {
      "name": "2023-08-09.md",
      "path": "docs/good-messages/2023/2023-08-09.md",
      "sha": "daaa232b712579ae06ef54e328178c3619477d41",
      "url": "https://api.github.com/repositories/439307083/contents/docs/good-messages/2023/2023-08-09.md?ref=1e2e0c71a449957ecf16a641636857ff9da4371c",
      "git_url": "https://api.github.com/repositories/439307083/git/blobs/daaa232b712579ae06ef54e328178c3619477d41",
      "html_url": "https://github.com/defgsus/good-github/blob/1e2e0c71a449957ecf16a641636857ff9da4371c/docs/good-messages/2023/2023-08-09.md",
      "repository": {
        "id": 439307083,
        "node_id": "R_kgDOGi9LSw",
        "name": "good-github",
        "full_name": "defgsus/good-github",
        "private": false,
        "owner": {
          "login": "defgsus",
          "id": 6267997,
          "node_id": "MDQ6VXNlcjYyNjc5OTc=",
          "avatar_url": "https://avatars.githubusercontent.com/u/6267997?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/defgsus",
          "html_url": "https://github.com/defgsus",
          "followers_url": "https://api.github.com/users/defgsus/followers",
          "following_url": "https://api.github.com/users/defgsus/following{/other_user}",
          "gists_url": "https://api.github.com/users/defgsus/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/defgsus/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/defgsus/subscriptions",
          "organizations_url": "https://api.github.com/users/defgsus/orgs",
          "repos_url": "https://api.github.com/users/defgsus/repos",
          "events_url": "https://api.github.com/users/defgsus/events{/privacy}",
          "received_events_url": "https://api.github.com/users/defgsus/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/defgsus/good-github",
        "description": "Collector of exceptional / somewhat personal github commit messages - updated daily",
        "fork": false,
        "url": "https://api.github.com/repos/defgsus/good-github",
        "forks_url": "https://api.github.com/repos/defgsus/good-github/forks",
        "keys_url": "https://api.github.com/repos/defgsus/good-github/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/defgsus/good-github/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/defgsus/good-github/teams",
        "hooks_url": "https://api.github.com/repos/defgsus/good-github/hooks",
        "issue_events_url": "https://api.github.com/repos/defgsus/good-github/issues/events{/number}",
        "events_url": "https://api.github.com/repos/defgsus/good-github/events",
        "assignees_url": "https://api.github.com/repos/defgsus/good-github/assignees{/user}",
        "branches_url": "https://api.github.com/repos/defgsus/good-github/branches{/branch}",
        "tags_url": "https://api.github.com/repos/defgsus/good-github/tags",
        "blobs_url": "https://api.github.com/repos/defgsus/good-github/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/defgsus/good-github/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/defgsus/good-github/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/defgsus/good-github/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/defgsus/good-github/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/defgsus/good-github/languages",
        "stargazers_url": "https://api.github.com/repos/defgsus/good-github/stargazers",
        "contributors_url": "https://api.github.com/repos/defgsus/good-github/contributors",
        "subscribers_url": "https://api.github.com/repos/defgsus/good-github/subscribers",
        "subscription_url": "https://api.github.com/repos/defgsus/good-github/subscription",
        "commits_url": "https://api.github.com/repos/defgsus/good-github/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/defgsus/good-github/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/defgsus/good-github/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/defgsus/good-github/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/defgsus/good-github/contents/{+path}",
        "compare_url": "https://api.github.com/repos/defgsus/good-github/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/defgsus/good-github/merges",
        "archive_url": "https://api.github.com/repos/defgsus/good-github/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/defgsus/good-github/downloads",
        "issues_url": "https://api.github.com/repos/defgsus/good-github/issues{/number}",
        "pulls_url": "https://api.github.com/repos/defgsus/good-github/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/defgsus/good-github/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/defgsus/good-github/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/defgsus/good-github/labels{/name}",
        "releases_url": "https://api.github.com/repos/defgsus/good-github/releases{/id}",
        "deployments_url": "https://api.github.com/repos/defgsus/good-github/deployments"
      },
      "score": 1.0
    },
    {
      "name": "hadoop-root-secondarynamenode-shrinivaasanka-Inspiron-1545.out.3",
      "path": "java-src/bigdata_analytics/hadoop_mapreduce/hdfs_data/hadooproot_logs/hadoop-root-secondarynamenode-shrinivaasanka-Inspiron-1545.out.3",
      "sha": "0b14566f7ce612c0d105ebb96a30c0b12eb471bb",
      "url": "https://api.github.com/repositories/36945272/contents/java-src/bigdata_analytics/hadoop_mapreduce/hdfs_data/hadooproot_logs/hadoop-root-secondarynamenode-shrinivaasanka-Inspiron-1545.out.3?ref=3acf65ba6096a1bb67d0268b63438e607a026f52",
      "git_url": "https://api.github.com/repositories/36945272/git/blobs/0b14566f7ce612c0d105ebb96a30c0b12eb471bb",
      "html_url": "https://github.com/shrinivaasanka/asfer-github-code/blob/3acf65ba6096a1bb67d0268b63438e607a026f52/java-src/bigdata_analytics/hadoop_mapreduce/hdfs_data/hadooproot_logs/hadoop-root-secondarynamenode-shrinivaasanka-Inspiron-1545.out.3",
      "repository": {
        "id": 36945272,
        "node_id": "MDEwOlJlcG9zaXRvcnkzNjk0NTI3Mg==",
        "name": "asfer-github-code",
        "full_name": "shrinivaasanka/asfer-github-code",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/asfer-github-code",
        "description": "Derived from http://sourceforge.net/p/asfer/",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/deployments"
      },
      "score": 1.0
    },
    {
      "name": "index.rst",
      "path": "index.rst",
      "sha": "84efd4e706ef5b302b2fd507d67da0c10ee434a0",
      "url": "https://api.github.com/repositories/21852718/contents/index.rst?ref=e51e2b651222859e5f41dd49a986817f1f506e06",
      "git_url": "https://api.github.com/repositories/21852718/git/blobs/84efd4e706ef5b302b2fd507d67da0c10ee434a0",
      "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/blob/e51e2b651222859e5f41dd49a986817f1f506e06/index.rst",
      "repository": {
        "id": 21852718,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMTg1MjcxOA==",
        "name": "Krishna_iResearch_DoxygenDocs",
        "full_name": "shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "description": "Krishna iResearch Open Source Products - Doxygen Documentation",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/deployments"
      },
      "score": 1.0
    },
    {
      "name": "2022-06-07.md",
      "path": "docs/good-messages/2022/2022-06-07.md",
      "sha": "2ba6e644241a9fd91013b3136531cdb5e56e3a2d",
      "url": "https://api.github.com/repositories/439307083/contents/docs/good-messages/2022/2022-06-07.md?ref=1e2e0c71a449957ecf16a641636857ff9da4371c",
      "git_url": "https://api.github.com/repositories/439307083/git/blobs/2ba6e644241a9fd91013b3136531cdb5e56e3a2d",
      "html_url": "https://github.com/defgsus/good-github/blob/1e2e0c71a449957ecf16a641636857ff9da4371c/docs/good-messages/2022/2022-06-07.md",
      "repository": {
        "id": 439307083,
        "node_id": "R_kgDOGi9LSw",
        "name": "good-github",
        "full_name": "defgsus/good-github",
        "private": false,
        "owner": {
          "login": "defgsus",
          "id": 6267997,
          "node_id": "MDQ6VXNlcjYyNjc5OTc=",
          "avatar_url": "https://avatars.githubusercontent.com/u/6267997?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/defgsus",
          "html_url": "https://github.com/defgsus",
          "followers_url": "https://api.github.com/users/defgsus/followers",
          "following_url": "https://api.github.com/users/defgsus/following{/other_user}",
          "gists_url": "https://api.github.com/users/defgsus/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/defgsus/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/defgsus/subscriptions",
          "organizations_url": "https://api.github.com/users/defgsus/orgs",
          "repos_url": "https://api.github.com/users/defgsus/repos",
          "events_url": "https://api.github.com/users/defgsus/events{/privacy}",
          "received_events_url": "https://api.github.com/users/defgsus/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/defgsus/good-github",
        "description": "Collector of exceptional / somewhat personal github commit messages - updated daily",
        "fork": false,
        "url": "https://api.github.com/repos/defgsus/good-github",
        "forks_url": "https://api.github.com/repos/defgsus/good-github/forks",
        "keys_url": "https://api.github.com/repos/defgsus/good-github/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/defgsus/good-github/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/defgsus/good-github/teams",
        "hooks_url": "https://api.github.com/repos/defgsus/good-github/hooks",
        "issue_events_url": "https://api.github.com/repos/defgsus/good-github/issues/events{/number}",
        "events_url": "https://api.github.com/repos/defgsus/good-github/events",
        "assignees_url": "https://api.github.com/repos/defgsus/good-github/assignees{/user}",
        "branches_url": "https://api.github.com/repos/defgsus/good-github/branches{/branch}",
        "tags_url": "https://api.github.com/repos/defgsus/good-github/tags",
        "blobs_url": "https://api.github.com/repos/defgsus/good-github/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/defgsus/good-github/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/defgsus/good-github/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/defgsus/good-github/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/defgsus/good-github/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/defgsus/good-github/languages",
        "stargazers_url": "https://api.github.com/repos/defgsus/good-github/stargazers",
        "contributors_url": "https://api.github.com/repos/defgsus/good-github/contributors",
        "subscribers_url": "https://api.github.com/repos/defgsus/good-github/subscribers",
        "subscription_url": "https://api.github.com/repos/defgsus/good-github/subscription",
        "commits_url": "https://api.github.com/repos/defgsus/good-github/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/defgsus/good-github/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/defgsus/good-github/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/defgsus/good-github/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/defgsus/good-github/contents/{+path}",
        "compare_url": "https://api.github.com/repos/defgsus/good-github/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/defgsus/good-github/merges",
        "archive_url": "https://api.github.com/repos/defgsus/good-github/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/defgsus/good-github/downloads",
        "issues_url": "https://api.github.com/repos/defgsus/good-github/issues{/number}",
        "pulls_url": "https://api.github.com/repos/defgsus/good-github/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/defgsus/good-github/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/defgsus/good-github/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/defgsus/good-github/labels{/name}",
        "releases_url": "https://api.github.com/repos/defgsus/good-github/releases{/id}",
        "deployments_url": "https://api.github.com/repos/defgsus/good-github/deployments"
      },
      "score": 1.0
    },
    {
      "name": "asfer.cpp",
      "path": "cpp-src/asfer.cpp",
      "sha": "47f0815aaa7e5a6818bdcd6692013e1751683f4a",
      "url": "https://api.github.com/repositories/36945272/contents/cpp-src/asfer.cpp?ref=3acf65ba6096a1bb67d0268b63438e607a026f52",
      "git_url": "https://api.github.com/repositories/36945272/git/blobs/47f0815aaa7e5a6818bdcd6692013e1751683f4a",
      "html_url": "https://github.com/shrinivaasanka/asfer-github-code/blob/3acf65ba6096a1bb67d0268b63438e607a026f52/cpp-src/asfer.cpp",
      "repository": {
        "id": 36945272,
        "node_id": "MDEwOlJlcG9zaXRvcnkzNjk0NTI3Mg==",
        "name": "asfer-github-code",
        "full_name": "shrinivaasanka/asfer-github-code",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/asfer-github-code",
        "description": "Derived from http://sourceforge.net/p/asfer/",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/deployments"
      },
      "score": 1.0
    },
    {
      "name": "CV.log",
      "path": "CV/CV.log",
      "sha": "5c12e03c0606cd6662af990f4888693b43ddf2a0",
      "url": "https://api.github.com/repositories/21852718/contents/CV/CV.log?ref=e51e2b651222859e5f41dd49a986817f1f506e06",
      "git_url": "https://api.github.com/repositories/21852718/git/blobs/5c12e03c0606cd6662af990f4888693b43ddf2a0",
      "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/blob/e51e2b651222859e5f41dd49a986817f1f506e06/CV/CV.log",
      "repository": {
        "id": 21852718,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMTg1MjcxOA==",
        "name": "Krishna_iResearch_DoxygenDocs",
        "full_name": "shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "description": "Krishna iResearch Open Source Products - Doxygen Documentation",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/deployments"
      },
      "score": 1.0
    },
    {
      "name": "WordNetSimilarity.py",
      "path": "python-src/WordNetSimilarity.py",
      "sha": "466830b942d2952d8ee97e62e984911f6b7968ed",
      "url": "https://api.github.com/repositories/36945272/contents/python-src/WordNetSimilarity.py?ref=3acf65ba6096a1bb67d0268b63438e607a026f52",
      "git_url": "https://api.github.com/repositories/36945272/git/blobs/466830b942d2952d8ee97e62e984911f6b7968ed",
      "html_url": "https://github.com/shrinivaasanka/asfer-github-code/blob/3acf65ba6096a1bb67d0268b63438e607a026f52/python-src/WordNetSimilarity.py",
      "repository": {
        "id": 36945272,
        "node_id": "MDEwOlJlcG9zaXRvcnkzNjk0NTI3Mg==",
        "name": "asfer-github-code",
        "full_name": "shrinivaasanka/asfer-github-code",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/asfer-github-code",
        "description": "Derived from http://sourceforge.net/p/asfer/",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/deployments"
      },
      "score": 1.0
    },
    {
      "name": "AngularJS_CourseNotes.txt",
      "path": "text/NeuronRain_Documents/AngularJS_CourseNotes.txt",
      "sha": "11b5ee473307601df2593b78edf2d14920bf80e5",
      "url": "https://api.github.com/repositories/21852718/contents/text/NeuronRain_Documents/AngularJS_CourseNotes.txt?ref=e51e2b651222859e5f41dd49a986817f1f506e06",
      "git_url": "https://api.github.com/repositories/21852718/git/blobs/11b5ee473307601df2593b78edf2d14920bf80e5",
      "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/blob/e51e2b651222859e5f41dd49a986817f1f506e06/text/NeuronRain_Documents/AngularJS_CourseNotes.txt",
      "repository": {
        "id": 21852718,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMTg1MjcxOA==",
        "name": "Krishna_iResearch_DoxygenDocs",
        "full_name": "shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "description": "Krishna iResearch Open Source Products - Doxygen Documentation",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/deployments"
      },
      "score": 1.0
    },
    {
      "name": "asferlongestcommonsubstring.h",
      "path": "cpp-src/asferlongestcommonsubstring.h",
      "sha": "1da718a93b1e335ca1d64bb9f98f5b36bfd1b2c4",
      "url": "https://api.github.com/repositories/36945272/contents/cpp-src/asferlongestcommonsubstring.h?ref=3acf65ba6096a1bb67d0268b63438e607a026f52",
      "git_url": "https://api.github.com/repositories/36945272/git/blobs/1da718a93b1e335ca1d64bb9f98f5b36bfd1b2c4",
      "html_url": "https://github.com/shrinivaasanka/asfer-github-code/blob/3acf65ba6096a1bb67d0268b63438e607a026f52/cpp-src/asferlongestcommonsubstring.h",
      "repository": {
        "id": 36945272,
        "node_id": "MDEwOlJlcG9zaXRvcnkzNjk0NTI3Mg==",
        "name": "asfer-github-code",
        "full_name": "shrinivaasanka/asfer-github-code",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/asfer-github-code",
        "description": "Derived from http://sourceforge.net/p/asfer/",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/deployments"
      },
      "score": 1.0
    },
    {
      "name": "CV_Prologue.txt",
      "path": "GoogleDriveBackupOfDeletedKuja27Website/Root/CV_Prologue.txt",
      "sha": "ed8ddded3fba3bcff4bea065cf43295bac08e8e0",
      "url": "https://api.github.com/repositories/21852718/contents/GoogleDriveBackupOfDeletedKuja27Website/Root/CV_Prologue.txt?ref=e51e2b651222859e5f41dd49a986817f1f506e06",
      "git_url": "https://api.github.com/repositories/21852718/git/blobs/ed8ddded3fba3bcff4bea065cf43295bac08e8e0",
      "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/blob/e51e2b651222859e5f41dd49a986817f1f506e06/GoogleDriveBackupOfDeletedKuja27Website/Root/CV_Prologue.txt",
      "repository": {
        "id": 21852718,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMTg1MjcxOA==",
        "name": "Krishna_iResearch_DoxygenDocs",
        "full_name": "shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "description": "Krishna iResearch Open Source Products - Doxygen Documentation",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/deployments"
      },
      "score": 1.0
    },
    {
      "name": "WordNetPath.py",
      "path": "python-src/WordNetPath.py",
      "sha": "1407e06d6a0f94b3eb87aeb971f2e01a2b119f5c",
      "url": "https://api.github.com/repositories/36945272/contents/python-src/WordNetPath.py?ref=3acf65ba6096a1bb67d0268b63438e607a026f52",
      "git_url": "https://api.github.com/repositories/36945272/git/blobs/1407e06d6a0f94b3eb87aeb971f2e01a2b119f5c",
      "html_url": "https://github.com/shrinivaasanka/asfer-github-code/blob/3acf65ba6096a1bb67d0268b63438e607a026f52/python-src/WordNetPath.py",
      "repository": {
        "id": 36945272,
        "node_id": "MDEwOlJlcG9zaXRvcnkzNjk0NTI3Mg==",
        "name": "asfer-github-code",
        "full_name": "shrinivaasanka/asfer-github-code",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/asfer-github-code",
        "description": "Derived from http://sourceforge.net/p/asfer/",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/deployments"
      },
      "score": 1.0
    },
    {
      "name": "coccinelle_kernel_static_analysis.txt",
      "path": "text/NeuronRain_Documents/coccinelle_kernel_static_analysis.txt",
      "sha": "5101167629a137afc2befbf5c77231e12d68ba6b",
      "url": "https://api.github.com/repositories/21852718/contents/text/NeuronRain_Documents/coccinelle_kernel_static_analysis.txt?ref=e51e2b651222859e5f41dd49a986817f1f506e06",
      "git_url": "https://api.github.com/repositories/21852718/git/blobs/5101167629a137afc2befbf5c77231e12d68ba6b",
      "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/blob/e51e2b651222859e5f41dd49a986817f1f506e06/text/NeuronRain_Documents/coccinelle_kernel_static_analysis.txt",
      "repository": {
        "id": 21852718,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMTg1MjcxOA==",
        "name": "Krishna_iResearch_DoxygenDocs",
        "full_name": "shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "description": "Krishna iResearch Open Source Products - Doxygen Documentation",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/deployments"
      },
      "score": 1.0
    },
    {
      "name": "VIRGO_SATURN_Program_Analysis_Integration.txt",
      "path": "text/NeuronRain_Documents/VIRGO_SATURN_Program_Analysis_Integration.txt",
      "sha": "620cd6b8c40a71e9daf66768756d8858ba6fa1a4",
      "url": "https://api.github.com/repositories/21852718/contents/text/NeuronRain_Documents/VIRGO_SATURN_Program_Analysis_Integration.txt?ref=e51e2b651222859e5f41dd49a986817f1f506e06",
      "git_url": "https://api.github.com/repositories/21852718/git/blobs/620cd6b8c40a71e9daf66768756d8858ba6fa1a4",
      "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/blob/e51e2b651222859e5f41dd49a986817f1f506e06/text/NeuronRain_Documents/VIRGO_SATURN_Program_Analysis_Integration.txt",
      "repository": {
        "id": 21852718,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMTg1MjcxOA==",
        "name": "Krishna_iResearch_DoxygenDocs",
        "full_name": "shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "description": "Krishna iResearch Open Source Products - Doxygen Documentation",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/deployments"
      },
      "score": 1.0
    },
    {
      "name": "umb_8h_source.html",
      "path": "USBmd64/html/umb_8h_source.html",
      "sha": "e78a170b2b59e3ea14951f1cd5e9dd3e9d88eb84",
      "url": "https://api.github.com/repositories/21852718/contents/USBmd64/html/umb_8h_source.html?ref=e51e2b651222859e5f41dd49a986817f1f506e06",
      "git_url": "https://api.github.com/repositories/21852718/git/blobs/e78a170b2b59e3ea14951f1cd5e9dd3e9d88eb84",
      "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/blob/e51e2b651222859e5f41dd49a986817f1f506e06/USBmd64/html/umb_8h_source.html",
      "repository": {
        "id": 21852718,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMTg1MjcxOA==",
        "name": "Krishna_iResearch_DoxygenDocs",
        "full_name": "shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "description": "Krishna iResearch Open Source Products - Doxygen Documentation",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/deployments"
      },
      "score": 1.0
    },
    {
      "name": "VIRGO_commit_log.txt",
      "path": "VIRGO/VIRGO_commit_log.txt",
      "sha": "db16dfdb28b63526e98cf101ca9cb99c46d98718",
      "url": "https://api.github.com/repositories/21852718/contents/VIRGO/VIRGO_commit_log.txt?ref=e51e2b651222859e5f41dd49a986817f1f506e06",
      "git_url": "https://api.github.com/repositories/21852718/git/blobs/db16dfdb28b63526e98cf101ca9cb99c46d98718",
      "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/blob/e51e2b651222859e5f41dd49a986817f1f506e06/VIRGO/VIRGO_commit_log.txt",
      "repository": {
        "id": 21852718,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMTg1MjcxOA==",
        "name": "Krishna_iResearch_DoxygenDocs",
        "full_name": "shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "description": "Krishna iResearch Open Source Products - Doxygen Documentation",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/deployments"
      },
      "score": 1.0
    },
    {
      "name": "Spline_8py_source.html",
      "path": "AsFer/html/Spline_8py_source.html",
      "sha": "5fbda1dd22036926bbc7a0f33ee157ca8313e0c3",
      "url": "https://api.github.com/repositories/21852718/contents/AsFer/html/Spline_8py_source.html?ref=e51e2b651222859e5f41dd49a986817f1f506e06",
      "git_url": "https://api.github.com/repositories/21852718/git/blobs/5fbda1dd22036926bbc7a0f33ee157ca8313e0c3",
      "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/blob/e51e2b651222859e5f41dd49a986817f1f506e06/AsFer/html/Spline_8py_source.html",
      "repository": {
        "id": 21852718,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMTg1MjcxOA==",
        "name": "Krishna_iResearch_DoxygenDocs",
        "full_name": "shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "description": "Krishna iResearch Open Source Products - Doxygen Documentation",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/deployments"
      },
      "score": 1.0
    },
    {
      "name": "virgo__queue_8h_source.html",
      "path": "VIRGO64/html/virgo__queue_8h_source.html",
      "sha": "cf7440f07d19910a131f0ae9dd836920f8a2b692",
      "url": "https://api.github.com/repositories/21852718/contents/VIRGO64/html/virgo__queue_8h_source.html?ref=e51e2b651222859e5f41dd49a986817f1f506e06",
      "git_url": "https://api.github.com/repositories/21852718/git/blobs/cf7440f07d19910a131f0ae9dd836920f8a2b692",
      "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/blob/e51e2b651222859e5f41dd49a986817f1f506e06/VIRGO64/html/virgo__queue_8h_source.html",
      "repository": {
        "id": 21852718,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMTg1MjcxOA==",
        "name": "Krishna_iResearch_DoxygenDocs",
        "full_name": "shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "description": "Krishna iResearch Open Source Products - Doxygen Documentation",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/deployments"
      },
      "score": 1.0
    },
    {
      "name": "virgo_8h_source.html",
      "path": "VIRGO64/html/virgo_8h_source.html",
      "sha": "9e69ff73481ee4df755b3db7b44aac45699e50cf",
      "url": "https://api.github.com/repositories/21852718/contents/VIRGO64/html/virgo_8h_source.html?ref=e51e2b651222859e5f41dd49a986817f1f506e06",
      "git_url": "https://api.github.com/repositories/21852718/git/blobs/9e69ff73481ee4df755b3db7b44aac45699e50cf",
      "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/blob/e51e2b651222859e5f41dd49a986817f1f506e06/VIRGO64/html/virgo_8h_source.html",
      "repository": {
        "id": 21852718,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMTg1MjcxOA==",
        "name": "Krishna_iResearch_DoxygenDocs",
        "full_name": "shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "description": "Krishna iResearch Open Source Products - Doxygen Documentation",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/deployments"
      },
      "score": 1.0
    },
    {
      "name": "GitHubSSL.sh",
      "path": "GitHubSSL.sh",
      "sha": "e0964a5549769815d46333a8de74fcf36b41da86",
      "url": "https://api.github.com/repositories/21852718/contents/GitHubSSL.sh?ref=e51e2b651222859e5f41dd49a986817f1f506e06",
      "git_url": "https://api.github.com/repositories/21852718/git/blobs/e0964a5549769815d46333a8de74fcf36b41da86",
      "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/blob/e51e2b651222859e5f41dd49a986817f1f506e06/GitHubSSL.sh",
      "repository": {
        "id": 21852718,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMTg1MjcxOA==",
        "name": "Krishna_iResearch_DoxygenDocs",
        "full_name": "shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "description": "Krishna iResearch Open Source Products - Doxygen Documentation",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/deployments"
      },
      "score": 1.0
    },
    {
      "name": "asferkNNclustering_8h_source.html",
      "path": "AsFer/html/asferkNNclustering_8h_source.html",
      "sha": "c988183530cc8cfb23b94e325fe32ece9639e269",
      "url": "https://api.github.com/repositories/21852718/contents/AsFer/html/asferkNNclustering_8h_source.html?ref=e51e2b651222859e5f41dd49a986817f1f506e06",
      "git_url": "https://api.github.com/repositories/21852718/git/blobs/c988183530cc8cfb23b94e325fe32ece9639e269",
      "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/blob/e51e2b651222859e5f41dd49a986817f1f506e06/AsFer/html/asferkNNclustering_8h_source.html",
      "repository": {
        "id": 21852718,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMTg1MjcxOA==",
        "name": "Krishna_iResearch_DoxygenDocs",
        "full_name": "shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "description": "Krishna iResearch Open Source Products - Doxygen Documentation",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/deployments"
      },
      "score": 1.0
    },
    {
      "name": "VirgoDesign.txt",
      "path": "text/NeuronRain_Documents/VirgoDesign.txt",
      "sha": "5882da3d9c42221890aabe422e08572c6a10a7eb",
      "url": "https://api.github.com/repositories/21852718/contents/text/NeuronRain_Documents/VirgoDesign.txt?ref=e51e2b651222859e5f41dd49a986817f1f506e06",
      "git_url": "https://api.github.com/repositories/21852718/git/blobs/5882da3d9c42221890aabe422e08572c6a10a7eb",
      "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/blob/e51e2b651222859e5f41dd49a986817f1f506e06/text/NeuronRain_Documents/VirgoDesign.txt",
      "repository": {
        "id": 21852718,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMTg1MjcxOA==",
        "name": "Krishna_iResearch_DoxygenDocs",
        "full_name": "shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "description": "Krishna iResearch Open Source Products - Doxygen Documentation",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/deployments"
      },
      "score": 1.0
    }
  ]
}
{
  "total_count": 3,
  "incomplete_results": false,
  "items": [
    {
      "id": 104620294,
      "node_id": "MDEwOlJlcG9zaXRvcnkxMDQ2MjAyOTQ=",
      "name": "kingcobra64-github-code",
      "full_name": "shrinivaasanka/kingcobra64-github-code",
      "private": false,
      "owner": {
        "login": "shrinivaasanka",
        "id": 8086981,
        "node_id": "MDQ6VXNlcjgwODY5ODE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/shrinivaasanka",
        "html_url": "https://github.com/shrinivaasanka",
        "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
        "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
        "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
        "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
        "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
        "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
        "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/shrinivaasanka/kingcobra64-github-code",
      "description": "64-bit version of https://github.com/shrinivaasanka/kingcobra-github-code on 4.13.3 kernel",
      "fork": false,
      "url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code",
      "forks_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/forks",
      "keys_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/keys{/key_id}",
      "collaborators_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/collaborators{/collaborator}",
      "teams_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/teams",
      "hooks_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/hooks",
      "issue_events_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/issues/events{/number}",
      "events_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/events",
      "assignees_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/assignees{/user}",
      "branches_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/branches{/branch}",
      "tags_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/tags",
      "blobs_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/git/blobs{/sha}",
      "git_tags_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/git/tags{/sha}",
      "git_refs_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/git/refs{/sha}",
      "trees_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/git/trees{/sha}",
      "statuses_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/statuses/{sha}",
      "languages_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/languages",
      "stargazers_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/stargazers",
      "contributors_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/contributors",
      "subscribers_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/subscribers",
      "subscription_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/subscription",
      "commits_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/commits{/sha}",
      "git_commits_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/git/commits{/sha}",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/comments{/number}",
      "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/issues/comments{/number}",
      "contents_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/contents/{+path}",
      "compare_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/compare/{base}...{head}",
      "merges_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/merges",
      "archive_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/{archive_format}{/ref}",
      "downloads_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/downloads",
      "issues_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/issues{/number}",
      "pulls_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/pulls{/number}",
      "milestones_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/notifications{?since,all,participating}",
      "labels_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/labels{/name}",
      "releases_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/releases{/id}",
      "deployments_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/deployments",
      "created_at": "2017-09-24T05:07:23Z",
      "updated_at": "2022-02-13T17:22:45Z",
      "pushed_at": "2023-04-28T12:12:43Z",
      "git_url": "git://github.com/shrinivaasanka/kingcobra64-github-code.git",
      "ssh_url": "git@github.com:shrinivaasanka/kingcobra64-github-code.git",
      "clone_url": "https://github.com/shrinivaasanka/kingcobra64-github-code.git",
      "svn_url": "https://github.com/shrinivaasanka/kingcobra64-github-code",
      "homepage": "",
      "size": 1101,
      "stargazers_count": 0,
      "watchers_count": 0,
      "language": "Batchfile",
      "has_issues": true,
      "has_projects": true,
      "has_downloads": true,
      "has_wiki": true,
      "has_pages": false,
      "has_discussions": false,
      "forks_count": 0,
      "mirror_url": null,
      "archived": false,
      "disabled": false,
      "open_issues_count": 0,
      "license": null,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [

      ],
      "visibility": "public",
      "forks": 0,
      "open_issues": 0,
      "watchers": 0,
      "default_branch": "master",
      "permissions": {
        "admin": true,
        "maintain": true,
        "push": true,
        "triage": true,
        "pull": true
      },
      "score": 1.0
    },
    {
      "id": 104620210,
      "node_id": "MDEwOlJlcG9zaXRvcnkxMDQ2MjAyMTA=",
      "name": "usb-md64-github-code",
      "full_name": "shrinivaasanka/usb-md64-github-code",
      "private": false,
      "owner": {
        "login": "shrinivaasanka",
        "id": 8086981,
        "node_id": "MDQ6VXNlcjgwODY5ODE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/shrinivaasanka",
        "html_url": "https://github.com/shrinivaasanka",
        "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
        "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
        "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
        "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
        "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
        "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
        "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/shrinivaasanka/usb-md64-github-code",
      "description": "64-bit version of https://github.com/shrinivaasanka/usb-md-github-code on 4.13.3 kernel",
      "fork": false,
      "url": "https://api.github.com/repos/shrinivaasanka/usb-md64-github-code",
      "forks_url": "https://api.github.com/repos/shrinivaasanka/usb-md64-github-code/forks",
      "keys_url": "https://api.github.com/repos/shrinivaasanka/usb-md64-github-code/keys{/key_id}",
      "collaborators_url": "https://api.github.com/repos/shrinivaasanka/usb-md64-github-code/collaborators{/collaborator}",
      "teams_url": "https://api.github.com/repos/shrinivaasanka/usb-md64-github-code/teams",
      "hooks_url": "https://api.github.com/repos/shrinivaasanka/usb-md64-github-code/hooks",
      "issue_events_url": "https://api.github.com/repos/shrinivaasanka/usb-md64-github-code/issues/events{/number}",
      "events_url": "https://api.github.com/repos/shrinivaasanka/usb-md64-github-code/events",
      "assignees_url": "https://api.github.com/repos/shrinivaasanka/usb-md64-github-code/assignees{/user}",
      "branches_url": "https://api.github.com/repos/shrinivaasanka/usb-md64-github-code/branches{/branch}",
      "tags_url": "https://api.github.com/repos/shrinivaasanka/usb-md64-github-code/tags",
      "blobs_url": "https://api.github.com/repos/shrinivaasanka/usb-md64-github-code/git/blobs{/sha}",
      "git_tags_url": "https://api.github.com/repos/shrinivaasanka/usb-md64-github-code/git/tags{/sha}",
      "git_refs_url": "https://api.github.com/repos/shrinivaasanka/usb-md64-github-code/git/refs{/sha}",
      "trees_url": "https://api.github.com/repos/shrinivaasanka/usb-md64-github-code/git/trees{/sha}",
      "statuses_url": "https://api.github.com/repos/shrinivaasanka/usb-md64-github-code/statuses/{sha}",
      "languages_url": "https://api.github.com/repos/shrinivaasanka/usb-md64-github-code/languages",
      "stargazers_url": "https://api.github.com/repos/shrinivaasanka/usb-md64-github-code/stargazers",
      "contributors_url": "https://api.github.com/repos/shrinivaasanka/usb-md64-github-code/contributors",
      "subscribers_url": "https://api.github.com/repos/shrinivaasanka/usb-md64-github-code/subscribers",
      "subscription_url": "https://api.github.com/repos/shrinivaasanka/usb-md64-github-code/subscription",
      "commits_url": "https://api.github.com/repos/shrinivaasanka/usb-md64-github-code/commits{/sha}",
      "git_commits_url": "https://api.github.com/repos/shrinivaasanka/usb-md64-github-code/git/commits{/sha}",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/usb-md64-github-code/comments{/number}",
      "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/usb-md64-github-code/issues/comments{/number}",
      "contents_url": "https://api.github.com/repos/shrinivaasanka/usb-md64-github-code/contents/{+path}",
      "compare_url": "https://api.github.com/repos/shrinivaasanka/usb-md64-github-code/compare/{base}...{head}",
      "merges_url": "https://api.github.com/repos/shrinivaasanka/usb-md64-github-code/merges",
      "archive_url": "https://api.github.com/repos/shrinivaasanka/usb-md64-github-code/{archive_format}{/ref}",
      "downloads_url": "https://api.github.com/repos/shrinivaasanka/usb-md64-github-code/downloads",
      "issues_url": "https://api.github.com/repos/shrinivaasanka/usb-md64-github-code/issues{/number}",
      "pulls_url": "https://api.github.com/repos/shrinivaasanka/usb-md64-github-code/pulls{/number}",
      "milestones_url": "https://api.github.com/repos/shrinivaasanka/usb-md64-github-code/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/shrinivaasanka/usb-md64-github-code/notifications{?since,all,participating}",
      "labels_url": "https://api.github.com/repos/shrinivaasanka/usb-md64-github-code/labels{/name}",
      "releases_url": "https://api.github.com/repos/shrinivaasanka/usb-md64-github-code/releases{/id}",
      "deployments_url": "https://api.github.com/repos/shrinivaasanka/usb-md64-github-code/deployments",
      "created_at": "2017-09-24T05:05:24Z",
      "updated_at": "2022-09-01T07:48:00Z",
      "pushed_at": "2023-04-28T11:35:37Z",
      "git_url": "git://github.com/shrinivaasanka/usb-md64-github-code.git",
      "ssh_url": "git@github.com:shrinivaasanka/usb-md64-github-code.git",
      "clone_url": "https://github.com/shrinivaasanka/usb-md64-github-code.git",
      "svn_url": "https://github.com/shrinivaasanka/usb-md64-github-code",
      "homepage": "",
      "size": 9067,
      "stargazers_count": 0,
      "watchers_count": 0,
      "language": "Roff",
      "has_issues": true,
      "has_projects": true,
      "has_downloads": true,
      "has_wiki": true,
      "has_pages": false,
      "has_discussions": false,
      "forks_count": 0,
      "mirror_url": null,
      "archived": false,
      "disabled": false,
      "open_issues_count": 0,
      "license": null,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [

      ],
      "visibility": "public",
      "forks": 0,
      "open_issues": 0,
      "watchers": 0,
      "default_branch": "master",
      "permissions": {
        "admin": true,
        "maintain": true,
        "push": true,
        "triage": true,
        "pull": true
      },
      "score": 1.0
    },
    {
      "id": 85674767,
      "node_id": "MDEwOlJlcG9zaXRvcnk4NTY3NDc2Nw==",
      "name": "virgo64-linux-github-code",
      "full_name": "shrinivaasanka/virgo64-linux-github-code",
      "private": false,
      "owner": {
        "login": "shrinivaasanka",
        "id": 8086981,
        "node_id": "MDQ6VXNlcjgwODY5ODE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/shrinivaasanka",
        "html_url": "https://github.com/shrinivaasanka",
        "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
        "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
        "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
        "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
        "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
        "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
        "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/shrinivaasanka/virgo64-linux-github-code",
      "description": "64 bit VIRGO linux kernel - derived from https://github.com/shrinivaasanka/virgo-linux-github-code - based on 4.13.3 mainline kernel",
      "fork": false,
      "url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code",
      "forks_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/forks",
      "keys_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/keys{/key_id}",
      "collaborators_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/collaborators{/collaborator}",
      "teams_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/teams",
      "hooks_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/hooks",
      "issue_events_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/issues/events{/number}",
      "events_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/events",
      "assignees_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/assignees{/user}",
      "branches_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/branches{/branch}",
      "tags_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/tags",
      "blobs_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/git/blobs{/sha}",
      "git_tags_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/git/tags{/sha}",
      "git_refs_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/git/refs{/sha}",
      "trees_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/git/trees{/sha}",
      "statuses_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/statuses/{sha}",
      "languages_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/languages",
      "stargazers_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/stargazers",
      "contributors_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/contributors",
      "subscribers_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/subscribers",
      "subscription_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/subscription",
      "commits_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/commits{/sha}",
      "git_commits_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/git/commits{/sha}",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/comments{/number}",
      "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/issues/comments{/number}",
      "contents_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/contents/{+path}",
      "compare_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/compare/{base}...{head}",
      "merges_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/merges",
      "archive_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/{archive_format}{/ref}",
      "downloads_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/downloads",
      "issues_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/issues{/number}",
      "pulls_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/pulls{/number}",
      "milestones_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/notifications{?since,all,participating}",
      "labels_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/labels{/name}",
      "releases_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/releases{/id}",
      "deployments_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/deployments",
      "created_at": "2017-03-21T08:04:04Z",
      "updated_at": "2022-05-17T17:22:30Z",
      "pushed_at": "2023-08-16T11:28:40Z",
      "git_url": "git://github.com/shrinivaasanka/virgo64-linux-github-code.git",
      "ssh_url": "git@github.com:shrinivaasanka/virgo64-linux-github-code.git",
      "clone_url": "https://github.com/shrinivaasanka/virgo64-linux-github-code.git",
      "svn_url": "https://github.com/shrinivaasanka/virgo64-linux-github-code",
      "homepage": "https://github.com/shrinivaasanka/virgo-linux-github-code",
      "size": 94305,
      "stargazers_count": 0,
      "watchers_count": 0,
      "language": "Roff",
      "has_issues": true,
      "has_projects": true,
      "has_downloads": true,
      "has_wiki": true,
      "has_pages": false,
      "has_discussions": false,
      "forks_count": 0,
      "mirror_url": null,
      "archived": false,
      "disabled": false,
      "open_issues_count": 0,
      "license": null,
      "allow_forking": true,
      "is_template": false,
      "web_commit_signoff_required": false,
      "topics": [

      ],
      "visibility": "public",
      "forks": 0,
      "open_issues": 0,
      "watchers": 0,
      "default_branch": "master",
      "permissions": {
        "admin": true,
        "maintain": true,
        "push": true,
        "triage": true,
        "pull": true
      },
      "score": 1.0
    }
  ]
}
{
  "total_count": 61,
  "incomplete_results": false,
  "items": [
    {
      "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/a4b14bb374350a81ed2bb504ca40bec2e40e725b",
      "sha": "a4b14bb374350a81ed2bb504ca40bec2e40e725b",
      "node_id": "MDY6Q29tbWl0MjE4NTI3MTg6YTRiMTRiYjM3NDM1MGE4MWVkMmJiNTA0Y2E0MGJlYzJlNDBlNzI1Yg==",
      "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commit/a4b14bb374350a81ed2bb504ca40bec2e40e725b",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/a4b14bb374350a81ed2bb504ca40bec2e40e725b/comments",
      "commit": {
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits/a4b14bb374350a81ed2bb504ca40bec2e40e725b",
        "author": {
          "date": "2023-04-28T14:40:47.000+05:30",
          "name": "root",
          "email": "NeuronRain Commits"
        },
        "committer": {
          "date": "2023-04-28T14:40:47.000+05:30",
          "name": "root",
          "email": "NeuronRain Commits"
        },
        "message": "Updated README.md for NeuronRain Doxygen Portal https://shrinivaasanka.github.io/Krishna_iResearch_DoxygenDocs/",
        "tree": {
          "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees/043727bf6baaa622b888130b7f5d3c75865885e2",
          "sha": "043727bf6baaa622b888130b7f5d3c75865885e2"
        },
        "comment_count": 0
      },
      "author": null,
      "committer": null,
      "parents": [
        {
          "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/7516f4d998c96b7ae075286a52afdfdbb73068f4",
          "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commit/7516f4d998c96b7ae075286a52afdfdbb73068f4",
          "sha": "7516f4d998c96b7ae075286a52afdfdbb73068f4"
        }
      ],
      "repository": {
        "id": 21852718,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMTg1MjcxOA==",
        "name": "Krishna_iResearch_DoxygenDocs",
        "full_name": "shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "description": "Krishna iResearch Open Source Products - Doxygen Documentation",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/deployments"
      },
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/commits/e473680f429c36b2ef492060423816cf3d42c3c5",
      "sha": "e473680f429c36b2ef492060423816cf3d42c3c5",
      "node_id": "MDY6Q29tbWl0MTA0NjIwMjk0OmU0NzM2ODBmNDI5YzM2YjJlZjQ5MjA2MDQyMzgxNmNmM2Q0MmMzYzU=",
      "html_url": "https://github.com/shrinivaasanka/kingcobra64-github-code/commit/e473680f429c36b2ef492060423816cf3d42c3c5",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/commits/e473680f429c36b2ef492060423816cf3d42c3c5/comments",
      "commit": {
        "url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/git/commits/e473680f429c36b2ef492060423816cf3d42c3c5",
        "author": {
          "date": "2020-03-03T14:52:26.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "committer": {
          "date": "2020-03-03T14:52:26.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "message": "Merge branch 'master' of https://github.com/shrinivaasanka/kingcobra63-github-code",
        "tree": {
          "url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/git/trees/5ca6ef4b3d66baaa05d63f72215e32ef33617a1d",
          "sha": "5ca6ef4b3d66baaa05d63f72215e32ef33617a1d"
        },
        "comment_count": 0
      },
      "author": null,
      "committer": null,
      "parents": [
        {
          "url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/commits/884a46f4e15e7e19c669bcd4d5fc407d2ba898e2",
          "html_url": "https://github.com/shrinivaasanka/kingcobra64-github-code/commit/884a46f4e15e7e19c669bcd4d5fc407d2ba898e2",
          "sha": "884a46f4e15e7e19c669bcd4d5fc407d2ba898e2"
        },
        {
          "url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/commits/ba1433d0deb429ae1259a0988444e51af5f17b3f",
          "html_url": "https://github.com/shrinivaasanka/kingcobra64-github-code/commit/ba1433d0deb429ae1259a0988444e51af5f17b3f",
          "sha": "ba1433d0deb429ae1259a0988444e51af5f17b3f"
        }
      ],
      "repository": {
        "id": 104620294,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMDQ2MjAyOTQ=",
        "name": "kingcobra64-github-code",
        "full_name": "shrinivaasanka/kingcobra64-github-code",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/kingcobra64-github-code",
        "description": "64-bit version of https://github.com/shrinivaasanka/kingcobra-github-code on 4.13.3 kernel",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/deployments"
      },
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/commits/02ca6e180680afc7d2db1d275e6372ce98ab5fa4",
      "sha": "02ca6e180680afc7d2db1d275e6372ce98ab5fa4",
      "node_id": "MDY6Q29tbWl0ODU2NzQ3Njc6MDJjYTZlMTgwNjgwYWZjN2QyZGIxZDI3NWU2MzcyY2U5OGFiNWZhNA==",
      "html_url": "https://github.com/shrinivaasanka/virgo64-linux-github-code/commit/02ca6e180680afc7d2db1d275e6372ce98ab5fa4",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/commits/02ca6e180680afc7d2db1d275e6372ce98ab5fa4/comments",
      "commit": {
        "url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/git/commits/02ca6e180680afc7d2db1d275e6372ce98ab5fa4",
        "author": {
          "date": "2017-10-14T11:48:02.000+05:30",
          "name": "K.Srinivasan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "committer": {
          "date": "2017-10-14T11:48:02.000+05:30",
          "name": "K.Srinivasan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "message": "Merge branch 'master' of https://github.com/shrinivaasanka/virgo64-linux-github-code",
        "tree": {
          "url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/git/trees/844eac829a38bf30f30219e9c794e79fc03e28eb",
          "sha": "844eac829a38bf30f30219e9c794e79fc03e28eb"
        },
        "comment_count": 0
      },
      "author": null,
      "committer": null,
      "parents": [
        {
          "url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/commits/aa37aca3a78bd6062beeaaa0c39e37621cc930cc",
          "html_url": "https://github.com/shrinivaasanka/virgo64-linux-github-code/commit/aa37aca3a78bd6062beeaaa0c39e37621cc930cc",
          "sha": "aa37aca3a78bd6062beeaaa0c39e37621cc930cc"
        },
        {
          "url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/commits/083d2890d556d136e6936a646fc27b25bfa5b1f2",
          "html_url": "https://github.com/shrinivaasanka/virgo64-linux-github-code/commit/083d2890d556d136e6936a646fc27b25bfa5b1f2",
          "sha": "083d2890d556d136e6936a646fc27b25bfa5b1f2"
        }
      ],
      "repository": {
        "id": 85674767,
        "node_id": "MDEwOlJlcG9zaXRvcnk4NTY3NDc2Nw==",
        "name": "virgo64-linux-github-code",
        "full_name": "shrinivaasanka/virgo64-linux-github-code",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/virgo64-linux-github-code",
        "description": "64 bit VIRGO linux kernel - derived from https://github.com/shrinivaasanka/virgo-linux-github-code - based on 4.13.3 mainline kernel",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/virgo64-linux-github-code/deployments"
      },
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/shrinivaasanka/Grafit/commits/bf47b4b4e3bdb30b070f22452b59d77d3884de13",
      "sha": "bf47b4b4e3bdb30b070f22452b59d77d3884de13",
      "node_id": "MDY6Q29tbWl0MjIyNDgxMDA6YmY0N2I0YjRlM2JkYjMwYjA3MGYyMjQ1MmI1OWQ3N2QzODg0ZGUxMw==",
      "html_url": "https://github.com/shrinivaasanka/Grafit/commit/bf47b4b4e3bdb30b070f22452b59d77d3884de13",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/Grafit/commits/bf47b4b4e3bdb30b070f22452b59d77d3884de13/comments",
      "commit": {
        "url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/commits/bf47b4b4e3bdb30b070f22452b59d77d3884de13",
        "author": {
          "date": "2020-08-07T02:31:57.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "committer": {
          "date": "2020-08-07T02:31:57.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "message": "Merge branch 'master' of https://github.com/shrinivaasanka/Grafit",
        "tree": {
          "url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/trees/76c225cbbe73c64ef0d7187b054afdca9e3aa1d5",
          "sha": "76c225cbbe73c64ef0d7187b054afdca9e3aa1d5"
        },
        "comment_count": 0
      },
      "author": null,
      "committer": null,
      "parents": [
        {
          "url": "https://api.github.com/repos/shrinivaasanka/Grafit/commits/a130a287e0f68baad0d0095553f33afbd9faa45c",
          "html_url": "https://github.com/shrinivaasanka/Grafit/commit/a130a287e0f68baad0d0095553f33afbd9faa45c",
          "sha": "a130a287e0f68baad0d0095553f33afbd9faa45c"
        },
        {
          "url": "https://api.github.com/repos/shrinivaasanka/Grafit/commits/07397de74fdb15ae8208018c605c266829765551",
          "html_url": "https://github.com/shrinivaasanka/Grafit/commit/07397de74fdb15ae8208018c605c266829765551",
          "sha": "07397de74fdb15ae8208018c605c266829765551"
        }
      ],
      "repository": {
        "id": 22248100,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMjI0ODEwMA==",
        "name": "Grafit",
        "full_name": "shrinivaasanka/Grafit",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/Grafit",
        "description": "GRAFIT Open Learning",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/Grafit",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/Grafit/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/Grafit/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/Grafit/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/Grafit/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/Grafit/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/Grafit/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/Grafit/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/Grafit/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/Grafit/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/Grafit/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/Grafit/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/Grafit/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/Grafit/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/Grafit/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/Grafit/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/Grafit/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/Grafit/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/Grafit/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/Grafit/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/Grafit/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/Grafit/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/Grafit/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/Grafit/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/Grafit/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/Grafit/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/Grafit/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/Grafit/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/Grafit/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/Grafit/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/Grafit/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/Grafit/deployments"
      },
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/shrinivaasanka/Grafit/commits/d8d1ae901a53108f21c46ca4947ec976ce68ad03",
      "sha": "d8d1ae901a53108f21c46ca4947ec976ce68ad03",
      "node_id": "MDY6Q29tbWl0MjIyNDgxMDA6ZDhkMWFlOTAxYTUzMTA4ZjIxYzQ2Y2E0OTQ3ZWM5NzZjZTY4YWQwMw==",
      "html_url": "https://github.com/shrinivaasanka/Grafit/commit/d8d1ae901a53108f21c46ca4947ec976ce68ad03",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/Grafit/commits/d8d1ae901a53108f21c46ca4947ec976ce68ad03/comments",
      "commit": {
        "url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/commits/d8d1ae901a53108f21c46ca4947ec976ce68ad03",
        "author": {
          "date": "2020-03-13T16:17:00.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "committer": {
          "date": "2020-03-13T16:17:00.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "message": "Merge branch 'master' of https://github.com/shrinivaasanka/Grafit",
        "tree": {
          "url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/trees/6142534c2ab7397a93315870d8af2191cdf7a2cf",
          "sha": "6142534c2ab7397a93315870d8af2191cdf7a2cf"
        },
        "comment_count": 0
      },
      "author": null,
      "committer": null,
      "parents": [
        {
          "url": "https://api.github.com/repos/shrinivaasanka/Grafit/commits/a7589d8e8c2b40dab393cff0f7aa227af88cd770",
          "html_url": "https://github.com/shrinivaasanka/Grafit/commit/a7589d8e8c2b40dab393cff0f7aa227af88cd770",
          "sha": "a7589d8e8c2b40dab393cff0f7aa227af88cd770"
        },
        {
          "url": "https://api.github.com/repos/shrinivaasanka/Grafit/commits/b8ffb5feca11dd3cfa82cb959ee57336c275ea23",
          "html_url": "https://github.com/shrinivaasanka/Grafit/commit/b8ffb5feca11dd3cfa82cb959ee57336c275ea23",
          "sha": "b8ffb5feca11dd3cfa82cb959ee57336c275ea23"
        }
      ],
      "repository": {
        "id": 22248100,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMjI0ODEwMA==",
        "name": "Grafit",
        "full_name": "shrinivaasanka/Grafit",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/Grafit",
        "description": "GRAFIT Open Learning",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/Grafit",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/Grafit/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/Grafit/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/Grafit/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/Grafit/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/Grafit/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/Grafit/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/Grafit/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/Grafit/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/Grafit/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/Grafit/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/Grafit/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/Grafit/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/Grafit/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/Grafit/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/Grafit/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/Grafit/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/Grafit/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/Grafit/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/Grafit/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/Grafit/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/Grafit/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/Grafit/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/Grafit/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/Grafit/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/Grafit/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/Grafit/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/Grafit/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/Grafit/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/Grafit/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/Grafit/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/Grafit/deployments"
      },
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/b86141ef281089584113918637a343181284e90b",
      "sha": "b86141ef281089584113918637a343181284e90b",
      "node_id": "MDY6Q29tbWl0MjE4NTI3MTg6Yjg2MTQxZWYyODEwODk1ODQxMTM5MTg2MzdhMzQzMTgxMjg0ZTkwYg==",
      "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commit/b86141ef281089584113918637a343181284e90b",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/b86141ef281089584113918637a343181284e90b/comments",
      "commit": {
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits/b86141ef281089584113918637a343181284e90b",
        "author": {
          "date": "2020-12-01T02:16:05.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "committer": {
          "date": "2020-12-01T02:16:10.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "message": "Merge branch 'master' of https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "tree": {
          "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees/914f3a869cba0b95e0c04c5ff84afbc088dfd0d6",
          "sha": "914f3a869cba0b95e0c04c5ff84afbc088dfd0d6"
        },
        "comment_count": 0
      },
      "author": null,
      "committer": null,
      "parents": [
        {
          "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/ead69336e2431dc0852ce635c4f117414eee794a",
          "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commit/ead69336e2431dc0852ce635c4f117414eee794a",
          "sha": "ead69336e2431dc0852ce635c4f117414eee794a"
        },
        {
          "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/77840e86f98a602336fb767da76cb6073a4cdaeb",
          "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commit/77840e86f98a602336fb767da76cb6073a4cdaeb",
          "sha": "77840e86f98a602336fb767da76cb6073a4cdaeb"
        }
      ],
      "repository": {
        "id": 21852718,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMTg1MjcxOA==",
        "name": "Krishna_iResearch_DoxygenDocs",
        "full_name": "shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "description": "Krishna iResearch Open Source Products - Doxygen Documentation",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/deployments"
      },
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/bcfda99ccfa86c54a40a8b8fa650b0c9df813475",
      "sha": "bcfda99ccfa86c54a40a8b8fa650b0c9df813475",
      "node_id": "MDY6Q29tbWl0MzY5NDUyNzI6YmNmZGE5OWNjZmE4NmM1NGE0MGE4YjhmYTY1MGIwYzlkZjgxMzQ3NQ==",
      "html_url": "https://github.com/shrinivaasanka/asfer-github-code/commit/bcfda99ccfa86c54a40a8b8fa650b0c9df813475",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/bcfda99ccfa86c54a40a8b8fa650b0c9df813475/comments",
      "commit": {
        "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/commits/bcfda99ccfa86c54a40a8b8fa650b0c9df813475",
        "author": {
          "date": "2023-08-14T14:31:09.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "committer": {
          "date": "2023-08-14T14:31:09.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "message": "--------------------------------------------------------------------------------------------------------------------------------------------\n1444. (THEORY and FEATURE) Software Analytics and Kernel Analytics - Python script to parse asfer_syscall_trace.log for Filesystem prefetch VIRGO kernel analytics config - related to 1191,619,770,906,911,771,1192,1443 and all sections on Program Analysis, AsFer-USBmd-VIRGO-KingCobra FTrace kernel callgraph analysis - Valgrind-Callgrind-KCacheGrind-Flamegraph userspace callgraph analysis, SATURN control flow analysis of VIRGO linux kernel, Software Analytics, Pandemic model of Botnet-Defense adversarial Game theoretic security, Cybercrime analytics, Anti-Malware,Anti-Ransomware,Anti-Theft and Anti-Plagiarism tools, Filesystem Prefetch, KML, LAKE - 14 August 2023\n--------------------------------------------------------------------------------------------------------------------------------------------\n1444.1 New Python script asfer_syscall_trace.py has been added to repository for parsing strace log for read() systemcalls captured from a process in asfer_syscall_trace.log (process_id 2206 - pulseaudio - in this example), get a set of frequently read filedescriptors and append a keyvalue pair \"frequently_read_filedescriptors=<set of filedescriptors>\" to /etc/virgo_kernel_analytics.conf read and published within VIRGO linux kernel by virgo_kernel_analytics.ko driver module.\n1444.2 Parse logs for asfer_syscall_trace.py can be found in testlogs/asfer_syscall_trace.py.log.14August2023\n1444.3 Sample /etc/virgo_kernel_analytics.conf config file (list of comma separated key-value pairs) for virgo_kernel_analytics.ko driver written earlier has also been added to repository.\n1444.4 Suspicious syscall sequences could as well point to malware infection (Section 1192.10) apart from filesystem prefetch.\n1444.5 Present implementation of asfer_syscall_trace.sh and asfer_syscall_trace.py is limited to read() system calls and could be extended to any other system calls including write(), Network Socket I/O and VIRGO system call internal loadbalancers (Example: function char* get_host_from_cloud_Loadtrack_mempool() - https://github.com/shrinivaasanka/virgo64-linux-github-code/blob/master/linux-kernel-extensions/virgo_malloc/virgo_malloc.c - which is supposed to return least loaded host based on load stats might benefit by reading /etc/virgo_kernel_analytics.conf key-value pairs for load stats set from /proc/loadavg , top or uptime commands data - but not implemented at present). Script https://github.com/shrinivaasanka/virgo64-linux-github-code/blob/master/virgo-python-src/VirgoPRGLoadBalancer_probab_calc.py computes expected load per host for pseudorandom loadbalancer (randomly route requests to any node).",
        "tree": {
          "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/trees/51652f91c71934cadab60e0b2c6d10ed41b307dd",
          "sha": "51652f91c71934cadab60e0b2c6d10ed41b307dd"
        },
        "comment_count": 0
      },
      "author": null,
      "committer": null,
      "parents": [
        {
          "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/6b7fff038ca9614a5b7e0b650c7f58afcbe982c0",
          "html_url": "https://github.com/shrinivaasanka/asfer-github-code/commit/6b7fff038ca9614a5b7e0b650c7f58afcbe982c0",
          "sha": "6b7fff038ca9614a5b7e0b650c7f58afcbe982c0"
        }
      ],
      "repository": {
        "id": 36945272,
        "node_id": "MDEwOlJlcG9zaXRvcnkzNjk0NTI3Mg==",
        "name": "asfer-github-code",
        "full_name": "shrinivaasanka/asfer-github-code",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/asfer-github-code",
        "description": "Derived from http://sourceforge.net/p/asfer/",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/deployments"
      },
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/shrinivaasanka/virgo-linux-github-code/commits/9a4e6f1b2d28c926377e4a099a9d52d2bbd84043",
      "sha": "9a4e6f1b2d28c926377e4a099a9d52d2bbd84043",
      "node_id": "MDY6Q29tbWl0MzY5NDYzNDc6OWE0ZTZmMWIyZDI4YzkyNjM3N2U0YTA5OWE5ZDUyZDJiYmQ4NDA0Mw==",
      "html_url": "https://github.com/shrinivaasanka/virgo-linux-github-code/commit/9a4e6f1b2d28c926377e4a099a9d52d2bbd84043",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/virgo-linux-github-code/commits/9a4e6f1b2d28c926377e4a099a9d52d2bbd84043/comments",
      "commit": {
        "url": "https://api.github.com/repos/shrinivaasanka/virgo-linux-github-code/git/commits/9a4e6f1b2d28c926377e4a099a9d52d2bbd84043",
        "author": {
          "date": "2014-12-19T09:48:32.000Z",
          "name": "ka_shrinivaasan",
          "email": "ka_shrinivaasan@158c0cd9-b3a7-4c9b-a7e4-89ab9697128b"
        },
        "committer": {
          "date": "2014-12-19T09:48:32.000Z",
          "name": "ka_shrinivaasan",
          "email": "ka_shrinivaasan@158c0cd9-b3a7-4c9b-a7e4-89ab9697128b"
        },
        "message": "ONGOING:\n\n- readpos for vfs_read() changed to &vfs_read and buf size to 500 \n- There is still a crash within vertexmsg function despite above.\n\n----------------\nvfs_read() crash:\n----------------\n_eventnet_ops.virgo_eventnet_recvfrom()\nDec 19 15:04:30 shrinivaasanka-Inspiron-1545 kernel: [  116.917764] virgocloudexec_eventnet_recvfrom(): before kernel_recvmsg()\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456002] virgocloudexec_eventnet_recvfrom(): kernel_recvmsg() returns len: 27\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456030] strip_control_M(): str=eventnet_vertexmsg#1#3#5#\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456030]  before strsep\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456034] strip_control_M(): newstr=eventnet_vertexmsg#1#3#5# after carriage return newline strsep\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456036] virgocloudexec_eventnet_recvfrom(): kernel_recvmsg() returns in recv: iov.iov_base=, buffer: eventnet_vertexmsg#1#3#5#\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456036] \nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456039] parse_virgoeventnet_command: vmargs->event_message_type: eventnet_vertexmsg\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456041] parse_virgoeventnet_command: vmargs->event_id: 1\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456043] parse_virgoeventnet_command: vmargs->eventid_args[0]: 3\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456044] parse_virgoeventnet_command: vmargs->eventid_args[1]: 5\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456046] eventnet_func(): creating kernel thread and waking up, parameterIsExecutable=2\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456048] Creating Kernel Thread for eventnet_vertexmsg in virgo_cloud_eventnet_kernelspace eventnet driver module \nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456068] BUG: unable to handle kernel NULL pointer dereference at 00000006\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456073] IP: [<c1181f0e>] vfs_read+0xe/0x150\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456081] *pdpt = 000000002a3af001 *pde = 0000000000000000 \nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456085] Oops: 0000 [#1] SMP \nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456089] Modules linked in: rfcomm bnep bluetooth 6lowpan_iphc dm_crypt binfmt_misc virgo_cloudexec_eventnet(O+) virgo_cloud_eventnet_kernelspace(O) lp parport option usb_wwan usbserial arc4 b43 bcma mac80211 snd_hda_codec_idt snd_hda_codec_generic snd_hda_intel snd_hda_controller snd_hda_codec snd_hwdep snd_pcm uvcvideo snd_seq_midi snd_seq_midi_event snd_rawmidi joydev videobuf2_vmalloc videobuf2_memops videobuf2_core videodev snd_seq dell_wmi gpio_ich cfg80211 sparse_keymap snd_seq_device snd_timer snd dell_laptop dcdbas coretemp psmouse soundcore serio_raw lpc_ich mac_hid i915 ums_realtek uas i2c_algo_bit ssb sky2 drm_kms_helper ahci drm libahci wmi video\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456141] CPU: 0 PID: 3048 Comm: virgo eventnet  Tainted: G           O  3.15.5 #1\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456143] Hardware name: Dell Inc. Inspiron 1545                   /0J037P, BIOS A14 12/07/2009\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456145] task: ee470000 ti: f52e4000 task.ti: f52e4000\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456148] EIP: 0060:[<c1181f0e>] EFLAGS: 00010282 CPU: 0\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456150] EIP is at vfs_read+0xe/0x150\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456153] EAX: ffffffe2 EBX: ea08a000 ECX: 000001f4 EDX: ea08a000\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456155] ESI: ea3bd9a0 EDI: ea3bd9a0 EBP: f52e5a84 ESP: f52e5a68\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456157]  DS: 007b ES: 007b FS: 00d8 GS: 00e0 SS: 0068\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456159] CR0: 8005003b CR2: 00000006 CR3: 2a606000 CR4: 000407f0\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456161] Stack:\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456163]  000001f4 f8ae2049 000000d0 ea08a000 ea08a000 ea3bd9a0 ea3bd9a0 f52e5acc\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456169]  f8ae2076 f52e5ab8 c1b13dc2 00000000 f5c01e00 f8b7e906 ea3bdf60 0000001f\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456175]  000000d0 ea3bdb80 ea08be00 0000001f 00000000 00000000 ea3bda80 ea3bd9a0\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456182] Call Trace:\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456188]  [<f8ae2049>] ? virgo_cloud_eventnet_vertexmsg_kernelspace+0x49/0x170 [virgo_cloud_eventnet_kernelspace]\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456193]  [<f8ae2076>] virgo_cloud_eventnet_vertexmsg_kernelspace+0x76/0x170 [virgo_cloud_eventnet_kernelspace]\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456198]  [<f8b7e906>] ? eventnet_func+0x246/0x260 [virgo_cloudexec_eventnet]\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456203]  [<f8b7e911>] eventnet_func+0x251/0x260 [virgo_cloudexec_eventnet]\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456209]  [<c1088cdf>] ? sched_slice.isra.44+0x4f/0x90\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456214]  [<c12fd37a>] ? number.isra.2+0x33a/0x350\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456217]  [<c12fd37a>] ? number.isra.2+0x33a/0x350\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456220]  [<c12fca72>] ? format_decode+0x352/0x3c0\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456224]  [<c12fca72>] ? format_decode+0x352/0x3c0\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456227]  [<c12fef0b>] ? vsnprintf+0x22b/0x380\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456231]  [<c12ff10c>] ? sprintf+0x1c/0x20\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456236]  [<c10a7ce1>] ? print_time.part.9+0x71/0xb0\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456239]  [<c10a7d82>] ? print_prefix+0x62/0xb0\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456243]  [<c10a7e9d>] ? msg_print_text+0xcd/0x190\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456246]  [<c10a7e9d>] ? msg_print_text+0xcd/0x190\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456249]  [<c109cdda>] ? up+0x2a/0x40\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456253]  [<c10a9607>] ? console_unlock+0x287/0x460\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456258]  [<c166f3e5>] ? printk+0x50/0x52\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456263]  [<f8b7ea54>] virgocloudexec_eventnet_recvfrom+0x134/0x13b [virgo_cloudexec_eventnet]\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456270]  [<f8b7e000>] ? 0xf8b7dfff\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456274]  [<f8b7e023>] virgo_eventnet_client_thread+0x23/0x50 [virgo_cloudexec_eventnet]\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456279]  [<c10768b1>] kthread+0xa1/0xc0\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456283]  [<c1681641>] ret_from_kernel_thread+0x21/0x30\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456287]  [<c1076810>] ? kthread_create_on_node+0x110/0x110\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456289] Code: 84 0f 8c 4d ff ff ff 39 45 08 8d 76 00 73 eb e9 40 ff ff ff 89 f6 8d bc 27 00 00 00 00 55 89 e5 57 56 53 83 ec 10 66 66 66 66 90 <f6> 40 24 01 89 c3 89 d7 0f 84 2c 01 00 00 8b 40 14 8b 50 08 85\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456330] EIP: [<c1181f0e>] vfs_read+0xe/0x150 SS:ESP 0068:f52e5a68\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456335] CR2: 0000000000000006\nDec 19 15:04:45 shrinivaasanka-Inspiron-1545 kernel: [  132.456338] ---[ end trace ee1b9a670812119b ]---\nDec 19 15:05:36 shrinivaasanka-Inspiron-1545 kernel: [  183.401402] EXT4-fs (sda5): mounting ext3 file system using the ext4 subsystem\nDec 19 15:05:36 shrinivaasanka-Inspiron-1545 kernel: [  183.447954] EXT4-fs (sda5): warning: mounting fs with errors, running e2fsck is recommended\nDec 19 15:05:36 shrinivaasanka-Inspiron-1545 kernel: [  183.448288] EXT4-fs (sda5): mounted filesystem with ordered data mode. Opts: (null)\nDec 19 15:07:55 shrinivaasanka-Inspiron-1545 kernel: [  322.732132] perf interrupt took too long (2510 > 2500), lowering kernel.perf_event_max_sample_rate to 50000\nDec 19 15:09:27 shrinivaasanka-Inspiron-1545 kernel: [  414.034317] option1 ttyUSB0: option_instat_callback: error -2\nDec 19 15:09:39 shrinivaasanka-Inspiron-1545 kernel: [  426.745780] PPP BSD Compression module registered\nDec 19 15:09:39 shrinivaasanka-Inspiron-1545 kernel: [  426.762186] PPP Deflate Compression module registered\nDec 19 15:09:55 shrinivaasanka-Inspiron-1545 kernel: [  442.626736] option1 ttyUSB0: option_instat_callback: error -2\nDec 19 15:09:57 shrinivaasanka-Inspiron-1545 kernel: [  444.393622] option1 ttyUSB0: option_instat_callback: error -2\nDec 19 15:10:37 shrinivaasanka-Inspiron-1545 kernel: [  484.320224] EXT4-fs (sda5): error count: 107\nDec 19 15:10:37 shrinivaasanka-Inspiron-1545 kernel: [  484.320241] EXT4-fs (sda5): initial error at 1408198686: ext4_mb_generate_buddy:756\nDec 19 15:10:37 shrinivaasanka-Inspiron-1545 kernel: [  484.320246] EXT4-fs (sda5): last error at 1408809512: ext4_mb_generate_buddy:756",
        "tree": {
          "url": "https://api.github.com/repos/shrinivaasanka/virgo-linux-github-code/git/trees/c75600408a30acacd4ba37240b04afdbf50a926c",
          "sha": "c75600408a30acacd4ba37240b04afdbf50a926c"
        },
        "comment_count": 0
      },
      "author": null,
      "committer": null,
      "parents": [
        {
          "url": "https://api.github.com/repos/shrinivaasanka/virgo-linux-github-code/commits/7cd12893a7391b75bee20ffc56474d4c5f5fa598",
          "html_url": "https://github.com/shrinivaasanka/virgo-linux-github-code/commit/7cd12893a7391b75bee20ffc56474d4c5f5fa598",
          "sha": "7cd12893a7391b75bee20ffc56474d4c5f5fa598"
        }
      ],
      "repository": {
        "id": 36946347,
        "node_id": "MDEwOlJlcG9zaXRvcnkzNjk0NjM0Nw==",
        "name": "virgo-linux-github-code",
        "full_name": "shrinivaasanka/virgo-linux-github-code",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/virgo-linux-github-code",
        "description": "32 bit VIRGO linux kernel - Derived from http://sourceforge.net/p/virgo-linux/ on 4.1.5 mainline kernel",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/virgo-linux-github-code",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/virgo-linux-github-code/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/virgo-linux-github-code/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/virgo-linux-github-code/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/virgo-linux-github-code/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/virgo-linux-github-code/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/virgo-linux-github-code/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/virgo-linux-github-code/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/virgo-linux-github-code/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/virgo-linux-github-code/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/virgo-linux-github-code/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/virgo-linux-github-code/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/virgo-linux-github-code/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/virgo-linux-github-code/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/virgo-linux-github-code/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/virgo-linux-github-code/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/virgo-linux-github-code/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/virgo-linux-github-code/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/virgo-linux-github-code/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/virgo-linux-github-code/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/virgo-linux-github-code/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/virgo-linux-github-code/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/virgo-linux-github-code/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/virgo-linux-github-code/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/virgo-linux-github-code/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/virgo-linux-github-code/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/virgo-linux-github-code/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/virgo-linux-github-code/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/virgo-linux-github-code/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/virgo-linux-github-code/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/virgo-linux-github-code/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/virgo-linux-github-code/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/virgo-linux-github-code/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/virgo-linux-github-code/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/virgo-linux-github-code/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/virgo-linux-github-code/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/virgo-linux-github-code/deployments"
      },
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/234880280e6d5282dba045326cee1133764732b2",
      "sha": "234880280e6d5282dba045326cee1133764732b2",
      "node_id": "MDY6Q29tbWl0MjE4NTI3MTg6MjM0ODgwMjgwZTZkNTI4MmRiYTA0NTMyNmNlZTExMzM3NjQ3MzJiMg==",
      "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commit/234880280e6d5282dba045326cee1133764732b2",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/234880280e6d5282dba045326cee1133764732b2/comments",
      "commit": {
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits/234880280e6d5282dba045326cee1133764732b2",
        "author": {
          "date": "2020-07-22T14:10:01.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "committer": {
          "date": "2020-07-22T14:10:01.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "message": "Merge branch 'master' of https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "tree": {
          "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees/d34e8a4ed14864919f72ff8ee157fb62b26d62c5",
          "sha": "d34e8a4ed14864919f72ff8ee157fb62b26d62c5"
        },
        "comment_count": 0
      },
      "author": null,
      "committer": null,
      "parents": [
        {
          "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/e1caab4ed02eac9b977c13e9b9cc3be61471a2eb",
          "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commit/e1caab4ed02eac9b977c13e9b9cc3be61471a2eb",
          "sha": "e1caab4ed02eac9b977c13e9b9cc3be61471a2eb"
        },
        {
          "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/ae6c6d408e410c6dbd9e30ff6d0db5df4d9c63c3",
          "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commit/ae6c6d408e410c6dbd9e30ff6d0db5df4d9c63c3",
          "sha": "ae6c6d408e410c6dbd9e30ff6d0db5df4d9c63c3"
        }
      ],
      "repository": {
        "id": 21852718,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMTg1MjcxOA==",
        "name": "Krishna_iResearch_DoxygenDocs",
        "full_name": "shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "description": "Krishna iResearch Open Source Products - Doxygen Documentation",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/deployments"
      },
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/shrinivaasanka/Grafit/commits/29905fbad128df9395fd2753a1bec1902c0cf2c5",
      "sha": "29905fbad128df9395fd2753a1bec1902c0cf2c5",
      "node_id": "MDY6Q29tbWl0MjIyNDgxMDA6Mjk5MDVmYmFkMTI4ZGY5Mzk1ZmQyNzUzYTFiZWMxOTAyYzBjZjJjNQ==",
      "html_url": "https://github.com/shrinivaasanka/Grafit/commit/29905fbad128df9395fd2753a1bec1902c0cf2c5",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/Grafit/commits/29905fbad128df9395fd2753a1bec1902c0cf2c5/comments",
      "commit": {
        "url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/commits/29905fbad128df9395fd2753a1bec1902c0cf2c5",
        "author": {
          "date": "2017-06-02T16:33:07.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "committer": {
          "date": "2017-06-02T16:33:07.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "message": "Merge branch 'master' of https://github.com/shrinivaasanka/ZodiacDatasoft",
        "tree": {
          "url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/trees/0aee3e37d99f9fc875939ab5f12bceb211372cbf",
          "sha": "0aee3e37d99f9fc875939ab5f12bceb211372cbf"
        },
        "comment_count": 0
      },
      "author": null,
      "committer": null,
      "parents": [
        {
          "url": "https://api.github.com/repos/shrinivaasanka/Grafit/commits/8251bb5dd65c5882478030a3c3ff2f52bdf34146",
          "html_url": "https://github.com/shrinivaasanka/Grafit/commit/8251bb5dd65c5882478030a3c3ff2f52bdf34146",
          "sha": "8251bb5dd65c5882478030a3c3ff2f52bdf34146"
        },
        {
          "url": "https://api.github.com/repos/shrinivaasanka/Grafit/commits/ae823cdd71daab3e6f5a1864b0e743d1e73683ca",
          "html_url": "https://github.com/shrinivaasanka/Grafit/commit/ae823cdd71daab3e6f5a1864b0e743d1e73683ca",
          "sha": "ae823cdd71daab3e6f5a1864b0e743d1e73683ca"
        }
      ],
      "repository": {
        "id": 22248100,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMjI0ODEwMA==",
        "name": "Grafit",
        "full_name": "shrinivaasanka/Grafit",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/Grafit",
        "description": "GRAFIT Open Learning",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/Grafit",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/Grafit/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/Grafit/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/Grafit/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/Grafit/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/Grafit/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/Grafit/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/Grafit/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/Grafit/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/Grafit/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/Grafit/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/Grafit/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/Grafit/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/Grafit/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/Grafit/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/Grafit/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/Grafit/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/Grafit/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/Grafit/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/Grafit/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/Grafit/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/Grafit/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/Grafit/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/Grafit/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/Grafit/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/Grafit/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/Grafit/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/Grafit/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/Grafit/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/Grafit/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/Grafit/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/Grafit/deployments"
      },
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/shrinivaasanka/Grafit/commits/ad44414d88c2333b7e7aa1c237e1cd22db92d044",
      "sha": "ad44414d88c2333b7e7aa1c237e1cd22db92d044",
      "node_id": "MDY6Q29tbWl0MjIyNDgxMDA6YWQ0NDQxNGQ4OGMyMzMzYjdlN2FhMWMyMzdlMWNkMjJkYjkyZDA0NA==",
      "html_url": "https://github.com/shrinivaasanka/Grafit/commit/ad44414d88c2333b7e7aa1c237e1cd22db92d044",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/Grafit/commits/ad44414d88c2333b7e7aa1c237e1cd22db92d044/comments",
      "commit": {
        "url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/commits/ad44414d88c2333b7e7aa1c237e1cd22db92d044",
        "author": {
          "date": "2017-02-02T12:39:04.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "committer": {
          "date": "2017-02-02T12:39:04.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "message": "Merge branch 'master' of https://github.com/shrinivaasanka/ZodiacDatasoft",
        "tree": {
          "url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/trees/2c6cd4ed98161af79415ad3aa4d0a302c51aa3b6",
          "sha": "2c6cd4ed98161af79415ad3aa4d0a302c51aa3b6"
        },
        "comment_count": 0
      },
      "author": null,
      "committer": null,
      "parents": [
        {
          "url": "https://api.github.com/repos/shrinivaasanka/Grafit/commits/faa77ed58d738d145731d6996a9260c15c88ee1c",
          "html_url": "https://github.com/shrinivaasanka/Grafit/commit/faa77ed58d738d145731d6996a9260c15c88ee1c",
          "sha": "faa77ed58d738d145731d6996a9260c15c88ee1c"
        },
        {
          "url": "https://api.github.com/repos/shrinivaasanka/Grafit/commits/242be61503880bf2d77291609f92f732a395ca39",
          "html_url": "https://github.com/shrinivaasanka/Grafit/commit/242be61503880bf2d77291609f92f732a395ca39",
          "sha": "242be61503880bf2d77291609f92f732a395ca39"
        }
      ],
      "repository": {
        "id": 22248100,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMjI0ODEwMA==",
        "name": "Grafit",
        "full_name": "shrinivaasanka/Grafit",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/Grafit",
        "description": "GRAFIT Open Learning",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/Grafit",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/Grafit/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/Grafit/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/Grafit/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/Grafit/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/Grafit/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/Grafit/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/Grafit/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/Grafit/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/Grafit/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/Grafit/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/Grafit/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/Grafit/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/Grafit/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/Grafit/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/Grafit/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/Grafit/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/Grafit/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/Grafit/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/Grafit/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/Grafit/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/Grafit/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/Grafit/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/Grafit/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/Grafit/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/Grafit/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/Grafit/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/Grafit/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/Grafit/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/Grafit/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/Grafit/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/Grafit/deployments"
      },
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/d6d83088eacd12234aa540dccefe70ce0d4a9577",
      "sha": "d6d83088eacd12234aa540dccefe70ce0d4a9577",
      "node_id": "MDY6Q29tbWl0MjE4NTI3MTg6ZDZkODMwODhlYWNkMTIyMzRhYTU0MGRjY2VmZTcwY2UwZDRhOTU3Nw==",
      "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commit/d6d83088eacd12234aa540dccefe70ce0d4a9577",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/d6d83088eacd12234aa540dccefe70ce0d4a9577/comments",
      "commit": {
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits/d6d83088eacd12234aa540dccefe70ce0d4a9577",
        "author": {
          "date": "2020-03-08T16:50:15.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "committer": {
          "date": "2020-03-08T16:50:15.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "message": "Merge branch 'master' of https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "tree": {
          "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees/e1ff1b508fa9b80faadf67967c459f39d6bdc5c0",
          "sha": "e1ff1b508fa9b80faadf67967c459f39d6bdc5c0"
        },
        "comment_count": 0
      },
      "author": null,
      "committer": null,
      "parents": [
        {
          "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/a8199109d1ac79f3779169b1103aef99fe8a0b46",
          "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commit/a8199109d1ac79f3779169b1103aef99fe8a0b46",
          "sha": "a8199109d1ac79f3779169b1103aef99fe8a0b46"
        },
        {
          "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/fea7f3914e3f8a8aadaa941ae19e3271bf351c05",
          "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commit/fea7f3914e3f8a8aadaa941ae19e3271bf351c05",
          "sha": "fea7f3914e3f8a8aadaa941ae19e3271bf351c05"
        }
      ],
      "repository": {
        "id": 21852718,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMTg1MjcxOA==",
        "name": "Krishna_iResearch_DoxygenDocs",
        "full_name": "shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "description": "Krishna iResearch Open Source Products - Doxygen Documentation",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/deployments"
      },
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/6b19180329c50469dbd267522b7969e6b6cdce4b",
      "sha": "6b19180329c50469dbd267522b7969e6b6cdce4b",
      "node_id": "MDY6Q29tbWl0MzY5NDUyNzI6NmIxOTE4MDMyOWM1MDQ2OWRiZDI2NzUyMmI3OTY5ZTZiNmNkY2U0Yg==",
      "html_url": "https://github.com/shrinivaasanka/asfer-github-code/commit/6b19180329c50469dbd267522b7969e6b6cdce4b",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/6b19180329c50469dbd267522b7969e6b6cdce4b/comments",
      "commit": {
        "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/commits/6b19180329c50469dbd267522b7969e6b6cdce4b",
        "author": {
          "date": "2020-03-03T16:30:36.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "committer": {
          "date": "2020-03-03T16:30:36.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "message": "Merge branch 'master' of https://github.com/shrinivaasanka/asfer-github-code",
        "tree": {
          "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/trees/055e7f0dd946fe048c4d15273925caa9c688851d",
          "sha": "055e7f0dd946fe048c4d15273925caa9c688851d"
        },
        "comment_count": 0
      },
      "author": null,
      "committer": null,
      "parents": [
        {
          "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/e033c0a3ea88c018244135c8b3be41cd530c768d",
          "html_url": "https://github.com/shrinivaasanka/asfer-github-code/commit/e033c0a3ea88c018244135c8b3be41cd530c768d",
          "sha": "e033c0a3ea88c018244135c8b3be41cd530c768d"
        },
        {
          "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/55ca61d7927dd08506842ef134d6f791120875ed",
          "html_url": "https://github.com/shrinivaasanka/asfer-github-code/commit/55ca61d7927dd08506842ef134d6f791120875ed",
          "sha": "55ca61d7927dd08506842ef134d6f791120875ed"
        }
      ],
      "repository": {
        "id": 36945272,
        "node_id": "MDEwOlJlcG9zaXRvcnkzNjk0NTI3Mg==",
        "name": "asfer-github-code",
        "full_name": "shrinivaasanka/asfer-github-code",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/asfer-github-code",
        "description": "Derived from http://sourceforge.net/p/asfer/",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/deployments"
      },
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/09c311724ad603fbdd8625dae38c0627231a9969",
      "sha": "09c311724ad603fbdd8625dae38c0627231a9969",
      "node_id": "MDY6Q29tbWl0MjE4NTI3MTg6MDljMzExNzI0YWQ2MDNmYmRkODYyNWRhZTM4YzA2MjcyMzFhOTk2OQ==",
      "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commit/09c311724ad603fbdd8625dae38c0627231a9969",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/09c311724ad603fbdd8625dae38c0627231a9969/comments",
      "commit": {
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits/09c311724ad603fbdd8625dae38c0627231a9969",
        "author": {
          "date": "2018-12-21T17:20:41.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "committer": {
          "date": "2018-12-21T17:20:41.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "message": "Merge branch 'master' of https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "tree": {
          "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees/5172e6c59d4a07ad4be87ed77ce21e68115c03f9",
          "sha": "5172e6c59d4a07ad4be87ed77ce21e68115c03f9"
        },
        "comment_count": 0
      },
      "author": null,
      "committer": null,
      "parents": [
        {
          "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/1cb202cc2d0b7346224e08eff23f30e373454e0c",
          "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commit/1cb202cc2d0b7346224e08eff23f30e373454e0c",
          "sha": "1cb202cc2d0b7346224e08eff23f30e373454e0c"
        },
        {
          "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/ab396b251e4b60962bc130bbd97eb1968ce25405",
          "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commit/ab396b251e4b60962bc130bbd97eb1968ce25405",
          "sha": "ab396b251e4b60962bc130bbd97eb1968ce25405"
        }
      ],
      "repository": {
        "id": 21852718,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMTg1MjcxOA==",
        "name": "Krishna_iResearch_DoxygenDocs",
        "full_name": "shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "description": "Krishna iResearch Open Source Products - Doxygen Documentation",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/deployments"
      },
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/8187e366ec5020c7779fc273ca567aeca572efe7",
      "sha": "8187e366ec5020c7779fc273ca567aeca572efe7",
      "node_id": "MDY6Q29tbWl0MjE4NTI3MTg6ODE4N2UzNjZlYzUwMjBjNzc3OWZjMjczY2E1NjdhZWNhNTcyZWZlNw==",
      "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commit/8187e366ec5020c7779fc273ca567aeca572efe7",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/8187e366ec5020c7779fc273ca567aeca572efe7/comments",
      "commit": {
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits/8187e366ec5020c7779fc273ca567aeca572efe7",
        "author": {
          "date": "2018-05-20T15:54:48.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "committer": {
          "date": "2018-05-20T15:54:48.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "message": "Merge branch 'master' of https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "tree": {
          "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees/0de3eb3df0d95d7210946feccd64e9dc7441fbce",
          "sha": "0de3eb3df0d95d7210946feccd64e9dc7441fbce"
        },
        "comment_count": 0
      },
      "author": null,
      "committer": null,
      "parents": [
        {
          "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/03028634d2d9e4ebbbc551646a50aad37e5b9cfc",
          "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commit/03028634d2d9e4ebbbc551646a50aad37e5b9cfc",
          "sha": "03028634d2d9e4ebbbc551646a50aad37e5b9cfc"
        },
        {
          "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/df16d06c54743d1c80378e6f5c08555d1337ca39",
          "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commit/df16d06c54743d1c80378e6f5c08555d1337ca39",
          "sha": "df16d06c54743d1c80378e6f5c08555d1337ca39"
        }
      ],
      "repository": {
        "id": 21852718,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMTg1MjcxOA==",
        "name": "Krishna_iResearch_DoxygenDocs",
        "full_name": "shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "description": "Krishna iResearch Open Source Products - Doxygen Documentation",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/deployments"
      },
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/fb7987f67baad58221a4f641e1e51148d01ff973",
      "sha": "fb7987f67baad58221a4f641e1e51148d01ff973",
      "node_id": "MDY6Q29tbWl0MjE4NTI3MTg6ZmI3OTg3ZjY3YmFhZDU4MjIxYTRmNjQxZTFlNTExNDhkMDFmZjk3Mw==",
      "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commit/fb7987f67baad58221a4f641e1e51148d01ff973",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/fb7987f67baad58221a4f641e1e51148d01ff973/comments",
      "commit": {
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits/fb7987f67baad58221a4f641e1e51148d01ff973",
        "author": {
          "date": "2018-04-18T15:24:07.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "committer": {
          "date": "2018-04-18T15:24:07.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "message": "Merge branch 'master' of https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "tree": {
          "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees/efa3655b26efdeb0dae2b7d7783dac886e98beb0",
          "sha": "efa3655b26efdeb0dae2b7d7783dac886e98beb0"
        },
        "comment_count": 0
      },
      "author": null,
      "committer": null,
      "parents": [
        {
          "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/0820303f1eb7e375e3d5d062b0378e4ecf9a8496",
          "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commit/0820303f1eb7e375e3d5d062b0378e4ecf9a8496",
          "sha": "0820303f1eb7e375e3d5d062b0378e4ecf9a8496"
        },
        {
          "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/52b96d098a8be2257ced9a375c526229821525ac",
          "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commit/52b96d098a8be2257ced9a375c526229821525ac",
          "sha": "52b96d098a8be2257ced9a375c526229821525ac"
        }
      ],
      "repository": {
        "id": 21852718,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMTg1MjcxOA==",
        "name": "Krishna_iResearch_DoxygenDocs",
        "full_name": "shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "description": "Krishna iResearch Open Source Products - Doxygen Documentation",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/deployments"
      },
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/51474e758542d685cc947e6efa3a9d09b95f20e3",
      "sha": "51474e758542d685cc947e6efa3a9d09b95f20e3",
      "node_id": "MDY6Q29tbWl0MjE4NTI3MTg6NTE0NzRlNzU4NTQyZDY4NWNjOTQ3ZTZlZmEzYTlkMDliOTVmMjBlMw==",
      "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commit/51474e758542d685cc947e6efa3a9d09b95f20e3",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/51474e758542d685cc947e6efa3a9d09b95f20e3/comments",
      "commit": {
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits/51474e758542d685cc947e6efa3a9d09b95f20e3",
        "author": {
          "date": "2017-09-24T15:30:59.000+05:30",
          "name": "K.Srinivasan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "committer": {
          "date": "2017-09-24T15:30:59.000+05:30",
          "name": "K.Srinivasan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "message": "Merge branch 'master' of https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "tree": {
          "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees/f700355d53fd56a811329a03893606d9f7aae0fe",
          "sha": "f700355d53fd56a811329a03893606d9f7aae0fe"
        },
        "comment_count": 0
      },
      "author": null,
      "committer": null,
      "parents": [
        {
          "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/42402fd7d880eb4d100cc16cffcb91b042780175",
          "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commit/42402fd7d880eb4d100cc16cffcb91b042780175",
          "sha": "42402fd7d880eb4d100cc16cffcb91b042780175"
        },
        {
          "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/87ccbc26eea2890a49ce6d6ba345fbee1bf94831",
          "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commit/87ccbc26eea2890a49ce6d6ba345fbee1bf94831",
          "sha": "87ccbc26eea2890a49ce6d6ba345fbee1bf94831"
        }
      ],
      "repository": {
        "id": 21852718,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMTg1MjcxOA==",
        "name": "Krishna_iResearch_DoxygenDocs",
        "full_name": "shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "description": "Krishna iResearch Open Source Products - Doxygen Documentation",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/deployments"
      },
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/abe468432c0362de5279c1e64c12ce63fbb2edbf",
      "sha": "abe468432c0362de5279c1e64c12ce63fbb2edbf",
      "node_id": "MDY6Q29tbWl0MjE4NTI3MTg6YWJlNDY4NDMyYzAzNjJkZTUyNzljMWU2NGMxMmNlNjNmYmIyZWRiZg==",
      "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commit/abe468432c0362de5279c1e64c12ce63fbb2edbf",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/abe468432c0362de5279c1e64c12ce63fbb2edbf/comments",
      "commit": {
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits/abe468432c0362de5279c1e64c12ce63fbb2edbf",
        "author": {
          "date": "2017-09-12T12:54:50.000+05:30",
          "name": "K.Srinivasan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "committer": {
          "date": "2017-09-12T12:54:50.000+05:30",
          "name": "K.Srinivasan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "message": "Merge branch 'master' of https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "tree": {
          "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees/bcf3ec6141f7859be28c22785a9ec7b478a1f798",
          "sha": "bcf3ec6141f7859be28c22785a9ec7b478a1f798"
        },
        "comment_count": 0
      },
      "author": null,
      "committer": null,
      "parents": [
        {
          "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/a6343bd5b087a0c85b5fa43d3ef14b6852a0730d",
          "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commit/a6343bd5b087a0c85b5fa43d3ef14b6852a0730d",
          "sha": "a6343bd5b087a0c85b5fa43d3ef14b6852a0730d"
        },
        {
          "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/0438d07bd7cc51e86eb83551ff39ada536b3e1f0",
          "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commit/0438d07bd7cc51e86eb83551ff39ada536b3e1f0",
          "sha": "0438d07bd7cc51e86eb83551ff39ada536b3e1f0"
        }
      ],
      "repository": {
        "id": 21852718,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMTg1MjcxOA==",
        "name": "Krishna_iResearch_DoxygenDocs",
        "full_name": "shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "description": "Krishna iResearch Open Source Products - Doxygen Documentation",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/deployments"
      },
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/fd128b72b21e8eb453cb0d8467b105fbd98b607d",
      "sha": "fd128b72b21e8eb453cb0d8467b105fbd98b607d",
      "node_id": "MDY6Q29tbWl0MjE4NTI3MTg6ZmQxMjhiNzJiMjFlOGViNDUzY2IwZDg0NjdiMTA1ZmJkOThiNjA3ZA==",
      "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commit/fd128b72b21e8eb453cb0d8467b105fbd98b607d",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/fd128b72b21e8eb453cb0d8467b105fbd98b607d/comments",
      "commit": {
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits/fd128b72b21e8eb453cb0d8467b105fbd98b607d",
        "author": {
          "date": "2017-08-01T17:47:19.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "committer": {
          "date": "2017-08-01T17:47:19.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "message": "Merge branch 'master' of https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "tree": {
          "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees/a5c6906a6c98cb04810bde6def093f8e928331d0",
          "sha": "a5c6906a6c98cb04810bde6def093f8e928331d0"
        },
        "comment_count": 0
      },
      "author": null,
      "committer": null,
      "parents": [
        {
          "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/37e4a8829d078150250c61d70110847f2e17cec9",
          "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commit/37e4a8829d078150250c61d70110847f2e17cec9",
          "sha": "37e4a8829d078150250c61d70110847f2e17cec9"
        },
        {
          "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/8e74d405ac7a31081d2450e1971067d4b468a65d",
          "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commit/8e74d405ac7a31081d2450e1971067d4b468a65d",
          "sha": "8e74d405ac7a31081d2450e1971067d4b468a65d"
        }
      ],
      "repository": {
        "id": 21852718,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMTg1MjcxOA==",
        "name": "Krishna_iResearch_DoxygenDocs",
        "full_name": "shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "description": "Krishna iResearch Open Source Products - Doxygen Documentation",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/deployments"
      },
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/85223c32cc484cbb2faeda7760a91ff9a371aad0",
      "sha": "85223c32cc484cbb2faeda7760a91ff9a371aad0",
      "node_id": "MDY6Q29tbWl0MjE4NTI3MTg6ODUyMjNjMzJjYzQ4NGNiYjJmYWVkYTc3NjBhOTFmZjlhMzcxYWFkMA==",
      "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commit/85223c32cc484cbb2faeda7760a91ff9a371aad0",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/85223c32cc484cbb2faeda7760a91ff9a371aad0/comments",
      "commit": {
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits/85223c32cc484cbb2faeda7760a91ff9a371aad0",
        "author": {
          "date": "2017-06-08T17:20:47.000+05:30",
          "name": "K.Srinivasan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "committer": {
          "date": "2017-06-08T17:20:47.000+05:30",
          "name": "K.Srinivasan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "message": "Merge branch 'master' of https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "tree": {
          "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees/c5855275975508b145361dc267f4fb73ead477b9",
          "sha": "c5855275975508b145361dc267f4fb73ead477b9"
        },
        "comment_count": 0
      },
      "author": null,
      "committer": null,
      "parents": [
        {
          "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/cdefb91b1e796f4ba90904e3344b1211bf70ab3e",
          "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commit/cdefb91b1e796f4ba90904e3344b1211bf70ab3e",
          "sha": "cdefb91b1e796f4ba90904e3344b1211bf70ab3e"
        },
        {
          "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/a7cc8c3034512310e91759be7dd8b502e526ba23",
          "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commit/a7cc8c3034512310e91759be7dd8b502e526ba23",
          "sha": "a7cc8c3034512310e91759be7dd8b502e526ba23"
        }
      ],
      "repository": {
        "id": 21852718,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMTg1MjcxOA==",
        "name": "Krishna_iResearch_DoxygenDocs",
        "full_name": "shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "description": "Krishna iResearch Open Source Products - Doxygen Documentation",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/deployments"
      },
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/1924196a5f74e5d3b08dac21f411524969191b70",
      "sha": "1924196a5f74e5d3b08dac21f411524969191b70",
      "node_id": "MDY6Q29tbWl0MjE4NTI3MTg6MTkyNDE5NmE1Zjc0ZTVkM2IwOGRhYzIxZjQxMTUyNDk2OTE5MWI3MA==",
      "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commit/1924196a5f74e5d3b08dac21f411524969191b70",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/1924196a5f74e5d3b08dac21f411524969191b70/comments",
      "commit": {
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits/1924196a5f74e5d3b08dac21f411524969191b70",
        "author": {
          "date": "2017-04-07T17:58:18.000+05:30",
          "name": "K.Srinivasan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "committer": {
          "date": "2017-04-07T17:58:18.000+05:30",
          "name": "K.Srinivasan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "message": "Merge branch 'master' of https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "tree": {
          "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees/c0e8f4a45fd181722abbc94ae8c69f9f8e552d77",
          "sha": "c0e8f4a45fd181722abbc94ae8c69f9f8e552d77"
        },
        "comment_count": 0
      },
      "author": null,
      "committer": null,
      "parents": [
        {
          "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/afff6512769f49f65a717e13392124a7cd4c1519",
          "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commit/afff6512769f49f65a717e13392124a7cd4c1519",
          "sha": "afff6512769f49f65a717e13392124a7cd4c1519"
        },
        {
          "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/f1ce1e4ee07f4e7ce7063e1049a92f2f6ca43278",
          "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commit/f1ce1e4ee07f4e7ce7063e1049a92f2f6ca43278",
          "sha": "f1ce1e4ee07f4e7ce7063e1049a92f2f6ca43278"
        }
      ],
      "repository": {
        "id": 21852718,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMTg1MjcxOA==",
        "name": "Krishna_iResearch_DoxygenDocs",
        "full_name": "shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "description": "Krishna iResearch Open Source Products - Doxygen Documentation",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/deployments"
      },
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/9ccc5209b8fcd323829835070eb1562ccdab376d",
      "sha": "9ccc5209b8fcd323829835070eb1562ccdab376d",
      "node_id": "MDY6Q29tbWl0MjE4NTI3MTg6OWNjYzUyMDliOGZjZDMyMzgyOTgzNTA3MGViMTU2MmNjZGFiMzc2ZA==",
      "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commit/9ccc5209b8fcd323829835070eb1562ccdab376d",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/9ccc5209b8fcd323829835070eb1562ccdab376d/comments",
      "commit": {
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits/9ccc5209b8fcd323829835070eb1562ccdab376d",
        "author": {
          "date": "2017-01-25T21:55:37.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "committer": {
          "date": "2017-01-25T21:55:37.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "message": "Merge branch 'master' of https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "tree": {
          "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees/1004082bc27f2e23d96671ec91f82cc20e95eadf",
          "sha": "1004082bc27f2e23d96671ec91f82cc20e95eadf"
        },
        "comment_count": 0
      },
      "author": null,
      "committer": null,
      "parents": [
        {
          "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/5f4e06a339b320e2c00bcfe0cdd76c715bc61bd2",
          "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commit/5f4e06a339b320e2c00bcfe0cdd76c715bc61bd2",
          "sha": "5f4e06a339b320e2c00bcfe0cdd76c715bc61bd2"
        },
        {
          "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/875526e3f10206a24fb4533f7b7cf0e198f81671",
          "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commit/875526e3f10206a24fb4533f7b7cf0e198f81671",
          "sha": "875526e3f10206a24fb4533f7b7cf0e198f81671"
        }
      ],
      "repository": {
        "id": 21852718,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMTg1MjcxOA==",
        "name": "Krishna_iResearch_DoxygenDocs",
        "full_name": "shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "description": "Krishna iResearch Open Source Products - Doxygen Documentation",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/deployments"
      },
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/313ac56fbaaa3b4e36e83f13d7576b6f3f2a015c",
      "sha": "313ac56fbaaa3b4e36e83f13d7576b6f3f2a015c",
      "node_id": "MDY6Q29tbWl0MzY5NDUyNzI6MzEzYWM1NmZiYWFhM2I0ZTM2ZTgzZjEzZDc1NzZiNmYzZjJhMDE1Yw==",
      "html_url": "https://github.com/shrinivaasanka/asfer-github-code/commit/313ac56fbaaa3b4e36e83f13d7576b6f3f2a015c",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/313ac56fbaaa3b4e36e83f13d7576b6f3f2a015c/comments",
      "commit": {
        "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/commits/313ac56fbaaa3b4e36e83f13d7576b6f3f2a015c",
        "author": {
          "date": "2017-05-17T21:12:01.000+05:30",
          "name": "K.Srinivasan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "committer": {
          "date": "2017-05-17T21:12:01.000+05:30",
          "name": "K.Srinivasan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "message": "Merge branch 'master' of https://github.com/shrinivaasanka/asfer-github-code",
        "tree": {
          "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/trees/b0ff82d0ed80bd9ce8798db6ade7fe99e0ff977a",
          "sha": "b0ff82d0ed80bd9ce8798db6ade7fe99e0ff977a"
        },
        "comment_count": 0
      },
      "author": null,
      "committer": null,
      "parents": [
        {
          "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/5763fb0ba0b06fa3b93c469f7db143a735e53123",
          "html_url": "https://github.com/shrinivaasanka/asfer-github-code/commit/5763fb0ba0b06fa3b93c469f7db143a735e53123",
          "sha": "5763fb0ba0b06fa3b93c469f7db143a735e53123"
        },
        {
          "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/6071abcf468020811bf1bef85150f9d5f49c43c5",
          "html_url": "https://github.com/shrinivaasanka/asfer-github-code/commit/6071abcf468020811bf1bef85150f9d5f49c43c5",
          "sha": "6071abcf468020811bf1bef85150f9d5f49c43c5"
        }
      ],
      "repository": {
        "id": 36945272,
        "node_id": "MDEwOlJlcG9zaXRvcnkzNjk0NTI3Mg==",
        "name": "asfer-github-code",
        "full_name": "shrinivaasanka/asfer-github-code",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/asfer-github-code",
        "description": "Derived from http://sourceforge.net/p/asfer/",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/deployments"
      },
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/c591a4466ca5565decf163f8dc5ba7dbf968a388",
      "sha": "c591a4466ca5565decf163f8dc5ba7dbf968a388",
      "node_id": "MDY6Q29tbWl0MjE4NTI3MTg6YzU5MWE0NDY2Y2E1NTY1ZGVjZjE2M2Y4ZGM1YmE3ZGJmOTY4YTM4OA==",
      "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commit/c591a4466ca5565decf163f8dc5ba7dbf968a388",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/c591a4466ca5565decf163f8dc5ba7dbf968a388/comments",
      "commit": {
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits/c591a4466ca5565decf163f8dc5ba7dbf968a388",
        "author": {
          "date": "2018-05-31T15:13:49.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "committer": {
          "date": "2018-05-31T15:13:49.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "message": "Updated NeuronRain Documentation for mirrored Kuja27 website -\nhttps://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/blob/master/kuja27_website_mirrored/",
        "tree": {
          "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees/409b756ab7ee4480659a16f5f68d50d4553f54e1",
          "sha": "409b756ab7ee4480659a16f5f68d50d4553f54e1"
        },
        "comment_count": 0
      },
      "author": null,
      "committer": null,
      "parents": [
        {
          "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/1845d7b0dd69a8a3c99f43caa4c2581509991118",
          "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commit/1845d7b0dd69a8a3c99f43caa4c2581509991118",
          "sha": "1845d7b0dd69a8a3c99f43caa4c2581509991118"
        }
      ],
      "repository": {
        "id": 21852718,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMTg1MjcxOA==",
        "name": "Krishna_iResearch_DoxygenDocs",
        "full_name": "shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "description": "Krishna iResearch Open Source Products - Doxygen Documentation",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/deployments"
      },
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/commits/184c2cb3bd61a0c222ae898ff4c74f8591d342a3",
      "sha": "184c2cb3bd61a0c222ae898ff4c74f8591d342a3",
      "node_id": "MDY6Q29tbWl0MTA0NjIwMjk0OjE4NGMyY2IzYmQ2MWEwYzIyMmFlODk4ZmY0Yzc0Zjg1OTFkMzQyYTM=",
      "html_url": "https://github.com/shrinivaasanka/kingcobra64-github-code/commit/184c2cb3bd61a0c222ae898ff4c74f8591d342a3",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/commits/184c2cb3bd61a0c222ae898ff4c74f8591d342a3/comments",
      "commit": {
        "url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/git/commits/184c2cb3bd61a0c222ae898ff4c74f8591d342a3",
        "author": {
          "date": "2020-04-08T14:34:25.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "committer": {
          "date": "2020-04-08T14:34:25.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "message": "790.(THEORY) Demand and Supply and Value() function - Quantitative Majority Circuit - this section is an extended draft on respective topics in NeuronRain AstroInfer Design - https://github.com/shrinivaasanka/asfer-github-code/blob/master/asfer-docs/AstroInferDesign.txt",
        "tree": {
          "url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/git/trees/a345baf6dc9ef2434bf75a3dd4ecd2925364be40",
          "sha": "a345baf6dc9ef2434bf75a3dd4ecd2925364be40"
        },
        "comment_count": 0
      },
      "author": null,
      "committer": null,
      "parents": [
        {
          "url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/commits/a01ce65fe83053230e40523fa4659fd8729e10cc",
          "html_url": "https://github.com/shrinivaasanka/kingcobra64-github-code/commit/a01ce65fe83053230e40523fa4659fd8729e10cc",
          "sha": "a01ce65fe83053230e40523fa4659fd8729e10cc"
        }
      ],
      "repository": {
        "id": 104620294,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMDQ2MjAyOTQ=",
        "name": "kingcobra64-github-code",
        "full_name": "shrinivaasanka/kingcobra64-github-code",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/kingcobra64-github-code",
        "description": "64-bit version of https://github.com/shrinivaasanka/kingcobra-github-code on 4.13.3 kernel",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/kingcobra64-github-code/deployments"
      },
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/ff99b84c41f695c0efa478c2927211026b62caac",
      "sha": "ff99b84c41f695c0efa478c2927211026b62caac",
      "node_id": "MDY6Q29tbWl0MjE4NTI3MTg6ZmY5OWI4NGM0MWY2OTVjMGVmYTQ3OGMyOTI3MjExMDI2YjYyY2FhYw==",
      "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commit/ff99b84c41f695c0efa478c2927211026b62caac",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/ff99b84c41f695c0efa478c2927211026b62caac/comments",
      "commit": {
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits/ff99b84c41f695c0efa478c2927211026b62caac",
        "author": {
          "date": "2015-07-25T21:00:17.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "committer": {
          "date": "2015-07-25T21:00:17.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "message": "GitHub and SourceForge Krishna iResearch Product Profiles:\nhttps://github.com/shrinivaasanka\nhttp://sourceforge.net/u/userid-769929/profile/",
        "tree": {
          "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees/6b0194cc41768ac5315ca9ca6c938332ab8e57da",
          "sha": "6b0194cc41768ac5315ca9ca6c938332ab8e57da"
        },
        "comment_count": 0
      },
      "author": null,
      "committer": null,
      "parents": [
        {
          "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/41d11cd0ff4fc859b190fb7de98a242ec1920772",
          "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commit/41d11cd0ff4fc859b190fb7de98a242ec1920772",
          "sha": "41d11cd0ff4fc859b190fb7de98a242ec1920772"
        }
      ],
      "repository": {
        "id": 21852718,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMTg1MjcxOA==",
        "name": "Krishna_iResearch_DoxygenDocs",
        "full_name": "shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "description": "Krishna iResearch Open Source Products - Doxygen Documentation",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/deployments"
      },
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/0e13d3fad73d89fd8ea84c43cf54bb7a843752e4",
      "sha": "0e13d3fad73d89fd8ea84c43cf54bb7a843752e4",
      "node_id": "MDY6Q29tbWl0MjE4NTI3MTg6MGUxM2QzZmFkNzNkODlmZDhlYTg0YzQzY2Y1NGJiN2E4NDM3NTJlNA==",
      "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commit/0e13d3fad73d89fd8ea84c43cf54bb7a843752e4",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/0e13d3fad73d89fd8ea84c43cf54bb7a843752e4/comments",
      "commit": {
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits/0e13d3fad73d89fd8ea84c43cf54bb7a843752e4",
        "author": {
          "date": "2018-05-03T10:35:05.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "committer": {
          "date": "2018-05-03T10:35:05.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "message": "Merge branch 'master' of https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs\nUpdated NeuronRain FAQ - http://neuronrain-documentation.readthedocs.io/en/latest/\n\nConflicts:\n\tindex.rst",
        "tree": {
          "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees/5970ea2904cc9285ca4f2919e3cbb41c965c7931",
          "sha": "5970ea2904cc9285ca4f2919e3cbb41c965c7931"
        },
        "comment_count": 0
      },
      "author": null,
      "committer": null,
      "parents": [
        {
          "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/c8f0b5694d5c4e30a3c9b6871efcd2753d8ad646",
          "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commit/c8f0b5694d5c4e30a3c9b6871efcd2753d8ad646",
          "sha": "c8f0b5694d5c4e30a3c9b6871efcd2753d8ad646"
        },
        {
          "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/761dce2d67384d2d4d74b542e4dd1d2324995903",
          "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commit/761dce2d67384d2d4d74b542e4dd1d2324995903",
          "sha": "761dce2d67384d2d4d74b542e4dd1d2324995903"
        }
      ],
      "repository": {
        "id": 21852718,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMTg1MjcxOA==",
        "name": "Krishna_iResearch_DoxygenDocs",
        "full_name": "shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "description": "Krishna iResearch Open Source Products - Doxygen Documentation",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/deployments"
      },
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/b51bc40ac586aa6a11735740d341cb1dacac0430",
      "sha": "b51bc40ac586aa6a11735740d341cb1dacac0430",
      "node_id": "MDY6Q29tbWl0MjE4NTI3MTg6YjUxYmM0MGFjNTg2YWE2YTExNzM1NzQwZDM0MWNiMWRhY2FjMDQzMA==",
      "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commit/b51bc40ac586aa6a11735740d341cb1dacac0430",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/b51bc40ac586aa6a11735740d341cb1dacac0430/comments",
      "commit": {
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits/b51bc40ac586aa6a11735740d341cb1dacac0430",
        "author": {
          "date": "2018-04-24T11:33:48.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "committer": {
          "date": "2018-04-24T11:33:48.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "message": "Updated GitHub(NeuronRain Enterprise) and SourceForge(NeuronRain Research) repositories profiles:\n(*) http://sourceforge.net/users/ka_shrinivaasan - Astronomy and Research version\n(*) https://github.com/shrinivaasanka - Enterprise version",
        "tree": {
          "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees/aa8a3396c68417a2b612199b5e4a999249854848",
          "sha": "aa8a3396c68417a2b612199b5e4a999249854848"
        },
        "comment_count": 0
      },
      "author": null,
      "committer": null,
      "parents": [
        {
          "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/d1b59694bec6726aef04a53a8f6cbec20f5ba7f6",
          "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commit/d1b59694bec6726aef04a53a8f6cbec20f5ba7f6",
          "sha": "d1b59694bec6726aef04a53a8f6cbec20f5ba7f6"
        }
      ],
      "repository": {
        "id": 21852718,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMTg1MjcxOA==",
        "name": "Krishna_iResearch_DoxygenDocs",
        "full_name": "shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "description": "Krishna iResearch Open Source Products - Doxygen Documentation",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/deployments"
      },
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/00f2e23887aa8df20006f4e6738c9b9e98b0b6a9",
      "sha": "00f2e23887aa8df20006f4e6738c9b9e98b0b6a9",
      "node_id": "MDY6Q29tbWl0MzY5NDUyNzI6MDBmMmUyMzg4N2FhOGRmMjAwMDZmNGU2NzM4YzliOWU5OGIwYjZhOQ==",
      "html_url": "https://github.com/shrinivaasanka/asfer-github-code/commit/00f2e23887aa8df20006f4e6738c9b9e98b0b6a9",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/00f2e23887aa8df20006f4e6738c9b9e98b0b6a9/comments",
      "commit": {
        "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/commits/00f2e23887aa8df20006f4e6738c9b9e98b0b6a9",
        "author": {
          "date": "2023-08-28T18:36:54.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "committer": {
          "date": "2023-08-28T18:36:54.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "message": "--------------------------------------------------------------------------------------------------------------------------------------------\n1448. (THEORY and FEATURE) GIS Urban Sprawl Analytics - Implementation of OECD-GHSL-JRC Functional Urban Area Lineation Regression Model for Global Human Settlement Layer - Chennai Metropolitan Area Example - 28 Augut 2023 - related to 823,1163,1164,1174,1175,1177,1179,1194,1211,1226,1234,1290,1291,1292,1295,1296,1297,1301,1302,1304,1312,1313,1320,1323,1326,1328,1342,1343,1349,1350,1351,1362,1363,1377,1386,1387,1395,1397,1398,1412,1414,1423 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Gridded Population Estimators (SEDAC GPW4 and GHSL convex hull estimators), DBSCAN and Neural Network Urban Extent Learners, Computational Geometry, Intrinsic Merit Rankings, Verlhulste-R Ricker Population Estimation, Community detection, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry and Polygonal packing by Voronoi Tessellation, Four color theorem, Economic Merit, Computational Economics - GDP estimation from Urban sprawl demographics, electricity consumption, Poverty alleviation, Preferential Attachment, Automatic Delineation of Urban Sprawls, Cellular Automata-SLEUTH-Polya Urn-Dynamic Facegraph Urban Growth Models,Expander Graphs,Timeseries analysis,Graph Edit Distance and Earth mover distance, Face recognition,Graph Isomorphism (Exact, Approximate and Subgraph),Graph matching,Graph similarity,Image Search,Quadrilateral Mesh Deformation and Isomorphism,Maximum Common Subgraph Problem and Approximate Topological Matching\n--------------------------------------------------------------------------------------------------------------------------------------------\n1448.1 python-src/image_pattern_mining/ImageNet/GISUrbanSprawlAnalytics.py has been updated to define a new function that implements quadratic regression model (2) for functional urban area delineation (FUA) described in paper:  Metropolitan areas in the world - Delineation and population trends - [OECD-GHSL-JRC] - https://www.sciencedirect.com/science/article/pii/S0094119020300139 - \"..... 𝐹𝑈𝐴𝑖𝑗𝐶 = 𝛽0 + ∑2 𝑘=1 𝛽𝑘𝑑𝑖𝑠𝑡𝑘 𝑖𝑗𝐶 + 𝛾1𝑠𝑖𝑧𝑒𝑖𝑗𝐶 + ∑2 𝑘=1 𝜑𝑘𝑝𝑜𝑝𝑘 𝑗𝐶 + ω𝐺𝐷𝑃𝐶 + ∈𝑖𝑗𝐶 (2).....\" - referenced in Section 1423.8\n1448.2 Function  functional_urban_area_delineation_GHSL_regression(b0,b1,b2,distij,g1,sizeij,p1,p2,populationj,w,gdp,epsilonij) interprets the parameters of the above regression as below:\n    FUAij = b0 + b1*distij + b2*distij*distij + g1*sizeij + p1*populationj + p2*populationj*populationj + w*gdp + epsilonij\n    print(\"b0 (bias):\",b0)\n    print(\"b1 (distance weight1):\",b1)\n    print(\"b2 (distance weight2):\",b2)\n    print(\"distij (distance of the GHSL cell i from urban center j) in kilometers:\",distij)\n    print(\"g1 (size weight):\",g1)\n    print(\"sizeij (size of the cell j) in square kilometers:\",sizeij)\n    print(\"p1 (population weight1):\",p1)\n    print(\"p2 (population weight2):\",p2)\n    print(\"populationj (population of the urban area):\",populationj)\n    print(\"w (GDP weight):\",w)\n    print(\"gdp (GDP of the urban area or country) in billion dollars:\",gdp)\n    print(\"error term(epsilonij):\",epsilonij)\n    print(\"FUAij (can be converted to a boolean value for whether periurban cell i belongs to urban area j):\",FUAij)\n1448.3 Delineation function is invoked for parameters functional_urban_area_delineation_GHSL_regression(0.01,0.01,0.01,100,0.01,1,0.01,0.01,16079611,0.01,130,0.01) which correspond to GHSL R2023A study in 1423 of Chennai Metropolitan Area - for (*) a GHSL class 21 periurban cell of 1 square kilometer (growth rate of 25.377%) at a distance of 100 kilometers from urban center (*) metropolitan area population of 1,60,79,611 in 2023 (computed by Verhulste population growth model for annual growth rate of 2.39% based on 2022 Chennai metropolitan area population of 1.59 crores - Sections 1343 and 1350.14) and (*) Chennai Metropolitan Area GDP of $130 billion (GDP estimate sources: https://en.wikipedia.org/wiki/Chennai_metropolitan_area - $130 billion and https://en.wikipedia.org/wiki/Economy_of_Chennai - $200 billion). Presently the sizeij (cell size) values are presumptive and can be substituted from a raster GeoTIFF file.\n1448.4 Earlier formula (2) is probably a first ever official regression for urban area delineation independent of machine learning-cellular automata models (1226.13),Polya Urn urban growth models and NightTimeLights radiance and it replaces urban area size by its population as proxy.\n1448.5 Computation of FUA value for above data is at python-src/image_pattern_mining/ImageNet/testlogs/GISUrbanSprawlAnalytics.log.28August2023 and can be normalized to a boolean value by adjustment of regression weights (by predefined minimum and maximum values for FUAij):\n   FUAij (can be converted to a boolean value for whether periurban cell i belongs to urban area j): 2585539060011.65\n1448.6 Population is chosen as a predictor of urban area size as described in the model (2) of the paper - \"...... we compare three different proxies for urban centre size: area, population and nightlight.....\" while model (1) (section 1423.8) relied on number of cars which are proportional to nightlights. Distance in above model is actually proportional to the travel time from cell i to urban center j by public or private transport (or ease of mobility) - though it is still debatable on which travel time (fastest or slowest mode) has to be chosen.\n1448.7 Travel time to a periurban cell and Isochrone ego graphs in general could be estimated from Google Maps Live Traffic ViteJS implementation in NeuronRain Grafit (Drive Time Radius Isochrones are periodic snapshots of live traffic) - Section 1387 - https://github.com/shrinivaasanka/Grafit/tree/master/course_material/Programming/GUI/code/livetraffic . Emphasis on size of urban center as one of the FUA criteria is a rephrasal of preferential attachment (Big cities tend to get Bigger) - quoted excerpts from the paper - \"...... Travel time from each cell to the urban centre is the most powerful predictor of the probability of belonging to a FUA, followed by the size of the urban centre .....\"",
        "tree": {
          "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/trees/dabc42966ce716ccba465f4ce89fa2004a0fee2e",
          "sha": "dabc42966ce716ccba465f4ce89fa2004a0fee2e"
        },
        "comment_count": 0
      },
      "author": null,
      "committer": null,
      "parents": [
        {
          "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/7049e4ade302497253a60ae8e2e9002e6de5ceed",
          "html_url": "https://github.com/shrinivaasanka/asfer-github-code/commit/7049e4ade302497253a60ae8e2e9002e6de5ceed",
          "sha": "7049e4ade302497253a60ae8e2e9002e6de5ceed"
        }
      ],
      "repository": {
        "id": 36945272,
        "node_id": "MDEwOlJlcG9zaXRvcnkzNjk0NTI3Mg==",
        "name": "asfer-github-code",
        "full_name": "shrinivaasanka/asfer-github-code",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/asfer-github-code",
        "description": "Derived from http://sourceforge.net/p/asfer/",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/deployments"
      },
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/8fe4602379ddb7c54e28db18dda29a5a3d944e76",
      "sha": "8fe4602379ddb7c54e28db18dda29a5a3d944e76",
      "node_id": "MDY6Q29tbWl0MjE4NTI3MTg6OGZlNDYwMjM3OWRkYjdjNTRlMjhkYjE4ZGRhMjlhNWEzZDk0NGU3Ng==",
      "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commit/8fe4602379ddb7c54e28db18dda29a5a3d944e76",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/8fe4602379ddb7c54e28db18dda29a5a3d944e76/comments",
      "commit": {
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits/8fe4602379ddb7c54e28db18dda29a5a3d944e76",
        "author": {
          "date": "2017-07-25T17:10:23.000+05:30",
          "name": "K.Srinivasan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "committer": {
          "date": "2017-07-25T17:10:23.000+05:30",
          "name": "K.Srinivasan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "message": "Updated Product Profiles from websites:\nhttp://sourceforge.net/users/ka_shrinivaasan,\nhttps://github.com/shrinivaasanka,\nhttps://www.openhub.net/accounts/ka_shrinivaasan",
        "tree": {
          "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees/d19ee17ac1c73df8607ca1ac9bae8b8b2a645819",
          "sha": "d19ee17ac1c73df8607ca1ac9bae8b8b2a645819"
        },
        "comment_count": 0
      },
      "author": null,
      "committer": null,
      "parents": [
        {
          "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits/aa693d82c1d61cd6afdaeff412398275626ea97e",
          "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commit/aa693d82c1d61cd6afdaeff412398275626ea97e",
          "sha": "aa693d82c1d61cd6afdaeff412398275626ea97e"
        }
      ],
      "repository": {
        "id": 21852718,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMTg1MjcxOA==",
        "name": "Krishna_iResearch_DoxygenDocs",
        "full_name": "shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "description": "Krishna iResearch Open Source Products - Doxygen Documentation",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/Krishna_iResearch_DoxygenDocs/deployments"
      },
      "score": 1.0
    }
  ]
}

==================================
GitHub Code Search for query  shrinivaasanka+THEORY+and+FEATURE  - JSON:
==================================
{
  "total_count": 19,
  "incomplete_results": false,
  "items": [
    {
      "url": "https://api.github.com/repos/shrinivaasanka/Grafit/commits/0b4a9efa355bcf4882552f07c7eb3bfd61160df2",
      "sha": "0b4a9efa355bcf4882552f07c7eb3bfd61160df2",
      "node_id": "MDY6Q29tbWl0MjIyNDgxMDA6MGI0YTllZmEzNTViY2Y0ODgyNTUyZjA3YzdlYjNiZmQ2MTE2MGRmMg==",
      "html_url": "https://github.com/shrinivaasanka/Grafit/commit/0b4a9efa355bcf4882552f07c7eb3bfd61160df2",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/Grafit/commits/0b4a9efa355bcf4882552f07c7eb3bfd61160df2/comments",
      "commit": {
        "url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/commits/0b4a9efa355bcf4882552f07c7eb3bfd61160df2",
        "author": {
          "date": "2020-06-03T15:34:15.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "committer": {
          "date": "2020-06-03T15:34:15.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "message": "NeuronRain Theory Drafts:\n751. (THEORY and FEATURE) Hashing Dynamic Sets - 24 May 2018, 31 October 2018, 11 March 2019, 8 October 2019, 6 November 2019, 18 February 2020, 1 May 2020, 5 May 2020, 2,3,4 June 2020 - this section is an extended theory draft on set partitions, computational geometry, program analysis/software analytics among other topics in NeuronRain AstroInfer Design - https://github.com/shrinivaasanka/asfer-github-code/blob/master/asfer-docs/AstroInferDesign.txt",
        "tree": {
          "url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/trees/a138b528f83c860035276da76e580a2a7a3d7324",
          "sha": "a138b528f83c860035276da76e580a2a7a3d7324"
        },
        "comment_count": 0
      },
      "author": null,
      "committer": null,
      "parents": [
        {
          "url": "https://api.github.com/repos/shrinivaasanka/Grafit/commits/fc814afd0b57f4a7ac7f830b0df72bf6acdff52c",
          "html_url": "https://github.com/shrinivaasanka/Grafit/commit/fc814afd0b57f4a7ac7f830b0df72bf6acdff52c",
          "sha": "fc814afd0b57f4a7ac7f830b0df72bf6acdff52c"
        }
      ],
      "repository": {
        "id": 22248100,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMjI0ODEwMA==",
        "name": "Grafit",
        "full_name": "shrinivaasanka/Grafit",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/Grafit",
        "description": "GRAFIT Open Learning",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/Grafit",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/Grafit/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/Grafit/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/Grafit/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/Grafit/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/Grafit/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/Grafit/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/Grafit/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/Grafit/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/Grafit/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/Grafit/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/Grafit/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/Grafit/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/Grafit/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/Grafit/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/Grafit/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/Grafit/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/Grafit/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/Grafit/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/Grafit/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/Grafit/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/Grafit/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/Grafit/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/Grafit/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/Grafit/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/Grafit/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/Grafit/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/Grafit/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/Grafit/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/Grafit/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/Grafit/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/Grafit/deployments"
      },
      "score": 1.0,
      "text_matches": [
        {
          "object_url": "https://api.github.com/repos/shrinivaasanka/Grafit/commits/0b4a9efa355bcf4882552f07c7eb3bfd61160df2",
          "object_type": "CommitMessage",
          "property": "message",
          "fragment": "NeuronRain Theory Drafts:\n751. (THEORY and FEATURE) Hashing Dynamic Sets - 24 May 2018, 31 October 2018, 11 March 2019, 8 October 2019, 6 November 2019, 18 February 2020, 1 May 2020, 5 May 2020, 2,3,4 June 2020 - this section is an extended theory draft on set partitions, computational geometry, program analysis/software analytics among other topics in NeuronRain AstroInfer Design - https://github.com/shrinivaasanka/asfer-github-code/blob/master/asfer-docs/AstroInferDesign.txt",
          "matches": [
            {
              "text": "Theory",
              "indices": [
                11,
                17
              ]
            },
            {
              "text": "THEORY and FEATURE",
              "indices": [
                32,
                50
              ]
            },
            {
              "text": "theory",
              "indices": [
                241,
                247
              ]
            },
            {
              "text": "shrinivaasanka",
              "indices": [
                405,
                419
              ]
            }
          ]
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/bcfda99ccfa86c54a40a8b8fa650b0c9df813475",
      "sha": "bcfda99ccfa86c54a40a8b8fa650b0c9df813475",
      "node_id": "MDY6Q29tbWl0MzY5NDUyNzI6YmNmZGE5OWNjZmE4NmM1NGE0MGE4YjhmYTY1MGIwYzlkZjgxMzQ3NQ==",
      "html_url": "https://github.com/shrinivaasanka/asfer-github-code/commit/bcfda99ccfa86c54a40a8b8fa650b0c9df813475",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/bcfda99ccfa86c54a40a8b8fa650b0c9df813475/comments",
      "commit": {
        "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/commits/bcfda99ccfa86c54a40a8b8fa650b0c9df813475",
        "author": {
          "date": "2023-08-14T14:31:09.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "committer": {
          "date": "2023-08-14T14:31:09.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "message": "--------------------------------------------------------------------------------------------------------------------------------------------\n1444. (THEORY and FEATURE) Software Analytics and Kernel Analytics - Python script to parse asfer_syscall_trace.log for Filesystem prefetch VIRGO kernel analytics config - related to 1191,619,770,906,911,771,1192,1443 and all sections on Program Analysis, AsFer-USBmd-VIRGO-KingCobra FTrace kernel callgraph analysis - Valgrind-Callgrind-KCacheGrind-Flamegraph userspace callgraph analysis, SATURN control flow analysis of VIRGO linux kernel, Software Analytics, Pandemic model of Botnet-Defense adversarial Game theoretic security, Cybercrime analytics, Anti-Malware,Anti-Ransomware,Anti-Theft and Anti-Plagiarism tools, Filesystem Prefetch, KML, LAKE - 14 August 2023\n--------------------------------------------------------------------------------------------------------------------------------------------\n1444.1 New Python script asfer_syscall_trace.py has been added to repository for parsing strace log for read() systemcalls captured from a process in asfer_syscall_trace.log (process_id 2206 - pulseaudio - in this example), get a set of frequently read filedescriptors and append a keyvalue pair \"frequently_read_filedescriptors=<set of filedescriptors>\" to /etc/virgo_kernel_analytics.conf read and published within VIRGO linux kernel by virgo_kernel_analytics.ko driver module.\n1444.2 Parse logs for asfer_syscall_trace.py can be found in testlogs/asfer_syscall_trace.py.log.14August2023\n1444.3 Sample /etc/virgo_kernel_analytics.conf config file (list of comma separated key-value pairs) for virgo_kernel_analytics.ko driver written earlier has also been added to repository.\n1444.4 Suspicious syscall sequences could as well point to malware infection (Section 1192.10) apart from filesystem prefetch.\n1444.5 Present implementation of asfer_syscall_trace.sh and asfer_syscall_trace.py is limited to read() system calls and could be extended to any other system calls including write(), Network Socket I/O and VIRGO system call internal loadbalancers (Example: function char* get_host_from_cloud_Loadtrack_mempool() - https://github.com/shrinivaasanka/virgo64-linux-github-code/blob/master/linux-kernel-extensions/virgo_malloc/virgo_malloc.c - which is supposed to return least loaded host based on load stats might benefit by reading /etc/virgo_kernel_analytics.conf key-value pairs for load stats set from /proc/loadavg , top or uptime commands data - but not implemented at present). Script https://github.com/shrinivaasanka/virgo64-linux-github-code/blob/master/virgo-python-src/VirgoPRGLoadBalancer_probab_calc.py computes expected load per host for pseudorandom loadbalancer (randomly route requests to any node).",
        "tree": {
          "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/trees/51652f91c71934cadab60e0b2c6d10ed41b307dd",
          "sha": "51652f91c71934cadab60e0b2c6d10ed41b307dd"
        },
        "comment_count": 0
      },
      "author": null,
      "committer": null,
      "parents": [
        {
          "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/6b7fff038ca9614a5b7e0b650c7f58afcbe982c0",
          "html_url": "https://github.com/shrinivaasanka/asfer-github-code/commit/6b7fff038ca9614a5b7e0b650c7f58afcbe982c0",
          "sha": "6b7fff038ca9614a5b7e0b650c7f58afcbe982c0"
        }
      ],
      "repository": {
        "id": 36945272,
        "node_id": "MDEwOlJlcG9zaXRvcnkzNjk0NTI3Mg==",
        "name": "asfer-github-code",
        "full_name": "shrinivaasanka/asfer-github-code",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/asfer-github-code",
        "description": "Derived from http://sourceforge.net/p/asfer/",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/deployments"
      },
      "score": 1.0,
      "text_matches": [
        {
          "object_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/bcfda99ccfa86c54a40a8b8fa650b0c9df813475",
          "object_type": "CommitMessage",
          "property": "message",
          "fragment": "--------------------------------------------------------------------------------------------------------------------------------------------\n1444. (THEORY and FEATURE) Software Analytics and Kernel Analytics - Python script to parse asfer_syscall_trace.log for Filesystem prefetch VIRGO kernel analytics config - related to 1191,619,770,906,911,771,1192,1443 and all sections on Program Analysis, AsFer-USBmd-VIRGO-KingCobra FTrace kernel callgraph analysis - Valgrind-Callgrind-KCacheGrind-Flamegraph userspace callgraph analysis, SATURN control flow analysis of VIRGO linux kernel, Software Analytics, Pandemic model of Botnet-Defense adversarial Game theoretic security, Cybercrime analytics, Anti-Malware,Anti-Ransomware,Anti-Theft and Anti-Plagiarism tools, Filesystem Prefetch, KML, LAKE - 14 August 2023\n--------------------------------------------------------------------------------------------------------------------------------------------\n1444.1 New Python script asfer_syscall_trace.py has been added to repository for parsing strace log for read() systemcalls captured from a process in asfer_syscall_trace.log (process_id 2206 - pulseaudio - in this example), get a set of frequently read filedescriptors and append a keyvalue pair \"frequently_read_filedescriptors=<set of filedescriptors>\" to /etc/virgo_kernel_analytics.conf read and published within VIRGO linux kernel by virgo_kernel_analytics.ko driver module.\n1444.2 Parse logs for asfer_syscall_trace.py can be found in testlogs/asfer_syscall_trace.py.log.14August2023\n1444.3 Sample /etc/virgo_kernel_analytics.conf config file (list of comma separated key-value pairs) for virgo_kernel_analytics.ko driver written earlier has also been added to repository.\n1444.4 Suspicious syscall sequences could as well point to malware infection (Section 1192.10) apart from filesystem prefetch.\n1444.5 Present implementation of asfer_syscall_trace.sh and asfer_syscall_trace.py is limited to read() system calls and could be extended to any other system calls including write(), Network Socket I/O and VIRGO system call internal loadbalancers (Example: function char* get_host_from_cloud_Loadtrack_mempool() - https://github.com/shrinivaasanka/virgo64-linux-github-code/blob/master/linux-kernel-extensions/virgo_malloc/virgo_malloc.c - which is supposed to return least loaded host based on load stats might benefit by reading /etc/virgo_kernel_analytics.conf key-value pairs for load stats set from /proc/loadavg , top or uptime commands data - but not implemented at present). Script https://github.com/shrinivaasanka/virgo64-linux-github-code/blob/master/virgo-python-src/VirgoPRGLoadBalancer_probab_calc.py computes expected load per host for pseudorandom loadbalancer (randomly route requests to any node).",
          "matches": [
            {
              "text": "THEORY and FEATURE",
              "indices": [
                148,
                166
              ]
            },
            {
              "text": "and",
              "indices": [
                187,
                190
              ]
            },
            {
              "text": "and",
              "indices": [
                359,
                362
              ]
            },
            {
              "text": "and",
              "indices": [
                736,
                739
              ]
            },
            {
              "text": "and",
              "indices": [
                1221,
                1224
              ]
            },
            {
              "text": "and",
              "indices": [
                1348,
                1351
              ]
            },
            {
              "text": "and",
              "indices": [
                1914,
                1917
              ]
            },
            {
              "text": "and",
              "indices": [
                1975,
                1978
              ]
            },
            {
              "text": "and",
              "indices": [
                2061,
                2064
              ]
            },
            {
              "text": "shrinivaasanka",
              "indices": [
                2192,
                2206
              ]
            },
            {
              "text": "shrinivaasanka",
              "indices": [
                2568,
                2582
              ]
            }
          ]
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/shrinivaasanka/Grafit/commits/7c4489d806c87d868c234d1c32e78092774c5d39",
      "sha": "7c4489d806c87d868c234d1c32e78092774c5d39",
      "node_id": "MDY6Q29tbWl0MjIyNDgxMDA6N2M0NDg5ZDgwNmM4N2Q4NjhjMjM0ZDFjMzJlNzgwOTI3NzRjNWQzOQ==",
      "html_url": "https://github.com/shrinivaasanka/Grafit/commit/7c4489d806c87d868c234d1c32e78092774c5d39",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/Grafit/commits/7c4489d806c87d868c234d1c32e78092774c5d39/comments",
      "commit": {
        "url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/commits/7c4489d806c87d868c234d1c32e78092774c5d39",
        "author": {
          "date": "2020-05-26T15:37:30.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "committer": {
          "date": "2020-05-26T15:37:30.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "message": "NeuronRain Theory Drafts:\n753. (THEORY and FEATURE) Social Network Analytics, People Analytics, Preferential Attachment, Urban Sprawls and Intrinsic Merit Rankings - 20 February 2020,26 February 2020,29 April 2020,17 May 2020,18 May 2020,28 May 2020 - this section is an extended draft on urban planning analytics, GIS analytics among other topics in NeuronRain AstroInfer Design - https://github.com/shrinivaasanka/asfer-github-code/blob/master/asfer-docs/AstroInferDesign.txt - related to 762,821",
        "tree": {
          "url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/trees/83c56ac70928d95c5ca4bac7c7171185a90ee290",
          "sha": "83c56ac70928d95c5ca4bac7c7171185a90ee290"
        },
        "comment_count": 0
      },
      "author": null,
      "committer": null,
      "parents": [
        {
          "url": "https://api.github.com/repos/shrinivaasanka/Grafit/commits/e77aa2332980fa6cacb3a15220a04b0be657720f",
          "html_url": "https://github.com/shrinivaasanka/Grafit/commit/e77aa2332980fa6cacb3a15220a04b0be657720f",
          "sha": "e77aa2332980fa6cacb3a15220a04b0be657720f"
        }
      ],
      "repository": {
        "id": 22248100,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMjI0ODEwMA==",
        "name": "Grafit",
        "full_name": "shrinivaasanka/Grafit",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/Grafit",
        "description": "GRAFIT Open Learning",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/Grafit",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/Grafit/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/Grafit/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/Grafit/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/Grafit/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/Grafit/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/Grafit/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/Grafit/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/Grafit/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/Grafit/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/Grafit/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/Grafit/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/Grafit/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/Grafit/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/Grafit/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/Grafit/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/Grafit/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/Grafit/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/Grafit/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/Grafit/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/Grafit/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/Grafit/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/Grafit/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/Grafit/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/Grafit/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/Grafit/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/Grafit/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/Grafit/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/Grafit/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/Grafit/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/Grafit/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/Grafit/deployments"
      },
      "score": 1.0,
      "text_matches": [
        {
          "object_url": "https://api.github.com/repos/shrinivaasanka/Grafit/commits/7c4489d806c87d868c234d1c32e78092774c5d39",
          "object_type": "CommitMessage",
          "property": "message",
          "fragment": "NeuronRain Theory Drafts:\n753. (THEORY and FEATURE) Social Network Analytics, People Analytics, Preferential Attachment, Urban Sprawls and Intrinsic Merit Rankings - 20 February 2020,26 February 2020,29 April 2020,17 May 2020,18 May 2020,28 May 2020 - this section is an extended draft on urban planning analytics, GIS analytics among other topics in NeuronRain AstroInfer Design - https://github.com/shrinivaasanka/asfer-github-code/blob/master/asfer-docs/AstroInferDesign.txt - related to 762,821",
          "matches": [
            {
              "text": "Theory",
              "indices": [
                11,
                17
              ]
            },
            {
              "text": "THEORY and FEATURE",
              "indices": [
                32,
                50
              ]
            },
            {
              "text": "and",
              "indices": [
                135,
                138
              ]
            },
            {
              "text": "shrinivaasanka",
              "indices": [
                401,
                415
              ]
            }
          ]
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/shrinivaasanka/Grafit/commits/6da9baaa35927b349b743fc853a0e468d9ec8f07",
      "sha": "6da9baaa35927b349b743fc853a0e468d9ec8f07",
      "node_id": "MDY6Q29tbWl0MjIyNDgxMDA6NmRhOWJhYWEzNTkyN2IzNDliNzQzZmM4NTNhMGU0NjhkOWVjOGYwNw==",
      "html_url": "https://github.com/shrinivaasanka/Grafit/commit/6da9baaa35927b349b743fc853a0e468d9ec8f07",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/Grafit/commits/6da9baaa35927b349b743fc853a0e468d9ec8f07/comments",
      "commit": {
        "url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/commits/6da9baaa35927b349b743fc853a0e468d9ec8f07",
        "author": {
          "date": "2020-05-17T16:08:19.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "committer": {
          "date": "2020-05-17T16:08:19.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "message": "NeuronRain Theory Drafts:\n753. (THEORY and FEATURE) Social Network Analytics, People Analytics, Preferential Attachment, Urban Sprawls and Intrinsic Merit Rankings - 20 February 2020,26 February 2020,29 April 2020,17 May 2020,18 May 2020 - this section is an extended draft on urban planning analytics, GIS analytics among other topics in NeuronRain AstroInfer Design - https://github.com/shrinivaasanka/asfer-github-code/blob/master/asfer-docs/AstroInferDesign.txt - related to 762,821",
        "tree": {
          "url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/trees/8bf1b89645a703ac0915a060af869758d49b5d18",
          "sha": "8bf1b89645a703ac0915a060af869758d49b5d18"
        },
        "comment_count": 0
      },
      "author": null,
      "committer": null,
      "parents": [
        {
          "url": "https://api.github.com/repos/shrinivaasanka/Grafit/commits/653d770fe7f00186aa7523b59bc78695c1de4dda",
          "html_url": "https://github.com/shrinivaasanka/Grafit/commit/653d770fe7f00186aa7523b59bc78695c1de4dda",
          "sha": "653d770fe7f00186aa7523b59bc78695c1de4dda"
        }
      ],
      "repository": {
        "id": 22248100,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMjI0ODEwMA==",
        "name": "Grafit",
        "full_name": "shrinivaasanka/Grafit",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/Grafit",
        "description": "GRAFIT Open Learning",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/Grafit",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/Grafit/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/Grafit/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/Grafit/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/Grafit/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/Grafit/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/Grafit/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/Grafit/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/Grafit/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/Grafit/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/Grafit/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/Grafit/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/Grafit/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/Grafit/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/Grafit/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/Grafit/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/Grafit/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/Grafit/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/Grafit/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/Grafit/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/Grafit/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/Grafit/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/Grafit/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/Grafit/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/Grafit/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/Grafit/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/Grafit/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/Grafit/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/Grafit/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/Grafit/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/Grafit/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/Grafit/deployments"
      },
      "score": 1.0,
      "text_matches": [
        {
          "object_url": "https://api.github.com/repos/shrinivaasanka/Grafit/commits/6da9baaa35927b349b743fc853a0e468d9ec8f07",
          "object_type": "CommitMessage",
          "property": "message",
          "fragment": "NeuronRain Theory Drafts:\n753. (THEORY and FEATURE) Social Network Analytics, People Analytics, Preferential Attachment, Urban Sprawls and Intrinsic Merit Rankings - 20 February 2020,26 February 2020,29 April 2020,17 May 2020,18 May 2020 - this section is an extended draft on urban planning analytics, GIS analytics among other topics in NeuronRain AstroInfer Design - https://github.com/shrinivaasanka/asfer-github-code/blob/master/asfer-docs/AstroInferDesign.txt - related to 762,821",
          "matches": [
            {
              "text": "Theory",
              "indices": [
                11,
                17
              ]
            },
            {
              "text": "THEORY and FEATURE",
              "indices": [
                32,
                50
              ]
            },
            {
              "text": "and",
              "indices": [
                135,
                138
              ]
            },
            {
              "text": "shrinivaasanka",
              "indices": [
                389,
                403
              ]
            }
          ]
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/shrinivaasanka/Grafit/commits/329d00a7a9b77fb2e1665fb5342a7975026f735a",
      "sha": "329d00a7a9b77fb2e1665fb5342a7975026f735a",
      "node_id": "MDY6Q29tbWl0MjIyNDgxMDA6MzI5ZDAwYTdhOWI3N2ZiMmUxNjY1ZmI1MzQyYTc5NzUwMjZmNzM1YQ==",
      "html_url": "https://github.com/shrinivaasanka/Grafit/commit/329d00a7a9b77fb2e1665fb5342a7975026f735a",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/Grafit/commits/329d00a7a9b77fb2e1665fb5342a7975026f735a/comments",
      "commit": {
        "url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/commits/329d00a7a9b77fb2e1665fb5342a7975026f735a",
        "author": {
          "date": "2020-06-30T15:16:04.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "committer": {
          "date": "2020-06-30T15:16:04.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "message": "763. (THEORY and FEATURE) Non-graph theoretic Intrinsic merit measures of texts, Reputation Rankings, Sybils and Collusions - 16 July 2018, 23 April 2020, 29 June 2020, 30 June 2020 - this section is an extended draft of sections 783,815 and respective topics in NeuronRain AstroInfer design - Intrinsic Merit of texts, Vowelless text compression and Hyphenated Syllable vectorspace of words -  https://github.com/shrinivaasanka/asfer-github-code/blob/master/asfer-docs/AstroInferDesign.txt",
        "tree": {
          "url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/trees/24be722d513cb741b4d9bf0fb8ad7676ff7694cb",
          "sha": "24be722d513cb741b4d9bf0fb8ad7676ff7694cb"
        },
        "comment_count": 0
      },
      "author": null,
      "committer": null,
      "parents": [
        {
          "url": "https://api.github.com/repos/shrinivaasanka/Grafit/commits/815c40a9d9a80242837b7bbb0fef37cdf1476941",
          "html_url": "https://github.com/shrinivaasanka/Grafit/commit/815c40a9d9a80242837b7bbb0fef37cdf1476941",
          "sha": "815c40a9d9a80242837b7bbb0fef37cdf1476941"
        }
      ],
      "repository": {
        "id": 22248100,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMjI0ODEwMA==",
        "name": "Grafit",
        "full_name": "shrinivaasanka/Grafit",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/Grafit",
        "description": "GRAFIT Open Learning",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/Grafit",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/Grafit/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/Grafit/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/Grafit/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/Grafit/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/Grafit/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/Grafit/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/Grafit/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/Grafit/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/Grafit/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/Grafit/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/Grafit/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/Grafit/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/Grafit/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/Grafit/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/Grafit/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/Grafit/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/Grafit/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/Grafit/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/Grafit/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/Grafit/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/Grafit/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/Grafit/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/Grafit/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/Grafit/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/Grafit/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/Grafit/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/Grafit/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/Grafit/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/Grafit/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/Grafit/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/Grafit/deployments"
      },
      "score": 1.0,
      "text_matches": [
        {
          "object_url": "https://api.github.com/repos/shrinivaasanka/Grafit/commits/329d00a7a9b77fb2e1665fb5342a7975026f735a",
          "object_type": "CommitMessage",
          "property": "message",
          "fragment": "763. (THEORY and FEATURE) Non-graph theoretic Intrinsic merit measures of texts, Reputation Rankings, Sybils and Collusions - 16 July 2018, 23 April 2020, 29 June 2020, 30 June 2020 - this section is an extended draft of sections 783,815 and respective topics in NeuronRain AstroInfer design - Intrinsic Merit of texts, Vowelless text compression and Hyphenated Syllable vectorspace of words -  https://github.com/shrinivaasanka/asfer-github-code/blob/master/asfer-docs/AstroInferDesign.txt",
          "matches": [
            {
              "text": "THEORY and FEATURE",
              "indices": [
                6,
                24
              ]
            },
            {
              "text": "and",
              "indices": [
                109,
                112
              ]
            },
            {
              "text": "and",
              "indices": [
                238,
                241
              ]
            },
            {
              "text": "and",
              "indices": [
                347,
                350
              ]
            },
            {
              "text": "shrinivaasanka",
              "indices": [
                414,
                428
              ]
            }
          ]
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/shrinivaasanka/Grafit/commits/653d770fe7f00186aa7523b59bc78695c1de4dda",
      "sha": "653d770fe7f00186aa7523b59bc78695c1de4dda",
      "node_id": "MDY6Q29tbWl0MjIyNDgxMDA6NjUzZDc3MGZlN2YwMDE4NmFhNzUyM2I1OWJjNzg2OTVjMWRlNGRkYQ==",
      "html_url": "https://github.com/shrinivaasanka/Grafit/commit/653d770fe7f00186aa7523b59bc78695c1de4dda",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/Grafit/commits/653d770fe7f00186aa7523b59bc78695c1de4dda/comments",
      "commit": {
        "url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/commits/653d770fe7f00186aa7523b59bc78695c1de4dda",
        "author": {
          "date": "2020-05-15T15:49:37.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "committer": {
          "date": "2020-05-15T15:49:37.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "message": "NeuronRain Theory Drafts:\n752. (THEORY and FEATURE) 2 January 2019, 9 January 2019, 8 January 2020, 22 January 2020, 23 January 2020, 29 January 2020, 31 January 2020, 2 February 2020,4 May 2020,12 May 2020,15 May 2020 - Searching, Indexing, Computational Geometric point location queries, Factorization in Randomized NC - Binary Search Nuances, B-Trees, Sharding - Because of its importance this section of course material is an extended spillover draft of Computational Geometric Planar Point Location Factorization related sections in NeuronRain AstroInfer Design - https://github.com/shrinivaasanka/asfer-github-code/blob/master/asfer-docs/AstroInferDesign.txt",
        "tree": {
          "url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/trees/95b90b5f77b91751ec2e8fef7334b75a924ef92f",
          "sha": "95b90b5f77b91751ec2e8fef7334b75a924ef92f"
        },
        "comment_count": 0
      },
      "author": null,
      "committer": null,
      "parents": [
        {
          "url": "https://api.github.com/repos/shrinivaasanka/Grafit/commits/bfac7e5dc9db97258cb08b6601071ebb05399d7a",
          "html_url": "https://github.com/shrinivaasanka/Grafit/commit/bfac7e5dc9db97258cb08b6601071ebb05399d7a",
          "sha": "bfac7e5dc9db97258cb08b6601071ebb05399d7a"
        }
      ],
      "repository": {
        "id": 22248100,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMjI0ODEwMA==",
        "name": "Grafit",
        "full_name": "shrinivaasanka/Grafit",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/Grafit",
        "description": "GRAFIT Open Learning",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/Grafit",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/Grafit/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/Grafit/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/Grafit/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/Grafit/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/Grafit/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/Grafit/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/Grafit/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/Grafit/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/Grafit/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/Grafit/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/Grafit/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/Grafit/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/Grafit/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/Grafit/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/Grafit/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/Grafit/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/Grafit/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/Grafit/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/Grafit/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/Grafit/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/Grafit/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/Grafit/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/Grafit/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/Grafit/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/Grafit/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/Grafit/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/Grafit/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/Grafit/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/Grafit/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/Grafit/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/Grafit/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/Grafit/deployments"
      },
      "score": 1.0,
      "text_matches": [
        {
          "object_url": "https://api.github.com/repos/shrinivaasanka/Grafit/commits/653d770fe7f00186aa7523b59bc78695c1de4dda",
          "object_type": "CommitMessage",
          "property": "message",
          "fragment": "NeuronRain Theory Drafts:\n752. (THEORY and FEATURE) 2 January 2019, 9 January 2019, 8 January 2020, 22 January 2020, 23 January 2020, 29 January 2020, 31 January 2020, 2 February 2020,4 May 2020,12 May 2020,15 May 2020 - Searching, Indexing, Computational Geometric point location queries, Factorization in Randomized NC - Binary Search Nuances, B-Trees, Sharding - Because of its importance this section of course material is an extended spillover draft of Computational Geometric Planar Point Location Factorization related sections in NeuronRain AstroInfer Design - https://github.com/shrinivaasanka/asfer-github-code/blob/master/asfer-docs/AstroInferDesign.txt",
          "matches": [
            {
              "text": "Theory",
              "indices": [
                11,
                17
              ]
            },
            {
              "text": "THEORY and FEATURE",
              "indices": [
                32,
                50
              ]
            },
            {
              "text": "shrinivaasanka",
              "indices": [
                588,
                602
              ]
            }
          ]
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/4e0874040fba74ff6080114f4bdc0cac3d579fdc",
      "sha": "4e0874040fba74ff6080114f4bdc0cac3d579fdc",
      "node_id": "MDY6Q29tbWl0MzY5NDUyNzI6NGUwODc0MDQwZmJhNzRmZjYwODAxMTRmNGJkYzBjYWMzZDU3OWZkYw==",
      "html_url": "https://github.com/shrinivaasanka/asfer-github-code/commit/4e0874040fba74ff6080114f4bdc0cac3d579fdc",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/4e0874040fba74ff6080114f4bdc0cac3d579fdc/comments",
      "commit": {
        "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/commits/4e0874040fba74ff6080114f4bdc0cac3d579fdc",
        "author": {
          "date": "2022-03-29T23:19:09.000+05:30",
          "name": "Krishna iResearch - NeuronRain - K.Srinivasan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "committer": {
          "date": "2022-03-29T23:19:09.000+05:30",
          "name": "Krishna iResearch - NeuronRain - K.Srinivasan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "message": "-------------------------------------------------------------------------------------------------------------------------------------------\n1229. (THEORY and FEATURE) Intrinsic Merit of Texts - TAC 2010 code opensourced - 29 March 2022 - related to 9,36 and all sections on\nIntrinsic Merit Ranking of Texts, Update Summarization, Topic Detection and Tracking, Interview Algorithm, Citation Graph Maxflow-Mincut,\nMeaning Representation\n-------------------------------------------------------------------------------------------------------------------------------------------\n1229.1 An almost 12-13 years old archaic python code (sequential) for publications and PPTs - ArXiv and NIST TAC 2010, US Department of Commerce - https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/blob/master/kuja27_website_mirrored/site/kuja27/PresentationTAC2010.pdf, http://arxiv.org/abs/1006.4458, https://tac.nist.gov//publications/2010/participant.papers/CMI_IIT.proceedings.pdf - has been opensourced (which was originally intended to be part of JAIMINI closedsource private repositories - https://github.com/Brihaspathi/jaimini, https://sourceforge.net/projects/jaimini/ and https://gitlab.com/shrinivaasanka/jaimini ) including TAC2010 dataset logs.\n1229.2 An expanded, sophisticated, parallel (PySpark) implementation of Interview Algorithm and Recursive Gloss Overlap algorithm and its improved formal language version - Recursive Lambda Function Growth algorithm for Meaning Representation - are already part of NeuronRain AstroInfer repositories.\n1229.3 Disclaimer: Because of mistaken identity issues, it is hereby clarified author did not participate in Text Analysis Conference (TAC 2010), November 15 and 16, 2010, Gaithersburg, Maryland, USA in person despite invitation.",
        "tree": {
          "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/trees/f6eea75ba7d39e173604c1e7e9dfaab2c216552b",
          "sha": "f6eea75ba7d39e173604c1e7e9dfaab2c216552b"
        },
        "comment_count": 0
      },
      "author": null,
      "committer": null,
      "parents": [
        {
          "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/91183d352a8faa70a6fd960f9e2040b478165ded",
          "html_url": "https://github.com/shrinivaasanka/asfer-github-code/commit/91183d352a8faa70a6fd960f9e2040b478165ded",
          "sha": "91183d352a8faa70a6fd960f9e2040b478165ded"
        }
      ],
      "repository": {
        "id": 36945272,
        "node_id": "MDEwOlJlcG9zaXRvcnkzNjk0NTI3Mg==",
        "name": "asfer-github-code",
        "full_name": "shrinivaasanka/asfer-github-code",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/asfer-github-code",
        "description": "Derived from http://sourceforge.net/p/asfer/",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/deployments"
      },
      "score": 1.0,
      "text_matches": [
        {
          "object_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/4e0874040fba74ff6080114f4bdc0cac3d579fdc",
          "object_type": "CommitMessage",
          "property": "message",
          "fragment": "-------------------------------------------------------------------------------------------------------------------------------------------\n1229. (THEORY and FEATURE) Intrinsic Merit of Texts - TAC 2010 code opensourced - 29 March 2022 - related to 9,36 and all sections on\nIntrinsic Merit Ranking of Texts, Update Summarization, Topic Detection and Tracking, Interview Algorithm, Citation Graph Maxflow-Mincut,\nMeaning Representation\n-------------------------------------------------------------------------------------------------------------------------------------------\n1229.1 An almost 12-13 years old archaic python code (sequential) for publications and PPTs - ArXiv and NIST TAC 2010, US Department of Commerce - https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/blob/master/kuja27_website_mirrored/site/kuja27/PresentationTAC2010.pdf, http://arxiv.org/abs/1006.4458, https://tac.nist.gov//publications/2010/participant.papers/CMI_IIT.proceedings.pdf - has been opensourced (which was originally intended to be part of JAIMINI closedsource private repositories - https://github.com/Brihaspathi/jaimini, https://sourceforge.net/projects/jaimini/ and https://gitlab.com/shrinivaasanka/jaimini ) including TAC2010 dataset logs.\n1229.2 An expanded, sophisticated, parallel (PySpark) implementation of Interview Algorithm and Recursive Gloss Overlap algorithm and its improved formal language version - Recursive Lambda Function Growth algorithm for Meaning Representation - are already part of NeuronRain AstroInfer repositories.\n1229.3 Disclaimer: Because of mistaken identity issues, it is hereby clarified author did not participate in Text Analysis Conference (TAC 2010), November 15 and 16, 2010, Gaithersburg, Maryland, USA in person despite invitation.",
          "matches": [
            {
              "text": "THEORY and FEATURE",
              "indices": [
                147,
                165
              ]
            },
            {
              "text": "and",
              "indices": [
                254,
                257
              ]
            },
            {
              "text": "and",
              "indices": [
                346,
                349
              ]
            },
            {
              "text": "and",
              "indices": [
                658,
                661
              ]
            },
            {
              "text": "and",
              "indices": [
                675,
                678
              ]
            },
            {
              "text": "shrinivaasanka",
              "indices": [
                741,
                755
              ]
            },
            {
              "text": "and",
              "indices": [
                1168,
                1171
              ]
            },
            {
              "text": "shrinivaasanka",
              "indices": [
                1191,
                1205
              ]
            },
            {
              "text": "and",
              "indices": [
                1340,
                1343
              ]
            },
            {
              "text": "and",
              "indices": [
                1378,
                1381
              ]
            },
            {
              "text": "and",
              "indices": [
                1707,
                1710
              ]
            }
          ]
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/f413c2fe0aac47ab212ad56b8d4817a23164442b",
      "sha": "f413c2fe0aac47ab212ad56b8d4817a23164442b",
      "node_id": "MDY6Q29tbWl0MzY5NDUyNzI6ZjQxM2MyZmUwYWFjNDdhYjIxMmFkNTZiOGQ0ODE3YTIzMTY0NDQyYg==",
      "html_url": "https://github.com/shrinivaasanka/asfer-github-code/commit/f413c2fe0aac47ab212ad56b8d4817a23164442b",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/f413c2fe0aac47ab212ad56b8d4817a23164442b/comments",
      "commit": {
        "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/commits/f413c2fe0aac47ab212ad56b8d4817a23164442b",
        "author": {
          "date": "2023-02-21T16:36:54.000+05:30",
          "name": "root",
          "email": "NeuronRain Commits"
        },
        "committer": {
          "date": "2023-02-21T16:36:54.000+05:30",
          "name": "root",
          "email": "NeuronRain Commits"
        },
        "message": "-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n1401. (THEORY and FEATURE) Computational Geometric Integer Factorization - DMRC PySpark Cloud version - Iterative Binary Search implementation - related to 498,601,1226,1259,1303,1319,1321,1323,1324,1325,1355,1365,1366,1369,1379,1381,1384,1385 and all sections on Integer Factorization (DMRC MapReduce PySpark and NC HPC Rust implementations),Computational Geometry,Set Partitions-to-Tile Cover reduction by Lagranges Four Square Theorem and ILP,Primality Testing,RSA Semiprimes,Almost-Square Bounding Boxes in Large Scale Visual Recognition,Pell's Equation,Brahmagupta's Chakravala,Approximate Factoring by Newton-Raphson Rayshooting queries,Algebraic Geometry of Computational Geometric Factorization,Quantum computation and Derandomization of BQP Factorization by Condorcet Jury Theorem Majority-BQPVoterSAT boolean composition - 21 February 2023\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n1401.1 python-src/DiscreteHyperbolicFactorizationUpperbound_TileSearch_Optimized.py has been updated to change function tilesearch_nonpersistent(y, numfactors=maxfactors, padding=1, binarysearch=\"iterative\") to choose between recursive and iterative binary search implementations through flag binarysearch depending on which either binary_search_interval_nonpersistent() or iterative_binary_search_interval_nonpersistent() are called.\n1401.2 New function iterative_binary_search_interval_nonpersistent(xl,yl,xr,yr,numfactors=maxfactors) has been defined in python-src/DiscreteHyperbolicFactorizationUpperbound_TileSearch_Optimized.py (which so far depends only on recursive binary search and often prone to stack overflow redressed by setrecursionlimit()) which is a verbatim Python translated port of Rust High Performance Computing Rayon parallel iterator factorization NC implementation in https://github.com/shrinivaasanka/Grafit/blob/master/course_material/Programming/Rust/rasterization/src/main.rs\n1401.3 Iterative binary search parallel factor point location has been made the default choice. Two example integers 999323828321 and 999999999999 have been factorized by iterative binary search point location and the factor points are in testlogs/DiscreteHyperbolicFactorizationUpperbound_TileSearch_Optimized.log.21February2023",
        "tree": {
          "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/trees/ce0d970c6b5c1782a8d9c2ac95f189e2f0f77ab8",
          "sha": "ce0d970c6b5c1782a8d9c2ac95f189e2f0f77ab8"
        },
        "comment_count": 1
      },
      "author": null,
      "committer": null,
      "parents": [
        {
          "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/09a49a24d5642a5ce38deef017ac9b7ce14fe613",
          "html_url": "https://github.com/shrinivaasanka/asfer-github-code/commit/09a49a24d5642a5ce38deef017ac9b7ce14fe613",
          "sha": "09a49a24d5642a5ce38deef017ac9b7ce14fe613"
        }
      ],
      "repository": {
        "id": 36945272,
        "node_id": "MDEwOlJlcG9zaXRvcnkzNjk0NTI3Mg==",
        "name": "asfer-github-code",
        "full_name": "shrinivaasanka/asfer-github-code",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/asfer-github-code",
        "description": "Derived from http://sourceforge.net/p/asfer/",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/deployments"
      },
      "score": 1.0,
      "text_matches": [
        {
          "object_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/f413c2fe0aac47ab212ad56b8d4817a23164442b",
          "object_type": "CommitMessage",
          "property": "message",
          "fragment": "-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n1401. (THEORY and FEATURE) Computational Geometric Integer Factorization - DMRC PySpark Cloud version - Iterative Binary Search implementation - related to 498,601,1226,1259,1303,1319,1321,1323,1324,1325,1355,1365,1366,1369,1379,1381,1384,1385 and all sections on Integer Factorization (DMRC MapReduce PySpark and NC HPC Rust implementations),Computational Geometry,Set Partitions-to-Tile Cover reduction by Lagranges Four Square Theorem and ILP,Primality Testing,RSA Semiprimes,Almost-Square Bounding Boxes in Large Scale Visual Recognition,Pell's Equation,Brahmagupta's Chakravala,Approximate Factoring by Newton-Raphson Rayshooting queries,Algebraic Geometry of Computational Geometric Factorization,Quantum computation and Derandomization of BQP Factorization by Condorcet Jury Theorem Majority-BQPVoterSAT boolean composition - 21 February 2023\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n1401.1 python-src/DiscreteHyperbolicFactorizationUpperbound_TileSearch_Optimized.py has been updated to change function tilesearch_nonpersistent(y, numfactors=maxfactors, padding=1, binarysearch=\"iterative\") to choose between recursive and iterative binary search implementations through flag binarysearch depending on which either binary_search_interval_nonpersistent() or iterative_binary_search_interval_nonpersistent() are called.\n1401.2 New function iterative_binary_search_interval_nonpersistent(xl,yl,xr,yr,numfactors=maxfactors) has been defined in python-src/DiscreteHyperbolicFactorizationUpperbound_TileSearch_Optimized.py (which so far depends only on recursive binary search and often prone to stack overflow redressed by setrecursionlimit()) which is a verbatim Python translated port of Rust High Performance Computing Rayon parallel iterator factorization NC implementation in https://github.com/shrinivaasanka/Grafit/blob/master/course_material/Programming/Rust/rasterization/src/main.rs\n1401.3 Iterative binary search parallel factor point location has been made the default choice. Two example integers 999323828321 and 999999999999 have been factorized by iterative binary search point location and the factor points are in testlogs/DiscreteHyperbolicFactorizationUpperbound_TileSearch_Optimized.log.21February2023",
          "matches": [
            {
              "text": "THEORY and FEATURE",
              "indices": [
                189,
                207
              ]
            },
            {
              "text": "and",
              "indices": [
                426,
                429
              ]
            },
            {
              "text": "and",
              "indices": [
                492,
                495
              ]
            },
            {
              "text": "and",
              "indices": [
                620,
                623
              ]
            },
            {
              "text": "and",
              "indices": [
                905,
                908
              ]
            },
            {
              "text": "and",
              "indices": [
                1450,
                1453
              ]
            },
            {
              "text": "and",
              "indices": [
                1902,
                1905
              ]
            },
            {
              "text": "shrinivaasanka",
              "indices": [
                2126,
                2140
              ]
            },
            {
              "text": "and",
              "indices": [
                2349,
                2352
              ]
            },
            {
              "text": "and",
              "indices": [
                2429,
                2432
              ]
            }
          ]
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/00f2e23887aa8df20006f4e6738c9b9e98b0b6a9",
      "sha": "00f2e23887aa8df20006f4e6738c9b9e98b0b6a9",
      "node_id": "MDY6Q29tbWl0MzY5NDUyNzI6MDBmMmUyMzg4N2FhOGRmMjAwMDZmNGU2NzM4YzliOWU5OGIwYjZhOQ==",
      "html_url": "https://github.com/shrinivaasanka/asfer-github-code/commit/00f2e23887aa8df20006f4e6738c9b9e98b0b6a9",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/00f2e23887aa8df20006f4e6738c9b9e98b0b6a9/comments",
      "commit": {
        "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/commits/00f2e23887aa8df20006f4e6738c9b9e98b0b6a9",
        "author": {
          "date": "2023-08-28T18:36:54.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "committer": {
          "date": "2023-08-28T18:36:54.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "message": "--------------------------------------------------------------------------------------------------------------------------------------------\n1448. (THEORY and FEATURE) GIS Urban Sprawl Analytics - Implementation of OECD-GHSL-JRC Functional Urban Area Lineation Regression Model for Global Human Settlement Layer - Chennai Metropolitan Area Example - 28 Augut 2023 - related to 823,1163,1164,1174,1175,1177,1179,1194,1211,1226,1234,1290,1291,1292,1295,1296,1297,1301,1302,1304,1312,1313,1320,1323,1326,1328,1342,1343,1349,1350,1351,1362,1363,1377,1386,1387,1395,1397,1398,1412,1414,1423 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Gridded Population Estimators (SEDAC GPW4 and GHSL convex hull estimators), DBSCAN and Neural Network Urban Extent Learners, Computational Geometry, Intrinsic Merit Rankings, Verlhulste-R Ricker Population Estimation, Community detection, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry and Polygonal packing by Voronoi Tessellation, Four color theorem, Economic Merit, Computational Economics - GDP estimation from Urban sprawl demographics, electricity consumption, Poverty alleviation, Preferential Attachment, Automatic Delineation of Urban Sprawls, Cellular Automata-SLEUTH-Polya Urn-Dynamic Facegraph Urban Growth Models,Expander Graphs,Timeseries analysis,Graph Edit Distance and Earth mover distance, Face recognition,Graph Isomorphism (Exact, Approximate and Subgraph),Graph matching,Graph similarity,Image Search,Quadrilateral Mesh Deformation and Isomorphism,Maximum Common Subgraph Problem and Approximate Topological Matching\n--------------------------------------------------------------------------------------------------------------------------------------------\n1448.1 python-src/image_pattern_mining/ImageNet/GISUrbanSprawlAnalytics.py has been updated to define a new function that implements quadratic regression model (2) for functional urban area delineation (FUA) described in paper:  Metropolitan areas in the world - Delineation and population trends - [OECD-GHSL-JRC] - https://www.sciencedirect.com/science/article/pii/S0094119020300139 - \"..... 𝐹𝑈𝐴𝑖𝑗𝐶 = 𝛽0 + ∑2 𝑘=1 𝛽𝑘𝑑𝑖𝑠𝑡𝑘 𝑖𝑗𝐶 + 𝛾1𝑠𝑖𝑧𝑒𝑖𝑗𝐶 + ∑2 𝑘=1 𝜑𝑘𝑝𝑜𝑝𝑘 𝑗𝐶 + ω𝐺𝐷𝑃𝐶 + ∈𝑖𝑗𝐶 (2).....\" - referenced in Section 1423.8\n1448.2 Function  functional_urban_area_delineation_GHSL_regression(b0,b1,b2,distij,g1,sizeij,p1,p2,populationj,w,gdp,epsilonij) interprets the parameters of the above regression as below:\n    FUAij = b0 + b1*distij + b2*distij*distij + g1*sizeij + p1*populationj + p2*populationj*populationj + w*gdp + epsilonij\n    print(\"b0 (bias):\",b0)\n    print(\"b1 (distance weight1):\",b1)\n    print(\"b2 (distance weight2):\",b2)\n    print(\"distij (distance of the GHSL cell i from urban center j) in kilometers:\",distij)\n    print(\"g1 (size weight):\",g1)\n    print(\"sizeij (size of the cell j) in square kilometers:\",sizeij)\n    print(\"p1 (population weight1):\",p1)\n    print(\"p2 (population weight2):\",p2)\n    print(\"populationj (population of the urban area):\",populationj)\n    print(\"w (GDP weight):\",w)\n    print(\"gdp (GDP of the urban area or country) in billion dollars:\",gdp)\n    print(\"error term(epsilonij):\",epsilonij)\n    print(\"FUAij (can be converted to a boolean value for whether periurban cell i belongs to urban area j):\",FUAij)\n1448.3 Delineation function is invoked for parameters functional_urban_area_delineation_GHSL_regression(0.01,0.01,0.01,100,0.01,1,0.01,0.01,16079611,0.01,130,0.01) which correspond to GHSL R2023A study in 1423 of Chennai Metropolitan Area - for (*) a GHSL class 21 periurban cell of 1 square kilometer (growth rate of 25.377%) at a distance of 100 kilometers from urban center (*) metropolitan area population of 1,60,79,611 in 2023 (computed by Verhulste population growth model for annual growth rate of 2.39% based on 2022 Chennai metropolitan area population of 1.59 crores - Sections 1343 and 1350.14) and (*) Chennai Metropolitan Area GDP of $130 billion (GDP estimate sources: https://en.wikipedia.org/wiki/Chennai_metropolitan_area - $130 billion and https://en.wikipedia.org/wiki/Economy_of_Chennai - $200 billion). Presently the sizeij (cell size) values are presumptive and can be substituted from a raster GeoTIFF file.\n1448.4 Earlier formula (2) is probably a first ever official regression for urban area delineation independent of machine learning-cellular automata models (1226.13),Polya Urn urban growth models and NightTimeLights radiance and it replaces urban area size by its population as proxy.\n1448.5 Computation of FUA value for above data is at python-src/image_pattern_mining/ImageNet/testlogs/GISUrbanSprawlAnalytics.log.28August2023 and can be normalized to a boolean value by adjustment of regression weights (by predefined minimum and maximum values for FUAij):\n   FUAij (can be converted to a boolean value for whether periurban cell i belongs to urban area j): 2585539060011.65\n1448.6 Population is chosen as a predictor of urban area size as described in the model (2) of the paper - \"...... we compare three different proxies for urban centre size: area, population and nightlight.....\" while model (1) (section 1423.8) relied on number of cars which are proportional to nightlights. Distance in above model is actually proportional to the travel time from cell i to urban center j by public or private transport (or ease of mobility) - though it is still debatable on which travel time (fastest or slowest mode) has to be chosen.\n1448.7 Travel time to a periurban cell and Isochrone ego graphs in general could be estimated from Google Maps Live Traffic ViteJS implementation in NeuronRain Grafit (Drive Time Radius Isochrones are periodic snapshots of live traffic) - Section 1387 - https://github.com/shrinivaasanka/Grafit/tree/master/course_material/Programming/GUI/code/livetraffic . Emphasis on size of urban center as one of the FUA criteria is a rephrasal of preferential attachment (Big cities tend to get Bigger) - quoted excerpts from the paper - \"...... Travel time from each cell to the urban centre is the most powerful predictor of the probability of belonging to a FUA, followed by the size of the urban centre .....\"",
        "tree": {
          "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/trees/dabc42966ce716ccba465f4ce89fa2004a0fee2e",
          "sha": "dabc42966ce716ccba465f4ce89fa2004a0fee2e"
        },
        "comment_count": 0
      },
      "author": null,
      "committer": null,
      "parents": [
        {
          "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/7049e4ade302497253a60ae8e2e9002e6de5ceed",
          "html_url": "https://github.com/shrinivaasanka/asfer-github-code/commit/7049e4ade302497253a60ae8e2e9002e6de5ceed",
          "sha": "7049e4ade302497253a60ae8e2e9002e6de5ceed"
        }
      ],
      "repository": {
        "id": 36945272,
        "node_id": "MDEwOlJlcG9zaXRvcnkzNjk0NTI3Mg==",
        "name": "asfer-github-code",
        "full_name": "shrinivaasanka/asfer-github-code",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/asfer-github-code",
        "description": "Derived from http://sourceforge.net/p/asfer/",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/deployments"
      },
      "score": 1.0,
      "text_matches": [
        {
          "object_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/00f2e23887aa8df20006f4e6738c9b9e98b0b6a9",
          "object_type": "CommitMessage",
          "property": "message",
          "fragment": "--------------------------------------------------------------------------------------------------------------------------------------------\n1448. (THEORY and FEATURE) GIS Urban Sprawl Analytics - Implementation of OECD-GHSL-JRC Functional Urban Area Lineation Regression Model for Global Human Settlement Layer - Chennai Metropolitan Area Example - 28 Augut 2023 - related to 823,1163,1164,1174,1175,1177,1179,1194,1211,1226,1234,1290,1291,1292,1295,1296,1297,1301,1302,1304,1312,1313,1320,1323,1326,1328,1342,1343,1349,1350,1351,1362,1363,1377,1386,1387,1395,1397,1398,1412,1414,1423 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Gridded Population Estimators (SEDAC GPW4 and GHSL convex hull estimators), DBSCAN and Neural Network Urban Extent Learners, Computational Geometry, Intrinsic Merit Rankings, Verlhulste-R Ricker Population Estimation, Community detection, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry and Polygonal packing by Voronoi Tessellation, Four color theorem, Economic Merit, Computational Economics - GDP estimation from Urban sprawl demographics, electricity consumption, Poverty alleviation, Preferential Attachment, Automatic Delineation of Urban Sprawls, Cellular Automata-SLEUTH-Polya Urn-Dynamic Facegraph Urban Growth Models,Expander Graphs,Timeseries analysis,Graph Edit Distance and Earth mover distance, Face recognition,Graph Isomorphism (Exact, Approximate and Subgraph),Graph matching,Graph similarity,Image Search,Quadrilateral Mesh Deformation and Isomorphism,Maximum Common Subgraph Problem and Approximate Topological Matching\n--------------------------------------------------------------------------------------------------------------------------------------------\n1448.1 python-src/image_pattern_mining/ImageNet/GISUrbanSprawlAnalytics.py has been updated to define a new function that implements quadratic regression model (2) for functional urban area delineation (FUA) described in paper:  Metropolitan areas in the world - Delineation and population trends - [OECD-GHSL-JRC] - https://www.sciencedirect.com/science/article/pii/S0094119020300139 - \"..... 𝐹𝑈𝐴𝑖𝑗𝐶 = 𝛽0 + ∑2 𝑘=1 𝛽𝑘𝑑𝑖𝑠𝑡𝑘 𝑖𝑗𝐶 + 𝛾1𝑠𝑖𝑧𝑒𝑖𝑗𝐶 + ∑2 𝑘=1 𝜑𝑘𝑝𝑜𝑝𝑘 𝑗𝐶 + ω𝐺𝐷𝑃𝐶 + ∈𝑖𝑗𝐶 (2).....\" - referenced in Section 1423.8\n1448.2 Function  functional_urban_area_delineation_GHSL_regression(b0,b1,b2,distij,g1,sizeij,p1,p2,populationj,w,gdp,epsilonij) interprets the parameters of the above regression as below:\n    FUAij = b0 + b1*distij + b2*distij*distij + g1*sizeij + p1*populationj + p2*populationj*populationj + w*gdp + epsilonij\n    print(\"b0 (bias):\",b0)\n    print(\"b1 (distance weight1):\",b1)\n    print(\"b2 (distance weight2):\",b2)\n    print(\"distij (distance of the GHSL cell i from urban center j) in kilometers:\",distij)\n    print(\"g1 (size weight):\",g1)\n    print(\"sizeij (size of the cell j) in square kilometers:\",sizeij)\n    print(\"p1 (population weight1):\",p1)\n    print(\"p2 (population weight2):\",p2)\n    print(\"populationj (population of the urban area):\",populationj)\n    print(\"w (GDP weight):\",w)\n    print(\"gdp (GDP of the urban area or country) in billion dollars:\",gdp)\n    print(\"error term(epsilonij):\",epsilonij)\n    print(\"FUAij (can be converted to a boolean value for whether periurban cell i belongs to urban area j):\",FUAij)\n1448.3 Delineation function is invoked for parameters functional_urban_area_delineation_GHSL_regression(0.01,0.01,0.01,100,0.01,1,0.01,0.01,16079611,0.01,130,0.01) which correspond to GHSL R2023A study in 1423 of Chennai Metropolitan Area - for (*) a GHSL class 21 periurban cell of 1 square kilometer (growth rate of 25.377%) at a distance of 100 kilometers from urban center (*) metropolitan area population of 1,60,79,611 in 2023 (computed by Verhulste population growth model for annual growth rate of 2.39% based on 2022 Chennai metropolitan area population of 1.59 crores - Sections 1343 and 1350.14) and (*) Chennai Metropolitan Area GDP of $130 billion (GDP estimate sources: https://en.wikipedia.org/wiki/Chennai_metropolitan_area - $130 billion and https://en.wikipedia.org/wiki/Economy_of_Chennai - $200 billion). Presently the sizeij (cell size) values are presumptive and can be substituted from a raster GeoTIFF file.\n1448.4 Earlier formula (2) is probably a first ever official regression for urban area delineation independent of machine learning-cellular automata models (1226.13),Polya Urn urban growth models and NightTimeLights radiance and it replaces urban area size by its population as proxy.\n1448.5 Computation of FUA value for above data is at python-src/image_pattern_mining/ImageNet/testlogs/GISUrbanSprawlAnalytics.log.28August2023 and can be normalized to a boolean value by adjustment of regression weights (by predefined minimum and maximum values for FUAij):\n   FUAij (can be converted to a boolean value for whether periurban cell i belongs to urban area j): 2585539060011.65\n1448.6 Population is chosen as a predictor of urban area size as described in the model (2) of the paper - \"...... we compare three different proxies for urban centre size: area, population and nightlight.....\" while model (1) (section 1423.8) relied on number of cars which are proportional to nightlights. Distance in above model is actually proportional to the travel time from cell i to urban center j by public or private transport (or ease of mobility) - though it is still debatable on which travel time (fastest or slowest mode) has to be chosen.\n1448.7 Travel time to a periurban cell and Isochrone ego graphs in general could be estimated from Google Maps Live Traffic ViteJS implementation in NeuronRain Grafit (Drive Time Radius Isochrones are periodic snapshots of live traffic) - Section 1387 - https://github.com/shrinivaasanka/Grafit/tree/master/course_material/Programming/GUI/code/livetraffic . Emphasis on size of urban center as one of the FUA criteria is a rephrasal of preferential attachment (Big cities tend to get Bigger) - quoted excerpts from the paper - \"...... Travel time from each cell to the urban centre is the most powerful predictor of the probability of belonging to a FUA, followed by the size of the urban centre .....\"",
          "matches": [
            {
              "text": "THEORY and FEATURE",
              "indices": [
                148,
                166
              ]
            },
            {
              "text": "and",
              "indices": [
                586,
                589
              ]
            },
            {
              "text": "and",
              "indices": [
                706,
                709
              ]
            },
            {
              "text": "and",
              "indices": [
                747,
                750
              ]
            },
            {
              "text": "and",
              "indices": [
                969,
                972
              ]
            },
            {
              "text": "and",
              "indices": [
                1016,
                1019
              ]
            },
            {
              "text": "and",
              "indices": [
                1412,
                1415
              ]
            },
            {
              "text": "and",
              "indices": [
                1493,
                1496
              ]
            },
            {
              "text": "and",
              "indices": [
                1583,
                1586
              ]
            },
            {
              "text": "and",
              "indices": [
                1631,
                1634
              ]
            },
            {
              "text": "and",
              "indices": [
                2084,
                2087
              ]
            },
            {
              "text": "and",
              "indices": [
                3951,
                3954
              ]
            },
            {
              "text": "and",
              "indices": [
                3964,
                3967
              ]
            },
            {
              "text": "and",
              "indices": [
                4112,
                4115
              ]
            },
            {
              "text": "and",
              "indices": [
                4238,
                4241
              ]
            },
            {
              "text": "and",
              "indices": [
                4485,
                4488
              ]
            },
            {
              "text": "and",
              "indices": [
                4514,
                4517
              ]
            },
            {
              "text": "and",
              "indices": [
                4718,
                4721
              ]
            },
            {
              "text": "and",
              "indices": [
                4818,
                4821
              ]
            },
            {
              "text": "and",
              "indices": [
                5157,
                5160
              ]
            },
            {
              "text": "and",
              "indices": [
                5561,
                5564
              ]
            },
            {
              "text": "shrinivaasanka",
              "indices": [
                5795,
                5809
              ]
            }
          ]
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/69e876fc6073ef4423445f2a765661639dcb91c2",
      "sha": "69e876fc6073ef4423445f2a765661639dcb91c2",
      "node_id": "MDY6Q29tbWl0MzY5NDUyNzI6NjllODc2ZmM2MDczZWY0NDIzNDQ1ZjJhNzY1NjYxNjM5ZGNiOTFjMg==",
      "html_url": "https://github.com/shrinivaasanka/asfer-github-code/commit/69e876fc6073ef4423445f2a765661639dcb91c2",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/69e876fc6073ef4423445f2a765661639dcb91c2/comments",
      "commit": {
        "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/commits/69e876fc6073ef4423445f2a765661639dcb91c2",
        "author": {
          "date": "2020-01-30T12:14:40.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "committer": {
          "date": "2020-01-30T12:14:40.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "message": "---------------------------------------------------------------------------------------------------------------------------------------------\n744. (THEORY and FEATURE) Chaotic Pseudorandom Generator - Python 3.7.5 upgrade, Computational Geometric Factorization - 30 January 2020 -\nrelated to all sections on Pseudorandom Generators, Chaos and Factorization\n---------------------------------------------------------------------------------------------------------------------------------------------\n1.This commit upgrades Chaos Pseudorandom Generator implementation to Python 3.7.5 by autopep8 followed by 2to3, which is the defacto NeuronRain recommended python version for performance reasons.\n2.Both Logistic and Lehmer-Palmore PRGs have been tested on Python 3.7.5 + R-py2 combine and logs are committed to testlogs/ChaosAttractor.Python3.7.5Upgrade.30January2020\n3.GRAFIT course material on Geometric search of BigData in https://github.com/shrinivaasanka/Grafit/blob/master/course_material/NeuronRain/LinuxKernelAndCloud/BigdataAnalyticsCloud_CourseNotes.txt describe a Randomized NC factorization algorithm based on Parallel Chaotic Pseudorandom Generator and Central Limit Theorem based Space filling Linear Program mentioned in drafts - https://sites.google.com/site/kuja27/ChaoticPRG.pdf and https://sites.google.com/site/kuja27/Analysis%20of%20a%20Randomized%20Space%20Filling%20Algorithm%20and%20its%20Linear%20Program%20Formulation.pdf .\n4.Exact PRAM-NC-BSP computational geometric factorization algorithm implemented on Spark in NeuronRain AstroInfer is the derandomized version of Randomized NC Bernoulli trials factorization algorithm in https://github.com/shrinivaasanka/Grafit/blob/master/course_material/NeuronRain/LinuxKernelAndCloud/BigdataAnalyticsCloud_CourseNotes.txt which has the success probability of finding atleast one prime factor pr(m) = (1 - sqrt(2N)/(N*sqrt(2) - sqrt(2) - sqrt(N)))^(m-1)*(sqrt(2N)/(N*sqrt(2) - sqrt(2) - sqrt(N)) after m trials for square embedded hyperbolic arc. Expected number of trials E(m) before atleast one factor is found = sum_x=1-to-N(x*pr(x))\n5.Thus NeuronRain Theory drafts define 3 different Nick's class Computational Geometric Integer factorization algorithms - Randomized NC, Quantum NC, Exact NC - which transition from a randomized, cohered quantum state to classical exact decohered state.",
        "tree": {
          "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/trees/d2b9b295388c70c6289354674f09a58246755127",
          "sha": "d2b9b295388c70c6289354674f09a58246755127"
        },
        "comment_count": 0
      },
      "author": null,
      "committer": null,
      "parents": [
        {
          "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/e827e2bf814783c9649c9682983f078fc8104c5b",
          "html_url": "https://github.com/shrinivaasanka/asfer-github-code/commit/e827e2bf814783c9649c9682983f078fc8104c5b",
          "sha": "e827e2bf814783c9649c9682983f078fc8104c5b"
        }
      ],
      "repository": {
        "id": 36945272,
        "node_id": "MDEwOlJlcG9zaXRvcnkzNjk0NTI3Mg==",
        "name": "asfer-github-code",
        "full_name": "shrinivaasanka/asfer-github-code",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/asfer-github-code",
        "description": "Derived from http://sourceforge.net/p/asfer/",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/deployments"
      },
      "score": 1.0,
      "text_matches": [
        {
          "object_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/69e876fc6073ef4423445f2a765661639dcb91c2",
          "object_type": "CommitMessage",
          "property": "message",
          "fragment": "---------------------------------------------------------------------------------------------------------------------------------------------\n744. (THEORY and FEATURE) Chaotic Pseudorandom Generator - Python 3.7.5 upgrade, Computational Geometric Factorization - 30 January 2020 -\nrelated to all sections on Pseudorandom Generators, Chaos and Factorization\n---------------------------------------------------------------------------------------------------------------------------------------------\n1.This commit upgrades Chaos Pseudorandom Generator implementation to Python 3.7.5 by autopep8 followed by 2to3, which is the defacto NeuronRain recommended python version for performance reasons.\n2.Both Logistic and Lehmer-Palmore PRGs have been tested on Python 3.7.5 + R-py2 combine and logs are committed to testlogs/ChaosAttractor.Python3.7.5Upgrade.30January2020\n3.GRAFIT course material on Geometric search of BigData in https://github.com/shrinivaasanka/Grafit/blob/master/course_material/NeuronRain/LinuxKernelAndCloud/BigdataAnalyticsCloud_CourseNotes.txt describe a Randomized NC factorization algorithm based on Parallel Chaotic Pseudorandom Generator and Central Limit Theorem based Space filling Linear Program mentioned in drafts - https://sites.google.com/site/kuja27/ChaoticPRG.pdf and https://sites.google.com/site/kuja27/Analysis%20of%20a%20Randomized%20Space%20Filling%20Algorithm%20and%20its%20Linear%20Program%20Formulation.pdf .\n4.Exact PRAM-NC-BSP computational geometric factorization algorithm implemented on Spark in NeuronRain AstroInfer is the derandomized version of Randomized NC Bernoulli trials factorization algorithm in https://github.com/shrinivaasanka/Grafit/blob/master/course_material/NeuronRain/LinuxKernelAndCloud/BigdataAnalyticsCloud_CourseNotes.txt which has the success probability of finding atleast one prime factor pr(m) = (1 - sqrt(2N)/(N*sqrt(2) - sqrt(2) - sqrt(N)))^(m-1)*(sqrt(2N)/(N*sqrt(2) - sqrt(2) - sqrt(N)) after m trials for square embedded hyperbolic arc. Expected number of trials E(m) before atleast one factor is found = sum_x=1-to-N(x*pr(x))\n5.Thus NeuronRain Theory drafts define 3 different Nick's class Computational Geometric Integer factorization algorithms - Randomized NC, Quantum NC, Exact NC - which transition from a randomized, cohered quantum state to classical exact decohered state.",
          "matches": [
            {
              "text": "THEORY and FEATURE",
              "indices": [
                148,
                166
              ]
            },
            {
              "text": "and",
              "indices": [
                339,
                342
              ]
            },
            {
              "text": "and",
              "indices": [
                712,
                715
              ]
            },
            {
              "text": "and",
              "indices": [
                785,
                788
              ]
            },
            {
              "text": "shrinivaasanka",
              "indices": [
                946,
                960
              ]
            },
            {
              "text": "and",
              "indices": [
                1163,
                1166
              ]
            },
            {
              "text": "and",
              "indices": [
                1298,
                1301
              ]
            },
            {
              "text": "shrinivaasanka",
              "indices": [
                1673,
                1687
              ]
            },
            {
              "text": "Theory",
              "indices": [
                2124,
                2130
              ]
            }
          ]
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/c44ce22d97295c32abdcc63d8bc02d6c7882bb2e",
      "sha": "c44ce22d97295c32abdcc63d8bc02d6c7882bb2e",
      "node_id": "MDY6Q29tbWl0MzY5NDUyNzI6YzQ0Y2UyMmQ5NzI5NWMzMmFiZGNjNjNkOGJjMDJkNmM3ODgyYmIyZQ==",
      "html_url": "https://github.com/shrinivaasanka/asfer-github-code/commit/c44ce22d97295c32abdcc63d8bc02d6c7882bb2e",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/c44ce22d97295c32abdcc63d8bc02d6c7882bb2e/comments",
      "commit": {
        "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/commits/c44ce22d97295c32abdcc63d8bc02d6c7882bb2e",
        "author": {
          "date": "2022-06-24T17:20:28.000+05:30",
          "name": "Krishna iResearch - NeuronRain - K.Srinivasan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "committer": {
          "date": "2022-06-24T17:20:28.000+05:30",
          "name": "Krishna iResearch - NeuronRain - K.Srinivasan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "message": "-------------------------------------------------------------------------------------------------------------------------------\n1263. (THEORY and FEATURE) People Analytics - Social Network Analysis (Professional) - Chaotic Hidden Markov Model of Career Transition - JSON persistence to MongoDB - 24 June 2022 - related to 14,365,711,753,876,1127,1128,1129,1130,1204 and all sections on People Analytics, Intrinsic Merit Versus Fame Equilibrium, BKS Conjecture, Stability and Noise Sensitivity of Interview LTF/PTF,Peres Theorem,Unique Identification,HR Analytics and Automated Recruitment,Question-Answering,Majority Voting,Condorcet Jury Theorem Variants,Margulis-Ruzzo Thresholds,Novelty Detection,Recommender Systems,Urban Sprawl Analytics, AI Question-Answering\n-------------------------------------------------------------------------------------------------------------------------------\n1263.1 SocialNetworkAnalysis_PeopleAnalytics_ChaoticHMM.py has been changed to read career profile JSONs from MongoDB instead of flatfile. Streaming_AbstractGenerator.py has been accordingly updated to include a clause for MongoDB-JSON object streaming in addition to existing clause for MongoDB-GIS Visual object streaming - MongoDB client code for database (neuronrainjson) and collections have been made part of the __init__ and __iter__ member functions.\n1263.2 An example career transition profile JSON of author SocialNetworkAnalysis_PeopleAnalytics_ChaoticHMM.json has been populated in a MongoDB database neuronrainjson and collection \"bucket2\" which is read as an iterable by Streaming_AbstractGenerator.py\n1263.3 Logs for earlier code changes - testlogs/SocialNetworkAnalysis_PeopleAnalytics_ChaoticHMM.log.24June2022. Merit of Social or Professional Profiles in candidate recruitment or complexity of Human Interviews/Contests/Question-Answering in its broader theoretical HR analytics context, have been central to the discussions throughout NeuronRain theory drafts supra formalized by a supremacy contrast between Hardness and Goodness of Majority voting and Hardness and Goodness of Intrinsic Merit. Recently there have two significant strides in AI - GPT3 and DALL-E - which are respectively *) AI text question-answering and *) text-to-image generation systems (converse of image-to-text ImageNet and could be thought visualizer for ThoughtNet and Autobiographical Memory Evocation) mostly driven by massive datasets and transformer attention sequence pipeline. Computational complexity of Question-Answering (Interview algorithm) has been theoretically analyzed in NeuronRain Design - in https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/blob/master/kuja27_website_mirrored/site/kuja27/InterviewAlgorithmInPSPACE.pdf as Total Quantified Boolean Formulae(TQBF), a PSPACE-complete problem, and as Linear Threshold Functions-Polynomial Threshold Functions.\n\nReferences:\n----------\n1263.4 GPT3 - OpenAI - https://arxiv.org/pdf/2005.14165.pdf, https://github.com/openai/gpt-3\n1263.5 DALL-E - OpenAI - https://openai.com/blog/dall-e/\n1263.6 Question answering by humans and machines: A complexity-theoretic view - https://www.sciencedirect.com/science/article/abs/pii/S0304397518305280 - \"... We show that cognitive automata and QA-machines have exactly the same potential in realizing question-answering sessions, provided the resource bounds in one model are sufficient to match the abilities of the other. In particular, polynomially bounded cognitive automata with background intelligence (i.e. human agents) prove to be equivalent to polynomially bounded QA-machines with logarithmic learning space. It generalizes Pippenger's theorem on the computational power of switching circuits (without background intelligence) to a foundational result for question answering in cognitive science. ...\"",
        "tree": {
          "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/trees/4a321e566cfbcd850ba535781e6f6e3d90835958",
          "sha": "4a321e566cfbcd850ba535781e6f6e3d90835958"
        },
        "comment_count": 1
      },
      "author": null,
      "committer": null,
      "parents": [
        {
          "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/b39cf65bfb94e3653c92ffd63c9e0cf46b010344",
          "html_url": "https://github.com/shrinivaasanka/asfer-github-code/commit/b39cf65bfb94e3653c92ffd63c9e0cf46b010344",
          "sha": "b39cf65bfb94e3653c92ffd63c9e0cf46b010344"
        }
      ],
      "repository": {
        "id": 36945272,
        "node_id": "MDEwOlJlcG9zaXRvcnkzNjk0NTI3Mg==",
        "name": "asfer-github-code",
        "full_name": "shrinivaasanka/asfer-github-code",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/asfer-github-code",
        "description": "Derived from http://sourceforge.net/p/asfer/",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/deployments"
      },
      "score": 1.0,
      "text_matches": [
        {
          "object_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/c44ce22d97295c32abdcc63d8bc02d6c7882bb2e",
          "object_type": "CommitMessage",
          "property": "message",
          "fragment": "-------------------------------------------------------------------------------------------------------------------------------\n1263. (THEORY and FEATURE) People Analytics - Social Network Analysis (Professional) - Chaotic Hidden Markov Model of Career Transition - JSON persistence to MongoDB - 24 June 2022 - related to 14,365,711,753,876,1127,1128,1129,1130,1204 and all sections on People Analytics, Intrinsic Merit Versus Fame Equilibrium, BKS Conjecture, Stability and Noise Sensitivity of Interview LTF/PTF,Peres Theorem,Unique Identification,HR Analytics and Automated Recruitment,Question-Answering,Majority Voting,Condorcet Jury Theorem Variants,Margulis-Ruzzo Thresholds,Novelty Detection,Recommender Systems,Urban Sprawl Analytics, AI Question-Answering\n-------------------------------------------------------------------------------------------------------------------------------\n1263.1 SocialNetworkAnalysis_PeopleAnalytics_ChaoticHMM.py has been changed to read career profile JSONs from MongoDB instead of flatfile. Streaming_AbstractGenerator.py has been accordingly updated to include a clause for MongoDB-JSON object streaming in addition to existing clause for MongoDB-GIS Visual object streaming - MongoDB client code for database (neuronrainjson) and collections have been made part of the __init__ and __iter__ member functions.\n1263.2 An example career transition profile JSON of author SocialNetworkAnalysis_PeopleAnalytics_ChaoticHMM.json has been populated in a MongoDB database neuronrainjson and collection \"bucket2\" which is read as an iterable by Streaming_AbstractGenerator.py\n1263.3 Logs for earlier code changes - testlogs/SocialNetworkAnalysis_PeopleAnalytics_ChaoticHMM.log.24June2022. Merit of Social or Professional Profiles in candidate recruitment or complexity of Human Interviews/Contests/Question-Answering in its broader theoretical HR analytics context, have been central to the discussions throughout NeuronRain theory drafts supra formalized by a supremacy contrast between Hardness and Goodness of Majority voting and Hardness and Goodness of Intrinsic Merit. Recently there have two significant strides in AI - GPT3 and DALL-E - which are respectively *) AI text question-answering and *) text-to-image generation systems (converse of image-to-text ImageNet and could be thought visualizer for ThoughtNet and Autobiographical Memory Evocation) mostly driven by massive datasets and transformer attention sequence pipeline. Computational complexity of Question-Answering (Interview algorithm) has been theoretically analyzed in NeuronRain Design - in https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/blob/master/kuja27_website_mirrored/site/kuja27/InterviewAlgorithmInPSPACE.pdf as Total Quantified Boolean Formulae(TQBF), a PSPACE-complete problem, and as Linear Threshold Functions-Polynomial Threshold Functions.\n\nReferences:\n----------\n1263.4 GPT3 - OpenAI - https://arxiv.org/pdf/2005.14165.pdf, https://github.com/openai/gpt-3\n1263.5 DALL-E - OpenAI - https://openai.com/blog/dall-e/\n1263.6 Question answering by humans and machines: A complexity-theoretic view - https://www.sciencedirect.com/science/article/abs/pii/S0304397518305280 - \"... We show that cognitive automata and QA-machines have exactly the same potential in realizing question-answering sessions, provided the resource bounds in one model are sufficient to match the abilities of the other. In particular, polynomially bounded cognitive automata with background intelligence (i.e. human agents) prove to be equivalent to polynomially bounded QA-machines with logarithmic learning space. It generalizes Pippenger's theorem on the computational power of switching circuits (without background intelligence) to a foundational result for question answering in cognitive science. ...\"",
          "matches": [
            {
              "text": "THEORY and FEATURE",
              "indices": [
                135,
                153
              ]
            },
            {
              "text": "and",
              "indices": [
                366,
                369
              ]
            },
            {
              "text": "and",
              "indices": [
                471,
                474
              ]
            },
            {
              "text": "and",
              "indices": [
                563,
                566
              ]
            },
            {
              "text": "and",
              "indices": [
                1270,
                1273
              ]
            },
            {
              "text": "and",
              "indices": [
                1322,
                1325
              ]
            },
            {
              "text": "and",
              "indices": [
                1522,
                1525
              ]
            },
            {
              "text": "theory",
              "indices": [
                1959,
                1965
              ]
            },
            {
              "text": "and",
              "indices": [
                2031,
                2034
              ]
            },
            {
              "text": "and",
              "indices": [
                2063,
                2066
              ]
            },
            {
              "text": "and",
              "indices": [
                2076,
                2079
              ]
            },
            {
              "text": "and",
              "indices": [
                2166,
                2169
              ]
            },
            {
              "text": "and",
              "indices": [
                2232,
                2235
              ]
            },
            {
              "text": "and",
              "indices": [
                2308,
                2311
              ]
            },
            {
              "text": "and",
              "indices": [
                2355,
                2358
              ]
            },
            {
              "text": "and",
              "indices": [
                2428,
                2431
              ]
            },
            {
              "text": "shrinivaasanka",
              "indices": [
                2619,
                2633
              ]
            },
            {
              "text": "and",
              "indices": [
                2814,
                2817
              ]
            },
            {
              "text": "and",
              "indices": [
                3090,
                3093
              ]
            },
            {
              "text": "and",
              "indices": [
                3245,
                3248
              ]
            }
          ]
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/bc1123483e6a0d614f0dfa93f073027f42ce62ac",
      "sha": "bc1123483e6a0d614f0dfa93f073027f42ce62ac",
      "node_id": "MDY6Q29tbWl0MzY5NDUyNzI6YmMxMTIzNDgzZTZhMGQ2MTRmMGRmYTkzZjA3MzAyN2Y0MmNlNjJhYw==",
      "html_url": "https://github.com/shrinivaasanka/asfer-github-code/commit/bc1123483e6a0d614f0dfa93f073027f42ce62ac",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/bc1123483e6a0d614f0dfa93f073027f42ce62ac/comments",
      "commit": {
        "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/commits/bc1123483e6a0d614f0dfa93f073027f42ce62ac",
        "author": {
          "date": "2022-01-02T12:39:53.000+05:30",
          "name": "Krishna iResearch - NeuronRain - K.Srinivasan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "committer": {
          "date": "2022-01-02T12:39:53.000+05:30",
          "name": "Krishna iResearch - NeuronRain - K.Srinivasan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "message": "---------------------------------------------------------------------------------------------------------------------------------------------\n1192. (THEORY and FEATURE) Software Analytics - Graph Isomorphism Similarity of Code Callgraphs and Control Flow Graphs - Spark 3.0.1 + Python 3.7.5 - related to 1191,619,770,906,911,771 and all sections on Program Analysis, AsFer-USBmd-VIRGO-KingCobra FTrace kernel callgraph analysis - Valgrind-Callgrind-KCacheGrind-Flamegraph userspace callgraph analysis, SATURN control flow analysis of VIRGO linux kernel, Software Analytics, Pandemic model of Botnet-Defense adversarial Game theoretic security, Cybercrime analytics, Anti-Malware,Anti-Ransomware,Anti-Theft and Anti-Plagiarism tools - 2 January 2022\n---------------------------------------------------------------------------------------------------------------------------------------------\n1192.1 Updated CyclomaticComplexitySparkMapReducer.py software analytics python implementation to define new function graph_matching() which finds Graph Isomorphisms between 2 control flow graphs or callgraphs of executables by VF2 and ISMAGS isomorphism implementations of NetworkX.\n1192.2 Few pairs of SATURN VIRGO linux kernel DOT files, FTrace kernelspace callgraph DOT files, KCacheGrind userspace callgraph DOT files are compared by graph_matching() which internally instantiates NetworkX Graphs from DOT files.\n1192.3 Isomorphisms (Full and Subgraph) are printed to logs testlogs/CyclomaticComplexitySparkMapReducer.log.Python3.7.5.Isomorphism.2January2022 and provide hints to kernelspace and userspace code most invoked by different program executables. Percentage similarities are printed in both directions of Graph matching (G1 -> G2 and G2 -> G1). Callgraphs are matched pairwise and only similar executables are fully isomorphic and subgraph isomorphic while dissimilar executables are not. Matching has been restricted to few pairs only as Graph isomorphism is computationally intensive and its lowerbound complexity is not yet proved.\n1192.4 Graph Isomorphisms are tools to find similarity of codebases belonging to different repositories which is a pointer to frequently common algorithms and design patterns across implementations. Graph Isomorphism Detectors are used in anti-plagiarism tools and analyzing malicious code invocations (if Callgraphs-ControlFlowGraphs in two computers running similar executable are not isomorphic something could be brewing - one of them could be infected).\n1192.5 Previous code change implements an item specified in https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/blob/master/kuja27_website_mirrored/site/kuja27/PhDThesisProposal.pdf on isomorphism of Program Control Flow Graphs (SATURN-FTrace-Valgrind-Callgrind-KCacheGrind) and Slice Dependency Graphs.\n1192.6 FTrace logs and DOT files of kernelspace callgraphs for \"find\" and \"pwd\" executables created by asfer_ftrace.sh and parsed to DOT by:\n        ftrace_callgraph_dot(\"ftrace.pwd.log\")\n        ftrace_callgraph_dot(\"ftrace.find.log\")\nhave been added to repositories:\n        find.ftrace_callgraph.dot\n        ftrace.find.log\n        ftrace.pwd.log\n        pwd.ftrace_callgraph.dot\n1192.7 Isomorphism iterations and ISMGAS symmetry have been made configurable arguments and set to default 25 and False respectively. CyclomaticComplexitySparkMapReducer.py has been upgraded to Python 3.7.5 + Spark 3.0.1 by autopep8 and 2to3 utilities. Python 2.7 version of CyclomaticComplexitySparkMapReducer.py has been renamed to CyclomaticComplexitySparkMapReducer.py.2.7.",
        "tree": {
          "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/trees/044e0cc8b2896a5268e9566a840ccfd4fd94beff",
          "sha": "044e0cc8b2896a5268e9566a840ccfd4fd94beff"
        },
        "comment_count": 0
      },
      "author": null,
      "committer": null,
      "parents": [
        {
          "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/359f1f164ab815c6c4d57efffc9122a134bc9ece",
          "html_url": "https://github.com/shrinivaasanka/asfer-github-code/commit/359f1f164ab815c6c4d57efffc9122a134bc9ece",
          "sha": "359f1f164ab815c6c4d57efffc9122a134bc9ece"
        }
      ],
      "repository": {
        "id": 36945272,
        "node_id": "MDEwOlJlcG9zaXRvcnkzNjk0NTI3Mg==",
        "name": "asfer-github-code",
        "full_name": "shrinivaasanka/asfer-github-code",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/asfer-github-code",
        "description": "Derived from http://sourceforge.net/p/asfer/",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/deployments"
      },
      "score": 1.0,
      "text_matches": [
        {
          "object_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/bc1123483e6a0d614f0dfa93f073027f42ce62ac",
          "object_type": "CommitMessage",
          "property": "message",
          "fragment": "---------------------------------------------------------------------------------------------------------------------------------------------\n1192. (THEORY and FEATURE) Software Analytics - Graph Isomorphism Similarity of Code Callgraphs and Control Flow Graphs - Spark 3.0.1 + Python 3.7.5 - related to 1191,619,770,906,911,771 and all sections on Program Analysis, AsFer-USBmd-VIRGO-KingCobra FTrace kernel callgraph analysis - Valgrind-Callgrind-KCacheGrind-Flamegraph userspace callgraph analysis, SATURN control flow analysis of VIRGO linux kernel, Software Analytics, Pandemic model of Botnet-Defense adversarial Game theoretic security, Cybercrime analytics, Anti-Malware,Anti-Ransomware,Anti-Theft and Anti-Plagiarism tools - 2 January 2022\n---------------------------------------------------------------------------------------------------------------------------------------------\n1192.1 Updated CyclomaticComplexitySparkMapReducer.py software analytics python implementation to define new function graph_matching() which finds Graph Isomorphisms between 2 control flow graphs or callgraphs of executables by VF2 and ISMAGS isomorphism implementations of NetworkX.\n1192.2 Few pairs of SATURN VIRGO linux kernel DOT files, FTrace kernelspace callgraph DOT files, KCacheGrind userspace callgraph DOT files are compared by graph_matching() which internally instantiates NetworkX Graphs from DOT files.\n1192.3 Isomorphisms (Full and Subgraph) are printed to logs testlogs/CyclomaticComplexitySparkMapReducer.log.Python3.7.5.Isomorphism.2January2022 and provide hints to kernelspace and userspace code most invoked by different program executables. Percentage similarities are printed in both directions of Graph matching (G1 -> G2 and G2 -> G1). Callgraphs are matched pairwise and only similar executables are fully isomorphic and subgraph isomorphic while dissimilar executables are not. Matching has been restricted to few pairs only as Graph isomorphism is computationally intensive and its lowerbound complexity is not yet proved.\n1192.4 Graph Isomorphisms are tools to find similarity of codebases belonging to different repositories which is a pointer to frequently common algorithms and design patterns across implementations. Graph Isomorphism Detectors are used in anti-plagiarism tools and analyzing malicious code invocations (if Callgraphs-ControlFlowGraphs in two computers running similar executable are not isomorphic something could be brewing - one of them could be infected).\n1192.5 Previous code change implements an item specified in https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/blob/master/kuja27_website_mirrored/site/kuja27/PhDThesisProposal.pdf on isomorphism of Program Control Flow Graphs (SATURN-FTrace-Valgrind-Callgrind-KCacheGrind) and Slice Dependency Graphs.\n1192.6 FTrace logs and DOT files of kernelspace callgraphs for \"find\" and \"pwd\" executables created by asfer_ftrace.sh and parsed to DOT by:\n        ftrace_callgraph_dot(\"ftrace.pwd.log\")\n        ftrace_callgraph_dot(\"ftrace.find.log\")\nhave been added to repositories:\n        find.ftrace_callgraph.dot\n        ftrace.find.log\n        ftrace.pwd.log\n        pwd.ftrace_callgraph.dot\n1192.7 Isomorphism iterations and ISMGAS symmetry have been made configurable arguments and set to default 25 and False respectively. CyclomaticComplexitySparkMapReducer.py has been upgraded to Python 3.7.5 + Spark 3.0.1 by autopep8 and 2to3 utilities. Python 2.7 version of CyclomaticComplexitySparkMapReducer.py has been renamed to CyclomaticComplexitySparkMapReducer.py.2.7.",
          "matches": [
            {
              "text": "THEORY and FEATURE",
              "indices": [
                149,
                167
              ]
            },
            {
              "text": "and",
              "indices": [
                238,
                241
              ]
            },
            {
              "text": "and",
              "indices": [
                329,
                332
              ]
            },
            {
              "text": "and",
              "indices": [
                706,
                709
              ]
            },
            {
              "text": "and",
              "indices": [
                1123,
                1126
              ]
            },
            {
              "text": "and",
              "indices": [
                1435,
                1438
              ]
            },
            {
              "text": "and",
              "indices": [
                1555,
                1558
              ]
            },
            {
              "text": "and",
              "indices": [
                1588,
                1591
              ]
            },
            {
              "text": "and",
              "indices": [
                1737,
                1740
              ]
            },
            {
              "text": "and",
              "indices": [
                1784,
                1787
              ]
            },
            {
              "text": "and",
              "indices": [
                1834,
                1837
              ]
            },
            {
              "text": "and",
              "indices": [
                1993,
                1996
              ]
            },
            {
              "text": "and",
              "indices": [
                2197,
                2200
              ]
            },
            {
              "text": "and",
              "indices": [
                2303,
                2306
              ]
            },
            {
              "text": "shrinivaasanka",
              "indices": [
                2580,
                2594
              ]
            },
            {
              "text": "and",
              "indices": [
                2788,
                2791
              ]
            },
            {
              "text": "and",
              "indices": [
                2836,
                2839
              ]
            },
            {
              "text": "and",
              "indices": [
                2887,
                2890
              ]
            },
            {
              "text": "and",
              "indices": [
                2936,
                2939
              ]
            },
            {
              "text": "and",
              "indices": [
                3230,
                3233
              ]
            },
            {
              "text": "and",
              "indices": [
                3288,
                3291
              ]
            },
            {
              "text": "and",
              "indices": [
                3310,
                3313
              ]
            },
            {
              "text": "and",
              "indices": [
                3433,
                3436
              ]
            }
          ]
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/03834b0826419cf603688b04bdc61a07d6902d31",
      "sha": "03834b0826419cf603688b04bdc61a07d6902d31",
      "node_id": "MDY6Q29tbWl0MzY5NDUyNzI6MDM4MzRiMDgyNjQxOWNmNjAzNjg4YjA0YmRjNjFhMDdkNjkwMmQzMQ==",
      "html_url": "https://github.com/shrinivaasanka/asfer-github-code/commit/03834b0826419cf603688b04bdc61a07d6902d31",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/03834b0826419cf603688b04bdc61a07d6902d31/comments",
      "commit": {
        "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/commits/03834b0826419cf603688b04bdc61a07d6902d31",
        "author": {
          "date": "2019-10-09T12:41:51.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "committer": {
          "date": "2019-10-09T12:41:51.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "message": "---------------------------------------------------------------------------------------------------------------------------------------------\n718. (THEORY and FEATURE) People Analytics - Set Partition Analytics based Drone Electronic Voting Machine - updated - 9 October 2019 - related to 713\n---------------------------------------------------------------------------------------------------------------------------------------------\n1.Streaming_SetPartitionAnalytics.py has been changed to update electronic_voting_machine() function - New semaphore mutual exclusion synchronized primitive block (BoundedSemaphore) has been added to guard the voting critical section. Maximum value of semaphore is set to 1 voter.\n2.Voting code has been updated to check if voter has already voted by Voted list and skip voting if yes. Voter id(s) are appended to Voted array after voting within synchronized block.\n3.Additional encryption has been introduced by invoking SHA256 Passlib encrypt on the ripemd160 publicuniqueid hex hash digest and append the encrypted voter id to EVM bucket.\n4.This EVM assumes the function electronic_voting_machine() is invoked from a Drone python code which should have already navigated to the voter address and done the user/password authentication by smartcard.\n5.Single Signon username/password authentication has already been implemented in NeuronRain GUI - python-src/webserver_rest_ui/NeuronRain_REST_WebServer.py - by passlib OAuth having MongoDB and Redis credential storage - which might as well be used as alternative caller for this EVM.\n6.logs for preventing repetitive voting and SHA256 buckets are at testlogs/Streaming_SetPartitionAnalytics.EVM.log.9October2019\n7.This Set Partition EVM is also a Dynamic Graph Partition (Similar Worst Case Execution Time - Survival Index - Dynamic Graph Partition OS Scheduler is described in https://github.com/shrinivaasanka/Grafit/blob/master/course_material/NeuronRain/AdvancedComputerScienceAndMachineLearning/AdvancedComputerScienceAndMachineLearning.txt - Hashing Dynamic Sets) because voting is dynamic and voters related among themselves might vote for different candidates which creates edges of dynamic people partition graph (voter vertices related by edges are partitioned into candidate buckets)\n8.As mentioned in previous section, Left Inverse of Voter Bucket Objects is the Candidate voted for connecting peer voters by an equivalence relation.",
        "tree": {
          "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/trees/211bedc59e4403b7eb47817c85cf55a1e18b831e",
          "sha": "211bedc59e4403b7eb47817c85cf55a1e18b831e"
        },
        "comment_count": 0
      },
      "author": null,
      "committer": null,
      "parents": [
        {
          "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/f44a6f8bb782f2751763483c97ba8450cac29bcd",
          "html_url": "https://github.com/shrinivaasanka/asfer-github-code/commit/f44a6f8bb782f2751763483c97ba8450cac29bcd",
          "sha": "f44a6f8bb782f2751763483c97ba8450cac29bcd"
        }
      ],
      "repository": {
        "id": 36945272,
        "node_id": "MDEwOlJlcG9zaXRvcnkzNjk0NTI3Mg==",
        "name": "asfer-github-code",
        "full_name": "shrinivaasanka/asfer-github-code",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/asfer-github-code",
        "description": "Derived from http://sourceforge.net/p/asfer/",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/deployments"
      },
      "score": 1.0,
      "text_matches": [
        {
          "object_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/03834b0826419cf603688b04bdc61a07d6902d31",
          "object_type": "CommitMessage",
          "property": "message",
          "fragment": "---------------------------------------------------------------------------------------------------------------------------------------------\n718. (THEORY and FEATURE) People Analytics - Set Partition Analytics based Drone Electronic Voting Machine - updated - 9 October 2019 - related to 713\n---------------------------------------------------------------------------------------------------------------------------------------------\n1.Streaming_SetPartitionAnalytics.py has been changed to update electronic_voting_machine() function - New semaphore mutual exclusion synchronized primitive block (BoundedSemaphore) has been added to guard the voting critical section. Maximum value of semaphore is set to 1 voter.\n2.Voting code has been updated to check if voter has already voted by Voted list and skip voting if yes. Voter id(s) are appended to Voted array after voting within synchronized block.\n3.Additional encryption has been introduced by invoking SHA256 Passlib encrypt on the ripemd160 publicuniqueid hex hash digest and append the encrypted voter id to EVM bucket.\n4.This EVM assumes the function electronic_voting_machine() is invoked from a Drone python code which should have already navigated to the voter address and done the user/password authentication by smartcard.\n5.Single Signon username/password authentication has already been implemented in NeuronRain GUI - python-src/webserver_rest_ui/NeuronRain_REST_WebServer.py - by passlib OAuth having MongoDB and Redis credential storage - which might as well be used as alternative caller for this EVM.\n6.logs for preventing repetitive voting and SHA256 buckets are at testlogs/Streaming_SetPartitionAnalytics.EVM.log.9October2019\n7.This Set Partition EVM is also a Dynamic Graph Partition (Similar Worst Case Execution Time - Survival Index - Dynamic Graph Partition OS Scheduler is described in https://github.com/shrinivaasanka/Grafit/blob/master/course_material/NeuronRain/AdvancedComputerScienceAndMachineLearning/AdvancedComputerScienceAndMachineLearning.txt - Hashing Dynamic Sets) because voting is dynamic and voters related among themselves might vote for different candidates which creates edges of dynamic people partition graph (voter vertices related by edges are partitioned into candidate buckets)\n8.As mentioned in previous section, Left Inverse of Voter Bucket Objects is the Candidate voted for connecting peer voters by an equivalence relation.",
          "matches": [
            {
              "text": "THEORY and FEATURE",
              "indices": [
                148,
                166
              ]
            },
            {
              "text": "and",
              "indices": [
                797,
                800
              ]
            },
            {
              "text": "and",
              "indices": [
                1028,
                1031
              ]
            },
            {
              "text": "and",
              "indices": [
                1230,
                1233
              ]
            },
            {
              "text": "and",
              "indices": [
                1476,
                1479
              ]
            },
            {
              "text": "and",
              "indices": [
                1611,
                1614
              ]
            },
            {
              "text": "shrinivaasanka",
              "indices": [
                1884,
                1898
              ]
            },
            {
              "text": "and",
              "indices": [
                2083,
                2086
              ]
            }
          ]
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/c2aa7964d3feb58b4829f69ee1f6f2894083cc66",
      "sha": "c2aa7964d3feb58b4829f69ee1f6f2894083cc66",
      "node_id": "MDY6Q29tbWl0MzY5NDUyNzI6YzJhYTc5NjRkM2ZlYjU4YjQ4MjlmNjllZTFmNmYyODk0MDgzY2M2Ng==",
      "html_url": "https://github.com/shrinivaasanka/asfer-github-code/commit/c2aa7964d3feb58b4829f69ee1f6f2894083cc66",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/c2aa7964d3feb58b4829f69ee1f6f2894083cc66/comments",
      "commit": {
        "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/commits/c2aa7964d3feb58b4829f69ee1f6f2894083cc66",
        "author": {
          "date": "2018-01-10T18:31:34.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "committer": {
          "date": "2018-01-10T18:31:34.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "message": "--------------------------------------------------------------------------------------------------------------------------------------------\n496. (THEORY and FEATURE-DONE) Computational Geometric Factorization Update - Local Tile Computation and necessity for storage removed -\n10 January 2018 - 30-bit integer dual core single node Spark Cluster benchmark - related to 495\n--------------------------------------------------------------------------------------------------------------------------------------------\nAs mentioned in previous section, reading tiles from storage in SparkContext.parallelize() is a serious bottleneck. In this commit, tile interval storage is obviated and each foreach() invokes a function which computes non-persisted tile interval locally and does binary search to print factors. SparkContext.parallelize() takes xrange() as argument. Python xrange() is an optimized implementation of list and returns XRange object.XRange object does not store all the elements in memory and is more like an iterator. A thirty bit integer has been factored and numbers are below:\n---------------------------\nFactorization of 921234437:\n---------------------------\n18/01/10 17:56:56 INFO Utils: /home/shrinivaasanka/Krishna_iResearch_OpenSource/GitHub/asfer-github-code/python-src/DiscreteHyperbolicFactorizationUpperbound_TileSearch_Optimized.py has been previously copied to /tmp/spark-9fba8482-8ca1-4022-9bcc-1c285a8e1f58/userFiles-3e4bf574-9b1a-44c5-8b96-3873e96dc6c3/DiscreteHyperbolicFactorizationUpperbound_TileSearch_Optimized.py\nFactor is =  1\nFactor is =  17\nFactor is =  19\nFactor is =  59\nFactor is =  323\nFactor is =  1003\nFactor is =  1121\nFactor is =  19057\nFactor is =  48341\nFactor is =  821797\nFactor is =  918479\nFactor is =  2852119\nFactor is =  15614143\nFactor is =  48486023\nFactor is =  54190261\n18/01/10 18:08:51 INFO PythonRunner: Times: total = 714516, boot = 649, init = 23, finish = 713844\n\nSpark Duration: 18:08:51 - 17:56:56 = 535seconds\n\nSpark-Python has RPC and serialization latencies and following numbers could be better if implemented in a different frameworks like Slurm and on a Gigabit ENA cloud. First non-trivial factor above was printed within few seconds and this benchmark is for sieving all factors. Time utility is misleading because it includes all Spark RPC overhead.",
        "tree": {
          "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/trees/52b7bb9735715ece7f809586d76fe2fe8efc5b4e",
          "sha": "52b7bb9735715ece7f809586d76fe2fe8efc5b4e"
        },
        "comment_count": 0
      },
      "author": null,
      "committer": null,
      "parents": [
        {
          "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/2261ef689cd25791c4af7552d37b6d798ab7d3b0",
          "html_url": "https://github.com/shrinivaasanka/asfer-github-code/commit/2261ef689cd25791c4af7552d37b6d798ab7d3b0",
          "sha": "2261ef689cd25791c4af7552d37b6d798ab7d3b0"
        }
      ],
      "repository": {
        "id": 36945272,
        "node_id": "MDEwOlJlcG9zaXRvcnkzNjk0NTI3Mg==",
        "name": "asfer-github-code",
        "full_name": "shrinivaasanka/asfer-github-code",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/asfer-github-code",
        "description": "Derived from http://sourceforge.net/p/asfer/",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/deployments"
      },
      "score": 1.0,
      "text_matches": [
        {
          "object_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/c2aa7964d3feb58b4829f69ee1f6f2894083cc66",
          "object_type": "CommitMessage",
          "property": "message",
          "fragment": "--------------------------------------------------------------------------------------------------------------------------------------------\n496. (THEORY and FEATURE-DONE) Computational Geometric Factorization Update - Local Tile Computation and necessity for storage removed -\n10 January 2018 - 30-bit integer dual core single node Spark Cluster benchmark - related to 495\n--------------------------------------------------------------------------------------------------------------------------------------------\nAs mentioned in previous section, reading tiles from storage in SparkContext.parallelize() is a serious bottleneck. In this commit, tile interval storage is obviated and each foreach() invokes a function which computes non-persisted tile interval locally and does binary search to print factors. SparkContext.parallelize() takes xrange() as argument. Python xrange() is an optimized implementation of list and returns XRange object.XRange object does not store all the elements in memory and is more like an iterator. A thirty bit integer has been factored and numbers are below:\n---------------------------\nFactorization of 921234437:\n---------------------------\n18/01/10 17:56:56 INFO Utils: /home/shrinivaasanka/Krishna_iResearch_OpenSource/GitHub/asfer-github-code/python-src/DiscreteHyperbolicFactorizationUpperbound_TileSearch_Optimized.py has been previously copied to /tmp/spark-9fba8482-8ca1-4022-9bcc-1c285a8e1f58/userFiles-3e4bf574-9b1a-44c5-8b96-3873e96dc6c3/DiscreteHyperbolicFactorizationUpperbound_TileSearch_Optimized.py\nFactor is =  1\nFactor is =  17\nFactor is =  19\nFactor is =  59\nFactor is =  323\nFactor is =  1003\nFactor is =  1121\nFactor is =  19057\nFactor is =  48341\nFactor is =  821797\nFactor is =  918479\nFactor is =  2852119\nFactor is =  15614143\nFactor is =  48486023\nFactor is =  54190261\n18/01/10 18:08:51 INFO PythonRunner: Times: total = 714516, boot = 649, init = 23, finish = 713844\n\nSpark Duration: 18:08:51 - 17:56:56 = 535seconds\n\nSpark-Python has RPC and serialization latencies and following numbers could be better if implemented in a different frameworks like Slurm and on a Gigabit ENA cloud. First non-trivial factor above was printed within few seconds and this benchmark is for sieving all factors. Time utility is misleading because it includes all Spark RPC overhead.",
          "matches": [
            {
              "text": "THEORY and FEATURE",
              "indices": [
                147,
                165
              ]
            },
            {
              "text": "and",
              "indices": [
                242,
                245
              ]
            },
            {
              "text": "and",
              "indices": [
                681,
                684
              ]
            },
            {
              "text": "and",
              "indices": [
                770,
                773
              ]
            },
            {
              "text": "and",
              "indices": [
                921,
                924
              ]
            },
            {
              "text": "and",
              "indices": [
                1003,
                1006
              ]
            },
            {
              "text": "and",
              "indices": [
                1072,
                1075
              ]
            },
            {
              "text": "shrinivaasanka",
              "indices": [
                1215,
                1229
              ]
            },
            {
              "text": "and",
              "indices": [
                2004,
                2007
              ]
            },
            {
              "text": "and",
              "indices": [
                2032,
                2035
              ]
            },
            {
              "text": "and",
              "indices": [
                2122,
                2125
              ]
            },
            {
              "text": "and",
              "indices": [
                2212,
                2215
              ]
            }
          ]
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/4431cda97f51416ea422f16c1400650cd5d08137",
      "sha": "4431cda97f51416ea422f16c1400650cd5d08137",
      "node_id": "MDY6Q29tbWl0MzY5NDUyNzI6NDQzMWNkYTk3ZjUxNDE2ZWE0MjJmMTZjMTQwMDY1MGNkNWQwODEzNw==",
      "html_url": "https://github.com/shrinivaasanka/asfer-github-code/commit/4431cda97f51416ea422f16c1400650cd5d08137",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/4431cda97f51416ea422f16c1400650cd5d08137/comments",
      "commit": {
        "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/commits/4431cda97f51416ea422f16c1400650cd5d08137",
        "author": {
          "date": "2020-01-07T15:07:26.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "committer": {
          "date": "2020-01-07T15:07:26.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "message": "-----------------------------------------------------------------------------------------------------------------------------------------------\n740. (THEORY and FEATURE) People Analytics - Drone Electronic Voting Machine - Python 3.7.5 upgrade and Paper ballot shuffle simulation, PRAM Breadth First and Depth First Search, Set Partition Analytics, Money Trail Economic EventNet Graph Random Walk, Expander Graphs, Cheeger's Constant, Random Closed Packing, Space Filling, Pseudorandomness Extractors and Generators, Birthday Paradox, Unique Identification - 7 January 2020 - related to 135,230,461,739\n-----------------------------------------------------------------------------------------------------------------------------------------------\n(*) Drone Electronic Voting Machine implementation in Streaming_SetPartitionAnalytics.py - electronic_voting_machine() - has been updated to simulate random shuffle of paper ballots in boxes to ensure disorder - votes appended to bucket per candidate are shuffled after each vote - every new vote is randomly inserted into obfuscated encrypted bucket of votes per candidate which simulates a shuffle (shuffle is essentially a permutation group Sn) while an exact shuffle has to enumerate the permutation group (O(n!)) and choose one element - every shuffle of a candidate bucket is also a reduction from space filling and random closed packing\n(*) Drone EVM implementation has been upgraded to Python 3.7.5 by autopep8 and 2to3 utilities and 2.7 version has been separately committed with eponymous suffix - random.randint() has been invoked to get an index to insert a new vote somewhere in the candidate bucket\n(*) Traditional incremental counters coalesce votes of multiple voters into one integer which prohibits forensic examination of individual votes if there is a dispute. Votes per candidate bucket thus isolates each anonymous encrypted vote but subverts chronological ordering.\n(*) Serial number unique id(s) of paper currencies were envisaged earlier as non-digital one time passwords for authenticating a voter. Rationale for choice of currencies is the unpredictable pseudorandom flow of paper currency unique id(s) in economy which creates a huge EventNet Money Trail Graph (edges are labelled by flow of uniquely ID-ed currencies between buyers and sellers) which is non-digital and thus insulated from electronic sabotage. Money Trail EventNet Graph is a high entropy randomness source and could serve as a psueodrandomness generator and extractor e.g topological sort or random walk of a subgraph of money trail EventNet is a random concatenation of unique id(s)\n(*) If Money Trail EventNet Graph is an edge expander, it could be a gadget for Pseudorandom Number Generator. Edge expander graphs are defined with Cheeger's constant for minimum high edge boundary per vertex subset:\n\tminimum(|boundary(S)|/|S|), 1 < |S| < n/2\nwhere boundary(S) of a subset S of vertices of G (V(G)) is:\n\tboundary(S) = { (u,v) | u in S, v in V(G) \\ S}\nRandom walks on an expander graph are conventionally applied to Pseudorandom Generators e.g. Margulis [Mar88] and Lubotzky, Phillips and Sarnak [LPS88]\n(*) Locating an encrypted vote in a candidate bucket of votes (if bucket is a linked list) could be done in sublinear time by Parallel RAM Breadth First Search and Depth First Search of the linked list line graph - GRAFIT course material in  https://github.com/shrinivaasanka/Grafit/blob/master/course_material/NeuronRain/AdvancedComputerScienceAndMachineLearning/AdvancedComputerScienceAndMachineLearning.txt mention usefulness of parallel RAM sublinear linked list search in the context of Survival Index Timeout OS Scheduler version of Process IDs Set Partition in OS Kernels\n(*) Limitations of unique identification are best explained by birthday paradox - GRAFIT course material in https://github.com/shrinivaasanka/Grafit/blob/master/course_material/ComputerScienceMiscellaneous/ComputerScienceMiscellaneous_CourseNotes.txt have a Q and A on birthday paradox probability of collision of unique IDs in a population.\n(*) An expander graph simulation of Economic Network by Neuro Cryptocurrency in NeuronRain which is Boost UUID, Protocol Buffer, Perfect-Forward and Object Move based, theoretically could source pseudorandom bits.",
        "tree": {
          "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/trees/a1550d15fd1cdb1f88c9cbea20ab449b4eb20857",
          "sha": "a1550d15fd1cdb1f88c9cbea20ab449b4eb20857"
        },
        "comment_count": 0
      },
      "author": null,
      "committer": null,
      "parents": [
        {
          "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/6415370ea868b52045de2d0e7e406e7b610c9a3b",
          "html_url": "https://github.com/shrinivaasanka/asfer-github-code/commit/6415370ea868b52045de2d0e7e406e7b610c9a3b",
          "sha": "6415370ea868b52045de2d0e7e406e7b610c9a3b"
        }
      ],
      "repository": {
        "id": 36945272,
        "node_id": "MDEwOlJlcG9zaXRvcnkzNjk0NTI3Mg==",
        "name": "asfer-github-code",
        "full_name": "shrinivaasanka/asfer-github-code",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/asfer-github-code",
        "description": "Derived from http://sourceforge.net/p/asfer/",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/deployments"
      },
      "score": 1.0,
      "text_matches": [
        {
          "object_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/4431cda97f51416ea422f16c1400650cd5d08137",
          "object_type": "CommitMessage",
          "property": "message",
          "fragment": "-----------------------------------------------------------------------------------------------------------------------------------------------\n740. (THEORY and FEATURE) People Analytics - Drone Electronic Voting Machine - Python 3.7.5 upgrade and Paper ballot shuffle simulation, PRAM Breadth First and Depth First Search, Set Partition Analytics, Money Trail Economic EventNet Graph Random Walk, Expander Graphs, Cheeger's Constant, Random Closed Packing, Space Filling, Pseudorandomness Extractors and Generators, Birthday Paradox, Unique Identification - 7 January 2020 - related to 135,230,461,739\n-----------------------------------------------------------------------------------------------------------------------------------------------\n(*) Drone Electronic Voting Machine implementation in Streaming_SetPartitionAnalytics.py - electronic_voting_machine() - has been updated to simulate random shuffle of paper ballots in boxes to ensure disorder - votes appended to bucket per candidate are shuffled after each vote - every new vote is randomly inserted into obfuscated encrypted bucket of votes per candidate which simulates a shuffle (shuffle is essentially a permutation group Sn) while an exact shuffle has to enumerate the permutation group (O(n!)) and choose one element - every shuffle of a candidate bucket is also a reduction from space filling and random closed packing\n(*) Drone EVM implementation has been upgraded to Python 3.7.5 by autopep8 and 2to3 utilities and 2.7 version has been separately committed with eponymous suffix - random.randint() has been invoked to get an index to insert a new vote somewhere in the candidate bucket\n(*) Traditional incremental counters coalesce votes of multiple voters into one integer which prohibits forensic examination of individual votes if there is a dispute. Votes per candidate bucket thus isolates each anonymous encrypted vote but subverts chronological ordering.\n(*) Serial number unique id(s) of paper currencies were envisaged earlier as non-digital one time passwords for authenticating a voter. Rationale for choice of currencies is the unpredictable pseudorandom flow of paper currency unique id(s) in economy which creates a huge EventNet Money Trail Graph (edges are labelled by flow of uniquely ID-ed currencies between buyers and sellers) which is non-digital and thus insulated from electronic sabotage. Money Trail EventNet Graph is a high entropy randomness source and could serve as a psueodrandomness generator and extractor e.g topological sort or random walk of a subgraph of money trail EventNet is a random concatenation of unique id(s)\n(*) If Money Trail EventNet Graph is an edge expander, it could be a gadget for Pseudorandom Number Generator. Edge expander graphs are defined with Cheeger's constant for minimum high edge boundary per vertex subset:\n\tminimum(|boundary(S)|/|S|), 1 < |S| < n/2\nwhere boundary(S) of a subset S of vertices of G (V(G)) is:\n\tboundary(S) = { (u,v) | u in S, v in V(G) \\ S}\nRandom walks on an expander graph are conventionally applied to Pseudorandom Generators e.g. Margulis [Mar88] and Lubotzky, Phillips and Sarnak [LPS88]\n(*) Locating an encrypted vote in a candidate bucket of votes (if bucket is a linked list) could be done in sublinear time by Parallel RAM Breadth First Search and Depth First Search of the linked list line graph - GRAFIT course material in  https://github.com/shrinivaasanka/Grafit/blob/master/course_material/NeuronRain/AdvancedComputerScienceAndMachineLearning/AdvancedComputerScienceAndMachineLearning.txt mention usefulness of parallel RAM sublinear linked list search in the context of Survival Index Timeout OS Scheduler version of Process IDs Set Partition in OS Kernels\n(*) Limitations of unique identification are best explained by birthday paradox - GRAFIT course material in https://github.com/shrinivaasanka/Grafit/blob/master/course_material/ComputerScienceMiscellaneous/ComputerScienceMiscellaneous_CourseNotes.txt have a Q and A on birthday paradox probability of collision of unique IDs in a population.\n(*) An expander graph simulation of Economic Network by Neuro Cryptocurrency in NeuronRain which is Boost UUID, Protocol Buffer, Perfect-Forward and Object Move based, theoretically could source pseudorandom bits.",
          "matches": [
            {
              "text": "THEORY and FEATURE",
              "indices": [
                150,
                168
              ]
            },
            {
              "text": "and",
              "indices": [
                244,
                247
              ]
            },
            {
              "text": "and",
              "indices": [
                300,
                303
              ]
            },
            {
              "text": "and",
              "indices": [
                501,
                504
              ]
            },
            {
              "text": "and",
              "indices": [
                1265,
                1268
              ]
            },
            {
              "text": "and",
              "indices": [
                1365,
                1368
              ]
            },
            {
              "text": "and",
              "indices": [
                1466,
                1469
              ]
            },
            {
              "text": "and",
              "indices": [
                1485,
                1488
              ]
            },
            {
              "text": "and",
              "indices": [
                2308,
                2311
              ]
            },
            {
              "text": "and",
              "indices": [
                2342,
                2345
              ]
            },
            {
              "text": "and",
              "indices": [
                2450,
                2453
              ]
            },
            {
              "text": "and",
              "indices": [
                2498,
                2501
              ]
            },
            {
              "text": "and",
              "indices": [
                3107,
                3110
              ]
            },
            {
              "text": "and",
              "indices": [
                3130,
                3133
              ]
            },
            {
              "text": "and",
              "indices": [
                3309,
                3312
              ]
            },
            {
              "text": "shrinivaasanka",
              "indices": [
                3410,
                3424
              ]
            },
            {
              "text": "shrinivaasanka",
              "indices": [
                3855,
                3869
              ]
            },
            {
              "text": "and",
              "indices": [
                3988,
                3991
              ]
            },
            {
              "text": "and",
              "indices": [
                4215,
                4218
              ]
            }
          ]
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/694a68ac2b06e0e37e1024f089854a879e7425a1",
      "sha": "694a68ac2b06e0e37e1024f089854a879e7425a1",
      "node_id": "MDY6Q29tbWl0MzY5NDUyNzI6Njk0YTY4YWMyYjA2ZTBlMzdlMTAyNGYwODk4NTRhODc5ZTc0MjVhMQ==",
      "html_url": "https://github.com/shrinivaasanka/asfer-github-code/commit/694a68ac2b06e0e37e1024f089854a879e7425a1",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/694a68ac2b06e0e37e1024f089854a879e7425a1/comments",
      "commit": {
        "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/commits/694a68ac2b06e0e37e1024f089854a879e7425a1",
        "author": {
          "date": "2020-02-12T14:23:34.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "committer": {
          "date": "2020-02-12T14:23:34.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "message": "----------------------------------------------------------------------------------------------------------------------------------------------\n748. (THEORY and FEATURE) Leaky Bucket Timeseries Analyzer Implementation - Python 3.7.5 - 12 February 2020\n----------------------------------------------------------------------------------------------------------------------------------------------\n1.This commit implements Leaky Bucket Timeseries Analyzer Algorithm mentioned in GRAFIT course material https://github.com/shrinivaasanka/Grafit/blob/master/course_material/NeuronRain/AdvancedComputerScienceAndMachineLearning/AdvancedComputerScienceAndMachineLearning.txt for generic timeseries analytics.\n2.Streaming_LeakyBucket.py instantiates Streaming Abstract Generator buffer incoming stream (example Dictionary.txt file data source is analyzed as timeseries) for generic data source and data storage of specified buffer size.\n3.leaky_bucket_timeseries_analyzer() iterates through buffer incoming stream and in a loop populates a deque object till it reaches maximum size . Elements exceeding max size are overflown and printed. Deque simulates a leaky bucket - incoming elements fill the bucket from front end (insert() at index 0) and outgoing elements leak through other end.\n4.Separate thread outgoing_stream_thread() independently scans the leaky bucket buffer and pops the elements from the deque. It busy waits if the leaky bucket deque is empty and continues to pop after buffer is refilled.\n5.Synchronization is by a binary semaphore guarding the deque in main thread and outgoing stream thread.\n6.Theoretical overtone of leaky bucket is its ability to flag outliers by overflows and peaks in timeseries are often the abnormalities in stream causing overflow. For example excessive network traffic corresponds to peaks in timeseries data and frequent overflows in leaky bucket as buffer fills faster than leakage.\n7.Leaky Bucket Analyzer thus is a universal tool for mining any stream of text,audio,video,people data and most apt for wireless network stream, stream of celestial bodies configurations, climate change datastream (e.g http://climate.nasa.gov data stream on surface temperature, melting polar ice sheets, carbon emission, ocean currents and acidity), economic datasets having lot of outlier spikes.\n8.Streaming_LeakyBucket.py has been implemented on Python 3.7.5 and Streaming_AbstractGenerator.py has been upgraded to Python 3.7.5\n9.Logs for dictionary time series example are at testlogs/Streaming_LeakyBucket.log.12February2020",
        "tree": {
          "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/trees/31b790ca74b57b1516ae56fccf7d0b45fa5d9e8a",
          "sha": "31b790ca74b57b1516ae56fccf7d0b45fa5d9e8a"
        },
        "comment_count": 0
      },
      "author": null,
      "committer": null,
      "parents": [
        {
          "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/86980f544ea849d7c391f45e8db25e454c39bc92",
          "html_url": "https://github.com/shrinivaasanka/asfer-github-code/commit/86980f544ea849d7c391f45e8db25e454c39bc92",
          "sha": "86980f544ea849d7c391f45e8db25e454c39bc92"
        }
      ],
      "repository": {
        "id": 36945272,
        "node_id": "MDEwOlJlcG9zaXRvcnkzNjk0NTI3Mg==",
        "name": "asfer-github-code",
        "full_name": "shrinivaasanka/asfer-github-code",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/asfer-github-code",
        "description": "Derived from http://sourceforge.net/p/asfer/",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/deployments"
      },
      "score": 1.0,
      "text_matches": [
        {
          "object_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/694a68ac2b06e0e37e1024f089854a879e7425a1",
          "object_type": "CommitMessage",
          "property": "message",
          "fragment": "----------------------------------------------------------------------------------------------------------------------------------------------\n748. (THEORY and FEATURE) Leaky Bucket Timeseries Analyzer Implementation - Python 3.7.5 - 12 February 2020\n----------------------------------------------------------------------------------------------------------------------------------------------\n1.This commit implements Leaky Bucket Timeseries Analyzer Algorithm mentioned in GRAFIT course material https://github.com/shrinivaasanka/Grafit/blob/master/course_material/NeuronRain/AdvancedComputerScienceAndMachineLearning/AdvancedComputerScienceAndMachineLearning.txt for generic timeseries analytics.\n2.Streaming_LeakyBucket.py instantiates Streaming Abstract Generator buffer incoming stream (example Dictionary.txt file data source is analyzed as timeseries) for generic data source and data storage of specified buffer size.\n3.leaky_bucket_timeseries_analyzer() iterates through buffer incoming stream and in a loop populates a deque object till it reaches maximum size . Elements exceeding max size are overflown and printed. Deque simulates a leaky bucket - incoming elements fill the bucket from front end (insert() at index 0) and outgoing elements leak through other end.\n4.Separate thread outgoing_stream_thread() independently scans the leaky bucket buffer and pops the elements from the deque. It busy waits if the leaky bucket deque is empty and continues to pop after buffer is refilled.\n5.Synchronization is by a binary semaphore guarding the deque in main thread and outgoing stream thread.\n6.Theoretical overtone of leaky bucket is its ability to flag outliers by overflows and peaks in timeseries are often the abnormalities in stream causing overflow. For example excessive network traffic corresponds to peaks in timeseries data and frequent overflows in leaky bucket as buffer fills faster than leakage.\n7.Leaky Bucket Analyzer thus is a universal tool for mining any stream of text,audio,video,people data and most apt for wireless network stream, stream of celestial bodies configurations, climate change datastream (e.g http://climate.nasa.gov data stream on surface temperature, melting polar ice sheets, carbon emission, ocean currents and acidity), economic datasets having lot of outlier spikes.\n8.Streaming_LeakyBucket.py has been implemented on Python 3.7.5 and Streaming_AbstractGenerator.py has been upgraded to Python 3.7.5\n9.Logs for dictionary time series example are at testlogs/Streaming_LeakyBucket.log.12February2020",
          "matches": [
            {
              "text": "THEORY and FEATURE",
              "indices": [
                149,
                167
              ]
            },
            {
              "text": "shrinivaasanka",
              "indices": [
                517,
                531
              ]
            },
            {
              "text": "and",
              "indices": [
                884,
                887
              ]
            },
            {
              "text": "and",
              "indices": [
                1004,
                1007
              ]
            },
            {
              "text": "and",
              "indices": [
                1116,
                1119
              ]
            },
            {
              "text": "and",
              "indices": [
                1233,
                1236
              ]
            },
            {
              "text": "and",
              "indices": [
                1366,
                1369
              ]
            },
            {
              "text": "and",
              "indices": [
                1453,
                1456
              ]
            },
            {
              "text": "and",
              "indices": [
                1577,
                1580
              ]
            },
            {
              "text": "and",
              "indices": [
                1689,
                1692
              ]
            },
            {
              "text": "and",
              "indices": [
                1847,
                1850
              ]
            },
            {
              "text": "and",
              "indices": [
                2026,
                2029
              ]
            },
            {
              "text": "and",
              "indices": [
                2260,
                2263
              ]
            },
            {
              "text": "and",
              "indices": [
                2386,
                2389
              ]
            }
          ]
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/69885b9f3d4d5e69c6b3e576ee4d47293b9b6d24",
      "sha": "69885b9f3d4d5e69c6b3e576ee4d47293b9b6d24",
      "node_id": "MDY6Q29tbWl0MzY5NDUyNzI6Njk4ODViOWYzZDRkNWU2OWM2YjNlNTc2ZWU0ZDQ3MjkzYjliNmQyNA==",
      "html_url": "https://github.com/shrinivaasanka/asfer-github-code/commit/69885b9f3d4d5e69c6b3e576ee4d47293b9b6d24",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/69885b9f3d4d5e69c6b3e576ee4d47293b9b6d24/comments",
      "commit": {
        "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/commits/69885b9f3d4d5e69c6b3e576ee4d47293b9b6d24",
        "author": {
          "date": "2018-01-12T16:06:23.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "committer": {
          "date": "2018-01-12T16:06:23.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "message": "----------------------------------------------------------------------------------------------------------------------------------------------\n498. (THEORY and FEATURE-DONE) Computational Geometric Factorization - Non-Persistent Tile Segments - 31 bit Single Node Dual Core Spark Benchmarks - Primality Testing - Multiplicative Partition - Factorisatio Numerorum - 12 January 2018 - related to 495\n----------------------------------------------------------------------------------------------------------------------------------------------\n31-bit integer 2147483647 has been factorized by searching non-persisted pixelated hyperbolic tile segments. Only trivial factors are found and is a mersenne prime. This integer is the maximum permissible limit for xrange() and printed by python sys module (sys.maxsize). Similar to integer partition function which is number of ways of splitting an integer as sum of smaller integers, multiplicative partition function f(n) = number of ways of unordered factorizations of n. This function has an upperbound of : a{n} <= n(exp{{log n * logloglog n}/{loglog n}})^{{-1+o(1)}}.\n\n----------------------------------------------------------------------------\nFactorization/Primality of 2147483647\n----------------------------------------------------------------------------\n18/01/12 14:33:12 INFO Utils: /home/shrinivaasanka/Krishna_iResearch_OpenSource/GitHub/asfer-github-code/python-src/DiscreteHyperbolicFactorizationUpperbound_TileSearch_Optimized.py has been previously copied to /tmp/spark-169ef9d3-56df-46eb-9b09-d63561491f87/userFiles-9f55cc79-e7cc-46e6-bad7-540f950587b5/DiscreteHyperbolicFactorizationUpperbound_TileSearch_Optimized.py\n=================================================\nFactor is =  1\n=================================================\n18/01/12 15:02:57 INFO PythonRunner: Times: total = 1784724, boot = 643, init = 23, finish = 1784058\n----------------------------------------------------------------------------\nSpark Duration 15:02:57 - 14:33:12 = 29 minutes 45 seconds\n\nSpark Logs have been committed to python-src/testlogs/\n\nReferences:\n----------\n498.1 Multiplicative Partition Function - ON THE OPPENHEIM’S ”FACTORISATIO NUMERORUM” FUNCTION - [FLORIAN LUCA, ANIRBAN MUKHOPADHYAY AND KOTYADA SRINIVAS] - https://arxiv.org/pdf/0807.0986.pdf - \"... The function f(n) is related to various partition functions. For example, f(2^n) = p(n), where p(n) is the number of partitions of n. Furthermore, f(p1p2 · · · pk) = Bk, where Bk is the kth Bell number which counts the number of partitions of a set with k elements in nonempty disjoint subsets. In general, f(p1^α1*p2^α2 · · · pk^αk) is the number of partitions of a multiset consisting of αi copies of {i} for each i = 1, . . . , k.  Throughout the paper, we put log x for the natural logarithm of x. We use p and q for prime numbers and O and o for the Landau symbols. ...\"\n498.2 Multiplicative Partition Function - https://oeis.org/A001055\n498.3 Bound for Multiplicative Partition Function - [Canfield-Erdos-Pomerance] - https://www.math.dartmouth.edu/~carlp/PDF/paper39.pdf\n498.4 Eigth Mersenne Prime - 2^31 - 1 = 2147483647 - https://en.wikipedia.org/wiki/2,147,483,647 - this was largest known prime till 1867.\n498.5 M31 - http://primes.utm.edu/curios/page.php/2147483647.html - The first prime that cannot be tested on 32-bit primality-check software.",
        "tree": {
          "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/trees/d783e6b64ca8460523e2b4ba9a4431b87d86cd66",
          "sha": "d783e6b64ca8460523e2b4ba9a4431b87d86cd66"
        },
        "comment_count": 0
      },
      "author": null,
      "committer": null,
      "parents": [
        {
          "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/c1f54d1f2732982553eb1ca0243a7775581eb61e",
          "html_url": "https://github.com/shrinivaasanka/asfer-github-code/commit/c1f54d1f2732982553eb1ca0243a7775581eb61e",
          "sha": "c1f54d1f2732982553eb1ca0243a7775581eb61e"
        }
      ],
      "repository": {
        "id": 36945272,
        "node_id": "MDEwOlJlcG9zaXRvcnkzNjk0NTI3Mg==",
        "name": "asfer-github-code",
        "full_name": "shrinivaasanka/asfer-github-code",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/asfer-github-code",
        "description": "Derived from http://sourceforge.net/p/asfer/",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/deployments"
      },
      "score": 1.0,
      "text_matches": [
        {
          "object_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/69885b9f3d4d5e69c6b3e576ee4d47293b9b6d24",
          "object_type": "CommitMessage",
          "property": "message",
          "fragment": "----------------------------------------------------------------------------------------------------------------------------------------------\n498. (THEORY and FEATURE-DONE) Computational Geometric Factorization - Non-Persistent Tile Segments - 31 bit Single Node Dual Core Spark Benchmarks - Primality Testing - Multiplicative Partition - Factorisatio Numerorum - 12 January 2018 - related to 495\n----------------------------------------------------------------------------------------------------------------------------------------------\n31-bit integer 2147483647 has been factorized by searching non-persisted pixelated hyperbolic tile segments. Only trivial factors are found and is a mersenne prime. This integer is the maximum permissible limit for xrange() and printed by python sys module (sys.maxsize). Similar to integer partition function which is number of ways of splitting an integer as sum of smaller integers, multiplicative partition function f(n) = number of ways of unordered factorizations of n. This function has an upperbound of : a{n} <= n(exp{{log n * logloglog n}/{loglog n}})^{{-1+o(1)}}.\n\n----------------------------------------------------------------------------\nFactorization/Primality of 2147483647\n----------------------------------------------------------------------------\n18/01/12 14:33:12 INFO Utils: /home/shrinivaasanka/Krishna_iResearch_OpenSource/GitHub/asfer-github-code/python-src/DiscreteHyperbolicFactorizationUpperbound_TileSearch_Optimized.py has been previously copied to /tmp/spark-169ef9d3-56df-46eb-9b09-d63561491f87/userFiles-9f55cc79-e7cc-46e6-bad7-540f950587b5/DiscreteHyperbolicFactorizationUpperbound_TileSearch_Optimized.py\n=================================================\nFactor is =  1\n=================================================\n18/01/12 15:02:57 INFO PythonRunner: Times: total = 1784724, boot = 643, init = 23, finish = 1784058\n----------------------------------------------------------------------------\nSpark Duration 15:02:57 - 14:33:12 = 29 minutes 45 seconds\n\nSpark Logs have been committed to python-src/testlogs/\n\nReferences:\n----------\n498.1 Multiplicative Partition Function - ON THE OPPENHEIM’S ”FACTORISATIO NUMERORUM” FUNCTION - [FLORIAN LUCA, ANIRBAN MUKHOPADHYAY AND KOTYADA SRINIVAS] - https://arxiv.org/pdf/0807.0986.pdf - \"... The function f(n) is related to various partition functions. For example, f(2^n) = p(n), where p(n) is the number of partitions of n. Furthermore, f(p1p2 · · · pk) = Bk, where Bk is the kth Bell number which counts the number of partitions of a set with k elements in nonempty disjoint subsets. In general, f(p1^α1*p2^α2 · · · pk^αk) is the number of partitions of a multiset consisting of αi copies of {i} for each i = 1, . . . , k.  Throughout the paper, we put log x for the natural logarithm of x. We use p and q for prime numbers and O and o for the Landau symbols. ...\"\n498.2 Multiplicative Partition Function - https://oeis.org/A001055\n498.3 Bound for Multiplicative Partition Function - [Canfield-Erdos-Pomerance] - https://www.math.dartmouth.edu/~carlp/PDF/paper39.pdf\n498.4 Eigth Mersenne Prime - 2^31 - 1 = 2147483647 - https://en.wikipedia.org/wiki/2,147,483,647 - this was largest known prime till 1867.\n498.5 M31 - http://primes.utm.edu/curios/page.php/2147483647.html - The first prime that cannot be tested on 32-bit primality-check software.",
          "matches": [
            {
              "text": "THEORY and FEATURE",
              "indices": [
                149,
                167
              ]
            },
            {
              "text": "and",
              "indices": [
                681,
                684
              ]
            },
            {
              "text": "and",
              "indices": [
                765,
                768
              ]
            },
            {
              "text": "shrinivaasanka",
              "indices": [
                1345,
                1359
              ]
            },
            {
              "text": "AND",
              "indices": [
                2247,
                2250
              ]
            },
            {
              "text": "and",
              "indices": [
                2825,
                2828
              ]
            },
            {
              "text": "and",
              "indices": [
                2849,
                2852
              ]
            },
            {
              "text": "and",
              "indices": [
                2855,
                2858
              ]
            }
          ]
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/eb9952579c1443c4a92025c3ebc5f5713994b823",
      "sha": "eb9952579c1443c4a92025c3ebc5f5713994b823",
      "node_id": "MDY6Q29tbWl0MzY5NDUyNzI6ZWI5OTUyNTc5YzE0NDNjNGE5MjAyNWMzZWJjNWY1NzEzOTk0YjgyMw==",
      "html_url": "https://github.com/shrinivaasanka/asfer-github-code/commit/eb9952579c1443c4a92025c3ebc5f5713994b823",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/eb9952579c1443c4a92025c3ebc5f5713994b823/comments",
      "commit": {
        "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/commits/eb9952579c1443c4a92025c3ebc5f5713994b823",
        "author": {
          "date": "2020-01-09T17:50:19.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "committer": {
          "date": "2020-01-09T17:50:19.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "message": "----------------------------------------------------------------------------------------------------------------------------------------------\n741. (THEORY and FEATURE) Computational Geometric NC-PRAM-BSP Factorization - Spark 2.4.3 + Python 3.7.5 benchmarks - 1213 bits integer\nfactorized, Hyperbolic Rasterization graphics example, Multidimensional hyperplanar point location, Integer Diophantines, Multiplicative partitions and sundry resolutions - related to all sections on factorization - 9 January 2020\n----------------------------------------------------------------------------------------------------------------------------------------------\n(*) New function hyperbolic_arc_rasterization() has been defined which sequentially rasterizes the hyperbolic arc and creates a graphic image\nof how hyperbola looks like post-rasterization. A related schematic diagram for rasterization has already been committed to GRAFIT course material (https://github.com/shrinivaasanka/Grafit/blob/master/course_material/NeuronRain/LinuxKernelAndCloud/BigdataAnalyticsCloud_CourseNotes.txt) on Geometric search of a point on hyperplanes separating halfspaces by multidimensional Hyperplanar point location which widens the scope of factorization to arbitrary algebraic curves (e.g diophantines) for integer solutions, not limited to hyperbolae - example: uvwxyz=N is a multiplicative partition problem solvable by rasterizing on Z^6 hyperplane point location - (u,v,w,x,y,z)\n(*) Hyperbolic arc rasterized tile segments are plotted by matplotlib and example logs-images for a small integer are committed to testlogs/ - DiscreteHyperbolicFactorizationUpperbound_TileSearch_Optimized.Rasterization.9January2020.png and DiscreteHyperbolicFactorizationUpperbound_TileSearch_Optimized.Python3.7.5Upgrade.RasterizationGraphics.log.9January2020\n(*) matplotlib rasterization graphics is enabled by a boolean flag passed on by commandline sys.argv arguments\n(*) Depth of the non-uniform NC circuit which was hardcoded earlier has been parametrized as commandline argument\n(*) Normal order loop has been changed because of overflow errors for large exponents\n(*) Huge 1213 bits non-smooth hard integer of random digits\n99999999999928918219821828128918928918281939787878773273872837129818280829189289178718738718732378278467475452652773628381712918298198298182918928198298192891892718278178261627167261726716721627162761762617271267617261762716726172671627167267162761726716271626715365365636635157612126716725162561526516256152613389132311132838292323233433434123212839289382832983291\nhas been factorized by a depth 58 NC circuit (PRAM time O((logN)^58) and first few factors are printed as ordered pairs (requires division because of or clause and division has been cast to Decimal() because of overflow errors) in testlogs/DiscreteHyperbolicFactorizationUpperbound_TileSearch_Optimized.Python3.7.5Upgrade.1213bits_and_1243bits.9January2020 from 51st second onwards:\n=================================================\n('Factors are: (', 3, ',', Decimal('3.333333333330963940660727604E+364'), ') (at ', 'Thu, 09 Jan 2020 10:49:02 GMT', ')')\n=================================================\n=================================================\n('Factors are: (', 7, ',', Decimal('1.428571428570413117426026116E+364'), ') (at ', 'Thu, 09 Jan 2020 10:49:02 GMT', ')')\n=================================================\n=================================================\n('Factors are: (', 21, ',', Decimal('4.761904761901377058086753720E+363'), ') (at ', 'Thu, 09 Jan 2020 10:49:03 GMT', ')')\n=================================================\n\n(*) Another large 1243 bits integer of all 9s (smooth, easy) has been factorized and first few factors are printed from 18 seconds onwards:\n('factors of ', 99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999, '(', 1242.4011074878736, ' bits integer) are:')\ntiles_start: 1\ntiles_end: 488\n=================================================\n('Factors are: (', 3, ',', Decimal('3.333333333333333333333333333E+373'), ') (at ', 'Thu, 09 Jan 2020 11:30:47 GMT', ')')\n=================================================\n=================================================\n('Factors are: (', 9, ',', Decimal('1.111111111111111111111111111E+373'), ') (at ', 'Thu, 09 Jan 2020 11:30:48 GMT', ')')\n=================================================\n=================================================\n('Factors are: (', 33, ',', Decimal('3.030303030303030303030303030E+372'), ') (at ', 'Thu, 09 Jan 2020 11:30:49 GMT', ')')\n=================================================\n=================================================\n('Factors are: (', 99, ',', Decimal('1.010101010101010101010101010E+372'), ') (at ', 'Thu, 09 Jan 2020 11:30:54 GMT', ')')\n=================================================\n=================================================\n('Factors are: (', 103, ',', Decimal('9.708737864077669902912621359E+371'), ') (at ', 'Thu, 09 Jan 2020 11:30:54 GMT', ')')\n=================================================\n=================================================\n('Factors are: (', 121, ',', Decimal('8.264462809917355371900826446E+371'), ') (at ', 'Thu, 09 Jan 2020 11:30:55 GMT', ')')\n=================================================\n=================================================\n('Factors are: (', 363, ',', Decimal('2.754820936639118457300275482E+371'), ') (at ', 'Thu, 09 Jan 2020 11:31:12 GMT', ')')\n=================================================",
        "tree": {
          "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/trees/b373f27014816c396731e5eaed26d4d774e032d2",
          "sha": "b373f27014816c396731e5eaed26d4d774e032d2"
        },
        "comment_count": 0
      },
      "author": null,
      "committer": null,
      "parents": [
        {
          "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/db3f28bf2d966f8e0fa7f5c8d0f67a696a4f1338",
          "html_url": "https://github.com/shrinivaasanka/asfer-github-code/commit/db3f28bf2d966f8e0fa7f5c8d0f67a696a4f1338",
          "sha": "db3f28bf2d966f8e0fa7f5c8d0f67a696a4f1338"
        }
      ],
      "repository": {
        "id": 36945272,
        "node_id": "MDEwOlJlcG9zaXRvcnkzNjk0NTI3Mg==",
        "name": "asfer-github-code",
        "full_name": "shrinivaasanka/asfer-github-code",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/asfer-github-code",
        "description": "Derived from http://sourceforge.net/p/asfer/",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/deployments"
      },
      "score": 1.0,
      "text_matches": [
        {
          "object_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/eb9952579c1443c4a92025c3ebc5f5713994b823",
          "object_type": "CommitMessage",
          "property": "message",
          "fragment": "----------------------------------------------------------------------------------------------------------------------------------------------\n741. (THEORY and FEATURE) Computational Geometric NC-PRAM-BSP Factorization - Spark 2.4.3 + Python 3.7.5 benchmarks - 1213 bits integer\nfactorized, Hyperbolic Rasterization graphics example, Multidimensional hyperplanar point location, Integer Diophantines, Multiplicative partitions and sundry resolutions - related to all sections on factorization - 9 January 2020\n----------------------------------------------------------------------------------------------------------------------------------------------\n(*) New function hyperbolic_arc_rasterization() has been defined which sequentially rasterizes the hyperbolic arc and creates a graphic image\nof how hyperbola looks like post-rasterization. A related schematic diagram for rasterization has already been committed to GRAFIT course material (https://github.com/shrinivaasanka/Grafit/blob/master/course_material/NeuronRain/LinuxKernelAndCloud/BigdataAnalyticsCloud_CourseNotes.txt) on Geometric search of a point on hyperplanes separating halfspaces by multidimensional Hyperplanar point location which widens the scope of factorization to arbitrary algebraic curves (e.g diophantines) for integer solutions, not limited to hyperbolae - example: uvwxyz=N is a multiplicative partition problem solvable by rasterizing on Z^6 hyperplane point location - (u,v,w,x,y,z)\n(*) Hyperbolic arc rasterized tile segments are plotted by matplotlib and example logs-images for a small integer are committed to testlogs/ - DiscreteHyperbolicFactorizationUpperbound_TileSearch_Optimized.Rasterization.9January2020.png and DiscreteHyperbolicFactorizationUpperbound_TileSearch_Optimized.Python3.7.5Upgrade.RasterizationGraphics.log.9January2020\n(*) matplotlib rasterization graphics is enabled by a boolean flag passed on by commandline sys.argv arguments\n(*) Depth of the non-uniform NC circuit which was hardcoded earlier has been parametrized as commandline argument\n(*) Normal order loop has been changed because of overflow errors for large exponents\n(*) Huge 1213 bits non-smooth hard integer of random digits\n99999999999928918219821828128918928918281939787878773273872837129818280829189289178718738718732378278467475452652773628381712918298198298182918928198298192891892718278178261627167261726716721627162761762617271267617261762716726172671627167267162761726716271626715365365636635157612126716725162561526516256152613389132311132838292323233433434123212839289382832983291\nhas been factorized by a depth 58 NC circuit (PRAM time O((logN)^58) and first few factors are printed as ordered pairs (requires division because of or clause and division has been cast to Decimal() because of overflow errors) in testlogs/DiscreteHyperbolicFactorizationUpperbound_TileSearch_Optimized.Python3.7.5Upgrade.1213bits_and_1243bits.9January2020 from 51st second onwards:\n=================================================\n('Factors are: (', 3, ',', Decimal('3.333333333330963940660727604E+364'), ') (at ', 'Thu, 09 Jan 2020 10:49:02 GMT', ')')\n=================================================\n=================================================\n('Factors are: (', 7, ',', Decimal('1.428571428570413117426026116E+364'), ') (at ', 'Thu, 09 Jan 2020 10:49:02 GMT', ')')\n=================================================\n=================================================\n('Factors are: (', 21, ',', Decimal('4.761904761901377058086753720E+363'), ') (at ', 'Thu, 09 Jan 2020 10:49:03 GMT', ')')\n=================================================\n\n(*) Another large 1243 bits integer of all 9s (smooth, easy) has been factorized and first few factors are printed from 18 seconds onwards:\n('factors of ', 99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999, '(', 1242.4011074878736, ' bits integer) are:')\ntiles_start: 1\ntiles_end: 488\n=================================================\n('Factors are: (', 3, ',', Decimal('3.333333333333333333333333333E+373'), ') (at ', 'Thu, 09 Jan 2020 11:30:47 GMT', ')')\n=================================================\n=================================================\n('Factors are: (', 9, ',', Decimal('1.111111111111111111111111111E+373'), ') (at ', 'Thu, 09 Jan 2020 11:30:48 GMT', ')')\n=================================================\n=================================================\n('Factors are: (', 33, ',', Decimal('3.030303030303030303030303030E+372'), ') (at ', 'Thu, 09 Jan 2020 11:30:49 GMT', ')')\n=================================================\n=================================================\n('Factors are: (', 99, ',', Decimal('1.010101010101010101010101010E+372'), ') (at ', 'Thu, 09 Jan 2020 11:30:54 GMT', ')')\n=================================================\n=================================================\n('Factors are: (', 103, ',', Decimal('9.708737864077669902912621359E+371'), ') (at ', 'Thu, 09 Jan 2020 11:30:54 GMT', ')')\n=================================================\n=================================================\n('Factors are: (', 121, ',', Decimal('8.264462809917355371900826446E+371'), ') (at ', 'Thu, 09 Jan 2020 11:30:55 GMT', ')')\n=================================================\n=================================================\n('Factors are: (', 363, ',', Decimal('2.754820936639118457300275482E+371'), ') (at ', 'Thu, 09 Jan 2020 11:31:12 GMT', ')')\n=================================================",
          "matches": [
            {
              "text": "THEORY and FEATURE",
              "indices": [
                149,
                167
              ]
            },
            {
              "text": "and",
              "indices": [
                427,
                430
              ]
            },
            {
              "text": "and",
              "indices": [
                767,
                770
              ]
            },
            {
              "text": "shrinivaasanka",
              "indices": [
                962,
                976
              ]
            },
            {
              "text": "and",
              "indices": [
                1536,
                1539
              ]
            },
            {
              "text": "and",
              "indices": [
                1703,
                1706
              ]
            },
            {
              "text": "and",
              "indices": [
                2634,
                2637
              ]
            },
            {
              "text": "and",
              "indices": [
                2725,
                2728
              ]
            },
            {
              "text": "and",
              "indices": [
                2896,
                2899
              ]
            },
            {
              "text": "and",
              "indices": [
                3697,
                3700
              ]
            }
          ]
        }
      ]
    },
    {
      "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/d7269d1d12720eacbd4ce6754f0e9f1102c99707",
      "sha": "d7269d1d12720eacbd4ce6754f0e9f1102c99707",
      "node_id": "MDY6Q29tbWl0MzY5NDUyNzI6ZDcyNjlkMWQxMjcyMGVhY2JkNGNlNjc1NGYwZTlmMTEwMmM5OTcwNw==",
      "html_url": "https://github.com/shrinivaasanka/asfer-github-code/commit/d7269d1d12720eacbd4ce6754f0e9f1102c99707",
      "comments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/d7269d1d12720eacbd4ce6754f0e9f1102c99707/comments",
      "commit": {
        "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/commits/d7269d1d12720eacbd4ce6754f0e9f1102c99707",
        "author": {
          "date": "2020-02-04T15:21:02.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "committer": {
          "date": "2020-02-04T15:21:02.000+05:30",
          "name": "Srinivasan Kannan",
          "email": "ka.shrinivaasan@gmail.com"
        },
        "message": "---------------------------------------------------------------------------------------------------------------------------------------------\n745. (THEORY and FEATURE) Compressed Sensing - Alphabet-Syllable vectorspace embedding - Python 3.7.5 upgrade - update - 4 February 2020\n---------------------------------------------------------------------------------------------------------------------------------------------\n1. Function syllable_boundary_text_compression(self, text, vectorspace_embedding=True) in CompressedSensing python implementation has been updated to parametrically choose alphabet vectorspace embedding of words in text described in GRAFIT course material on Geometric Search - https://github.com/shrinivaasanka/Grafit/blob/master/course_material/NeuronRain/LinuxKernelAndCloud/BigdataAnalyticsCloud_CourseNotes.txt - words of text are embedded in |A|^m vectorspace (|A| is the size of natural language alphabet and m is the longest word in text). For English, this is a space of 26^m.\n2.Words are python tokenized to vectors and concatenated to an array creating a vectorspace embedding words in the text document.\n3.Return value is a tuple which includes or excludes the word embedding of text depending on vectorspace_embedding boolean flag\n4.CompressedSensing.py has been upgraded to Python 3.7.5 by autopep8 and 2to3 utilities. Python 2.7 version is separately committed.\n5.An Example sentence is syllable hyphenated (PyHyphen), vowel stripped-compressed and embedded as:\nVowelless Syllable Vector Compression for text -  This sentence is alphabet-syllable vector space embedded  : (['This', 'sen', 'tence', 'al', 'pha', 'bet', '-', 'syl', 'la', 'ble', 'vec', 'tor', 'space', 'em', 'bed', 'ded'], 'Th_s-s_n-t_nc_-_l-ph_-b_t---syl-l_-bl_-v_c-t_r-sp_c_-_m-b_d-d_d')\nAlphabet vectorspace embedding of text: [['T', 'h', 'i', 's'], ['s', 'e', 'n', 't', 'e', 'n', 'c', 'e'], ['i', 's'], ['a', 'l', 'p', 'h', 'a', 'b', 'e', 't', '-', 's', 'y', 'l', 'l', 'a', 'b', 'l', 'e'], ['v', 'e', 'c', 't', 'o', 'r'], ['s', 'p', 'a', 'c', 'e'], ['e', 'm', 'b', 'e', 'd', 'd', 'e', 'd'], []]\n6.This kind of embedding is unconventional because it lifts an one dimensional text to an m-dimensional vectorspace nullifying the meaning of the word whereas traditional word embeddings reduce dimensionality and map words in higher dimensional space to real vectorspace of lower dimensions. Following the linguistic philosophy of \"word is characterized by company it keeps\" by [Firth] (Studies in Linguistic Analysis - http://cs.brown.edu/courses/csci2952d/readings/lecture1-firth.pdf), alphabet embedding above could be a framework for assessing colocated words by euclidean distance e.g \"vector\" and \"space\" are colocated in previous example and are closer in meaning (e.g WordNet distance) but have high euclidean distance. This kind of alphabet embedding is quite relevant to similar name clustering where same name is spelt differently (\"What is in a name\" is a non-trivial question to answer).\n\n----------------------------------------------------------------------------------------------------------------------------------------------\n746. (THEORY and FEATURE) Social Network Analysis - People Analytics - Alphabet-Syllable vectorspace embedding - Python 3.7.5 upgrade - Name clustering - 4 February 2020\n----------------------------------------------------------------------------------------------------------------------------------------------\n1.SocialNetworkAnalysis_PeopleAnalytics.py and its dependencies have been upgraded to Python 3.7.5 (CompressedSensing.py,TextCompression.py,WordSubstringProbabilities.py) by autopep8 and 2to3 utilities. Python 2.7 versions have been separately committed.\n2.Example Professional Profile (of the author) has been updated in testlogs/CV.pdf and testlogs/CV.tex which is parsed for text and previously updated syllable_boundary_text_compression() function of CompressedSensing.py is invoked on profile text for alphabet vectorspace embedding of words.\n3.Logs for this commit are in testlogs/SocialNetworkAnalysis_PeopleAnalytics.log.Python3.7.5UpgradeWordEmbedding.4February2020 which demonstrate 3 alphabet vectorspace embeddings of same first name of the author spelt differently having low mutual euclidean distance.\n4.Syllable embedding instead of alphabet embedding of words causes linguistic boundaries to vanish which has been mentioned in an earlier code commit - transliterating text of one script lacking compound alphabets to another script bestowed with compound alphabets helps in natural language text compression.\n5.Match Rating algorithm NYSIIS (https://en.wikipedia.org/wiki/New_York_State_Identification_and_Intelligence_System) which is better than Soundex codes is an example of efficient Similar Name Search. Linguistically similar names are intersections of heterographs (different spellings and meanings) and synonyms (different spellings and same meaning) - Homophones - https://en.wikipedia.org/wiki/Homophone",
        "tree": {
          "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/trees/04635000d2ec9ce3fe80c92b4a59774e0f732c5c",
          "sha": "04635000d2ec9ce3fe80c92b4a59774e0f732c5c"
        },
        "comment_count": 0
      },
      "author": null,
      "committer": null,
      "parents": [
        {
          "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/2cebdc9631316362a50a8b4ea13154e11035d2bf",
          "html_url": "https://github.com/shrinivaasanka/asfer-github-code/commit/2cebdc9631316362a50a8b4ea13154e11035d2bf",
          "sha": "2cebdc9631316362a50a8b4ea13154e11035d2bf"
        }
      ],
      "repository": {
        "id": 36945272,
        "node_id": "MDEwOlJlcG9zaXRvcnkzNjk0NTI3Mg==",
        "name": "asfer-github-code",
        "full_name": "shrinivaasanka/asfer-github-code",
        "private": false,
        "owner": {
          "login": "shrinivaasanka",
          "id": 8086981,
          "node_id": "MDQ6VXNlcjgwODY5ODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8086981?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/shrinivaasanka",
          "html_url": "https://github.com/shrinivaasanka",
          "followers_url": "https://api.github.com/users/shrinivaasanka/followers",
          "following_url": "https://api.github.com/users/shrinivaasanka/following{/other_user}",
          "gists_url": "https://api.github.com/users/shrinivaasanka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/shrinivaasanka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/shrinivaasanka/subscriptions",
          "organizations_url": "https://api.github.com/users/shrinivaasanka/orgs",
          "repos_url": "https://api.github.com/users/shrinivaasanka/repos",
          "events_url": "https://api.github.com/users/shrinivaasanka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/shrinivaasanka/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/shrinivaasanka/asfer-github-code",
        "description": "Derived from http://sourceforge.net/p/asfer/",
        "fork": false,
        "url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code",
        "forks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/forks",
        "keys_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/teams",
        "hooks_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/hooks",
        "issue_events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/events{/number}",
        "events_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/events",
        "assignees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/assignees{/user}",
        "branches_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/branches{/branch}",
        "tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/tags",
        "blobs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/languages",
        "stargazers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/stargazers",
        "contributors_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contributors",
        "subscribers_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscribers",
        "subscription_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/subscription",
        "commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/contents/{+path}",
        "compare_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/merges",
        "archive_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/downloads",
        "issues_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/issues{/number}",
        "pulls_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/labels{/name}",
        "releases_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/releases{/id}",
        "deployments_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/deployments"
      },
      "score": 1.0,
      "text_matches": [
        {
          "object_url": "https://api.github.com/repos/shrinivaasanka/asfer-github-code/commits/d7269d1d12720eacbd4ce6754f0e9f1102c99707",
          "object_type": "CommitMessage",
          "property": "message",
          "fragment": "---------------------------------------------------------------------------------------------------------------------------------------------\n745. (THEORY and FEATURE) Compressed Sensing - Alphabet-Syllable vectorspace embedding - Python 3.7.5 upgrade - update - 4 February 2020\n---------------------------------------------------------------------------------------------------------------------------------------------\n1. Function syllable_boundary_text_compression(self, text, vectorspace_embedding=True) in CompressedSensing python implementation has been updated to parametrically choose alphabet vectorspace embedding of words in text described in GRAFIT course material on Geometric Search - https://github.com/shrinivaasanka/Grafit/blob/master/course_material/NeuronRain/LinuxKernelAndCloud/BigdataAnalyticsCloud_CourseNotes.txt - words of text are embedded in |A|^m vectorspace (|A| is the size of natural language alphabet and m is the longest word in text). For English, this is a space of 26^m.\n2.Words are python tokenized to vectors and concatenated to an array creating a vectorspace embedding words in the text document.\n3.Return value is a tuple which includes or excludes the word embedding of text depending on vectorspace_embedding boolean flag\n4.CompressedSensing.py has been upgraded to Python 3.7.5 by autopep8 and 2to3 utilities. Python 2.7 version is separately committed.\n5.An Example sentence is syllable hyphenated (PyHyphen), vowel stripped-compressed and embedded as:\nVowelless Syllable Vector Compression for text -  This sentence is alphabet-syllable vector space embedded  : (['This', 'sen', 'tence', 'al', 'pha', 'bet', '-', 'syl', 'la', 'ble', 'vec', 'tor', 'space', 'em', 'bed', 'ded'], 'Th_s-s_n-t_nc_-_l-ph_-b_t---syl-l_-bl_-v_c-t_r-sp_c_-_m-b_d-d_d')\nAlphabet vectorspace embedding of text: [['T', 'h', 'i', 's'], ['s', 'e', 'n', 't', 'e', 'n', 'c', 'e'], ['i', 's'], ['a', 'l', 'p', 'h', 'a', 'b', 'e', 't', '-', 's', 'y', 'l', 'l', 'a', 'b', 'l', 'e'], ['v', 'e', 'c', 't', 'o', 'r'], ['s', 'p', 'a', 'c', 'e'], ['e', 'm', 'b', 'e', 'd', 'd', 'e', 'd'], []]\n6.This kind of embedding is unconventional because it lifts an one dimensional text to an m-dimensional vectorspace nullifying the meaning of the word whereas traditional word embeddings reduce dimensionality and map words in higher dimensional space to real vectorspace of lower dimensions. Following the linguistic philosophy of \"word is characterized by company it keeps\" by [Firth] (Studies in Linguistic Analysis - http://cs.brown.edu/courses/csci2952d/readings/lecture1-firth.pdf), alphabet embedding above could be a framework for assessing colocated words by euclidean distance e.g \"vector\" and \"space\" are colocated in previous example and are closer in meaning (e.g WordNet distance) but have high euclidean distance. This kind of alphabet embedding is quite relevant to similar name clustering where same name is spelt differently (\"What is in a name\" is a non-trivial question to answer).\n\n----------------------------------------------------------------------------------------------------------------------------------------------\n746. (THEORY and FEATURE) Social Network Analysis - People Analytics - Alphabet-Syllable vectorspace embedding - Python 3.7.5 upgrade - Name clustering - 4 February 2020\n----------------------------------------------------------------------------------------------------------------------------------------------\n1.SocialNetworkAnalysis_PeopleAnalytics.py and its dependencies have been upgraded to Python 3.7.5 (CompressedSensing.py,TextCompression.py,WordSubstringProbabilities.py) by autopep8 and 2to3 utilities. Python 2.7 versions have been separately committed.\n2.Example Professional Profile (of the author) has been updated in testlogs/CV.pdf and testlogs/CV.tex which is parsed for text and previously updated syllable_boundary_text_compression() function of CompressedSensing.py is invoked on profile text for alphabet vectorspace embedding of words.\n3.Logs for this commit are in testlogs/SocialNetworkAnalysis_PeopleAnalytics.log.Python3.7.5UpgradeWordEmbedding.4February2020 which demonstrate 3 alphabet vectorspace embeddings of same first name of the author spelt differently having low mutual euclidean distance.\n4.Syllable embedding instead of alphabet embedding of words causes linguistic boundaries to vanish which has been mentioned in an earlier code commit - transliterating text of one script lacking compound alphabets to another script bestowed with compound alphabets helps in natural language text compression.\n5.Match Rating algorithm NYSIIS (https://en.wikipedia.org/wiki/New_York_State_Identification_and_Intelligence_System) which is better than Soundex codes is an example of efficient Similar Name Search. Linguistically similar names are intersections of heterographs (different spellings and meanings) and synonyms (different spellings and same meaning) - Homophones - https://en.wikipedia.org/wiki/Homophone",
          "matches": [
            {
              "text": "THEORY and FEATURE",
              "indices": [
                148,
                166
              ]
            },
            {
              "text": "shrinivaasanka",
              "indices": [
                718,
                732
              ]
            },
            {
              "text": "and",
              "indices": [
                933,
                936
              ]
            },
            {
              "text": "and",
              "indices": [
                1047,
                1050
              ]
            },
            {
              "text": "and",
              "indices": [
                1334,
                1337
              ]
            },
            {
              "text": "and",
              "indices": [
                1481,
                1484
              ]
            },
            {
              "text": "and",
              "indices": [
                2308,
                2311
              ]
            },
            {
              "text": "and",
              "indices": [
                2698,
                2701
              ]
            },
            {
              "text": "and",
              "indices": [
                2744,
                2747
              ]
            },
            {
              "text": "THEORY and FEATURE",
              "indices": [
                3150,
                3168
              ]
            },
            {
              "text": "and",
              "indices": [
                3500,
                3503
              ]
            },
            {
              "text": "and",
              "indices": [
                3640,
                3643
              ]
            },
            {
              "text": "and",
              "indices": [
                3795,
                3798
              ]
            },
            {
              "text": "and",
              "indices": [
                3840,
                3843
              ]
            },
            {
              "text": "and",
              "indices": [
                4675,
                4678
              ]
            },
            {
              "text": "and",
              "indices": [
                4867,
                4870
              ]
            },
            {
              "text": "and",
              "indices": [
                4881,
                4884
              ]
            },
            {
              "text": "and",
              "indices": [
                4915,
                4918
              ]
            }
          ]
        }
      ]
    }
  ]
}

==================================
Regular expression search of  ../asfer-docs/AstroInferDesign.txt  for query  FEATURE :
==================================
DESIGN NOTES, THEORETICAL INTERLUDES(might have errors), TODO AND NICE TO HAVE FEATURES (list is quite dynamic and might be rewritten depending on feasibility - long-term design goals with no deadline)
(FEATURE - DONE-MDL,Entropy,Edit Distance,Compressed Sensing) 1. Test with Massive Data Sets of encoded strings for pattern mining. Algorithms for Approximate Kolmogorov Complexity or Minimum Description Length (MDL), Shannon Entropy, Levenshtein Edit Distance have been implemented in Python and C++. Compressed Sensing (used in Image and Signal Processing) which "sense" from "compressed" large data - This involves computing a matrix product AX=B where X is an image or bitmap and A is a chosen matrix which together give a sketch B. Sketch of an image bitmap has been implemented.
(FEATURE - THEORY-POC Implementation-DONE) 2. An experimental text compression algorithm that deletes vowels and stores only consonants as far as meaning is not altered. For example "follow" could be stored as "fllw". Since on an average every third letter in an english word is a vowel, approximate compression is 33%. Message is reconstructed using most probable meaningful word for "fllw" (For example "follow" could be more probable than "fellow" or vice versa). This is similar to Texting in phones and to some extent encoding in Match Rating (http://en.wikipedia.org/wiki/Match_rating_approach). One more example could be "Decision" which can be compressed as "Dcsn". An interesting phonetic aspect of this is that "Decision" is spelt as "Dee-C-shan", or each vowel following a consonant is subsumed or coalesced into the preceding consonant while spelling. Thus "Dcsn" gives 50% compression ratio. PyEnchant python package SpellChecker has suggest() function that returns a tuple of closely related words to a compressed (or "misspelt") word. Conventional WSD algorithms might have to be used on this tuple to get the maximum match. Initial testing reveals that the accuracy with spellcheckers is less and this problem requires a non-trivial algorithm which might require error-correcting codes like Reed-Solomon and Berelekamp-Massey assuming the english text as a finite field of alphabets as elements. Predominantly used dictionary-based Lesk's disambiguation Algorithm can find the intersection between "follow" and the rest of the context and "fellow" and rest of the context and choose the word with maximum intersection with context - this is quite commonsensical too. But the drawback of this disambiguation is that keywords are disambiguated well while other connectives (is, are, thus,  this, who, why etc.,) in the sentences are not. Another limitation of applying WSD while decompressing is lack of meaningful context words at runtime - only compressed words are available and they cannot be used as disambiguating context creating a circular dependency - disambiguation requires decompression and decompression needs disambiguation. For computing maximum likelihood, most probable vowel between 2 consonants can be zeroed in on by a 26*26 table of consonant ordered pairs and having vowels between them as probability distribution priors. This is feasible only if priors are available. For example th-t has (h,t) as consonant pairs and a is most probable vowel than e,i,o and u and th-t is disambiguated as "that". The vowels missing in compressed text can be represented by a single extra bit. This is an alternative to PyEnchant spellcheck suggest() function. This can be Hidden Markov Model also - with missing vowels as hidden states to measure and compressed letters as observations. This requires forward-backward probabilities computation or Viterbi path which gives most likely word for a compressed word. For "th-t" the Markov Model looks like:
3. (FEATURE - THEORY - Pairwise LCS implementation DONE) KMeans, KNN and other clustering and classification algorithms implemented thus far, group similar encoded strings for astronomical (or any other) data. Clustered strings can further be mined for patterns with ordering by applying a Longest Common Substring algorithm within each cluster. This gives a fine grained pattern hidden in the encoded input strings. These longest common substrings can then be translated to a rule similar to class association rule (Frequent item set and GSP algorithms are quite expensive and do not fit well for mining patterns in strings).
4. (FEATURE - DONE) Implementation of String Distance measure using different distance measures (python-src/StringMatch.py) for comparing Encoded Strings in addition to pairwise and Multiple Sequence Alignment.
5. (FEATURE - DONE) Construct a Hidden Markov Model with State transitions and Observations(events). If the number of states are exponential then this will be infeasible. A HMM has been implemented for text decompression with vowel-removed strings. Also a HMM has been implemented for Part-of-Speech tagging, Named Entity Recognition and Conditional Random Fields.
6. (FEATURE - DONE - continuation of point 3) Correlate with Rules from Classics (BPHS, BJ etc.,) with the mined datasets for particular class of events (Special Case of Mundane Predictive Model is described in items 47 to 51 and basic framework is already implemented). The Longest Common Substring implementation already mines for most common pattern with in a clustered or classified dataset of encoded strings which suffices for astronomical datasets. Script for parsing the clustered data from classifiers and decoding the longest common pattern have been added.
7. (FEATURE - DONE) Integrate Classifiers in above String Pattern mining (classify strings and then mine).
8. (FEATURE - DONE) At present fundamental algorithms like - Perceptrons with Gradient Descent, Linear and Logistic Regression, Hidden Markov Model for Text Decompression, KMeans Clustering, Naive Bayesian, Decision Tree, SVM (uses thirdparty OSS) and kNN Classifiers, String Alignment and Distance based algorithms, Knuth-Morris-Pratt String Match Algorithm, Sequence Mining, Deep Learning(Convolution and Backpropagation), Social Network Analysis, Sentiment Analysis - have been implemented specialized for the encoded strings astronomical datasets.
9. (FEATURE - DONE) InterviewAlgorithm code in https://sourceforge.net/p/asfer/code/146/tree/python-src/InterviewAlgorithm/InterviewAlgorithmWithIntrinisicMerit.py and Classification based on indegrees of wordnet subgraph node in action item 6 above (as mentioned in http://arxiv.org/abs/1006.4458 , https://sites.google.com/site/kuja27/TAC2010papersubmission.pdf?attredirects=0 and http://www.nist.gov/tac/publications/2010/participant.papers/CMI_IIT.proceedings.pdf). Related Publication Drafts are: https://sites.google.com/site/kuja27/LowerBoundsForMajorityVotingPseudorandomChoice.pdf?attredirects=0, https://sites.google.com/site/kuja27/CircuitForComputingErrorProbabilityOfMajorityVoting.pdf?attredirects=0, https://sites.google.com/site/kuja27/IndepthAnalysisOfVariantOfMajorityVotingwithZFAOC.pdf?attredirects=0. Test C++ code written in 2006 for computing Majority voting error probability is at: http://sourceforge.net/p/asfer/code/HEAD/tree/cpp-src/miscellaneous/pgood.cpp and python script written in 2010 is at: http://sourceforge.net/p/asfer/code/HEAD/tree/python-src/pgood.py. 
15. (FEATURE - DONE-Minimum Implementation using NetworkX algorithms) Add Graph Search (for example subgraph isomorphism, frequent subgraph mining etc.,) for "inferring" a graph from dataset with edges as relations and nodes as entities(astronomical or otherwise).Reference survey of FSM algorithms: http://cgi.csc.liv.ac.uk/~frans/PostScriptFiles/ker-jct-6-May-11.pdf. The context of "Graph Search" includes deducing relationships hidden in a text data by use of WordNet(construction of wordnet subgraph by Definition Graph Recursive Gloss Overlap etc.,), mining graph patterns in Social Networks etc., At present a WordNet Graph Search and Visualizer python script that renders the definition graph and computes core numbers for unsupervised classification (subgraph of WordNet projected to a text data) has been added to repository.
16. (FEATURE - DONE) Use of already implemented Bayesian and Decision Tree Classifiers on astronomical data set for prediction (this would complement the use of classifiers for string mining) - autogen_classifier_dataset/ directory contains Automated Classified Dataset and Encoded Horoscopes Generation code.
17. (FEATURE - DONE) Added Support for datasets other than USGS EQ dataset(parseUSGSdata.py). NOAA HURDAT2 dataset has been parsed and encoded pygen horoscope string dataset has been autogenerated by parseNOAA_HURDAT2_data.py
18. (FEATURE - Minimum Functionality DONE-TwitterFollowersGraphRendering, Centrality) (Astro)PsychoSocialAnalysis  - Social Network Graph Analysis and Sentiment Analysis of Social Media and drawing inferences on Psychology and Human Opinion Mining in broader sense - for example, how a social network forms, how opinions, edges and vertices appear over time , Rich-get-Richer in Random Network Erdos-Renyi Model - which by majority opinion seems to be a bad model choice for Social Networking (Do people flock to popular social groups?), Bonacich Power Centrality (a social prestige measure predating PageRank) etc.,. Related to point 15.
19. (FEATURE - DONE-PAC Learnt Boolean Conjunction) Implement prototypical PAC learning of Boolean Functions from dataset. Complement Boolean Function construction described in http://arxiv.org/abs/1106.4102 is in a way an example of PAC learnt Boolean Function - it is rather C Learnt (Correct Learning) because there is no probability or approximation. Complement Boolean Function can be PAC learnt (with upperbounded error) as follows:
20. (FEATURE - DONE) Integrate AstroInfer to VIRGO-KingCobra-USBmd Platform which makes it an Approximately Intelligent Cloud Operating System Framework - a Cloud OS that "learns" ,"decides" from datasets and "drives" using AstroInfer code. AsFer+USBmd+VIRGO+KingCobra integrated cloud platform with machine learning features together have been christened as "Krishna iResearch Intelligent Cloud Platform" or "NeuronRain". It has to be mentioned here that NeuronRain cloud differs from traditional cloud in following ways:
21. (FEATURE - DONE-Minimum Implementation) Unsupervised Named Entity Recognition and Part-of-Speech tagging using Conditional Random Fields(CRF) and Viterbi path computation in CRF. Bayesian Network and Belief propagation might be implemented if necessary - as they are graphical models where graph edges are labelled with conditional probabilities and belief potentials respectively and can be part of other larger modules. 
22. (FEATURE - DONE-Minimum Implementation) Period Three theorem (www.its.caltech.edu/~matilde/LiYorke.pdf) which is one of the earliest results in Chaotic NonLinear Systems, implies any data that has a periodicity of 3 can have larger periods. Fractals, Mandelbrot-Julia Sets have modelled natural phenomena. Thus finding if a data has periodicity or Chaos and if it has sensitive dependence on initial conditions (for example logistic equations similar to x(n+1) = kx(n)(1-x(n))) is a way to mine numerical data. Computation of Hausdorff-Besicovitch Dimension can be implemented to get Fractal Dimension of an uncountable set (this has to be visualized as a fractal curve than set of points). In addition to these, an Implementation of Chaotic PRG algorithms as described in https://sites.google.com/site/kuja27/ChaoticPRG.pdf?attredirects=0 and https://sites.google.com/site/kuja27/Analysis%20of%20a%20Randomized%20Space%20Filling%20Algorithm%20and%20its%20Linear%20Program%20Formulation.pdf?attredirects=0 can be done.
23. (FEATURE - DONE) Entropy of numerical data - Sum of -Pr(x)LogPr(x) for all possible outcome probabilities for a random variable. This is already computed in Decision Tree Classifier as impurity measure of a dataset. Also a python Entropy implementation for texts has been added to repository - computes weighted average of number of bits required to minimum-describe the text.
25. (FEATURE - DONE) Approximating with some probability distribution - Gaussian, Binomial etc., that model the probability of occurence of a datapoint in the set. Kullback-Leibler Divergence python implementation which computes distance in terms of amount of bits between two probability distribution has been added to python-src/. Minimum of the distance for different standard distributions with a dataset is the closest distribution approximation for the dataset.
(FEATURE - DONE) 26. Streaming algorithms - Finding Frequency moments, Heavy Hitters(most prominent items), Distinct Elements etc., in the numerical dataset. Usually numerical data occur in streams making these best choice for mining numerical data. 
(FEATURE - DONE) 26.1 Implementation of LogLog and HyperLogLog Counter(cardinality - distinct elements in streamed multiset), CountMinSketch-CountMeanMinSketch (Frequencies and heavy hitters) and Bloom Filters(membership)
(FEATURE - DONE) 26.2 Parser and non-text file Storage framework for Realtime Streaming Data - Hive, HBase, Cassandra, Spark and Pig Scripts and Clients for Storage Backends have been implemented. The Storage is abstracted by a generator - architecture diagram at: http://sourceforge.net/p/asfer/code/HEAD/tree/asfer-docs/BigDataStorageAbstractionInAsFer.jpg
(FEATURE - DONE) 26.3 Python scripts for Stock Quotes Data and Twitter tweets stream search data for a query.
27. (FEATURE - DONE) Usual Probabilistic Measures of Mean, Median, Curve fitting on the numeric data. Python+RPy2+R implementation wrapper has been added to repository (python-src/Norms_and_Basic_Statistics.py)
28. (FEATURE - DONE - using python, R+rpy2) Application of Discrete Fourier Transform(using R), LOESS(using R), Linear Polynomial Approximate Interpolation(using R), Logistic Regression and Gradient Descent
29. (FEATURE - DONE) Least Squares Method on datapoints y(i)s for some x(i)s such that f(x)~y needs to be found. Computation of L0, L1 and L2 norms. Python+RPy2+R implementation wrapper has been added to repository (python-src/Norms_and_Basic_Statistics.py)
(FEATURE - DONE)30. K-Means and kNN Clustering(if necessary and some training data is available) - unsupervised and supervised clustering based on coordinates of the numerical dataset
31. (FEATURE - DONE) Discrete Hyperbolic Factorization - Author has been working on a factorization algorithm with elementary proof based on discretization of a hyperbola since 2000 and there seems to be some headway recently in 2013. To confirm the polylog correctness, a minimal implementation of Discrete Hyperbolic Factorization (and could be even less than polylog due to a weird upperbound obtained using stirling formula) has been added to AstroInfer repository at: http://sourceforge.net/p/asfer/code/HEAD/tree/cpp-src/miscellaneous/DiscreteHyperbolicFactorizationUpperbound.cpp with factors output logs.
32. (FEATURE - DONE) Multiple versions of Discrete Hyperbolic Factorization algorithms have been uploaded as drafts in https://sites.google.com/site/kuja27:
34. (FEATURE - DONE) An updated draft version of PRAM NC algorithm for Discrete Hyperbolic Factorization has been uploaded - with a new section for Parallel RAM to NC reduction, disambiguation on input size (N and not logN is the input size for ANSV algorithm and yet is in NC - in NC2 to be exact - (logN)^2 time and polynomial in N PRAM processors - NC circuit depth translates to PRAM time and NC circuit size to number of PRAMs):
36.1. (FEATURE - DONE-WordNet Visualizer implementation for point 15) The classification using Interview Algorithm Definition Graph (obtained from Recursive Gloss Overlap algorithm described in http://arxiv.org/abs/1006.4458 , https://sites.google.com/site/kuja27/TAC2010papersubmission.pdf?attredirects=0 and http://www.nist.gov/tac/publications/2010/participant.papers/CMI_IIT.proceedings.pdf ) wordnet node indegrees can classify a same document in multiple classes without any training set (unsupervised). Thus same document will be in multiple classes. This can be visualized as one stack per class and documents in same class are pushed into a stack corresponding to each class. When a same document is across multiple classes, a document can be visualized as a "hyperedge" of a hypergraph that transcends multiple class nodes. Here each class node in this non-planar graph (or multi-planar graph) is a stack.
37.(FEATURE - PoC WordNet Visualizer Closure DONE) Above multiplanar hypergraph is quite related as a theoretical construct to a Pushdown Automata for Context Free Grammar. Also the Definition Graph Construction using Recursive Gloss Overlap is a Context-Sensitive counterpart of Parse Trees obtained for Context Free Grammar, but ignoring Parts-Of-Speech Tagging and relying only on the relation between words or concepts within each sentence of the document which is mapped to a multipartite or general graph. Infact this Definition Graph and Concept Hypergraph constructed above from indegrees quite resemble a Functional Programming Paradigm where each relationship edge is a Functional Program subroutine and the vertices are the parameters to it. Thus a hyperedge could be visualized as Composition Operator of Functional Programs including FP routines for Parts-of-Speech if necessary [WordNet or above Concept Hypergraph can be strengthened with FPs like LISP, Haskell etc.,]. RecursiveNeuralNetworks(MV-RNN and RNTN) have a notion of compositionality quite similar to Functional Programming in FPs (Reference: http://nlp.stanford.edu/~socherr/EMNLP2013_RNTN.pdf ) but for tree structures. Applying the compositionality for Concept Hypergraphs constructed above using FPs is a possible research direction.
- (FEATURE - DONE) DecisionTree, NaiveBayes and SVM classifiers and horoscope encoders are already in the AstroInfer codebase. 
- (FEATURE - DONE) Encode the dataset which might be USGS or NOAA(Science on a Sphere) datasets or anyother dataset available after getting text horos for these using Maitreya's Dreams textclient (AstroInfer version)
- (FEATURE - DONE) Above gives encoded horoscope strings for all classes of mundane events in both Zodiacal and AscendantRelative formats (autogenerated by Python scripts in python-src/)
- (FEATURE - DONE) Above set is a mix of encoded strings for all events which can be classified using one of the classifiers above.
- (FEATURE - DONE) For each class the set of encoded horo strings in that class can be pairwise or multiple-sequence aligned to get the pattern for that class
- (FEATURE - DONE) There are two sets for each class after running the classifiers - one set is AscendantRelative and the other is Zodiacal
- (FEATURE - DONE) The above steps give the mined astronomical patterns for all observed mundane events - Pattern_Mundane_Observed_AscRelative and Pattern_Mundane_Observed_Zodiacal
60. (FEATURE - DONE) Above has implemented a basic Class and Inference Model that was envisaged in 2003. Class is the set-theoretic notion of sets sharing common underlying theme. Using VC Dimension is a way to determine accuracy of how well the dataset is "shattered" by the classes. 
64. (FEATURE - DONE-related to 65 and 139) Integrate AstroInfer,USB-md,KingCobra and VIRGO into an approximately intelligent cloud OS platform that not just executes code statically but also dynamically learns from the processes (say through log files, executables, execution times etc., and builds predictive models).
(FEATURE - DONE) 68. Music Pattern Mining - Computational Music - Alternatively, a Discrete Fourier Transform on a set of data or voice samples gives a set of frequencies - a traditional DSP paradigm.
69. (FEATURE - Audacity FFT - DONE) Music Pattern Mining - Experimental Idea of previous two points is to mine patterns in discrete data and voice(music for example) samples. Music as an expression of mathematics is widely studied as Musical Set Theory - Transpositions and Inversions (E.g http://en.wikipedia.org/wiki/Music_and_mathematics, http://www.ams.org/samplings/feature-column/fcarc-canons, http://www-personal.umd.umich.edu/~tmfiore/1/musictotal.pdf). Items 56,57 and 58 could help mining deep mathematical patterns in classical and other music and as a measure of similarity and creativity. In continuation of 68, following experiment was done on two eastern Indian Classical audio clips having similar raagas:
87. (FEATURE- DONE) commits as on 3 September 2013
1344. (FEATURE- DONE) commits as on 6 September 2013
1345. (FEATURE- DONE) commits as on 12 September 2013
1346. (FEATURE- DONE) commits as on 2 November 2013
1347. (FEATURE- DONE) commits as on 20 November 2013 and 21 November 2013
(FEATURE- DONE) 94. Commits as on 23 April 2014
(FEATURE- DONE) 95. Commits as on 7 July 2014
(FEATURE- DONE) 96. Commits as on 8 July 2014
(FEATURE- DONE) 97. Time Series Analysis - Commits as on 9 July 2014
(FEATURE- DONE) 98. Commits as on 10 July 2014
(FEATURE- DONE) 99. Commits as on 11 July 2014
(FEATURE- DONE) 100. Commits as on 15 July 2014 and 16 July 2014
(FEATURE- DONE) 101.Commits as on 23 July 2014
(FEATURE - THEORY - Visualizer Implementation DONE) 102. Dense Subgraphs of the WordNet subgraphs from Recursive Gloss Overlap
(FEATURE- DONE) 104. Commits as on 9 October 2014
(FEATURE- DONE) 105. Commits as on 21 October 2014
(FEATURE- DONE) 107. Commits as on 1 November 2014
(FEATURE- DONE) 108. Commits as on 4 November 2014
(FEATURE- DONE) 109. Commits as on 6 November 2014
(FEATURE- DONE) 110. Commits as on 7 November 2014
(FEATURE- DONE) 111. Commits as on 11 November 2014
(FEATURE - DONE) 112. Expirable objects
(FEATURE- DONE) 113. Commits as on 11 November 2014 - Expirable template class implementation 
(FEATURE- DONE) 114. Commits as on 12 November 2014 
(FEATURE- DONE) 115. Commits as on 13 November 2014
(FEATURE- DONE) 116. Commits as on 15 November 2014
(FEATURE- DONE) 117. Commits as on 17 November 2014
(FEATURE- DONE) 118. Commits as on 20 November 2014
(FEATURE- DONE) 119. Commits as on 21 November 2014
(FEATURE- DONE) 121. Commits as on 25 November 2014
122. (FEATURE - DONE) Commits as on 3 December 2014
(FEATURE- DONE) 124. Commits as on 4 December 2014
(FEATURE- DONE) 126. Commits as on 5 December 2014
(FEATURE- DONE) 134.Commits as on 8 January 2015
(FEATURE- DONE) 136. Commits as on 28,29 January 2015
(FEATURE - DONE) 137. Mining the Astronomical Datasets using KMeans and kNN - sequence of algorithms in AstroInfer
(FEATURE - DONE) 138. Commandline sequence for Mining Astronomical Datasets (e.g Earthquakes as above) 
(FEATURE - DONE) 139. BigData Analytics subsystem (related to point 64,65 on software analytics) 
(FEATURE - DONE) Commits as on 4 February 2015
(FEATURE - DONE) Commits as on 9 February 2015
(FEATURE - DONE) Commits as on 13 February 2015
(FEATURE - DONE) Commits as on 17 February 2015
(FEATURE - DONE) Commits as on 18 February 2015
(FEATURE - DONE) Commits as on 19,20 February 2015
(FEATURE - DONE) 140. Schematic for Apache Cassandra/Hive/HBase <=> AsFer Streaming_<algorithm> scripts interface 
(FEATURE - DONE) Commits as on 25 February 2015
(FEATURE - DONE) Commits as on 26 February 2015
(FEATURE - DONE) Commits as on 27 February 2015
143. (FEATURE - DONE) Storage Abstraction in AsFer - Architecture Diagram
144. (FEATURE - DONE) Apache Spark and VIRGO Linux Kernel Analytics and Commits as on 6 March 2015
(FEATURE - DONE) Commits as on 10 March 2015
145. (FEATURE - DONE) Commits as on 26 March 2015
146. (FEATURE - DONE) Commits as on 2 April 2015
147. (FEATURE - DONE) Related to Item 3 - Sequence Mining Implementation - Commits as on 3 April 2015
(FEATURE - DONE) Commits as on 5 April 2015 
(FEATURE - DONE) Commits as on 13 April 2015
(FEATURE - DONE) Commits as on 15 April 2015
(FEATURE - DONE) Commits as on 17 April 2015
(FEATURE - DONE) 149. Commits as on 10 May 2015
1230. (FEATURE - DONE) Commits as on 12 May 2015
(FEATURE - DONE) 150. Commits as on 14 May 2015
(FEATURE - DONE) Commits as on 16 May 2015
(FEATURE - DONE) 151. Commits as on 18 May 2015
(FEATURE - DONE) Commits as on 19 May 2015
(FEATURE - DONE) Commits as on 20 May 2015
(FEATURE - DONE) Commits as on 21 May 2015
(FEATURE - DONE) 151. Commits as on 22,23,24 May 2015
(FEATURE - DONE) Commits as on 26 May 2015
(FEATURE - DONE) Commits as on 3 June 2015
(FEATURE - DONE) Commits as on 4 June 2015
(FEATURE - DONE) 152. Commits as on 7 June 2015
(FEATURE - DONE) Commits as on 8 June 2015
(FEATURE - DONE) Commits as on 10 June 2015
(FEATURE - DONE) Commits as on 13 June 2015
153. (FEATURE - THEORY - Minimum Implementation DONE) Sentiment Analysis as lambda function composition of the Recursive Gloss Overlap WordNet subgraph
154. (FEATURE - DONE) Belief Propagation and RGO - Commits as on 20 June 2015
156. (FEATURE - DONE) Commits as on 4 July 2015 - RGO sentiment analyzer on cynical tweets
164. (FEATURE - DONE) Commits as on 16 September 2015
165. (FEATURE - DONE) Commits as on 18 September 2015
168. (FEATURE - DONE) Commits as on 20,21,22 October 2015
169. (FEATURE - DONE) Commits as on 28 October 2015
170. (FEATURE - DONE) Commits as on 29 October 2015, 1 November 2015
172. (FEATURE - DONE) Hurricane Datasets Sequence Mining - Commits as on 4 November 2015
173. (FEATURE - DONE) BigData Storage Backend Abstraction subsystem for AsFer - Commits as on 5 November 2015 :
174. (FEATURE - DONE) AsFer C++ - Python Integration - Embedding Python in AsFer C++ - Commits as on 11 November 2015
175. (FEATURE - DONE) Config File Support for AsFer C++ and Python Machine Learning Algorithms - Commits as on 12 November 2015
179. (FEATURE - DONE) Web Spider Implementation with Scrapy Framework - Commits as on 16 November 2015
180. (FEATURE - DONE) Sentiment Analyzer Implementation for Spidered Texts - Commits as on 16 November 2015
189. (FEATURE - DONE) Commits as on 9 December 2015
190. (FEATURE - DONE) Commits as on 11 December 2015
192. (FEATURE - DONE) Commits as on 14 December 2015
193. (FEATURE - DONE) RGO graph complexity measures for intrinsic merit of a text document - Commits as on 15 December 2015
196. (FEATURE - DONE) Mined Rule Search in Astronomical Data - Commits as on 17 December 2015
199. (FEATURE - DONE) Tornado Webserver, REST API and GUI for NeuronRain - Commits as on 22 December 2015
200. (FEATURE - DONE) NeuronRain as SaaS and PaaS - for commits above in (199)
201. (FEATURE - DONE) Apache Spark MapReduce Parallel Computation of Interview Algorithm Recursive Gloss Overlap Graph Construction
212. (FEATURE - DONE) Principal Component Analysis (PCA) and Singular Value Decomposition (SVD) - Commits as on 12 January 2016
213. (FEATURE - DONE) Kullback-Leibler Divergence - Commits as on 17 January 2016
214. (FEATURE - DONE) Basic Statistics - Norms and Median - Commits as on 19 January 2016
220. (FEATURE - DONE)  Python-C++-VIRGOKernel and Python-C-VIRGOKernel boost::python and cpython implementations:
(FEATURE - DONE) C++ - Input Dataset Files nomenclature change for NeuronRain Enterprise
(FEATURE - DONE) Python - Input Dataset Files nomenclature change for NeuronRain Enterprise
(FEATURE - DONE) Crucial commits for Performance improvements and Cython build of Spark Interview algorithm implementation
233. (FEATURE-DONE) Commits as on 3 March 2016 - PERL WordNet::Similarity subroutine for pair of words
234. (FEATURE-DONE) PERL WordNet::Similarity build and python issues notes
237. (FEATURE-DONE) Commits as on 11 March 2016 - Deep Learning Convolution - Multi Feature Convolution Map Kernel Filters
238. (FEATURE-DONE) Commits as on 14 March 2016
240. (FEATURE-DONE) Commits as on 15 March 2016
242. (FEATURE-BENCHMARK-DONE) Interview Algorithm PySpark-Cython implementation benchmark with and without Spark configurables
245. (FEATURE-BENCHMARK-DONE) Interview Algorithm PySpark-Cython implementation benchmark with Spark configurables
247. (FEATURE-DONE) Commits as on 24 March 2016 - Code Optimizations - Cacheing and Loop invariant - Interview Algorithm
248. (FEATURE-BENCHMARK-DONE) Intrinsic Merit PySpark-Cython implementation - With and Without cacheing
251. (FEATURE-DONE) Commits (1) as on 30 March 2016 - MemCache Integration with Spark-Cython Intrinsic Merit Computation
252. (FEATURE-DONE) Commits (2) as on 30 March 2016 - Spark-Cython Intrinsic Merit computation with spark-defaults.conf enabled
253. (FEATURE-DONE) Commits as on 1 April 2016
258. (FEATURE-BENCHMARK-DONE) Analysis of PySpark-Cython Intrinsic Merit Computation Benchmarks done so far
(FEATURE-DONE) Implementation for NC Discrete Hyperbolic Factorization with Bitonic Sort alternative (in lieu of unavailable PRAM implementations):
276. (FEATURE-DONE) Commits as on 30 May 2016 - Continued from 220
277. (FEATURE-DONE) Commits as on 31 May 2016 - Continued from 220 and 276
278. (FEATURE-DONE) Commits as on 7 June 2016
279. (FEATURE-DONE) Commits - 23 June 2016 - Recurrent Neural Network Long Term Short Term Memory - Deep Learning - Implementation
280. (FEATURE-DONE) Commits - 23 June 2016 - Minimal Reinforcement Learning (Monte Carlo Action Policy Search) implementation
281. (FEATURE-DONE) Commits - 24 June 2016 - ThoughtNet Reinforcement Learning implementation
282. (FEATURE-DONE) Commits - 26 June 2016 - ThoughtNet File System Storage
284. (FEATURE-DONE) Auto Regression Moving Average - ARMA - Time Series Analysis for Stock Ticker Stream
285. (FEATURE-DONE) Commits 1 - 28 June 2016 - Neo4j ThoughtNet Hypergraph Database Creation
286. (FEATURE-DONE) Commits 2 - 28 June 2016 -  ThoughtNet Neo4j Transactional graph creation
287. (FEATURE-DONE) Commits - 29 June 2016 - ThoughtNet and Reinforcement Deep Learning
288. (FEATURE-DONE) Schematic Diagram for ThoughtNet Reinforcement Evocation - approximate implementation of 283
289. (FEATURE-DONE) Commits - 30 June 2016 - Sentiment Scoring of ThoughtNet edges and Sorting per Class
290. (FEATURE-DONE) Commits - 1 July 2016 - Reinforcement Learning Bifurcation
293.(FEATURE-DONE) Commits - 7 July 2016 - Experimental implementation of Recursive Lambda Function Growth Algorithm (216 and 292)
294. (FEATURE-DONE) Commits - 8 July 2016
296. (FEATURE-DONE) Music Pattern Mining - Jensen-Shannon Divergence Distance between two FFT Frequency Distributions for similarity
297. (FEATURE-DONE) Software Analytics - Cyclomatic Complexity from SATURN .dot graphs - related to 65
298. (FEATURE-DONE) String Search - Longest Common Substring - Suffix Trees(Suffix Arrays+LCP) Implementation
299. (FEATURE-DONE) Binary String Encoding of Time Series - Commits - 27 July 2016
300. (FEATURE-DONE) Tornado GUI Authentication Template - Commits - 27 July 2016
301. (FEATURE-DONE) OAuth2 authentication and credentials storage in MongoDB/Redis with passlib sha256 encryption
308. (FEATURE-DONE) Markov Random Fields (MRF) Belief Propagation - Commits - 8 August 2016
309. (FEATURE-DONE) Commits - 12 August 2016 - Boost 1.58.0 upgrade from 1.55.0 - Boost::Python C++ extensions for VIRGO
313. (FEATURE-DONE) Astronomical Sequence Mining based Precipitation Forecast (from 100 year historic dataset) - related to 172, 278
315. (FEATURE-DONE and BUG-STABILITY ISSUES) NeuronRain AsFer Commits for Virgo Linux - Commits - 25 August 2016
316. (FEATURE-DONE and BUG-STABILITY ISSUES) NeuronRain AsFer Commits for Virgo Linux - Commits - 26 August 2016
324. (FEATURE-DONE) PAC Learning for Prime Numbers encoded as binary strings - Commits - 12 September 2016
325. (FEATURE-DONE) PAC Learning for Prime Numbers - Commits - 14 September 2016
328. (FEATURE-DONE) Locality Sensitive Hashing Implementation - Nearest Neighbours Search - Commits - 16 September 2016
329. (FEATURE-DONE) LSH WebCrawler Support - Commits - 19 September 2016
331. (FEATURE-DONE) ZeroMQ based Concurrent Request Servicing CLI - Client and Multithreaded Server Implementation
332. (FEATURE-DONE) KingCobra VIRGO Linux workqueue and Kafka Publish-Subscribe Backend Message Queue support in Streaming Generator
339. (FEATURE-DONE) Boyer-Moore Streaming Majority Algorithm - Commits - 7 October 2016
340. (FEATURE-DONE) GSpan Graph Substructure Mining Algorithm Implementation - Commits - 13 October 2016 and 14 October 2016
342. (FEATURE-DONE) Graph Mining Recursive Gloss Overlap Graph for text documents - Document Similarity
347. (FEATURE-DONE) NeuronRain C++-Python System calls invocation - Commits - 29 November 2016
351. (FEATURE-DONE) Recommender Systems Implementation based on ThoughtNet Hypergraph - 1 January 2017
352. (FEATURE-DONE) Kafka data storage for Streaming Abstract Generator - 2 January 2017
353. (FEATURE-DONE) An example usecase of Recommender Systems for online shopping cart - 2 January 2017
354. (FEATURE-DONE) More detailed shopping cart example 2 for RGO+ThoughtNet based Recommender System - 3 January 2017
356. (FEATURE-DONE) PythonSpark+Cython Interview Algorithm cloud implementation update - 4 January 2017 - related to 348
360. (FEATURE-DONE) Commits - 11 January 2017 - DeepLearning Convolution Networks update
361. (FEATURE-DONE) DeepLearning Convolution Network - an example pattern recognition from bitmap images - 12 January 2017
362. (FEATURE-DONE) DeepLearning BackPropagation Implementation Update - 17 January 2017
363. (FEATURE-DONE) Software Analytics with DeepLearning - 18 January 2017
366. (FEATURE-DONE)  Commits - 25 January 2017 - related to 2.9 and 345
367. (FEATURE-DONE) Berlekamp-Welch Algorithm implementation - update for text message decoding - 27 January 2017
369. (FEATURE-DONE) An experimental special case k-CNF SAT Solver algorithm implementation - 31 January 2017
371. (FEATURE-DONE) Reinforcement Learning - ThoughtNet based Recommender Systems Implementation Update - 2 February 2017
372. (FEATURE-DONE) Recursive Gloss Overlap classifier update - 3 February 2017
373. (THEORY and FEATURE-DONE) CNFSAT solver update - polynomial time approximation - 5 February 2017
374. (FEATURE-DONE) Java Spark Streaming - Generic Stream Receiver Implementation - 6 February 2017
375. (FEATURE-DONE) Java Spark Streaming for Generic data - Jsoup ETL integration - 7 February 2017
376. (THEORY and FEATURE-DONE) Approximate SAT solver update - 8 February 2017 - related to 373
377. (FEATURE-DONE) Java Spark Streaming Generic Receiver update - 9 February 2017
378. (FEATURE-DONE) Spark Streaming Java Update - Java Bean DataFrame(Dataset) creation, Hive Metastore support and persistence of
380. (FEATURE-DONE) Approximate SAT solver update - 14 February 2017
381. (FEATURE-DONE) Java Spark Streaming with NetCat WebServer update and some analysis on HiveServer2+Spark Integration - 18 February 2017
382. (FEATURE-DONE) Spark Version Upgrade for Recursive Gloss Overlap Graph Intrinsic merit and Discrete Hyperbolic Factorization Cloud
386. (FEATURE-DONE) Java Spark Generic Streaming and Streaming Abstract Generator Integration - 27 February 2017
387. (FEATURE-DONE) Streaming Algorithms Implementations for Spark Streaming Parquet Data Storage - 28 February 2017
388. (FEATURE-DONE) Major rewrite of BackPropagation Implementation for arbitrary number of Neuron input variables layer - 2 March 2017
389. (FEATURE-DONE) Convolution Network Final Neuron Layer Integrated with BackPropagation Implementation- 3 March 2017
391. (FEATURE-DONE) DeepLearning (ConvolutionNetwork-BackPropagation) JPEG files with Python Imaging Library (PILlow) - 6 March 2017
392. (FEATURE-DONE) DeepLearning (ConvolutionNetwork-BackPropagation) tobit() update - 7 March 2017
393. (FEATURE-DONE) DeepLearning (ConvolutionNetwork-BackPropagation) image_to_bitmatrix() update - 8 March 2017
395. (FEATURE-DONE) Deep Learning Recurrent Neural Network Gated Recurrent Unit (RNN GRU) Implementation - 9 March 2017
396. (FEATURE-DONE) Recursive Lambda Function Growth + Tensor Neuron (NTN) Intrinsic Merit - 13 March 2017 - related to 384, 385
397. (FEATURE-DONE) Korner Entropy Intrinsic Merit for Recursive Gloss Overlap graphs - 14 March 2017 - related to 383
398. (FEATURE-DONE) Software Analytics update - 15 March 2017
401. (FEATURE-DONE) LSH Index implementation for NeuronRain AsFer Text and Crawled Web Documents Intrinsic Merit Ranking - 4 April 2017
402. (FEATURE-DONE) ThoughNet Index implementation for NeuronRain AsFer Text and Crawled Web Documents Intrinsic Merit Ranking - 4 April 2017
403. (FEATURE-DONE) Initial commits for Indexless Hyperball Recursive Web Crawler - 7 April 2017
405. (FEATURE-DONE) Commit - NeuronRain AsFer-CPython Extensions VIRGO64 system call invocations - 20 April 2017
406. (FEATURE-DONE) Commits - NeuronRain AsFer Boost C++-Python - VIRGO64 System calls + Drivers invocation - 26 April 2017
407. (FEATURE-DONE) Commits - 28 April 2017 - NeuronRain AsFer-Boost::Python-C++ - VIRGO64 systemcalls and drivers invocations
409. (FEATURE-DONE) Commits - 17 May 2017 - NeuronRain AsFer-VIRGO64 Boost-C++-Python invocations
411. (FEATURE-DONE) AngularJS - Tornado GUI-REST WebService - Commits - 1 June 2017
413. (FEATURE-DONE) Recursive Lambda Function Growth - Graph Tensor Neuron Network Implementation - Commits - 9 June 2017
414. (FEATURE-DONE) Graph Tensor Neuron Network - implementation update - Commits - 10 June 2017
415. (FEATURE-DONE) Script for Querying Index (LSH and ThoughtNet) and Ranking the results with Recursive Lambda Function Growth
416. (FEATURE-DONE) Graph Tensor Neuron Network Intrinsic Merit and QueryIndexAndRank update - Commits - 15 June 2017
417. (FEATURE-DONE) Hyperball crawler update - Commits - 19 June 2017
421. (FEATURE-DONE) Text Summarization from Recursive Gloss Overlap Graph Core - Commits - 28 June 2017
422. (FEATURE-DONE) Text Summarization from Recursive Gloss Overlap Graph Core - Commits - 30 June 2017
425. (FEATURE-DONE) Updates to Text Summarization from Dense Subgraph of Recursive Gloss Overlap graph of a Text -
426. (FEATURE-DONE) Updates to Text Summarization - Commits - 5 July 2017
427. (FEATURE-DONE) Updates to Text Summarization - choosing sentences matching class labels - 6 July 2017
428. (FEATURE-DONE) ConceptNet 5.4 Python RESTful API implementation - lookup, search and association - 7 July 2017
431. (FEATURE-DONE and THEORY) Approximate CNF SAT Solver Update - percentage of clauses satisfied - 18 July 2017
433. (FEATURE-DONE) Approximate CNF SAT Solver update - Commits 1 - 19 July 2017
434. (FEATURE-DONE) Recursive Gloss Overlap Graph Classifier update - Commits 2 - 19 July 2017
435. (FEATURE-DONE) Recursive Gloss Overlap graph classifier update - commits 1 - 20 July 2017
436. (FEATURE-DONE) Approximate SAT Solver update - commits 2 - 20 July 2017
437. (FEATURE-DONE) Approximate SAT Solver update - 24 July 2017
439. (FEATURE-DONE) Scheduler Analytics for VIRGO Linux Kernel - Commits - 31 July 2017 and 1,3 August 2017
441. (FEATURE-DONE) Scheduler Analytics update - commits - 1 August 2017
442. (FEATURE-DONE) Graph Density (Regularity Lemma) and Bose-Einstein Fitness implementations - commits - 1 August 2017
444. (FEATURE-DONE) Scheduler Analytics Update - Commits - 10 August 2017
445.(FEATURE-DONE) Celestial Pattern Mining Update - specific to NeuronRain Research in SourceForge repositories - recreated Sequence Mined Rules - Commits - 22 August 2017
446. (FEATURE-DONE) Celestial Data Pattern Mining - Updates to autogen_classifier_dataset pre-processing and classification of datasets - 23 August 2017
447. (FEATURE-DONE) Updated Ephemeris Search Script - Commits - 24 August 2017
448. (FEATURE-DONE) Approximate CNFSAT Solver update - SciPy Sparse - 28 August 2017
454. (FEATURE and THEORY) Commits - Approximate SAT solver - 15 September 2017
456. (THEORY and FEATURE) CNF3SAT Approximate Solver Update - All possible variable-clause combinations - Commits - 18 September 2017
457. (THEORY and FEATURE) Inapproximability and Random Matrix Analysis of Least Square Approximate SAT solver - Commits - 19 September 2017
460. (THEORY and FEATURE) Random Matrix Rounding for Least Squares Approximate CNFSAT Solver - various clause-variable permutations - numbers, some anomalous - 25 October 2017
463. (FEATURE-DONE) Ephemeris Search Script Update - Celestial Pattern Mining - 31 October 2017
464. (FEATURE-DONE) Ephemeris Search - Sequence Mining of Tropical Monsoon for mid-November 2017 - 1 November 2017
466. (FEATURE-DONE) Support Vector Machines implementation - based on CVXPY - 9 November 2017
468. (FEATURE-DONE) Support Vector Machines - update - 10 November 2017
469. (FEATURE-DONE) Computational Geometric Hyperbolic Factorization - Pixelated Segments Spark Bitonic Sort - 13 November 2017
470. (FEATURE-DONE) Support Vector Machines Update - Learn and Classify functions - 13 November 2017
472. (FEATURE-DONE) Support Vector Machines Update and Discrete Hyperbolic Factorization Spark Benchmarks
474. (FEATURE-DONE) Computational Geometric Factorization - Tiling Update and benchmark numbers for factoring few integers - 16 November 2017
475. (FEATURE-DONE) Computational Geometric Factorization Update - Spark Accumulators, JSON for Tiling etc., - 19 November 2017
476. (FEATURE-DONE and THEORY) Computational Geometric Factorization Update - Benchmarks and Tiling - 20 November 2017 - related to 34
478. (FEATURE-DONE and THEORY)  Computational Geometric Factorization and Parallel Tile Search Updates
479. (FEATURE-DONE) Computational Geometric Factorization Tiling Optimization - Binary Search for Tile Segments in Spark - 23 November 2017
480. (FEATURE-DONE) Computation Geometric Factorization - Binary Search for Tiles - Benchmarks
482. (FEATURE-DONE) Support Vector Machines - Mercer Theorem - Kernel Implementation - 29 November 2017
483. (FEATURE-DONE) Support Vector Machines - Mercer Kernel Update - 30 November 2017
484. (FEATURE-DONE) Compressed Sensing - Image Sketch implementation - 1 December 2017
485. (FEATURE-DONE) Compressed Sensing Update - Decompression and Error estimation of recovered image bitmap from sketch - 4 December 2017
488. (FEATURE-DONE) NeuronRain AsFer-KingCobra MAC Electronic Money - Proof-of-Work and Universally Unique ID Hash implementation -
489. (FEATURE-DONE) AsFer-KingCobra Neuro Electronic Currency - Rvalue NonPrimitive Perfect Forward - 18 December 2017
491. (FEATURE-DONE) All pairs of encoded strings - Sum of Distances - algorithm mentioned in Grafit course notes implemented - 3 January 2018
492. (THEORY and FEATURE-DONE) Complement Function Map Construction - Diophantine Representation - Lagrange's Four Square Theorem SymPy solver
493. (FEATURE-DONE) Computation Geometric Factorization - Binary Search for Tiles - Optimization - Benchmarks - Revised - 4 January 2018
494. (THEORY and FEATURE-DONE) Complement Diophantine Map - Converts a Partial Function to Total Function - 6 January 2018
496. (THEORY and FEATURE-DONE) Computational Geometric Factorization Update - Local Tile Computation and necessity for storage removed -
497. (THEORY and FEATURE-DONE) Computational Geometric Factorization - Non-Persistent Tile Segments - 30 bit Single Node Dual Core Spark Benchmarks - 11 January 2018 - related to 495
498. (THEORY and FEATURE-DONE) Computational Geometric Factorization - Non-Persistent Tile Segments - 31 bit Single Node Dual Core Spark Benchmarks - Primality Testing - Multiplicative Partition - Factorisatio Numerorum - 12 January 2018 - related to 495
499. (FEATURE-DONE) Secure Neuro Currency Cloud Perfect Forward Move - OpenSSL client and server - 19 January 2018
500. (FEATURE-DONE) Searching Unsorted List of Numbers - Algorithm in GRAFIT Open Learning Implemented - 21 January 2018
502. (FEATURE-DONE) Scheduler Analytics - Interprocess Distance Computation by DictDiffer - 24 January 2018
503. (FEATURE-DONE) Scheduler Analytics - Process kNN classification and K-Means clustering, Process Dict Hashing - 25 January 2018
504. (FEATURE-DONE) Streaming Algorithms - Encoded Strings Data Source - 26 January 2018
505. (FEATURE-DONE) Scheduler Analytics - Sequence Mining - 29 January 2018
508. (FEATURE-DONE) Streaming Analytics Abstract Generator Update - Socket Streaming Datasource Added - 8 February 2018
509. (FEATURE-DONE) Scheduler Analytics - Socket Streaming Server - Decorator pattern implementation - 9 February 2018
510. (FEATURE-DONE) Scheduler Analytics Socket Streaming Decorator - Psutil iterator frequent disconnects resolution - 11 February 2018
511. (FEATURE-DONE) Approximate 3SAT Solver Randomized Rounding Update - NumPy random choice() replacing permutation() - 27 February 2018
512. (FEATURE-DONE) ConceptNet5 Update - REST endpoints changed - 27 February 2018
513. (FEATURE-DONE and THEORY) Approximate SAT Solver and ConceptNet REST client updates - 21 variables,21 clauses LSMR and Common Ancestor Distance in ConceptNet5 - 28 February 2018
515. (THEORY and FEATURE-DONE) Recursive Lambda Function Growth - ConceptNet5 support, Per random walk 
516. (FEATURE-DONE) SAT Solver - verbose print and iterations reduced - 4 March 2018
518. (THEORY and FEATURE-DONE) Hardness of Majority Voting, SAT Solver Update - Compressed Sensing and Moore-Penrose Pseudoinverse 
519. (THEORY and FEATURE-DONE) SAT Solver Update - pinv2() - 1000 variables and 1000 clauses - 6 March 2018
520. (THEORY and FEATURE-DONE) SAT Solver Update - 2500 clauses and 2500 variables - LSMR,LSQR and PseudoInverse Benchmarks - related to 518
521. (THEORY and FEATURE-DONE) SAT Solver Update - Non-Uniform Choice - For both equal and unequal number of clauses and variables -
522. (THEORY and FEATURE-DONE) SAT Solver Update - Non-Uniform Choice - 3200 variables and 3100 clauses and Alpha=4.26 - related to 521 
523. (THEORY and FEATURE-DONE) SAT Solver Update - Non-uniform Choice 2 - 5000 variables and Alpha=4.267 and some intuition - related to 522 
524. (THEORY and FEATURE-DONE) SAT Solver Update - Variables and Alpha as parameters and two Alpha Versus MAXSAT ratio graph plots -
525. (FEATURE-DONE) SAT Solver Update - nonuniform_choice3() updated for constant multiple in expansion of the variables array
527. (THEORY and FEATURE-DONE) Hardy-Ramanujan Approximate Ray Shooting Queries for Factors - Optimization in Computational Geometric
528. (FEATURE-DONE) Unsorted Search Update - Streaming Abstract Generator File Datasource Support, Prefix-Suffix substrings hashtables 
530. (THEORY and FEATURE-DONE)  Recursive Lambda Function Growth - Graph Tensor Neuron Network Intrinsic Merit for Random Walks 
531. (FEATURE-DONE) Recursive Lambda Function Growth - Simple Cycles and Rich Club Coefficient - 27 March 2018
532. (THEORY-FEATURE-DONE) Least Squares SAT Solver Benchmarks - 1000 variables - Non-uniform choice 3 - different values of Alpha - 29 March 2018 - related to 524
534. (THEORY and FEATURE-DONE) Complement Diophantine and Factorization - Pell Equation Solver Update - 
535. (THEORY and FEATURE-DONE) Complement Diophantine and Factorization - Pell Equation Solver Update 2 -
537. (FEATURE-DONE) ConceptNet Client Upgrade to 5.6 - REST endpoints for Emoticons - 23 April 2018
540. (THEORY and FEATURE-DONE) Recursive Lambda Function Growth - Update - WordNet Relations Deep Structure
541. (THEORY and FEATURE-DONE) Recursive Lambda Function Growth - Update - Postorder Traversal of AVL Lambda Composition Tree - 2 May 2018
542. (THEORY and FEATURE-DONE) SAT Solver Update - Parity of the Assignment - 3 May 2018
543. (FEATURE-DONE) SAT Solver Update - SciPy Upgrade to 1.1 for restoring LSMR - 1000 clauses and Alpha=1.0
544. (FEATURE-DONE) Computational Geometric Factorization - Spark 2.3 Upgrade - Single Core - 30-bit integer
545. (FEATURE-DONE) SAT Solver Update - Initial Guess for LSMR - 1000 variables and Alpha=4.267 and 1.0
547. (FEATURE-DONE) Graph Mining - GSpan Algorithm Implementation Update - for mining patterns in EventNet 
548. (FEATURE-DONE) ThoughtNet - Contextual Multi Armed Bandit Evocation - Update - 21 May 2018
549. (FEATURE-DONE) ThoughtNet Reinforcement Learning - Contextual Multi Armed Bandit Evocation Update
550. (THEORY and FEATURE-DONE) Computational Geometric Factorization - Single Core - Hardy-Ramanujan Ray Shooting Queries - 23 May 2018
552. (FEATURE-DONE) Computational Geometric Factorization - Ray Shooting Queries - Hardy-Ramanujan-Prime Number Theorem and Baker-Harman-Pintz Gap between Prime Numbers - 24 May 2018
553. (THEORY and FEATURE-DONE) Computational Geometric Factorization - Ray Shooting Queries and Cramer Prime Gap Updates - 29 May 2018
554. (FEATURE-DONE) Scheduler Analytics Update - Rewrite of scheduler analytics webserver functionality and Spark log mapreduce of "perf sched script" - 30 May 2018
556. (THEORY and FEATURE-DONE) Computational Geometric Factorization - Ray Shooting Queries - Yitang Zhang Prime Gap Estimate - 5 June 2018
557. (THEORY and FEATURE-DONE) Computational Geometric Factorization - Ray shooting queries - correction
558. (THEORY and FEATURE-DONE) Computational Geometric Factorization - Hardy-Ramanujan-PNT Ray Shooting - Correction - 7 June 2018
559. (THEORY and FEATURE-DONE) Computational Geometric Factorization - Ray Shooting Queries - Constant Changes
560. (THEORY and FEATURE-DONE) SAT Solver Update - nonuniform_choice3() damp - 2000 variables and Alpha=4.267
561. (FEATURE-DONE) Scheduler Analytics Update - New Convolution Network for analyzing stream of 2-dimensional graphics performance image data - 14 June 2018
563. (THEORY and FEATURE-DONE) Random 3SAT Approximate LSQR/LSMR Solver update - Increase in Accuracy
564. (THEORY and FEATURE-DONE) SAT Solver Update - Randomized Rounding and other linear system of equation solvers - 21 June 2018
565. (FEATURE-DONE) Query Index and Ranking - Sorting by merit - 22 June 2018
567. (FEATURE-DONE) Streaming Analytics - Facebook Graph API - Python 3.4 and facebook-sdk - 29 June 2018
568. (FEATURE-DONE) Streaming Analytics - Facebook Graph - 2 July 2018
569. (THEORY and FEATURE) SAT Solver - Discrete Fourier Transform (FFT) of the real assignment,
570. (THEORY and FEATURE) Computational Geometric Factorization, Ray Shooting Query Oracles, ABC Conjecture
571. (FEATURE) Streaming Facebook Analytics - Exhaustively print all wall posts of a user - 6 July 2018
573. (FEATURE) Streaming Facebook Analytics - Comments - 10 July 2018
574. (FEATURE) DeepLearning - Reinforcement Learning - Recommender Systems - Recursive Lambda Function Growth Merit - 12 July 2018
576. (FEATURE) Spark Streaming - Java 1.8 - Spark Java Upgrade to 2.3 and Some Structured Streaming 
577. (THEORY and FEATURE) Computational Geometric Factorization and its Pell Diophantine (Complement Diophantine of Prime Valued Polynomials) - Updates - 18 July 2018
578. (FEATURE) ConceptNet 5.6 Client Update - Common Ancestor Algorithm rewrite for path between concepts
579. (THEORY and FEATURE) SAT Solver Update - some refactoring, and replace=True - 20 July 2018
1191. (THEORY and FEATURE) PhD Thesis Proposal (2011) - Sections on Program Comprehension - https://sites.google.com/site/kuja27/PhDThesisProposal.pdf - Theoretical Answers to some questions in it:
583. (FEATURE) *) Sentiment Analyzer - Empath word embeddings - multipolar sentiment analysis
584. (FEATURE) Latent Semantic Analysis/Indexing (LSA/LSI) Implementation - 7 August 2018
585. (FEATURE) SAT Solver - CVXOPT LAPACK gels() least squares - 9 August 2018
586. (FEATURE) Latent Semantic Analysis - Low Rank Approximation - 9 August 2018
589. (THEORY and FEATURE) SAT Solver - CVXOPT - gesv() least squares - 16 August 2018 - related to 424
590. (FEATURE) Program Analysis + Software Analytics - Valgrind/Callgrind/KCachegrind Call Graph DOT file 
591. (FEATURE) Program Analysis + Software Analytics - Graph Mining of Call graph and CFG DOT files 
592. (THEORY and FEATURE) SAT Solver - CVXOPT - L1-norm Regularized Least Squares Quadratic Program l1regls() 
593. (FEATURE) Audio/Music Pattern Mining - Audio to Time Series - 24 August 2018
595. (FEATURE) Music/Audio Pattern Mining - Histogram and Probability Distribution Function extraction (PDF)
596. (FEATURE) Music/Audio Pattern Mining - Jensen-Shannon Divergence of Probability Distributions of two 
599. (FEATURE) Streaming Algorithms - Approximate Counting and Distinct Elements - 21 September 2018
600. (FEATURE) Streaming Abstract Generator - Absolute paths to Relative paths - 21 September 2018
603. (THEORY and FEATURE) ImageGraph creation from an Image - Keras-Theano - related to 587 and 588 -
604. (FEATURE) Music Pattern Mining - Onset of Notes Detection - 1 October 2018 - related to 67,68,69
606. (THEORY and FEATURE) VideoGraph EventNet Tensor Product Merit for Large Scale Visuals - 3 October 2018
607. (THEORY and FEATURE) Video EventNet Tensor Products - Inverse Distance Merit of Large Scale Visuals
608. (THEORY and FEATURE) Video EventNet Tensor Products - Emotional Merit of Large Scale Visuals 
611. (THEORY and FEATURE) Video Emotions Hashmap, Video Core Topological Sort Summary - 25 October 2018
612. (FEATURE) Video EventNet Core Topological Sort Summary - Bugfixes - 28 October 2018 
613. (FEATURE) People Analytics - HR Analytics Implementation and Least Energy Intrinsic Merit of a 
614. (FEATURE) Social Network Analysis - People Analytics - Another example and Unicode corrections - 
616. (FEATURE) Software Analytics - Cyclomatic Complexity - Rewrite for merging two clauses - 14 November 2018
618. (FEATURE) People Analytics - Experiential Intrinsic Merit - LinkedIn Profile Connections - 20 November 2018
619. (THEORY and FEATURE) Software Analytics - Cyclomatic Complexity - FTrace call graphs - 28 November 2018,12 April 2020
621. (FEATURE) Social Network Analysis - People Analytics - Dictionary filter for names - 4 December 2018
622. (THEORY and FEATURE) Text (De)Compression by HMM on Vowelless texts - Prefix and Suffix Probabilities from English Dictionary - 6 December 2018
627. (FEATURE) Vowelless Text (De)Compression - simplified likelydict MLE for HMM - 3 January 2019
628. (FEATURE) Software Analytics - Hardcoded inputlayer replaced by Psutils - 8 January 2019 - Usecase
630. (THEORY and FEATURE) Music Pattern Mining - Audio to Notes - Intrinsic Merit of Music - 12 January 2019, 21 January 2019 - related to all sections on Intrinsic Merit and Fame - related to 67,68,69,593
632. (FEATURE and THEORY) Intrinsic Merit of Music, Exact Learning of DFAs, Minimum Description Length
633. (THEORY and FEATURE) GIS and Urban Planning Analytics, Convex Hull - 31 January 2019
634. (FEATURE) Software Analytics and Scheduler Analytics - Backpropagation correction - 9 February 2019
635. (THEORY and FEATURE) Intrinsic Merit of Texts, Ramsey Theory, Complement Diophantines - Ramsey
637. (FEATURE) NeuronRain Usecases - Analytics Piloted Drone Online Shopping Delivery - 25 February 2019
638.(FEATURE) Software Analytics - Scheduler Analytics - /etc/sysctl.conf kernel.sched_* optional
639.(FEATURE) Software Analytics - Scheduler Analytics - /proc/sched_debug support - 27 February 2019
642. (FEATURE) Merit of Audio/Music - Music Synthesizer from Random samples and State Machine - 5 March 2019
643. (FEATURE) Merit of Audio/Music - Music Synthesizer - Music from mathematical functions - 6 March 2019
644. (FEATURE) Intrinsic Merit of Audio/Music - Mel Frequency Cepstral Coefficients - 11 March 2019
647. (THEORY and FEATURE) Bounded Error Factorization (Approximate Factors), Ray Shooting Queries, Transition from Quantum to Classical Computation, Derandomization - related to 597,631 - 21 March 2019, 2 August 2019
650. (THEORY and FEATURE) Streaming Set Partition (Histogram) Analytics - 28 March 2019
651. (THEORY and FEATURE) Reduction from Set Partition to Exact Square Tiles Cover of Rectangular Region,
652. (FEATURE) Histogram-Set Partition Analytics - Adjusted Mutual Information - 3 April 2019
653. (FEATURE and THEORY) Computational Geometric Factorization - Tile Search - Spark 2.4 -SparkContext
654. (THEORY and FEATURE) EventNet creation from Video, Actor Model, PetriNets, Video EventNet Tensor Products Intrinsic Merit - 19 April 2019 - related to all sections on Causality-Logical Time and Merit
655. (THEORY and FEATURE-BUGFIX) EventNet creation from Video - bug resolutions, corrections to EventNet vertices and edges text files - 21 April 2019
656. (FEATURE) Medical Imageing Analytics - ElectroCardioGram (ECG), EventNet from Video - 23 April 2019
658. (THEORY and FEATURE) Video EventNet Causality Graph Complexity Measures, Graph Minors, Merit of
659. (FEATURE) Music Pattern Mining - Music Synthesis by Automaton - Read from textfile - 30 April 2019
660. (THEORY and FEATURE) DeepLearning Convolution BackPropagation - handwriting recognition - utility function - 5 May 2019, 9 May 2019
661.(THEORY and FEATURE) Music Pattern Mining - Weighted Automaton Learning from Music - 11 May 2019 - related to all sections on
662. (FEATURE) Intrinsic Merit of Music - Learning Weighted Automata from Music - Example - 14 May 2019
663. (FEATURE) Named Entity Recognition - Conditional Random Fields - Update - 16 May 2019
664. (FEATURE) Spark 2.4 Structured Streaming - Windowed Stream - 21 May 2019
665. (FEATURE) Named Entity Recognition - Conditional Random Fields - Skew Normal Distribution Update - 29 May 2019
667. (FEATURE) Social Network Analysis, People Analytics, PDF file parsing - 13 June 2019
671. (THEORY and FEATURE) Intrinsic Merit of Music - MFCC analysis and zero crossing rate - 27 June 2019
672. (FEATURE and THEORY) Intrinsic Merit of People/Professional Profiles - People Analytics - Tenure Histogram - 28 June 2019
673. (FEATURE) People Analytics - Partition Rank Attrition Metric of Tenure Histogram - 29 June 2019
674. (FEATURE) People Analytics - Rank Correlation based Attrition Model of Tenure Histogram - 1 July 2019
675. (FEATURE) Urban Planning Analytics - Analysis of Remote Sensing GIS Imagery of Urban Sprawls - 3 July 2019
676. (FEATURE) Image Analytics - ImageNet Keras-Theano - Random Forest Classification wrapper for images - 4 July 2019
677. (FEATURE) Image Analytics - ImageNet Keras-Theano - Unsupervised Recursive Gloss Overlap classifier based on ImageNet - 5 July 2019
679. (FEATURE and THEORY) Fraud Analytics - Principal Component Analysis and KMeans++ clustering of an example Credit Card Transactions
680. (FEATURE) Intrinsic Merit of Audio - Speech Recognition Integration and Graph Tensor Neuron Merit of the recognized speech text -
681. (THEORY and FEATURE) Intrinsic Merit of Music - MFCC Earth Mover Distance similarity based Music Recommender - 12 July 2019
684. (FEATURE) Urban Planning/GIS Image Analytics - scikit learn extract_patches_2d() integration - 25 July 2019
685. (FEATURE) People Analytics - Kaggle LinkedIn Dataset Analysis - 26 July 2019
686. (FEATURE) People Analytics - Kaggle LinkedIn DataSet - Experiential and Degree Intrinsic Merit - 27 July 2019
689. (FEATURE) Fraud Analytics - Credit Card Dataset - Pandas DataFrame Correlation Coefficient Matrix - 28 July 2019
690. (FEATURE) Time Series Analysis - ARIMA implementation - 1 August 2019
691. (FEATURE) Time Series Analysis - ARMA and ARIMA implementations - Rewrite - 2 August 2019
692. (FEATURE) Time Series Analysis - ARMA and ARIMA implementations - Rewrite 2 - 3 August 2019
693. (FEATURE) Time Series Analysis and Fraud Analytics - Credit Card Transactions Dataset - 3 August 2019
694. (FEATURE) Linear and Logistic Regressions - Rewrite - 4 August 2019, 6 August 2019
695. (FEATURE) Gradient Ascent and Descent - Rewrite - 4 August 2019
696. (FEATURE) Named Entity Recognition (NER)-HMM-Viterbi-CRF - Rewrite - 12 August 2019
697. (THEORY-FEATURE) Named Entity Recognition and Text Graph Algorithms in NeuronRain AstroInfer - a non-statistical alternative - 12 August 2019
698. (FEATURE) GIS Remote Sensing Image Analytics - Image Segmentation - 13 August 2019
699.(THEORY-FEATURE) Computational Geometric Factorization - Tile Search Optimization - Spark 2.4.3 and QuadCore benchmarks - 13 August 2019
702.(THEORY-FEATURE) Non-statistical Ontology Semantic Paths based Named Entity Recognition - related to 697 - 22 August 2019
703.(FEATURE) Text Graph of a natural languge text from ConceptNet 5.7 - implementation - 23 August 2019
704.(FEATURE) ConceptNet 5.7 Text Graph - shortest path filter - 25 August 2019
705.(FEATURE) ConceptNet 5.7 Text Graph - additional Graph Complexity Intrinsic Merit measures - 31 August 2019
706.(FEATURE) Recursive Lambda Function Growth - Machine Translation - updated implementation - 5 September 2019
707.(FEATURE) Recursive Lambda Function Growth - Machine Translation - simplified - 6 September 2019
708. (FEATURE) Social Network Analysis - People Analytics - PIPL.com python API integration - Syllable based name clustering - 11 September 2019 and 14 September 2019
709. (FEATURE) Social Network Analysis - People Analytics - Contextual Name Parsing - 14 September 2019
710. (THEORY and FEATURE) Compressed Sensing for Texts - Syllable Vector Vowelless Text Compression - 18 September 2019 - Related to 2, 708
711. (FEATURE) Social Network Analysis - People Analytics - Contextual Name Parsing and Syllable Vector Compression of Strings 
713. (THEORY and FEATURE) People Analytics - Set Partition based Electronic Voting Machine implementation and a NeuronRainApps Drone usecase - 24 September 2019 - related to 620,648
714. (THEORY and FEATURE) Topological Handwriting Recognition - Product Homotopies - Related to 159,660 - 30 September 2019
716. (THEORY and FEATURE) Economic Intrinsic Merit - Gravity Model of Volume of Trade and GDP as fitness measure - 2 October 2019
718. (THEORY and FEATURE) People Analytics - Set Partition Analytics based Drone Electronic Voting Machine - updated - 9 October 2019 - related to 713
720. (THEORY and FEATURE) People Analytics - Handwriting Recognition - Contour Homotopies - Matplotlib Rasterization - 16 October 2019 - related to 714 and 715
721. (THEORY and FEATURE) People Analytics - Handwriting Recognition - Inner Product Space of Contour Interpolated Polynomials - 17 October 2019 - related to 714,715,720
722. (THEORY and FEATURE) Update - Drone Electronic Voting Machine NeuronRainApps Usecase - 22 October 2019 - related to 713
724. (FEATURE) Update 3 - Drone Electronic Voting Machine - JSON persistence of EVMs - Datasource for Voting Analytics - 2 November 2019 - related to 723
726. (THEORY and FEATURE) Drone Electronic Voting Machine - Pseudorandom Majority Voting Balls-Bins Simulation and Voting Analytics - 3 November 2019 - related to 620,725
728. (THEORY and FEATURE) Set Partition to Tile Cover Reduction by Computational Geometric Factorization - Least Squares Approximate Solution
729. (THEORY and FEATURE) Drone Electronic Voting Machine - Streaming Boyer-Moore Majority voting - 27 November 2019
730. (THEORY and FEATURE) Drone Electronic Voting Machine - Streaming Voting Analytics - Bertrand Ballot Theorem - Approximation of Majority Voting, Streaming majority, Forecasts, Theoretical EVMs, Set Partitions - related to 666 - 28 November 2019
731. (FEATURE) Astronomical Pattern Mining - Rule Search Script update for Maitreya Swiss Ephemeris text client maitreya8t - 4 December 2019
732. (FEATURE and THEORY) Merit of Large Scale Visuals - Tensor Rank intrinsic merit of EventNet of a video - 7 December 2019 - related to 588
733. (FEATURE and THEORY) Computational Geometric Factorization - Quadcore Python 3.6 Upgrade Benchmarks - 11 December 2019 - related to all
734. (FEATURE) Merit of Large Scale Visuals - Video EventNet Tensor Decomposition to Rank-1 Tensors on Python 3.7.5 - slicing - 12 December 2019
735. (THEORY and FEATURE) Complement Diophantines - Least Squares Vandermonde Polynomial Fit Learning - related to all sections on 
736. (THEORY and FEATURE) Computational Geometric PRAM-NC-BSP Factorization - Python 3.7.5 upgrade - Spark Quadcore benchmarks - 512 bit integer - related to 477,481 and all other sections on Factorization - 18 December 2019
737. (THEORY and FEATURE) Spark NC-PRAM-BSP Computational Geometric Factorization quadcore Python 3.7.5 benchmarks - 1000+ bits non-smooth random integer of mixed digits - 22 December 2019 - related to all sections on Computational Geometric Factorization
738. (THEORY and FEATURE) Computational Geometric NC-PRAM-BSP Factorization - Python 3.7.5 Single node cluster quadcore benchmarks - 1067 bits integer - some factcheck references on NC-PRAM equivalence and input size - 24 December 2019,31 December 2019,2 January 2020 - related to all sections on Factorization
739. (THEORY and FEATURE) Intrinsic Merit - Unique Identification and its necessity in People Analytics (Drone Electronic Voting Machines), Online Citizen Science, Sports Analytics and Academic Rankings, BKS Conjecture, Consensus versus Majority - 29 December 2019,2 January 2020 - related to 730 
740. (THEORY and FEATURE) People Analytics - Drone Electronic Voting Machine - Python 3.7.5 upgrade and Paper ballot shuffle simulation, PRAM Breadth First and Depth First Search, Set Partition Analytics, Money Trail Economic EventNet Graph Random Walk, Expander Graphs, Cheeger's Constant, Random Closed Packing, Space Filling, Pseudorandomness Extractors and Generators, Birthday Paradox, Unique Identification, Ramsey coloring, Computational Chaos, Voting analytics - 7 January 2020,12 January 2020,13 January 2020 - related to 22,135,230,338,461,739
741. (THEORY and FEATURE) Computational Geometric NC-PRAM-BSP Factorization - Spark 2.4.3 + Python 3.7.5 benchmarks - 1213 and 1243 bits integers factorized, Hyperbolic Rasterization graphics example, Multidimensional hyperplanar point location, Integer Diophantines, Multiplicative partitions and sundry resolutions - related to all sections on factorization - 9 January 2020
742. (THEORY and FEATURE) Computational Geometric Factorization - Quadcore Python 3.7.5 + Spark 2.4.3 benchmarks - 1024 bits integers - 11 January 2020 - related to all sections on Factorization
743. (THEORY and FEATURE) Chaos Pseudorandom Generators - implementation update - Logistic and Lehmer-Palmore PRGs - 21 January 2020 - related to 318, 740 and all sections on Intrinsic Merit, Majority Voting, Ramsey coloring, Hardness Amplification, One-Way Functions, Chaos, Pseudorandomness and draft Randomized NC Chaos PRG defined in https://sites.google.com/site/kuja27/ChaoticPRG.pdf
744. (THEORY and FEATURE) Chaotic Pseudorandom Generator - Python 3.7.5 upgrade, Computational Geometric Factorization - 30 January 2020 -
745. (THEORY and FEATURE) Compressed Sensing - Alphabet-Syllable vectorspace embedding - Python 3.7.5 upgrade - update - 4 February 2020
746. (THEORY and FEATURE) Social Network Analysis - People Analytics - Alphabet-Syllable vectorspace embedding - Python 3.7.5 upgrade - Name clustering - 4 February 2020
747. (THEORY and FEATURE) Computational Geometric Spark NC-PRAM-BSP Factorization Benchmarks - 2014 bits, 2037 bits, 2050 bits integers - Quadcore Spark 2.4.3 + Python 3.7.5 - 5 February 2020
748. (THEORY and FEATURE) Leaky Bucket Timeseries Analyzer Implementation - Python 3.7.5 - 12 February 2020
749. (THEORY and FEATURE) PAC Learning - Python 3.7.5 upgrade, Riemann Hypothesis, Patterns in Primes, class HNc and Algebraic Circuits - 21 February 2020, 22 February 2020 - related to 24,629 and all sections on Complement diophantines, Complementary Sets and Equations, Prime-Composite complementation and Patterns in Primes
782. (THEORY and FEATURE) Text Compression, Compressed Sensing, Syllable boundaries decompression implementation - Python 3.7.5 upgrade and refactoring - 28 February 2020, 29 February 2020
792. (FEATURE) Social Network Analytics - LinkedIn Connections Analysis, Name filter and Python 3.7.5 upgrades - 4 March 2020
793. (THEORY and FEATURE) GIS and Urban Sprawl Analytics - Image Segmentation and Face components statistics,Dual Graph,Four color theorem 
810. (THEORY and FEATURE) GIS and Urban Sprawl Analytics - Delaunay Triangulation and Voronoi diagram of Segmented Image, Intrinsic Merit of
811. (THEORY and FEATURE) Interview Algorithm - Spark Recursive Gloss Overlap Implementation - Python 3.7.5 upgrade and Quadcore Benchmarks
812. (THEORY and FEATURE) People Analytics - Human Resource Analytics - Recursive Lambda Function Growth Intrinsic Merit of Name-filtered Profile - corrections, Chaotic Hidden Markov Model of Tenures/Attrition, Martingales - related to 418,420,613 - 25 March 2020
813. (FEATURE) Recursive Lambda Function Growth - corrections for machine translation - 25 March 2020
814. (THEORY and FEATURE) Computational Geometric Factorization and Set Partition to Lagrange Four Square Theorem Square Tile Cover Reduction - Randomization - 26 March 2020 - related to 651, 728 and all sections on Set partitions, Shell Turing Machines, Kernel Lifting and Factorization
815. (THEORY and FEATURE) Waveform Distance of Audios, Acoustic Distance of Strings, Name Similarity, Music Clustering - Python 3.7.5 -
816. (THEORY and FEATURE) People Analytics - Human Resource Analytics - Chaotic Hidden Markov Model of Tenures/Attrition - implementation - 
817. (THEORY and FEATURE) People Analytics - Talent Analytics - Chaotic Hidden Markov Model of Parallel Tenures/Attritions and JSON persistence - Weighted Automata model of Tenures - Tensor Decomposition of EventNet Logical Time - related to 661,701,812 - 8 April 2020
818. (THEORY and FEATURE) Chaotic Pseudorandom Generator (PRG) - Mandelbrot set, Undecidability of Learning Chaotic Bigdata - 13 April 2020 - related to 459,629,740,743,744 and all sections on Pseudorandomness, EVMs, Hardness amplification, Computational learning theory, Chaos
819. (THEORY and FEATURE) Chaotic Pseudorandom Generator - 1D Binary Cellular Automaton - Multicolored Space Filling - implementation - 16 April 2020,17 April 2020 - related to 135, 752, 818 and all sections on Monochromatic and Multichromatic Space filling, Chaos, Computational Geometric Planar Point Location Search, Pseudorandomness, Linear Programs/CSP, LSH/Separate Chaining, Circle Packing in NeuronRain Unified Theory Drafts
820. (THEORY and FEATURE) People Analytics - LinkedIn Dataset Analysis - Tenure statistics - 17 April 2020 - related to 817
865. (THEORY and FEATURE) NeuronRainApps - NeuronRain usecases - Drone Autonomous Online Shopping Delivery Implementation - MAVSDK + JMAVSIM simulation for PX4 - 1 September 2020 - related to 637,675,713
867. (THEORY and FEATURE) OpenCV Image Contours and Segmentation for Drone Obstacle Avoidance and Motion Planning - related to 866 and all sections on Large Scale Visual Recognition, GIS analytics and Drone Navigation - 12 September 2020
868. (THEORY and FEATURE) OpenCV Image Contours and Segmentation for Medical Imageing - Magnetic Resonance Imageing (MRI and fMRI) - related 
869. (THEORY and FEATURE) Drone Obstacle Avoidance by 3D Navigation on Airspace defined by Road Geometry - related to 582, 867 and all sections on Motion Planning, GIS Analytics, Logical clocks, Large Scale Visuals Recognition, Drone Swarms - 2 October 2020, 6 October 2020
872. (THEORY and FEATURE) Fibonaccian Search - alternative to binary search - related to all sections on Computational Geometric Planar
873. (THEORY and FEATURE) Fibonaccian Search - Python 3.9.0 upgrade for Factorization - related to 872 - 5 November 2020
874. (THEORY and FEATURE) People Analytics - People Profiles as Tensors - related to 752 and all sections on Embedding in vectorspace, Social
875. (THEORY and FEATURE) People Analytics - Alphabet Vectorspace Embedding Distance implementation - related to 752,874 and all sections on
876. (THEORY and FEATURE) People Analytics - People profiles as Tensors - Chaotic Hidden Markov Model of Tenure Transitions - TensorFlow
877. (FEATURE) Merit of Large Scale Visuals (LSVR) - TensorFlow Keras Backend - 18 November 2020 - related to 868 and all sections on
878. (FEATURE) EventNet Python Parser - Events as Tensorflow Tensors - 20 November 2020 - related to 701 and all sections on EventNet Logical Clock, Video EventNet Tensor Products algorithm for Merit of Large Scale Visuals and Category Theory
1123. (THEORY and FEATURE) People Analytics - Alphabet Vectorspace Embedding - Earth Mover Distance between String Syllable Tensors - related to 752,874,875 and all sections on Embedding in vectorspace, Compressed Sensing, Social Network Analytics, Meaning Representation, Intrinsic Merit of People Profiles/HR Analytics, Set Partition and Histogram analytics  - 27 November 2020
1124. (THEORY and FEATURE) Graph Search and Analytics - NetworkX Graph Edit Distance - related to 753, 829, 1123 and all sections on
1125. (THEORY and FEATURE) Software Analytics - Cyclomatic Complexity Program Analyzer - Graph Edit Distance - related to 581,1124 and all
1126. (THEORY and FEATURE) People Analytics - Word Sense Disambiguation changed to NeuronRain implementation - related to 876,1123 and 
1127. (THEORY and FEATURE) People Analytics - HR and Talent Analytics - Domain Specific Dictionary - LinkedIn Dataset analytics in Spark 3.0.1+ Hadoop 3.2 - related to 613,727,812,876 and all sections on People Analytics, Intrinsic Merit Versus Fame Equilibrium, Novelty Detection, BKS Conjecture, Stability of Interview LTF/PTF - 19 December 2020
1128. (THEORY and FEATURE) People Analytics - HR and Talent Analytics - Chaotic Hidden Markov Model - Career Transition Score of a Profile -
1130. (THEORY and FEATURE) People Analytics - HR and Talent Analytics - Chaotic Hidden Markov Model - Career Polynomial of a Profile and 
1132. (THEORY and FEATURE) People Analytics - Alphabet Vectorspace Embedding - Earth Mover Distance between String Syllable Tensors - related to 752,874,875,1123 and all sections on Embedding in vectorspace, Compressed Sensing, Social Network Analytics, Meaning Representation, Intrinsic Merit of People Profiles/HR Analytics, Set Partition and Histogram analytics - 5 February 2021
1133. (THEORY and FEATURE) Recursive Lambda Function Growth - Transformer Attention Model - related to 697,1131 and all sections on Intrinsic Merit of Texts, Embedding in vectorspace, Machine Translation, Named Entity Recognition and Meaning Representation - 5 February 2021
1134. (THEORY and FEATURE) Named Entity Recognition - Transformers Attention Model - related to 697,1131,1133 and all sections on Named Entity Recognition - 9 February 2021,11 February 2021
1135. (THEORY and FEATURE) SETH is 100% False - Draft Proof - related to 752 and all sections on Earth Mover Distance, Edit Distance,
1136. (THEORY and FEATURE) SETH is 100% False - Draft Proof - alternative Edit distance-Earth mover distance reduction - related to 752,1135 and all sections on Earth Mover Distance, Edit Distance, BigData and String analytics, String complexity measures, Histogram analytics, Merit of Large Scale Visuals, Embedding of Strings in Syllable vector space - 24 March 2021, 11 April 2021
1137. (THEORY and FEATURE) Intrinsic Merit Versus Majority Voting, P=BPP ("Maybe" tends to "Exists") in the context of Condorcet Jury Theorem and its derivatives, Margulis-Russo Threshold for boolean majority, Histogram analytics, Set Partition Theoretical Electronic Voting Machines, Edit distance to Earth Mover Distance reduction, Boolean function composition, KRW Conjecture, Communication complexity, Hardness amplification, Bounded Rationality, Gibbard-Satterthwaite Theorem, Ramsey coloring of sequences, Infinite Pigeonhole Principle, Voting Analytics (pre-poll and post-poll) - related to 400,572,666,725,730,688,1136 and all sections on complexity theoretic aspects of Majority Voting and Intrinsic merit - 31 March 2021,16 January 2022
1138. (THEORY and FEATURE) Recursive Lambda Function Growth Textgraph as EventNet Causality Graphical Event Model - implementation -
1139. (THEORY and FEATURE) Recursive Lambda Function Growth EventNet GEM - CoronaVirus 2019 GEM usecase - 5,12 May 2021 - related to 752, 1138
1142. (THEORY and FEATURE) SETH is 100% False - Draft Proof - Edit distance-Earth mover distance reduction and order preservation - illustration - related to 752,1135,1136 and all sections on Earth Mover Distance, Edit Distance, BigData and String analytics, String complexity measures, Histogram analytics and Set partitions, Merit of Large Scale Visuals, Embedding of Strings in Syllable vector space - 26 May 2021, 11 July 2021
1143. (THEORY and FEATURE) Recursive Lambda Function Growth EventNet GEM - 2 different research articles collated - related to 752, 1138,
1150. (THEORY and FEATURE) NeuronRain CoronaVirus 2019 analyzer (R and Python - GEM,R Logit,Chaotic ERSIR Cellular Automaton Graph) - related
1154. (THEORY and FEATURE) Conflicts between Derandomization of Shor Factorization in BQP by Majority-VoterSAT boolean composition or BQP^BQP oracle machine and PRAM-NC-BSP computational geometric factorization, Gamma approximation of sum of hyperbolic tiles in average case polynomial time sequential computational geometric factorization and Quantum NC computational geometric factorization - related to 562, 668, 670, 712, 1152 and all sections on Majority Voting, Condorcet Jury Theorem and Integer Factorization - 27,28 July 2021
1155. (THEORY and FEATURE) Computational Geometric Factorization - Python 3.9.0 + Spark 3.0.1 - 2061 bits integer quadcore Benchmarks - related to all sections on Integer Factorization, Derandomization of BQP, Numeric Compression by Prime Factorization,Set Partition to Exact Square Tile Cover Space Filling Reduction of Rectangular Region, Lagranges Four Square Theorem  - 1 August 2021
1156. (THEORY and FEATURE) Majority Voting by NC^BQP Oracle Turing Machine, Derandomization of BQP, Integer Factorization in BQP,QNC and PRAM-NC-BSP, Bernstein-Vazirani algorithm and secure voting - 4 August 2021,5 August 2021,6 August 2021,14 August 2021,15 August 2021 - related to 1152,1154 and all sections on Majority Voting, Communication complexity, KRW Conjecture, Boolean Function Composition and Integer Factorization
1157. (THEORY and FEATURE) Computational Geometric Factorization - Python 3.9.0 + Spark 3.0.1 Single node cluster - cast to Decimal() - 4960 bits integer quadcore Benchmarks - related to all sections on Integer Factorization, Derandomization of BQP, Numeric Compression by Prime Factorization,Set Partition to Exact Square Tile Cover Space Filling Reduction of Rectangular Region, Lagranges Four Square Theorem  - 9 August 2021
1158. (THEORY and FEATURE) Computational Geometric Factorization - 18000+ bits quadcore singlenode cluster benchmarks - Python 3.9.0 + Spark 3.0.1, Earth Mover Distance, SETH, Equivalence of Factorization and Set Partition - related to 575,651,728,1142 and all sections on Integer Factorization, Lagrangian Sum of squares covering of space and Histogram Set Partitions, Multiplicative Partitions - 19 August 2021
1159. (THEORY and FEATURE) Computational Geometric Factorization - Python 3.9.0 + Spark 3.0.1 - 20437 bits integer benchmarks, Equidepth
1160. (THEORY and FEATURE) Set Partition Analytics - Set Partition to Lagrangian Sum of Squares tile cover reduction - Python 3.9.0 upgrade
1161. (THEORY and FEATURE) Set Partition Analytics - Set Partition to Lagrangian Sum of Squares tile cover reduction - Integer Linear
1162. (THEORY and FEATURE) Merit of Large Scale Visuals - GIS and Urban Sprawl Analytics, CoronaVirus 2019 Analyzer, Histogram Partition
1165. (THEORY and FEATURE) Drone Online Shopping Delivery - NeuronRainApps - Refactoring for ConvexHull and GIS analytics variables read over
1166. (THEORY and FEATURE) Set Partition Analytics - Complementary Set Partitions - implementation - 20 October 2021 - related to 864 and all
1167. (THEORY and FEATURE) GIS Urban Sprawl Analytics - NASA VIIRS NightLights Urban Area and Population Estimation - implementation - 
1168. (THEORY and FEATURE) GIS Urban Sprawl Analytics - NASA VIIRS NightLights Urban Area Rankings - 29 October 2021 - related to all sections on Merit of Large Scale Visuals, GIS and Urban Sprawl Analytics, Computational Geometry, Intrinsic Merit Rankings, R Ricker and SEDAC GPW4
1169. (THEORY and FEATURE) GIS Urban Sprawl Analytics - NASA VIIRS NightLights 2012 and 2016 Distance Similarity and Urban Area Rankings - related to all sections on Merit of Large Scale Visuals, GIS and Urban Sprawl Analytics, Computational Geometry, Intrinsic Merit Rankings, R Ricker and SEDAC GPW4 Population Estimations, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Chaos and Mandelbrot sets, Computational Geometry, Four color theorem, Linear Programming - 5,6 November 2021
1170. (THEORY and FEATURE) GIS Urban Sprawl Analytics - NASA VIIRS NightLights 2021 Urban Area Rankings - related to all sections on Merit of Large Scale Visuals, GIS and Urban Sprawl Analytics, Intrinsic Merit Rankings, R Ricker and SEDAC GPW4 Population Estimations, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Chaos and Mandelbrot sets, Computational Geometry, Four color theorem, Linear Programming, Economic Merit, Computational Economics - 7,8 November 2021
1171. (THEORY and FEATURE) GDP estimation from GIS Urban Sprawl Analytics - related to 694,1170 and all sections on GIS and Urban Sprawl Analytics, Merit of Large Scale Visuals, EventNet and Graphical Event Models-Causal Event Models, Computational Economics, Economic Merit, Four Color Theorem, Multiple Agent Resource Allocation, Linear and Logistic Regression, Intrinsic Merit Rankings, R Ricker and SEDAC GPW4 Population Estimations, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Chaos and Mandelbrot sets, Computational Geometry, Linear Programming - 9 November 2021,12 November 2021,13 November 2021,14 November 2021
1172. (THEORY and FEATURE) GIS Weather Analytics and Image grayscale inversion - implementation - related to 445,446,463,1165,1171 and all sections on GIS and Urban Sprawl Analytics, Mining patterns from Astronomical Datasets for correlating celestial-terrestrial events, Machine Learning solutions to N-Body problem, Merit of Large Scale Visuals, Space filling by Curves, Unequal Circle and Polynomial packing, Chaos and Mandelbrot sets, Computational Geometry, Drone Obstacle Avoidance, Autonomous Online Shopping Delivery - 11 November 2021
1173. (THEORY and FEATURE) Large Scale Visuals Streaming NoSQL Datastore (MongoDB-GridFS) support in Streaming_AbstractGenerator Facade - related to 1 and all sections on BigData NoSQL backend, Streaming analytics, Merit of Large Scale Visuals, Compressed Sensing, GIS Urban Planning Analytics, GIS Weather Analytics, Drone Imagery Analytics, Online shopping delivery, Obstacle avoidance - 15 November 2021
1174. (THEORY and FEATURE) GIS Urban Sprawl Analytics - Moments,Centroid,Minimum Enclosing Circle of an urban sprawl - 17,18 November 2021 -
1175. (THEORY and FEATURE) GIS Urban Sprawl Analytics - Population Estimator from Urban Sprawl Contours - usecase study of few urban sprawls - related to 1174 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Computational Geometry, Intrinsic Merit Rankings, R Ricker and SEDAC GPW4 Convex Hull Population Estimations, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry, Four color theorem, Economic Merit, Computational Economics, Approximation of functions by polynomials, Weirstrass Theorem, Jordan Curve Theorem, Cellular Automaton Graph model of diffusion of opinions/memes/cybercrimes/pandemics, Multiple Agent Resource Allocation - 21,22,23,24,25,26 November 2021
1176. (THEORY and FEATURE) GIS Weather Analytics and Climate Analytics from OpenWeatherMap PyOWM and ECMWF CliMetLab - implementation - 
1177. (THEORY and FEATURE) GIS Urban Sprawl Analytics - a Multiple Agent Resource Allocation Algorithm - related to 1174,1175 and all sections
1178. (THEORY and FEATURE) GIS Analytics - MongoDB GridFS backend standalone client implementation - related to 1173,1174 and all sections on GIS Urban sprawl analytics and weather analytics,Streaming analytics, Merit of Large Scale Visuals - 6 December 2021
1179. (THEORY and FEATURE) GIS Urban Sprawl Analytics - Urban Sprawl Extent from NASA SEDAC 2020 GPW 4.11 Population Density by contour, convex hull segmentation and minimum enclosing circles - related to 1174,1175 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Computational Geometry, Intrinsic Merit Rankings, R Ricker and SEDAC GPW4 Convex Hull Population Estimations, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry, Four color theorem, Economic Merit, Computational Economics, Neural Network Model of Urban Extent, Approximation of functions by polynomials, Weirstrass Theorem, Jordan Curve Theorem, Cellular Automaton Graph model of diffusion of opinions/memes/cybercrimes/pandemics, Multiple Agent Resource Allocation - 8 December 2021
1180. (THEORY and FEATURE) GIS Urban Sprawl Analytics - Voronoi Tessellation Diagram implementation engulfing urban sprawl contours - related to 1174,1175,1179 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Computational Geometry, Intrinsic Merit Rankings, R Ricker and SEDAC GPW4 Convex Hull Population Estimations, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry, Four color theorem, Economic Merit, Computational Economics, Neural Network Model of Urban Extent, Approximation of functions by polynomials, Weirstrass Theorem, Jordan Curve Theorem, Cellular Automaton Graph model of diffusion of opinions/memes/cybercrimes/pandemics, Multiple Agent Resource Allocation - 9 December 2021
1181. (THEORY and FEATURE) GIS Urban Sprawl Analytics - Correction to FaceGraph Plot - Centrality Measures of Urban Sprawl Facegraph - related to 1180 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Computational Geometry, Intrinsic Merit Rankings, R Ricker and SEDAC GPW4 Convex Hull Population Estimations, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry, Four color theorem, Economic Merit, Computational Economics, Neural Network Model of Urban Extent, Approximation of functions by polynomials, Weirstrass Theorem, Jordan Curve Theorem, Cellular Automaton Graph model of diffusion of opinions/memes/cybercrimes/pandemics, Multiple Agent Resource Allocation - 10 December 2021
1182. (THEORY and FEATURE) GIS Urban Sprawl Analytics - Delaunay Triangulation plot - related to 1181 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Computational Geometry, Intrinsic Merit Rankings, R Ricker and SEDAC GPW4 Convex Hull Population Estimations, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry, Four color theorem, Economic Merit, Computational Economics, Neural Network Model of Urban Extent, Approximation of functions by polynomials, Weirstrass Theorem, Jordan Curve Theorem, Aerial transportation graph for Drone navigation, Autonomous Online Shopping Delivery and Drone Electronic Voting Machine, Cellular Automaton Graph model of diffusion of opinions/memes/cybercrimes/pandemics, Multiple Agent Resource Allocation - 12 December 2021
1183. (THEORY and FEATURE) GIS Urban Sprawl Analytics - Distance similarity of Voronoi Tessellations and Measuring Urban Expansion - related to 1182 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Computational Geometry, Intrinsic Merit Rankings, R Ricker and SEDAC GPW4 Convex Hull Population Estimations, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry, Four color theorem, Economic Merit, Computational Economics, Machine Learning models of Urban Extent, Approximation of functions by polynomials, Weirstrass Theorem, Jordan Curve Theorem, Cellular Automaton Graph model of  diffusion of opinions/memes/cybercrimes/pandemics, Community Detection in Social Networks, Multiple Agent Resource Allocation, Earth Mover Distance, Graph Edit Distance - 16 December 2021
1184. (THEORY and FEATURE) GIS Urban Sprawl Analytics - Computation of Urbanization Correlation from Voronoi Polygons and Urban Sprawl Contours - related to 1183 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Computational Geometry, Intrinsic Merit Rankings, R Ricker, NASA Suomi NPP VIIRS and SEDAC GPW4 imagery Convex Hull Population Estimations, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing (Sparse), Polygonal packing (Close), Computational Geometry, Four color theorem, Economic Merit, Computational Economics, Machine Learning models of Urban Extent, Approximation of functions by polynomials, Weirstrass Theorem, Jordan Curve Theorem, Cellular Automaton Graph model of  diffusion of opinions/memes/cybercrimes/pandemics, Community Detection in Social Networks, Multiple Agent Resource Allocation, Earth Mover Distance, Graph Edit Distance - 17 December 2021
1185. (THEORY and FEATURE) People Analytics - Merit of Large Scale Visuals - Topological Face Recognition - Voronoi Tessellation and Delaunay Triangulation of Faces, their Morphology and Shape Grammar - related to 159,660,714,715,720 and all sections on Topological Face and Handwriting Recognition, Product Homotopy, Unique identification, Homeomorphism and Topological Deformations, Merit of Large Scale Visuals, People Analytics, Computational Geometry, Augmenting Graph Edit Distance by Facet Area - 20 December 2021
1186. (THEORY and FEATURE) People Analytics - Merit of Large Scale Visuals - Topological Face Recognition - Distance similarity between Facial Image Voronoi Tessellations of similar Faces and Facial Landmark Detection - related to 159,660,714,715,720,1185 and all sections on Topological Face and Handwriting Recognition, Product Homotopy, Unique identification, Homeomorphism and Topological Deformations, Merit of Large Scale Visuals, People Analytics, Computational Geometry, Graph Edit Distance and Earth Mover Distance - 22 December 2021
1187. (THEORY and FEATURE) People Analytics - Merit of Large Scale Visuals - Topological Face Recognition - Voronoi diagram and Delaunay Triangulation of Facial images from centroids computed by Dlib face landmarks detection and Voronoi FaceGraph Isomorphism-Subgraph Isomorphism Similarity -  related to 159,660,714,715,720,1185,1186 and all sections on Topological Face and Handwriting Recognition, Product Homotopy, Unique identification, Homeomorphism and Topological Deformations, Merit of Large Scale Visuals, People Analytics, Computational Geometry, Graph Edit Distance and Earth Mover Distance, Graph Isomorphism (Exact, Approximate and Subgraph),Graph Matching,Graph similarity,Image Search - 23 December 2021
1188. (THEORY and FEATURE) People Analytics - Merit of Large Scale Visuals - Topological Face Recognition - Voronoi FaceGraph Isomorphism-Subgraph Isomorphism Similarity - VF2 and ISMAGS Isomorphic Subgraphs iteration - related to 159,660,714,715,720,1185,1186,1187 and all sections on Topological Face and Handwriting Recognition, Product Homotopy, Unique identification, Homeomorphism and Topological Deformations, Merit of Large Scale Visuals, People Analytics, Computational Geometry, Graph Edit Distance and Earth Mover Distance, Graph Isomorphism (Exact, Approximate and Subgraph),Graph Matching,Graph similarity,Image Search - 24 December 2021
1189. (THEORY and FEATURE) People Analytics - Merit of Large Scale Visuals - Topological and Graph Theoretic Face Recognition - Voronoi FaceGraph Isomorphism Similarity - Percentage similarity and arbitrary visuals analyzed - related to 159,660,714,715,720,1185,1186,1187,1188 and all sections on Topological Face and Handwriting recognition, Product Homotopy, Unique identification, Homeomorphism and Topological Deformations, Merit of Large Scale Visuals, People Analytics, Computational Geometry, Graph Edit Distance and Earth mover distance, Graph Isomorphism (Exact, Approximate and Subgraph),Graph matching,Graph similarity,Image Search - 29 December 2021
1190. (THEORY and FEATURE) People Analytics - Merit of Large Scale Visuals - Topological and Graph Theoretic Face Recognition - Delaunay Triangulation Mesh isomorphism and Euler Characteristic - related to 159,660,714,715,720,1185,1186,1187,1188,1189 and all sections on Topological Face and Handwriting recognition, Product Homotopy, Unique identification, Homeomorphism and Topological Deformations, Merit of Large Scale Visuals, People Analytics, Computational Geometry, Graph Edit Distance and Earth mover distance, Graph Isomorphism (Exact, Approximate and Subgraph),Graph matching,Graph similarity,Image Search - 30 December 2021
1192. (THEORY and FEATURE) Software Analytics - Graph Isomorphism Similarity of Code Callgraphs and Control Flow Graphs - Spark 3.0.1 + Python 3.7.5 - related to 1191,619,770,906,911,771 and all sections on Program Analysis, AsFer-USBmd-VIRGO-KingCobra FTrace kernel callgraph analysis - Valgrind-Callgrind-KCacheGrind-Flamegraph userspace callgraph analysis, SATURN control flow analysis of VIRGO linux kernel, Software Analytics, Pandemic model of Botnet-Defense adversarial Game theoretic security, Cybercrime analytics, Anti-Malware,Anti-Ransomware,Anti-Theft and Anti-Plagiarism tools - 2 January 2022
1193. (THEORY and FEATURE) Software Analytics - Approximate Graph Isomorphism Similarity of Code Callgraphs and Control Flow Graphs - Spark 3.0.1 + Python 3.7.5 - related to 1192,1191,581,619,770,906,911,771 and all sections on Program Analysis, AsFer-USBmd-VIRGO-KingCobra FTrace kernel callgraph analysis - Valgrind-Callgrind-KCacheGrind-Flamegraph userspace callgraph analysis, SATURN control flow analysis of VIRGO linux kernel, Software Analytics, Pandemic model of Botnet-Defense adversarial Game theoretic security, Cybercrime analytics, Anti-Malware,Anti-Ransomware,Anti-Theft and Anti-Plagiarism tools - 2 January 2022
1194. (THEORY and FEATURE) GIS Analytics - DBSCAN Density Clustering implementation - related to 1182 and all sections on Merit of Large Scale Visuals, Text analytics, Unsupervised clustering, GIS and Urban Sprawl Analytics - Urban Extent Learners, Computational Geometry, Intrinsic Merit Rankings, R Ricker and SEDAC GPW4 Convex Hull Population Estimations, Community detection, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry and Polygonal packing by Voronoi Tessellation, Four color theorem, Economic Merit, Computational Economics - 5 January 2022
1195. (THEORY and FEATURE) Software Analytics - Degree Sequence Earth Mover Distance Similarity of Code Callgraphs and Control Flow Graphs - Spark 3.0.1 + Python 3.7.5 - related to 1193,1192,1191,581,619,770,906,911,771 and all sections on Program Analysis, AsFer-USBmd-VIRGO-KingCobra FTrace kernel callgraph analysis - Valgrind-Callgrind-KCacheGrind-Flamegraph userspace callgraph analysis, SATURN control flow analysis of VIRGO linux kernel, Software Analytics, Pandemic model of Botnet-Defense adversarial Game theoretic security, Cybercrime analytics, Anti-Malware,Anti-Ransomware,Anti-Theft and Anti-Plagiarism tools,Graph Matching,Graph Similarity and Graph Isomorphism - 7 January 2022
1196. (THEORY and FEATURE) GIS Analytics - DBSCAN Density Clustering - Neural Network Thresholding implementation - related to 1151,1171,1174,1179,1194 and all sections on Merit of Large Scale Visuals, Text analytics, Unsupervised clustering, GIS and Urban Sprawl Analytics - Urban Extent Learners, Computational Geometry, Intrinsic Merit Rankings, R Ricker and SEDAC GPW4 Convex Hull Population Estimations, Community detection, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry and Polygonal packing by Voronoi Tessellation, Four color theorem, Economic Merit, Computational Economics - GDP estimation from electricity consumption - 12 January 2022
1201. (THEORY and FEATURE) People Analytics - Merit of Large Scale Visuals - Topological and Graph Theoretic Face Recognition - Delaunay Triangulation Mesh Bezier Animation by PyVis - related to 159,660,714,715,720,1185,1186,1187,1188,1189,1190 and all sections on Topological Face and Handwriting recognition, Product Homotopy, Unique identification, Homeomorphism and Topological Deformations, Merit of Large Scale Visuals, People Analytics, Computational Geometry, Graph Edit Distance and Earth mover distance, Graph Isomorphism (Exact, Approximate and Subgraph),Graph matching,Graph similarity,Image Search - 17 January 2022,18 January 2022
1202. (THEORY and FEATURE) People Analytics - Merit of Large Scale Visuals - Topological and Graph Theoretic Face Recognition - Pairwise similarity loop and error handling - related to 159,660,714,715,720,1185,1186,1187,1188,1189,1190,1201 and all sections on Topological Face and Handwriting recognition, Product Homotopy, Unique identification, Homeomorphism and Topological Deformations, Merit of Large Scale Visuals, People Analytics, Computational Geometry, Graph Edit Distance and Earth mover distance, Graph Isomorphism (Exact, Approximate and Subgraph),Graph matching,Graph similarity,Image Search,Mesh Deformation - 21 January 2022
1203. (THEORY and FEATURE) People Analytics - Merit of Large Scale Visuals - Textual,Topological and Graph Theoretic Face Recognition - Physique Recognition From Quadrilateral mesh isomorphism and Face Distinguisher from ImageNet predictions - related to 159,660,714,715,720,1185,1186,1187,1188,1189,1190,1201,1202 and all sections on Topological Face and Handwriting recognition, Product Homotopy, Unique identification, Homeomorphism and Topological Deformations, Merit of Large Scale Visuals, People Analytics, Computational Geometry, Graph Edit Distance and Earth mover distance, Graph Isomorphism (Exact, Approximate and Subgraph),Graph matching,Graph similarity,Image Search,Quadrilateral Mesh Deformation and Isomorphism,Maximum Common Subgraph Problem - 24 January 2022
1204. (THEORY and FEATURE) People Analytics - Social Network Analysis (Professional) - Chaotic Hidden Markov Model of Career Transition -
1205. (THEORY and FEATURE) Computational Geometric Factorization - Matplotlib plot of benchmarks - 300 integers from 100 to 400 and 20 integers from 500 to 520 - related to 1159 and all sections on Computational Geometric Factorization, Neural network learning of Factors by SAC=TC=NC=AC equivalence, Planar Point Location - 30 January 2022
1206. (THEORY and FEATURE) People Analytics - Social Network Analysis - Bipartite Social Networks (Matrimonial portals, Employer-Employee Professional networks) - Recommender Systems and Sentiment Analysis of Profiles for Ranking Preferences - related to 583,843 and all sections on Social Network Analysis,Clustering,Bipartite Matching, Gale-Shapley algorithm for Stable Marriage Problem and College Admission Problem, Online Citizen Science, Intrinsic Merit ranking of People profiles,Graph Isomorphism and Common Subgraph Problem,Recommender Systems,Unique Identification,Graphical models-Markov Random Fields and Belief Propagation,Hall's Marriage Theorem,Perfect Matching and Permanent of Bipartite graph - 31 January 2022
1211. (THEORY and FEATURE) GIS Urban Sprawl Analytics - Population Density computation from Contour Pixel color coding - 4 February 2022 -
1212. (THEORY and FEATURE) GIS Urban Sprawl Analytics - Population count computation from HRSL Map Legend - 7 February 2022 - related to 1174,1175,1179,1194,1211 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Gridded Population Estimators (SEDAC GPW4 and GHSL convex hull estimators), DBSCAN and Neural Network Urban Extent Learners, Computational Geometry, Intrinsic Merit Rankings, R Ricker Population Estimation, Community detection, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry and Polygonal packing by Voronoi Tessellation, Four color theorem, Economic Merit, Computational Economics - GDP estimation from electricity consumption, Jordan Curve Theorem, Weirstrass Theorem
1213. (THEORY and FEATURE) Economic merit - Neuro Cryptocurrency mint - Commodity linked Neuro Fictitious Cryptocurrency Proof of Work Algorithm - related to 164,165,488,489,499 and all sections on Economic merit, Neuro academic-use fictitious cryptocurrency, Economic networks, Towers of Hanoi problem - Ordered Histograms, Set Partition Analytics, Earth mover distance, Psuedorandom generators, NP-complete problems, P Versus NP, EventNet consensus and Hyperledger, Samuleson-Stolper theorem, Invisible Hand - Labour theory of value, Gold Standard - 8 February 2022
1214. (THEORY and FEATURE) Computational Geometric Integer Factorization - 20523 bits quadcore benchmarks - Factorization as a non-trivial Proof of Work computation for Neuro Cryptocurrency mining rig - related to 620,713,728,739,1158,1159,1161,1213 and all sections on Neuro Cryptocurrency, Computational Geometric Factorization, Set Partitions to Exact Square Tile Cover Reduction by Lagrange Sum of 4 Squares - Optimal denominations and Money Changing Problem, Integer Partitions, Equidepth-Equiheight V-Optimal Histograms and Set partition analytics, Drone Electronic Voting Machines - 9 February 2022
1215. (THEORY and FEATURE) Set Partition Analytics - Set Partition-Rectangular Area to Factorization reduction and Integer Linear Program solution of Frobenius Coin Diophantines for Neuro Cryptocurrency mining rig Proof of Work, One Time Password facility augmented for Voter Received Encrypted Paper Audit Trail (VREPAT) Conceptual Drone Electronic Voting Machine - related to 135,562,1140 and all sections on Money Changing Problem,Optimal Denominations,Integer Partitions, Computational Economics - Computational Hardness (Labour) Theory of Value, Histogram and Set Partition analytics, Equidepth-Equiheight Histograms, Separate Chaining Hashtables, Drone EVMs, Space Filling and Teapot Shards, Equal and Unequal Circle packing, Grid filling, Integer Linear Programming and Cellular automata, Quantum Versus Classical Computation, Parallel Pseudorandom Generators, Berry-Esseen Central Limit Theorem - 11 February 2022
1217. (THEORY and FEATURE) Fictitious Neuro Cryptocurrency Mining Rig - Random Integer Partition + Rectangular Area Factorization + Money Changing Problem Proof of Work - Digital Watermarking implementation for Visual Neuro cryptocurrency - 15 February 2022 - related to 112,113,114,488,751,784,785,787,791,841,848,859,1095(a,b,c,d),1215,1216 and all sections on Economic merit, Set Partition analytics, Pseudorandom generators, Computational Geometric Factorization, Money Changing Problem - Frobenius Coin Diophantines, Computational Theory of Value, Poverty Alleviation, Neuro Cryptocurrency implementations in AstroInfer and KingCobra, Optimal Denominations,Computational Economics - Computational Hardness (Labour) Theory of Value, Histogram and Set Partition analytics, Equidepth-Equiheight Histograms, Separate Chaining Hashtables, Timeout gadgets (Refcounted Expirable C++ objects, KingCobra atomic refcounting and Survival Index Timeout) in NeuronRain, Digital Watermarking, Drone Electronic Voting Machines, Numeric Compression by Prime power encoding - Unique Factorization Domain, Multiplicative Partitions, Compressed Sensing (Succinct representation), Large Scale Visuals, Cybercrime analytics
1218. (THEORY and FEATURE) Music Synthesizer - Python 3.8 upgrade and Fractal implementation - 21 February 2022 - related to 3,298,642,643,644,659,681,1124 and all sections on Intrinsic Merit of Music, MIR(Music Information Retrieval), Music Similarity and Clustering, AI Music Synthesis, fMRI connectomes - OpenNeuro - Psychology of music, Weighted automata, Chaos, Deep Learning, Timeseries analysis, Physique recognition and Motion capturing algorithms, SETH
1219. (THEORY and FEATURE) Music similarity - Dynamic Time Warping Waveform Distance algorithm implementation - 23 February 2022 - related to 815,1218 and all sections on Intrinsic merit of music, Novelty Detection - Original Music Score, Music clustering, Merit of audio-visuals, Physique recognition, Timeseries analysis - Stock quote tickers-Granger causality, Computer Graphics - Trimesh-Quadmesh Deformations, Face Recognition, Multiple Sequence Alignment, Graphical Event Models
1220. (THEORY and FEATURE) Music Information Retrieval (MIR) - Learning a polynomial from music waveform - 25 February 2022 - related to 3,298,642,643,644,659,681,1124,1218,1219 and all sections on Merit of Music - MIR, Novelty Detection - Original Music Score, Music clustering, Dynamic Time Warping, Timeseries analysis, AI Music Synthesis, Weighted Automata Learning from Music waveform notes
1221. (THEORY and FEATURE) Fictitious Neuro Cryptocurrency NP-Hard Proof of Work - Moving Mount Fuji - Single Bin Sorted LIFO Histogram - Towers of Hanoi - implementation - 28 February 2022 - related to 112,113,114,488,751,784,785,787,791,841,848,859,1095(a,b,c,d),1209,1215,1216,1217 and all sections on Economic merit, Set Partition analytics, Pseudorandom generators, Computational Geometric Factorization, Money Changing Problem - Frobenius Coin Diophantines, Computational Theory of Value, Poverty Alleviation, Neuro Cryptocurrency implementations in AstroInfer and KingCobra, Optimal Denominations,Computational Economics - Computational Hardness (Labour) Theory of Value, Histogram and Set Partition analytics, Equidepth-Equiheight Histograms, Separate Chaining Hashtables, Timeout gadgets (Refcounted Expirable C++ objects, KingCobra atomic refcounting and Survival Index Timeout) in NeuronRain, Digital Watermarking, Drone Electronic Voting Machines, Numeric Compression by Prime power encoding - Unique Factorization Domain, Multiplicative Partitions, Compressed Sensing (Succinct representation), Large Scale Visuals, Cybercrime analytics, Russian Peasant's Linear Complexity Multiplication Algorithm, K Dimensional Trees, Computer Graphics, Collatz Conjecture, Mandelbrot sets, Earth Mover Distance, Graphical Event Models and Stock Timeseries, AI Music Synthesis
1223. (THEORY and FEATURE) Music Information Retrieval - AI Music Synthesis from Sum of Damped Sinusoids - 4 March 2022 - related to 3,298,642,643,644,659,681,827,829,1124,1144,1189,1218,1219,1220 and all sections on Merit of Music - MIR, Novelty Detection - Original Music Score, Music clustering, Dynamic Time Warping, Timeseries analysis, AI Music Synthesis, Weighted Automata Learning from Music waveform notes, Speech Synthesis, Fourier analysis, ProofNets, Girard Geometry of Interaction, Logic, Intrinsic merit of academic publications - Bibliometrics, Embedding music on vectorspace, Shell Turing Machines and Kernel Lifting, People Analytics-Unique identification
1224. (THEORY and FEATURE) Music Information Retrieval - AI Music Synthesis from Sum of Damped Sinusoids - 8 March 2022 - related to 3,298,642,643,644,659,681,1124,1218,1219,1223 and all sections on Merit of Music - MIR, Novelty Detection - Original Music Score, Music clustering, Dynamic Time Warping, Timeseries analysis, AI Music Synthesis, Weighted Automata Learning from Music waveform notes, Speech Synthesis, Fourier analysis
1225. (THEORY and FEATURE) GIS Urban Sprawl Analytics - SEDAC Urban Expansion Probabilities Projection for Year 2030 - a casestudy of urban sprawls - 8 March 2022 - related to 675,753,1174,1175,1177,1179,1194,1211,1212 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Gridded Population Estimators (SEDAC GPW4 and GHSL convex hull estimators), DBSCAN and Neural Network Urban Extent Learners, Computational Geometry, Intrinsic Merit Rankings, R Ricker Population Estimation, Community detection, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry and Polygonal packing by Voronoi Tessellation, Four color theorem, Economic Merit, Computational Economics - GDP estimation from electricity consumption, Jordan Curve Theorem, Weirstrass Theorem, Cellular Automata, Preferential attachment,Random Graphs,Dynamic Graphs
1226. (THEORY and FEATURE) GIS Urban Sprawl Analytics - Maximum Population Density and Area-Population Ratio as arguments - 12,13,14,15 
1227. (THEORY and FEATURE) Set Partition Analytics - Neuro Cryptocurrency Towers of Hanoi NP-Hard Proof-of-Work - Set Partition Histogram to Lagrange Sum of Four Square theorem square tile cover of an Almost-Square rectangle by Integer Factorization - 24 March 2022 - related to 1213,1215,1217,1221,1226 and all sections on Set Partitions and Histogram Analytics, Merit of Large Scale Visuals, GIS Urban Sprawl Analytics - minimum rectangular bounding box of an urban sprawl, Computational Geometric Integer Factorization,Neuro Cryptocurrency Proof-Of-Work Hardness,Economic Merit,Poverty Alleviation,Money Changing Problem,Integer Linear Programming,Pell Diophantine for Factorization
1228. (THEORY and FEATURE) Kernel lift random walk in tree of TOP Category Shell Turing Machines and UNIX Shell Game Example - 28 March 2022 - related to 624,651,728 and all sections on Shell Turing Machines, MRDP Theorem, Category Theory, Diophantine Equations, Turing Degrees, Embedding Formal Languages in Vector Space, Kernel lifting - Set Partition (1D) to Tile Cover (2D) Reduction by Computational Geometric Factorization, Exact Money Changing Problem(MCP) Solution, Quadratic Programs, Pell Equation, Shell Turing Machines(TOP-Category of Topological Spaces), Unix Shell Implementations of Category of Topological Spaces, Turing Degrees, Turing Jump, Hilbert Space Turing Machines,Chinese Remaindering
1229. (THEORY and FEATURE) Intrinsic Merit of Texts - TAC 2010 code opensourced - 29 March 2022 - related to 9,36 and all sections on
1232. (THEORY and FEATURE) GMSH Trimesh and Quadmesh - GEO OPT and MSH files from GMSH FLTK - 4 April 2022 - related to 1203 and all sections on Merit of Large Scale Visuals, Physique Recognition From Quadrilateral mesh isomorphism,Topological Face and Handwriting recognition, Product Homotopy, Unique identification, Homeomorphism and Topological Deformations, Merit of Large Scale Visuals, People Analytics, Computational Geometry, Graph Edit Distance and Earth mover distance, Graph Isomorphism (Exact, Approximate and Subgraph),Graph matching,Graph similarity,Image Search,Quadrilateral Mesh Deformation and Isomorphism,Maximum Common Subgraph Problem and Approximate Topological Matching
1233. (THEORY and FEATURE) Merit of Large Scale Visuals - Trimesh and Quadmesh generation from an image by GMSH - 11 April 2022 - related to
1234. (THEORY and FEATURE) GIS Urban Sprawl Analytics - Polya Urn Urban Growth Model implementation for 4-colored Urban Sprawl Contour
1236. (THEORY and FEATURE) GIS Analytics - an archaeoastronomical and computer vision analysis of MODIS GIS image of Adam's Bridge (Ram Sethu) - 19 April 2022, 20 April 2022 - related to 2,18,714 and all sections on Merit of Large Scale Visuals, Text Restoration, Astronomical Datasets, Archaeology, Drone Urban Extent Imagery, Urban Sprawl Analytics, Dream analysis, Image search, Topological Script Recognition 
1237. (THEORY and FEATURE) Merit of Large Scale Visuals - Face recognition by Approximate Topological Match of GMSH Quadmesh images - 25,26 April 2022 - related to 1203,1232,1233,1236 and all sections on Merit of Large Scale Visuals, Physique Recognition From Quadrilateral mesh isomorphism,Topological Face and Handwriting recognition, Archaeology-Topological Script Recognition, Product Homotopy, Unique identification, Homeomorphism and Topological Deformations, Merit of Large Scale Visuals, People Analytics, Computational Geometry, Graph Edit Distance and Earth mover distance, Graph Isomorphism (Exact, Approximate and Subgraph),Graph matching,Graph similarity,Image Search,Quadrilateral Mesh Deformation and Isomorphism,Maximum Common Subgraph Problem and Approximate Topological Matching,Astronomical Datasets
1238. (THEORY and FEATURE) Merit of Large Scale Visuals - ImageNet predictions from multiple models - Rebus Topological Script Recognition - Dholavira Signboard example deciphered by ResNet50 and ResNet50V2 - 28 April 2022 - relateed to 1236,1237 and all sections on Archaeology-Topological Script Recognition, Face-Physique-Handwriting-Gender-Motif Recognition, Product Homotopy, Unique identification, Homeomorphism and Topological Deformations, Merit of Large Scale Visuals
1239. (THEORY and FEATURE) Merit of Large Scale Visuals - Astronomy Analytics - DBSCAN Clustering and Segmentation analysis of sky imageries
1240. (THEORY and FEATURE) Merit of Large Scale Visuals - Archaeology - Rebus Decipherment of Indus Unicorn Seals and their validation by
1252. (THEORY and FEATURE) Merit of Large Scale Visuals - GIS Urban Sprawl Analytics - Automatic Delineation of Urban Growth Boundaries from Transportation Network GIS - related to 1151,1174,1196,1226,1233,1234,1237 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Gridded Population Estimators (SEDAC GPW4 and GHSL convex hull estimators), DBSCAN and Neural Network Urban Extent Learners, Computational Geometry, Intrinsic Merit Rankings, R Ricker Population Estimation, Community detection, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry and Polygonal packing by Voronoi Tessellation, Four color theorem, Economic Merit, Computational Economics - GDP estimation from electricity consumption, Jordan Curve Theorem, Weirstrass Theorem, Cellular Automata-SLEUTH Urban Growth Models, Automatic Delineation of Urban Growth Boundaries, Preferential attachment,Random Graphs,Dynamic Graphs,Separate Chaining Hash tables, Unmanned Aerial Vehicle Navigation-Autonomous Drone Delivery-Drone EVMs-Passenger Drones,Wiring Problem
1253. (THEORY and FEATURE) Merit of Large Scale Visuals - GIS Urban Sprawl Analytics - Automatic Delineation of Urban Growth Boundaries from Transportation Network GIS 2 - KMeans Clustering of Contour Polynomials - 24 May 2022 - related to 714,1151,1174,1196,1226,1233,1234,1237,1252 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Gridded Population Estimators (SEDAC GPW4 and GHSL convex hull estimators), DBSCAN and Neural Network Urban Extent Learners, Computational Geometry, Intrinsic Merit Rankings, R Ricker Population Estimation, Community detection, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry and Polygonal packing by Voronoi Tessellation, Four color theorem, Economic Merit, Computational Economics - GDP estimation from electricity consumption, Jordan Curve Theorem, Weirstrass Theorem, Cellular Automata-SLEUTH Urban Growth Models, Automatic Delineation of Urban Growth Boundaries, Preferential attachment,Random Graphs,Dynamic Graphs,Separate Chaining Hash tables, Unmanned Aerial Vehicle Navigation-Autonomous Drone Delivery-Drone EVMs-Passenger Drones,Wiring Problem
1254. (THEORY and FEATURE) Computational Geometric Factorization - Quadcore benchmarks - Spark 3.0.1 + Python 3.7.x - Nanoseconds perf counter - 27 May 2022 - related to 1214 and all sections on Computational Geometric Factorization,Set Partitions to Exact Square Tile Cover Reduction by Lagrange Sum of 4 Squares - Optimal denominations and Money Changing Problem, Integer Partitions, Equidepth-Equiheight V-Optimal Histograms and Set partition analytics
1255. (THEORY and FEATURE) Astronomical Dataset Analytics - Planetarium Ephemeris Search - 1 June 2022 - related to 731,1206,1236 and all sections on Astronomical Dataset Mining, Archaeoastronomical Dating, Sequence Mining, String analytics, Sequence Alignment, Visual Planetarium Search, Archaeology, Reciprocal Recommender Systems based Matrimony analytics in Bipartite Social Networks, Climate and Extreme Weather Event Analytics
1256. (THEORY and FEATURE) GIS Urban Sprawl Analytics - Bug resolutions and additional Urban sprawl Facegraph complexity measures for Automatic Urban Delineation - 3 June 2022 - related to 1226 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Gridded Population Estimators (SEDAC GPW4 and GHSL convex hull estimators), DBSCAN and Neural Network Urban Extent Learners, Computational Geometry, Intrinsic Merit Rankings, R Ricker Population Estimation, Community detection, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry and Polygonal packing by Voronoi Tessellation, Four color theorem, Economic Merit, Computational Economics - GDP estimation from electricity consumption, Jordan Curve Theorem, Weirstrass Theorem, Cellular Automata-SLEUTH-Polya-DynamicFacegraph Urban Growth Models, Preferential attachment,Random Graphs,Dynamic Graphs,NeuronRain CoronaVirus 2019 analyzer (R and Python - GEM,R Logit,Chaotic ERSIR Cellular Automaton Graph)
1257. (THEORY and FEATURE) Medical Imageing and Music Information Retrieval (MIR) - fMRI imagery analysis for music-evoked autobiographical memories - 7 June 2022 - related to 228,385,410,587,588,548,656,868,1218,1223 and all sections on merit of large scale visuals, medical imageing, Evocation WordNet, ThoughtNet and Psychology of Evocation, Music search-Music discovery, Intrinsic Merit of Music, MIR(Music Information Retrieval), Music Similarity and Clustering, AI Music Synthesis, fMRI connectomes - OpenNeuro - Psychology of music, Weighted automata, Chaos, Deep Learning, Dynamic Time Warping-Timeseries analysis, Majority Voting Vs Intrinsic - Condorcet Jury Theorem variants
1258. (THEORY and FEATURE) Intrinsic Merit of Music - Kolmogorov Complexity approximation by Normalized Compression Distance (NCD) - implementation - 8 June 2022 - related to 110,1257 and all sections on Music search-Music discovery, Intrinsic Merit of Music, MIR(Music Information Retrieval), Music Similarity and Clustering, AI Music Synthesis, fMRI connectomes - OpenNeuro - Psychology of music, Weighted automata, Chaos, Deep Learning, Dynamic Time Warping-Timeseries analysis, Majority Voting Vs Intrinsic - Condorcet Jury Theorem variants, Astronomical Datasets, Multiple Sequence Alignment of Strings, Handwriting Recognition
1259. (THEORY and FEATURE) Computational Geometric Factorization - 20610 bits huge integer quadcore benchmarks - Spark 3.0.1 + Python 3.7.5 - 10 June 2022 - related to 1254 and all sections on Computational Geometric
1260. (THEORY and FEATURE) People Analytics - Unique Identification - Fingerprint recognition - 17 June 2022 - related to 834,1223,1237 and all sections on Merit of Large Scale Visuals, Physique Recognition From Quadrilateral mesh isomorphism,Topological Face and Handwriting recognition, Product Homotopy, Unique identification, Homeomorphism and Topological Deformations, Merit of Large Scale Visuals, People Analytics, Computational Geometry, Graph Edit Distance and Earth mover distance, Graph Isomorphism (Exact, Approximate and Subgraph),Graph matching,Graph similarity,Image Search,Quadrilateral Mesh Deformation and Isomorphism,Maximum Common Subgraph Problem and Approximate Topological Matching, Cybercrime analytics, Forensics-Predictive Policing, Fraud Analytics, Birthday Paradox, Contextual Name Parsing, PIPL Name syllable based unique person search, Collision resitant hash functions, Non Fungible Tokens 
1261. (THEORY and FEATURE) Intrinsic merit of Music - Music Information Retrieval - AI Music Synthesis from Weierstrass Fourier Fractal - related to 110,1223,1224,1257,1258 and all sections on Music search-Music discovery, Intrinsic Merit of Music, MIR(Music Information Retrieval), Music Similarity and Clustering, AI Music Synthesis from summation of damped sinusoids, fMRI connectomes - OpenNeuro - Psychology of music, Weighted automata, Chaos, Deep Learning, Dynamic Time Warping-Music Timeseries analysis, Music Evoked Autobiographical Memories, ThoughtNet, Majority Voting (Enjoyable music) Vs Intrinsic (Quality music) - Condorcet Jury Theorem variants - 21 June 2022
1262. (THEORY and FEATURE) GIS Urban Sprawl Analytics - Moran's I measure of Urban Sprawl Dispersion - 23 June 2022 - related to 1151,1174,1196,1226,1233,1234,1237,1252 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Gridded Population Estimators (SEDAC GPW4 and GHSL convex hull estimators), DBSCAN and Neural Network Urban Extent Learners, Computational Geometry, Intrinsic Merit Rankings, R Ricker Population Estimation, Community detection, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry and Polygonal packing by Voronoi Tessellation, Four color theorem, Economic Merit, Computational Economics - GDP estimation from electricity consumption, Jordan Curve Theorem, Weirstrass Theorem, Cellular Automata-SLEUTH Urban Growth Models, Automatic Delineation of Urban Growth Boundaries, Preferential attachment,Random Graphs,Dynamic Graphs,Separate Chaining Hash tables, Unmanned Aerial Vehicle Navigation-Autonomous Drone Delivery-Drone EVMs-Passenger Drones,Wiring Problem
1263. (THEORY and FEATURE) People Analytics - Social Network Analysis (Professional) - Chaotic Hidden Markov Model of Career Transition - JSON persistence to MongoDB - 24 June 2022 - related to 14,365,711,753,876,1127,1128,1129,1130,1204 and all sections on People Analytics, Intrinsic Merit Versus Fame Equilibrium, BKS Conjecture, Stability and Noise Sensitivity of Interview LTF/PTF,Peres Theorem,Unique Identification,HR Analytics and Automated Recruitment,Question-Answering,Majority Voting,Condorcet Jury Theorem Variants,Margulis-Ruzzo Thresholds,Novelty Detection,Recommender Systems,Urban Sprawl Analytics, AI Question-Answering
1264. (THEORY and FEATURE) Space Archaeology - Edge detection for Airborne-Satellite GIS imagery (LIDAR,SAR,LandSat) by Canny
1265. (THEORY and FEATURE) GIS Urban Sprawl Analytics - Automatic Delineation of Urban Growth Boundaries by KMeans Clustering of Contour Polynomials and Canny Edge Detector - Recomputed - 30 June 2022 - related to 1151,1174,1196,1226,1233,1234,1237,1252,1253,1262 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Gridded Population Estimators (SEDAC GPW4 and GHSL convex hull estimators), DBSCAN and Neural Network Urban Extent Learners, Computational Geometry, Intrinsic Merit Rankings, R Ricker Population Estimation, Community detection, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry and Polygonal packing by Voronoi Tessellation, Four color theorem, Economic Merit, Computational Economics - GDP estimation from electricity consumption, Jordan Curve Theorem, Weirstrass Theorem, Cellular Automata-SLEUTH Urban Growth Models, Automatic Delineation of Urban Growth Boundaries, Preferential attachment,Random Graphs,Dynamic Graphs,Separate Chaining Hash tables, Unmanned Aerial Vehicle Navigation-Autonomous Drone Delivery-Drone EVMs-Passenger Drones,Wiring Problem
1266. (THEORY and FEATURE) Astronomical Dataset Analytics - Planetarium Ephemeris Search - SkyField implementation - 7 July 2022 - related to 731,1206,1236,1255 and all sections on Astronomical Dataset Mining, Archaeoastronomical Dating, Sequence Mining, String analytics, Sequence Alignment, Visual Planetarium Search, Archaeology, Reciprocal Recommender Systems based Matrimony analytics in Bipartite Social Networks, Climate and Extreme Weather Event Analytics, Computational Astrophysics, N-Body problem
1267. (THEORY and FEATURE) Astronomical Dataset Analytics - Planetarium Ephemeris Search - Longitude-Latitude and AstroPy support - 13 July 2022 - related to 731,1206,1236,1255,1266 and all sections on Astronomical Dataset Mining, Archaeoastronomical Dating, Sequence Mining, String analytics, Sequence Alignment, Visual Planetarium Search, Archaeology, Reciprocal Recommender Systems based Matrimony analytics in Bipartite Social Networks, Climate and Extreme Weather Event Analytics, Computational Astrophysics, N-Body problem, Merit of Large Scale Visuals, Astronomical algorithms
1268. (THEORY and FEATURE) Astronomy Dataset Analytics - Angular separation of solar system planets during Extreme Weather Events on Earth - an N-Body gravitational pull correlation study - 15 July 2022 - related to 731,1206,1236,1255,1266,1267 and all sections on Astronomical Dataset Mining, Archaeoastronomical Dating, Sequence Mining, String analytics, Sequence Alignment, Visual Planetarium Search, Archaeology, Reciprocal Recommender Systems based Matrimony analytics in Bipartite Social Networks, Climate and Extreme Weather Event Analytics, Computational Astrophysics, N-Body problem, Merit of Large Scale Visuals, Astronomical algorithms
1269. (THEORY and FEATURE) Majority Voting Versus Query complexity model of Intrinsic Merit of Texts-Audio-Video-People - 18 July 2022 - related to 14,53,318,355,365,420,517,678,682,687,688,1204,1263 and all sections on  Intrinsic Merit Rankings of Texts-Publications-Music-Speech-Voice-Images-Videos-People, Intrinsic Merit Versus Fame Equilibrium, BKS Conjecture, Stability and Noise Sensitivity of Interview LTF/PTF, LTF-PTF-TQBF-Switching Circuits models of Question-Answering,Peres Theorem,HR-Talent Analytics and Automated Recruitment,Majority Voting-Boolean composisition of Majority+VoterSAT,Condorcet Jury Theorem Variants,Margulis-Ruzzo Thresholds,Novelty Detection,AI Question-Answering,Quantum Computation, Majority+VoterSAT Hardness Amplification Lemma
1270. (THEORY and FEATURE) Astronomy Dataset Analytics - NASA JPL Horizons Ephemeris Lookup Service support and Hubble Ultra Deep Field imagery RGB analytics - 20 July 2022 - related to 731,1206,1236,1255,1266,1267,1268 and all sections on Astronomical Dataset Mining, Archaeoastronomical Dating, Sequence Mining, String analytics, Sequence Alignment, Visual Planetarium Search, Archaeology, Climate and Extreme Weather Event Analytics, Computational Astrophysics, N-Body problem, Merit of Large Scale Visuals, Astronomical algorithms
1271. (THEORY and FEATURE) Astronomy Dataset Analytics - Computation of N-Body Gravitational Acceleration for Solar System bodies on days of Extreme Weather Events (Earthquakes and Hurricanes) - 25 July 2022 - related to 731,1206,1236,1255,1266,1267,1268,1270 and all sections on Astronomical Dataset Mining, Archaeoastronomical Dating, Sequence Mining, String analytics, Sequence Alignment, Visual Planetarium Search, Archaeology, Climate and Extreme Weather Event Analytics, Computational Astrophysics, N-Body problem, Merit of Large Scale Visuals, Astronomical algorithms
1272. (THEORY and FEATURE) Astronomy and Cosmology Datasets Analytics - Hubble eXtreme Deep Field imagery RGB analysis and Distance similarity of N-Body gravitational accelerations - 27 July 2022 - related to 731,1206,1236,1255,1266,1267,1268,1270,1271 and all sections on Astronomical Dataset Mining, Archaeoastronomical Dating, Sequence Mining, String analytics, Sequence Alignment, Visual Planetarium Search, Archaeology, Climate and Extreme Weather Event Analytics, Computational Astrophysics, N-Body problem, Merit of Large Scale Visuals, Astronomical algorithms, Histogram analytics
1273. (THEORY and FEATURE) Astronomy and Cosmology Datasets Analytics - Wilkinson Microwave Anisotropy Probe-Cosmic Microwave Background (WMAP CMB) and N-Body gravitational accelerations from arbitrary vantage points - 29 July 2022 - related to 148,731,1206,1236,1255,1266,1267,1268,1270,1271,1272 and all sections on Astronomical Dataset Mining, Archaeoastronomical Dating, Sequence Mining, String analytics, Sequence Alignment, Visual Planetarium Search, Archaeology, Climate and Extreme Weather Event Analytics, Computational Astrophysics, N-Body problem, Merit of Large Scale Visuals, Astronomical algorithms, Histogram analytics
1284. (THEORY and FEATURE) NeuronRainApps - Wikipedia Textgraph Question-Answering Bot - 3 August 2022 - related to 1133,1134,1204,1263,1269 and all sections on Intrinsic Merit of Texts, Question-Answering, Embedding in vectorspace, Machine Translation, Transformers Attention Model,Named Entity Recognition and Meaning Representation, Complexity models of Question-Answering (multiple choice,open-ended,adaptive and static) - LTF,PTF,Switching Circuits,TQBF,Markov Chains 
1285. (THEORY and FEATURE) NeuronRainApps - Wikipedia Textgraph Question-Answering Bot - WordNet Walk on answer textgraph - 4 August 2022 - related to 249,707,829,1133,1134,1204,1263,1269,1284 and all sections on Intrinsic Merit of Texts, Question-Answering, Embedding in vectorspace, Machine Translation, Transformers Attention Model,Named Entity Recognition and Meaning Representation, Complexity models of Question-Answering (multiple choice,open-ended,adaptive and static) - LTF,PTF,Switching Circuits,TQBF,Markov Chains
1287. (THEORY and FEATURE) Merit of Large Scale Visuals - Archaeology - Rebus Decipherment of Indus Pashupathi Seal - 9 August 2022 - related to 1203,1232,1233,1236,1237,1240 and all sections on Merit of Large Scale Visuals, Physique Recognition From Quadrilateral mesh isomorphism,Topological Face and Handwriting recognition, Archaeology-Topological Script Recognition, Product Homotopy, Homeomorphism and Topological Deformations, People Analytics, Computational Geometry, Graph Edit Distance and Earth mover distance, Graph Isomorphism (Exact, Approximate and Subgraph),Graph matching,Graph similarity,Image Search,Quadrilateral Mesh Deformation and Isomorphism,Maximum Common Subgraph Problem and Approximate Topological Matching
1288. (THEORY and FEATURE) Merit of Large Scale Visuals - Archaeology - Rebus Decipherments of Indus Pashupathi Seals and mining frequent subgraphs from predictions - 10 August 2022 - related to 1203,1232,1233,1236,1237,1240,1287 and all sections on Merit of Large Scale Visuals, Physique Recognition From Quadrilateral mesh isomorphism,Topological Face and Handwriting recognition, Archaeology-Topological Script Recognition, Product Homotopy, Homeomorphism and Topological Deformations, People Analytics, Computational Geometry, Graph Edit Distance and Earth mover distance, Graph Isomorphism (Exact, Approximate and Subgraph),Graph matching,Graph similarity,Image Search,Quadrilateral Mesh Deformation and Isomorphism,Maximum Common Subgraph Problem and Approximate Topological Matching
1289. (THEORY and FEATURE) Astronomy and Cosmology Datasets Analytics - N-Body gravitational accelerations computed for USGS (1900-2012) 8+ magnitude Earthquakes and NOAA HURDAT2 (1851-2012) North Atlantic Hurricanes Datasets - 16 August 2022 - related to 17,137,148,445,731,1206,1236,1255,1266,1267,1268,1270,1271,1272,1273 and all sections on Astronomical Dataset Mining, Archaeoastronomical Dating, Sequence Mining, String analytics, Sequence Alignment, Visual Planetarium Search, Archaeology, Climate and Extreme Weather Event Analytics, Computational Astrophysics, N-Body problem, Merit of Large Scale Visuals, Astronomical algorithms, Histogram analytics
1290. (THEORY and FEATURE)  GIS Urban Sprawl Analytics - Facebook (Meta) High Resolution Settlement Layer (HRSL) Population Density Maps - GDAL GeoTIFF to JPEG format Translation - 18 August 2022 - related to 1174,1175,1179,1194,1211 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Gridded Population Estimators (SEDAC GPW4 and GHSL convex hull estimators), DBSCAN and Neural Network Urban Extent Learners, Computational Geometry, Intrinsic Merit Rankings, R Ricker Population Estimation, Community detection, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry and Polygonal packing by Voronoi Tessellation, Four color theorem, Economic Merit, Computational Economics - GDP estimation from electricity consumption
1291. (THEORY and FEATURE)  GIS Urban Sprawl Analytics - Facebook (Meta) High Resolution Settlement Layer (HRSL) Population Estimation from GDAL-Rasterio Georeferencing - 19 August 2022 - related to 1174,1175,1179,1194,1211,1290 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Gridded Population Estimators (SEDAC GPW4 and GHSL convex hull estimators), DBSCAN and Neural Network Urban Extent Learners, Computational Geometry, Intrinsic Merit Rankings, R Ricker Population Estimation, Community detection, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry and Polygonal packing by Voronoi Tessellation, Four color theorem, Economic Merit, Computational Economics - GDP estimation from electricity consumption
1292. (THEORY and FEATURE)  GIS Urban Sprawl Analytics - Facebook (Meta) High Resolution Settlement Layer (HRSL) and LandSat 9 OLI2-TIRS2 GDAL-Rasterio Georeferencing - Window read - 22 August 2022 - related to 1174,1175,1179,1194,1211,1290,1291 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Gridded Population Estimators (SEDAC GPW4 and GHSL convex hull estimators), DBSCAN and Neural Network Urban Extent Learners, Computational Geometry, Intrinsic Merit Rankings, R Ricker Population Estimation, Community detection, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry and Polygonal packing by Voronoi Tessellation, Four color theorem, Economic Merit, Computational Economics - GDP estimation from electricity consumption
1295. (THEORY and FEATURE)  GIS Urban Sprawl Analytics - Facebook (Meta) High Resolution Settlement Layer (HRSL) and Global Human Settlement Layer (GHSL) GDAL-Rasterio Georeferencing - Sampling and Mollweide-EPSG transforms reprojections - 25 August 2022 - related to 1174,1175,1179,1194,1211,1290,1291,1292 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Gridded Population Estimators (SEDAC GPW4 and GHSL convex hull estimators), DBSCAN and Neural Network Urban Extent Learners, Computational Geometry, Intrinsic Merit Rankings, R Ricker Population Estimation, Community detection, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry and Polygonal packing by Voronoi Tessellation, Four color theorem, Economic Merit, Computational Economics - GDP estimation from electricity consumption
1296. (THEORY and FEATURE) GIS Urban Sprawl Analytics - Facebook (Meta) High Resolution Settlement Layer (HRSL) and Global Human Settlement Layer (GHSL) GDAL-Rasterio Georeferencing - Gini Index of Population and Built-Surface - 28 August 2022 - related to 1174,1175,1179,1194,1211,1290,1291,1292,1295 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Gridded Population Estimators (SEDAC GPW4 and GHSL convex hull estimators), DBSCAN and Neural Network Urban Extent Learners, Computational Geometry, Intrinsic Merit Rankings, R Ricker Population Estimation, Community detection, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry and Polygonal packing by Voronoi Tessellation, Four color theorem, Economic Merit, Computational Economics - GDP estimation from electricity consumption, Poverty alleviation
1297. (THEORY and FEATURE) GIS Urban Sprawl Analytics - Facebook (Meta) High Resolution Settlement Layer (HRSL) - Population estimation from GDAL-Rasterio Georeferencing - 30 August 2022 - related to 1174,1175,1179,1194,1211,1290,1291,1292,1295,1296 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Gridded Population Estimators (SEDAC GPW4 and GHSL convex hull estimators), DBSCAN and Neural Network Urban Extent Learners, Computational Geometry, Intrinsic Merit Rankings, R Ricker Population Estimation, Community detection, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry and Polygonal packing by Voronoi Tessellation, Four color theorem, Economic Merit, Computational Economics - GDP estimation from Urban sprawl demographics, electricity consumption, Poverty alleviation
1301. (THEORY and FEATURE) GIS Urban Sprawl Analytics - Polya Urn Urban Growth Model - Revised for N color segments - 2 September 2022 - related to 1174,1175,1179,1194,1211,1234,1290,1291,1292,1295,1296,1297 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Gridded Population Estimators (SEDAC GPW4 and GHSL convex hull estimators), DBSCAN and Neural Network Urban Extent Learners, Computational Geometry, Intrinsic Merit Rankings, R Ricker Population Estimation, Community detection, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry and Polygonal packing by Voronoi Tessellation, Four color theorem, Economic Merit, Computational Economics - GDP estimation from Urban sprawl demographics, electricity consumption, Poverty alleviation
1302. (THEORY and FEATURE) NeuronRainApps - Autonomous Driving - Obstacle Lattice from LIDAR Point Cloud Data - 5 September 2022 - related to 1253,1294 and all sections on Async IO, Drone Electronic Voting Machines, GIS and Urban Sprawl Analytics, Merit of Large Scale Visuals, Drone Obstacle Avoidance, Computational Geometry, ADAS-Obstacle avoidance, Autonomous Vehicles, Unmanned Aerial Vehicle Navigation-Autonomous Drone Delivery-Passenger Drones, Wiring Problem
1303. (THEORY and FEATURE) Computational Geometric Integer Factorization - Python 3.10.4 upgrade - 2232 and 67 bits Quadcore Benchmarks and Mathematica-Pari/GP-FLINT performance numbers comparison - related to 1259 and all sections on Integer Factorization,Computational Geometry,Set Partitions-to-Tile Cover reduction by Lagranges Four Square Theorem and ILP - 7 September 2022
1304. (THEORY and FEATURE) GIS Urban Sprawl Analytics - Polya Urn Urban Growth Model - Weights Learnt - 8 September 2022 - related to 1174,1175,1177,1179,1194,1211,1234,1290,1291,1292,1295,1296,1297,1301 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Gridded Population Estimators (SEDAC GPW4 and GHSL convex hull estimators), DBSCAN and Neural Network Urban Extent Learners, Computational Geometry, Intrinsic Merit Rankings, R Ricker Population Estimation, Community detection, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry and Polygonal packing by Voronoi Tessellation, Four color theorem, Economic Merit, Computational Economics - GDP estimation from Urban sprawl demographics, electricity consumption, Poverty alleviation, MARA (Multiple Agent Resource Allocation) Facegraph walk coloring DNFSAT algorithm, Preferential Attachment 
1305. (THEORY and FEATURE) Intrinsic Merit of Music - AI Music Synthesis from Sum of Sinusoids - Signal synthesis from librosa tone() - related to 110,1223,1224,1257,1258,1261 and all sections on Music search-Music discovery, Intrinsic Merit of Music, MIR(Music Information Retrieval), Music Similarity and Clustering, AI Music Synthesis from summation of damped sinusoids, fMRI connectomes - OpenNeuro - Psychology of music, Weighted automata, Chaos, Deep Learning, Dynamic Time Warping-Music Timeseries analysis, Music Evoked Autobiographical Memories, ThoughtNet, Majority Voting (Enjoyable music) Vs Intrinsic (Quality music) - Condorcet Jury Theorem variants - 9 September 2022
1306. (THEORY and FEATURE) Intrinsic Merit of Music - AI Music Synthesis from Polynomials Learnt from training data - related to 3,110,1223,1224,1257,1258,1261,1305 and all sections on Music search-Music discovery, Intrinsic Merit of Music, MIR(Music Information Retrieval), Music Similarity and Clustering, AI Music Synthesis from summation of damped sinusoids, fMRI connectomes - OpenNeuro - Psychology of music, Weighted automata, Chaos, Deep Learning, Dynamic Time Warping-Music Timeseries analysis, Music Evoked Autobiographical Memories, ThoughtNet, Majority Voting (Enjoyable music) Vs Intrinsic (Quality music) - Condorcet Jury Theorem variants - 12 September 2022
1307. (THEORY and FEATURE) Intrinsic Merit of Music - AI Music Synthesis from Polynomials Learnt from training data - PolyFeatures and Carnatic-Hindustani notes support  - related to 3,110,1223,1224,1257,1258,1261,1305,1306 and all sections on Music search-Music discovery, Intrinsic Merit of Music, MIR(Music Information Retrieval), Music Similarity and Clustering, AI Music Synthesis from summation of damped sinusoids, fMRI connectomes - OpenNeuro - Psychology of music, Weighted automata, Chaos, Deep Learning, Dynamic Time Warping-Music Timeseries analysis, Music Evoked Autobiographical Memories, Waveshaping, ThoughtNet, Majority Voting (Enjoyable music) Vs Intrinsic (Quality music) - Condorcet Jury Theorem variants - 15 September 2022
1308. (THEORY and FEATURE) Intrinsic Merit of Music - Virtual Piano Implementation and Music Synthesis from 12-notes octave - 16 September 2022 - related to 3,110,1223,1224,1257,1258,1261,1305,1306,1307 and all sections on Music search-Music discovery, Intrinsic Merit of Music, MIR(Music Information Retrieval), Music Similarity and Clustering, AI Music Synthesis from summation of damped sinusoids, Additive Synthesis, fMRI connectomes - OpenNeuro - Psychology of music, Weighted automata, Chaos, Deep Learning, Dynamic Time Warping-Music Timeseries analysis, Music Evoked Autobiographical Memories, Waveshaping, ThoughtNet, Majority Voting (Enjoyable music) Vs Intrinsic (Quality music) - Condorcet Jury Theorem variants 
1309. (THEORY and FEATURE) Intrinsic Merit of Music - Virtual Piano Implementation and Music Synthesis from 12-notes octave - Correction to Frequencies - 19 September 2022 - related to 3,110,1223,1224,1257,1258,1261,1305,1306,1307,1308 and all sections on Music search-Music discovery, Intrinsic Merit of Music, MIR(Music Information Retrieval), Music Similarity and Clustering, AI Music Synthesis from summation of damped sinusoids, Additive Synthesis, fMRI connectomes - OpenNeuro - Psychology of music, Weighted automata, Chaos, Deep Learning, Dynamic Time Warping-Music Timeseries analysis, Music Evoked Autobiographical Memories, Waveshaping, ThoughtNet, Majority Voting (Enjoyable music) Vs Intrinsic (Quality music) - Condorcet Jury Theorem variants
1310. (THEORY and FEATURE) Intrinsic Merit of Music - Virtual Piano Implementation - Carnatic Music Synthesis from 12-notes octave - 20 September 2022 - related to 3,110,1223,1224,1257,1258,1261,1305,1306,1307,1308,1309 and all sections on Music search-Music discovery, Intrinsic Merit of Music, MIR(Music Information Retrieval), Music Similarity and Clustering, AI Music Synthesis from summation of damped sinusoids, Additive Synthesis, fMRI connectomes - OpenNeuro - Psychology of music, Weighted automata, Chaos, Deep Learning, Dynamic Time Warping-Music Timeseries analysis, Music Evoked Autobiographical Memories, Waveshaping, ThoughtNet, Majority Voting (Enjoyable music) Vs Intrinsic (Quality music) - Condorcet Jury Theorem variants
1311. (THEORY and FEATURE) Intrinsic Merit of Music - Deep Learnt Automata and Music Synthesis - a Boolean Composition and Learning Theory perspective - 21 September 2022 - related to 3,110,1223,1224,1257,1258,1261,1305,1306,1307,1308,1309,1310 and all sections on Music search-Music discovery, Intrinsic Merit of Music, MIR(Music Information Retrieval), Music Similarity and Clustering, AI Music Synthesis from summation of damped sinusoids, Additive Synthesis, fMRI connectomes - OpenNeuro - Psychology of music, Weighted automata, Chaos, Deep Learning, Dynamic Time Warping-Music Timeseries analysis, Music Evoked Autobiographical Memories, Waveshaping, ThoughtNet, Majority Voting (Enjoyable music) Vs Intrinsic (Quality music) - Condorcet Jury Theorem variants,Computational Learning Theory, Boolean Function Composition
1312. (THEORY and FEATURE)  GIS Urban Sprawl Analytics - Polya Urn Urban Growth Model - Urban sprawl area computation - 22 September 2022 - related to 1174,1175,1177,1179,1194,1211,1234,1290,1291,1292,1295,1296,1297,1301,1304 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Gridded Population Estimators (SEDAC GPW4 and GHSL convex hull estimators), DBSCAN and Neural Network Urban Extent Learners, Computational Geometry, Intrinsic Merit Rankings, R Ricker Population Estimation, Community detection, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry and Polygonal packing by Voronoi Tessellation, Four color theorem, Economic Merit, Computational Economics - GDP estimation from Urban sprawl demographics, electricity consumption, Poverty alleviation, MARA (Multiple Agent Resource Allocation) Facegraph walk coloring DNFSAT algorithm, Preferential Attachment, Fixed Parameter Tractability-Kernelization
1313. (THEORY and FEATURE) GIS Urban Sprawl Analytics - Comparison of Raster Data Bounding Boxes between 2 dates - 23 September 2022 - related to 1174,1175,1177,1179,1194,1211,1234,1290,1291,1292,1295,1296,1297,1301,1304,1312 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Gridded Population Estimators (SEDAC GPW4 and GHSL convex hull estimators), DBSCAN and Neural Network Urban Extent Learners, Computational Geometry, Intrinsic Merit Rankings, R Ricker Population Estimation, Community detection, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry and Polygonal packing by Voronoi Tessellation, Four color theorem, Economic Merit, Computational Economics - GDP estimation from Urban sprawl demographics, electricity consumption, Poverty alleviation, MARA (Multiple Agent Resource Allocation) Facegraph walk coloring DNFSAT algorithm, Preferential Attachment, Fixed Parameter Tractability-Kernelization
1314. (THEORY and FEATURE) Complement Diophantines - Lagrange and Barycentric interpolations - 26 September 2022 - related to 323,345,471,735,1160 and all sections on Complement Diophantines, Complement Functions, Complementary Sets, Quadratic Forms, Riemann Zeta Function, Patterns in Primes, Polynomial Reconstruction Problem, Error correcting codes, Computational Learning Theory - Multivariate Polynomial Reconstruction over Finite Fields, Lagrange-Taylor-Barycentric interpolation, Jones-Sato-Wada-Wiens Theorem, Prime-Composite Complementation, Prime Number Theorem, Ulam Spiral, Ramsey 2-coloring of integers, Hilbert Tenth Problem, Unique Factorization , Matiyasevich-Robinson-Davis-Putnam Theorem, Post's Correspondence Problem, Question-Answering
1315.(THEORY and FEATURE) Intrinsic Merit of Music - Synthesized Bach from training music waveforms - 27 September 2022 - related to 3,110,134,298,1223,1224,1257,1258,1261,1305,1306,1307,1308,1309,1310,1311 and all sections on Music search-Music discovery, Intrinsic Merit of Music, MIR(Music Information Retrieval), Music Similarity and Clustering, AI Music Synthesis from summation of damped sinusoids, Additive Synthesis, fMRI connectomes - OpenNeuro - Psychology of music, Weighted automata, Chaos, Deep Learning, Dynamic Time Warping-Music Timeseries analysis, Music Evoked Autobiographical Memories, Waveshaping, ThoughtNet, Majority Voting (Enjoyable music) Vs Intrinsic (Quality music) - Condorcet Jury Theorem variants,Computational Learning Theory, Boolean Function Composition, Longest Common Subsequence, Suffix Trees - Longest Repeated Substring
1316.(THEORY and FEATURE) Astronomy and Cosmology Datasets Analytics - Solar system N-Body Pairwise angular separations computed for NOAA HURDAT2 (1851-2012) North Atlantic Hurricanes Datasets - 28 September 2022 - related to 17,137,148,445,731,1176,1206,1236,1255,1266,1267,1268,1270,1271,1272,1273,1289 and all sections on Astronomical Dataset Mining, Archaeoastronomical Dating, Sequence Mining, String analytics, Sequence Alignment, Visual Planetarium Search, Archaeology, Climate and Extreme Weather Event Analytics, Computational Astrophysics, N-Body problem, Merit of Large Scale Visuals, Astronomical algorithms, Histogram analytics
1317. (THEORY and FEATURE) Computational Geometric Integer Factorization - Multiple Integers - Python 3.10.4 upgrade + Spark 3.0.1 Quadcore Benchmarks - related to 1259,1303 and all sections on Integer Factorization,Computational Geometry,Set Partitions-to-Tile Cover reduction by Lagranges Four Square Theorem and ILP,Primality Testing - 29 September 2022
1318. (THEORY and FEATURE) GIS Weather Analytics and Climate Analytics - 3 October 2022 - related to 148,445,446,463,1165,1171,1176,1266,1289,1316 and all sections on Correlation between gravitational effects of Mined Celestial N-Body Patterns and terrestrial extreme weather events (or Gravitational effects on climate change), Drone natural obstacle avoidance, Drone autonomous online shopping delivery, Drone Electronic Voting Machine, Large Scale Visuals Recognition, Artificial Intelligence models for Climate Change, Astronomical algorithms
1319. (THEORY and FEATURE) Computational Geometric Integer Factorization - Multiple Integers - Python 3.10.4 upgrade + Spark 3.0.1 Quadcore Benchmarks 2 - Numba JIT optimization - Configurable number of factors - related to 1259,1303,1317 and all sections on Integer Factorization,Computational Geometry,Set Partitions-to-Tile Cover reduction by Lagranges Four Square Theorem and ILP,Primality Testing,RSA Semiprimes  - 6 October 2022
1320. (THEORY and FEATURE) GIS Urban Sprawl Analytics - R2019A and R2022A - Comparison of Raster Data Bounding Boxes for Chennai Metropolitan Area Sprawl - 7 October 2022 - related to 1174,1175,1177,1179,1194,1211,1234,1290,1291,1292,1295,1296,1297,1301,1304,1312,1313 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Gridded Population Estimators (SEDAC GPW4 and GHSL convex hull estimators), DBSCAN and Neural Network Urban Extent Learners, Computational Geometry, Intrinsic Merit Rankings, R Ricker Population Estimation, Community detection, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry and Polygonal packing by Voronoi Tessellation, Four color theorem, Economic Merit, Computational Economics - GDP estimation from Urban sprawl demographics, electricity consumption, Poverty alleviation, MARA (Multiple Agent Resource Allocation) Facegraph walk coloring DNFSAT algorithm, Preferential Attachment, Fixed Parameter Tractability-Kernelization, Automatic Delineation of Urban Sprawls, Cellular Automata-SLEUTH-Polya Urn-Dynamic Facegraph Urban Growth Models 
1321. (JIRA,THEORY and FEATURE) Computational Geometric Integer Factorization - Multiple Integers - Python 3.10.4 upgrade + Spark 3.0.1 Quadcore Benchmarks 3 - Numba JIT optimization - Configurable number of factors - Factorization-Primality of Consecutive integers from 999 to 1874 - related to 1259,1303,1319 and all sections on Integer Factorization,Computational Geometry,Set Partitions-to-Tile Cover reduction by Lagranges Four Square Theorem and ILP,Primality Testing,RSA Semiprimes - 7 October 2022
1322. (JIRA,THEORY and FEATURE) Computational Geometric Integer Factorization - Multiple Integers - Python 3.10.4 upgrade + Spark 3.0.1 Quadcore Benchmarks 4 - Factorization-SquareRoot-Primality of Consecutive integers from 50000 to 50100 and 9 to 200 - related to 498,601,1226,1259,1303,1319,1321 and all sections on Integer Factorization,Computational Geometry,Set Partitions-to-Tile Cover reduction by Lagranges Four Square Theorem and ILP,Primality Testing,RSA Semiprimes,Almost-Square Bounding Boxes in Large Scale Visual Recognition,Pell's Equation,Brahmagupta's Chakravala,Approximate Factoring by Newton-Raphson Rayshooting queries,Algebraic Geometry of Computational Geometric Factorization - 10 October 2022
1323.(THEORY and FEATURE) GIS Urban Sprawl Analytics - R2022A - 3D Urban Sprawl Growth Model from BUILT-V and BUILT-S datasets - Commercial segment (Central Business District) Delineation by average building height - Chennai Metropolitan Area Sprawl Example - 11 October 2022 - related to 1174,1175,1177,1179,1194,1211,1234,1290,1291,1292,1295,1296,1297,1301,1304,1312,1313,1320 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Gridded Population Estimators (SEDAC GPW4 and GHSL convex hull estimators), DBSCAN and Neural Network Urban Extent Learners, Computational Geometry, Intrinsic Merit Rankings, R Ricker Population Estimation, Community detection, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry and Polygonal packing by Voronoi Tessellation, Four color theorem, Economic Merit, Computational Economics - GDP estimation from Urban sprawl demographics, electricity consumption, Poverty alleviation, MARA (Multiple Agent Resource Allocation) Facegraph walk coloring DNFSAT algorithm, Preferential Attachment, Fixed Parameter Tractability-Kernelization, Automatic Delineation of Urban Sprawls, Cellular Automata-SLEUTH-Polya Urn-Dynamic Facegraph Urban Growth Models 
1324. (JIRA,THEORY and FEATURE) Computational Geometric Integer Factorization - Python 3.10.4,Python 3.7.5,Spark 3.0.1,Spark 3.3.0 Quadcore Benchmarks - Numba JIT enabled for joblib parallelized tiles creation - Semiprimes,Cunningham's Number - related to 498,601,1226,1259,1303,1319,1321,1323 and all sections on Integer Factorization,Computational Geometry,Set Partitions-to-Tile Cover reduction by Lagranges Four Square Theorem and ILP,Primality Testing,RSA Semiprimes,Almost-Square Bounding Boxes in Large Scale Visual Recognition,Pell's Equation,Brahmagupta's Chakravala,Approximate Factoring by Newton-Raphson Rayshooting queries,Algebraic Geometry of Computational Geometric Factorization - 13 October 2022
1325. (JIRA,THEORY and FEATURE) Computational Geometric Integer Factorization - Python 3.10.4 + Spark 3.3.0 Quadcore Benchmarks - Hardware Square root instruction optimization and Semiprime Factorization - related to 498,601,1226,1259,1303,1319,1321,1323,1324 and all sections on Integer Factorization,Computational Geometry,Set Partitions-to-Tile Cover reduction by Lagranges Four Square Theorem and ILP,Primality Testing,RSA Semiprimes,Almost-Square Bounding Boxes in Large Scale Visual Recognition,Pell's Equation,Brahmagupta's Chakravala,Approximate Factoring by Newton-Raphson Rayshooting queries,Algebraic Geometry of Computational Geometric Factorization - 13 October 2022
1326. (JIRA,THEORY and FEATURE) GIS Urban Sprawl Analytics - R2022A - 3D Urban Sprawl Growth Model from BUILT-V and BUILT-S datasets - Mean,Median,Standard Deviation of Building Heights - Chennai Metropolitan Area Sprawl Example - 15 October 2022 - related to 1174,1175,1177,1179,1194,1211,1234,1290,1291,1292,1295,1296,1297,1301,1304,1312,1313,1320,1323 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Gridded Population Estimators (SEDAC GPW4 and GHSL convex hull estimators), DBSCAN and Neural Network Urban Extent Learners, Computational Geometry, Intrinsic Merit Rankings, R Ricker Population Estimation, Community detection, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry and Polygonal packing by Voronoi Tessellation, Four color theorem, Economic Merit, Computational Economics - GDP estimation from Urban sprawl demographics, electricity consumption, Poverty alleviation, MARA (Multiple Agent Resource Allocation) Facegraph walk coloring DNFSAT algorithm, Preferential Attachment, Fixed Parameter Tractability-Kernelization, Automatic Delineation of Urban Sprawls, Cellular Automata-SLEUTH-Polya Urn-Dynamic Facegraph Urban Growth Models 
1327.(JIRA,THEORY and FEATURE) GIS Weather Analytics and Climate Analytics - 17 October 2022 - Predictions of Extreme Weather Events - related to 148,313,445,446,463,1165,1171,1176,1266,1289,1316,1318 and all sections on Correlation between gravitational effects of Mined Celestial N-Body Patterns and terrestrial extreme weather events (or Gravitational effects on climate change), Drone natural obstacle avoidance, Drone autonomous online shopping delivery, Drone Electronic Voting Machine, Large Scale Visuals Recognition, Artificial Intelligence models for Climate Change, Astronomical algorithms
1328. (JIRA,THEORY and FEATURE) GIS Urban Sprawl Analytics - R2022A - 3D Urban Sprawl Growth Model from BUILT-V and BUILT-S datasets - Digital Elevation Model from Matplotlib3D  - Chennai Metropolitan Area Sprawl Example - 19 October 2022 - related to 1174,1175,1177,1179,1194,1211,1234,1290,1291,1292,1295,1296,1297,1301,1304,1312,1313,1320,1323,1326 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Gridded Population Estimators (SEDAC GPW4 and GHSL convex hull estimators), DBSCAN and Neural Network Urban Extent Learners, Computational Geometry, Intrinsic Merit Rankings, R Ricker Population Estimation, Community detection, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry and Polygonal packing by Voronoi Tessellation, Four color theorem, Economic Merit, Computational Economics - GDP estimation from Urban sprawl demographics, electricity consumption, Poverty alleviation, MARA (Multiple Agent Resource Allocation) Facegraph walk coloring DNFSAT algorithm, Preferential Attachment, Fixed Parameter Tractability-Kernelization, Automatic Delineation of Urban Sprawls, Cellular Automata-SLEUTH-Polya Urn-Dynamic Facegraph Urban Growth Models 
1342. (THEORY and FEATURE) GIS Urban Sprawl Analytics - R2022A - Verhulste Population Growth Model - Chennai Metropolitan Area Sprawl Example - 26 October 2022 - related to 823,1174,1175,1177,1179,1194,1211,1234,1290,1291,1292,1295,1296,1297,1301,1304,1312,1313,1320,1323,1326,1328 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Gridded Population Estimators (SEDAC GPW4 and GHSL convex hull estimators), DBSCAN and Neural Network Urban Extent Learners, Computational Geometry, Intrinsic Merit Rankings, R Ricker Population Estimation, Community detection, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry and Polygonal packing by Voronoi Tessellation, Four color theorem, Economic Merit, Computational Economics - GDP estimation from Urban sprawl demographics, electricity consumption, Poverty alleviation, MARA (Multiple Agent Resource Allocation) Facegraph walk coloring DNFSAT algorithm, Preferential Attachment, Fixed Parameter Tractability-Kernelization, Automatic Delineation of Urban Sprawls, Cellular Automata-SLEUTH-Polya Urn-Dynamic Facegraph Urban Growth Models 
1343. (JIRA,THEORY and FEATURE) GIS Urban Sprawl Analytics - Verhulste Population Growth Model - Population Estimator 2 - Chennai Metropolitan Area Sprawl Example - 27 October 2022 - related to 823,1174,1175,1177,1179,1194,1211,1234,1290,1291,1292,1295,1296,1297,1301,1304,1312,1313,1320,1323,1326,1328,1342 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Gridded Population Estimators (SEDAC GPW4 and GHSL convex hull estimators), DBSCAN and Neural Network Urban Extent Learners, Computational Geometry, Intrinsic Merit Rankings, R Ricker Population Estimation, Community detection, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry and Polygonal packing by Voronoi Tessellation, Four color theorem, Economic Merit, Computational Economics - GDP estimation from Urban sprawl demographics, electricity consumption, Poverty alleviation, MARA (Multiple Agent Resource Allocation) Facegraph walk coloring MAXDNFSAT algorithm, Preferential Attachment, Fixed Parameter Tractability-Kernelization, Automatic Delineation of Urban Sprawls, Cellular Automata-SLEUTH-Polya Urn-Dynamic Facegraph Urban Growth Models,Fame versus Merit
1348. (THEORY and FEATURE) MultiFractal Detrended Fluctuation Analysis (MFDFA) - for unearthing Fractal structure within any timeseries data (including Music, Medical Imageing-ECG, Meteorology-Precipitation, Seismology-Tremors, NBody Gravitational Accelerations, Economics-Financial Markets) - 31 October 2022 - related to 690,691,692,1257,1315,1316,1327 and all sections on Music Information Retrieval(MIR), Climate analytics and Weather Forecast, Computational Economics-Quantitative Finance and TimeSeries Analysis, Graphical Event Models (GEM), Chaos and Fractals, Polynomial Interpolation
1349. (THEORY and FEATURE) GIS Urban Sprawl Analytics - Urban Sprawl Road Network Graph from OpenStreetMap (OSMnx) - 2 November 2022 - related to 823,1174,1175,1177,1179,1194,1211,1234,1290,1291,1292,1295,1296,1297,1301,1304,1312,1313,1320,1323,1326,1328,1342,1343 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Gridded Population Estimators (SEDAC GPW4 and GHSL convex hull estimators), DBSCAN and Neural Network Urban Extent Learners, Computational Geometry, Intrinsic Merit Rankings, R Ricker Population Estimation, Community detection, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry and Polygonal packing by Voronoi Tessellation, Four color theorem, Economic Merit, Computational Economics - GDP estimation from Urban sprawl demographics, electricity consumption, Poverty alleviation, Preferential Attachment, Automatic Delineation of Urban Sprawls, Cellular Automata-SLEUTH-Polya Urn-Dynamic Facegraph Urban Growth Models
1350. (THEORY and FEATURE) GIS Urban Sprawl Analytics - Urban Sprawl Road Network Analytics (OSMnx) based delineation for periurban sprawl of Chennai Metropolitan Area - a case study - 3 November 2022 - related to 823,1163,1164,1174,1175,1177,1179,1194,1211,1226,1234,1290,1291,1292,1295,1296,1297,1301,1304,1312,1313,1320,1323,1326,1328,1342,1343,1349 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Gridded Population Estimators (SEDAC GPW4 and GHSL convex hull estimators), DBSCAN and Neural Network Urban Extent Learners, Computational Geometry, Intrinsic Merit Rankings, R Ricker Population Estimation, Community detection, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry and Polygonal packing by Voronoi Tessellation, Four color theorem, Economic Merit, Computational Economics - GDP estimation from Urban sprawl demographics, electricity consumption, Poverty alleviation, Preferential Attachment, Automatic Delineation of Urban Sprawls, Cellular Automata-SLEUTH-Polya Urn-Dynamic Facegraph Urban Growth Models, Drone Electronic Voting Machines, Drone Autonomous Delivery
1351. (JIRA,THEORY and FEATURE) GIS Urban Sprawl Analytics - Urban Sprawl Road Network Analytics (OSMnx) based delineation for periurban sprawl of Chennai Metropolitan Area - case study - Corrections to Road Density Measures and Cheeger constant - 7 November 2022 - related to 823,1163,1164,1174,1175,1177,1179,1194,1211,1226,1234,1290,1291,1292,1295,1296,1297,1301,1302,1304,1312,1313,1320,1323,1326,1328,1342,1343,1349,1350 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Gridded Population Estimators (SEDAC GPW4 and GHSL convex hull estimators), DBSCAN and Neural Network Urban Extent Learners, Computational Geometry, Intrinsic Merit Rankings, R Ricker Population Estimation, Community detection, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry and Polygonal packing by Voronoi Tessellation, Four color theorem, Economic Merit, Computational Economics - GDP estimation from Urban sprawl demographics, electricity consumption, Poverty alleviation, Preferential Attachment, Automatic Delineation of Urban Sprawls, Cellular Automata-SLEUTH-Polya Urn-Dynamic Facegraph Urban Growth Models, Drone Electronic Voting Machines, Drone Autonomous Delivery, Autonomous Driving, Expander Graphs
1352. (JIRA,THEORY and FEATURE) GIS Weather Analytics and Climate Analytics - 9 November 2022 - MFDFA model of precipitation and bug resolution in predict_EWE() - related to 148,313,445,446,463,1165,1171,1176,1266,1289,1316,1318,1327 and all sections on Correlation between gravitational effects of Mined Celestial N-Body Patterns and terrestrial extreme weather events (or Gravitational effects on climate change), Drone natural obstacle avoidance, Drone autonomous online shopping delivery, Drone Electronic Voting Machine, Artificial Intelligence models for Climate Change, Astronomical algorithms, Multifractals, Timeseries analysis
1353. (JIRA,THEORY and FEATURE) Intrinsic Merit of Music - MFDFA model of Music Waveforms and Piano notes string generation from mathematical functions - 10 November 2022 - related to 3,110,134,298,1223,1224,1257,1258,1261,1305,1306,1307,1308,1309,1310,1311,1315 and all sections on Music search-Music discovery, Intrinsic Merit of Music, MIR(Music Information Retrieval), Music Similarity and Clustering, AI Music Synthesis from summation of damped sinusoids, Additive Synthesis, fMRI connectomes - OpenNeuro - Psychology of music, Weighted automata, Chaos, Deep Learning, Dynamic Time Warping-Music Timeseries analysis, Music Evoked Autobiographical Memories, Waveshaping, ThoughtNet, Majority Voting (Enjoyable music) Vs Intrinsic (Quality music) - Condorcet Jury Theorem variants,Computational Learning Theory, Boolean Function Composition, Longest Common Subsequence, Suffix Trees - Longest Repeated Substring, MultiFractal Detrended Fluctuation Analysis of Non-stationary timeseries
1355. (JIRA,THEORY and FEATURE) Computational Geometric Integer Factorization - Python 3.10.6 + Spark 3.3.0 Quadcore Benchmarks - Optional Square Root Optimization, Refactoring of Multiple Integer Factorization, Linux Pollard-Rho Factor Command Benchmarks comparison - related to 498,601,1226,1259,1303,1319,1321,1323,1324,1325 and all sections on Integer Factorization,Computational Geometry,Set Partitions-to-Tile Cover reduction by Lagranges Four Square Theorem and ILP,Primality Testing,RSA Semiprimes,Almost-Square Bounding Boxes in Large Scale Visual Recognition,Pell's Equation,Brahmagupta's Chakravala,Approximate Factoring by Newton-Raphson Rayshooting queries,Algebraic Geometry of Computational Geometric Factorization,Quantum computation and Derandomization of BQP Factorization by Condorcet Jury Theorem Majority-BQPVoterSAT boolean composition - 15 November 2022
1356. (JIRA,THEORY and FEATURE) Computational Geometric Integer Factorization - Python 3.10.6 + Spark 3.3.0 Quadcore Benchmarks - Multiple Consecutive Integers - related to 498,601,1226,1259,1303,1319,1321,1323,1324,1325,1355 and all sections on Integer Factorization,Computational Geometry,Set Partitions-to-Tile Cover reduction by Lagranges Four Square Theorem and ILP,Primality Testing,RSA Semiprimes,Almost-Square Bounding Boxes in Large Scale Visual Recognition,Pell's Equation,Brahmagupta's Chakravala,Approximate Factoring by Newton-Raphson Rayshooting queries,Algebraic Geometry of Computational Geometric Factorization,Quantum computation and Derandomization of BQP Factorization by Condorcet Jury Theorem Majority-BQPVoterSAT boolean composition - 16 November 2022
1358. (THEORY and FEATURE) GIS Weather Analytics and Climate Analytics - 22 November 2022 - Prediction of Extreme Weather Events based on angular separations-NBody gravitational accelerations of few more pairs of solar system bodies from Sequence Mining - related to 148,172,313,445,446,463,1165,1171,1176,1266,1289,1316,1318,1327 and all sections on Correlation between gravitational effects of Mined Celestial N-Body Patterns and terrestrial extreme weather events (or Gravitational effects on climate change), Drone natural obstacle avoidance, Drone autonomous online shopping delivery, Drone Electronic Voting Machine, Artificial Intelligence models for Climate Change, Astronomical algorithms, Multifractals, Timeseries analysis, Sequence Mining-Class Association Rules
1359. (THEORY and FEATURE) GIS Weather Analytics and Climate Analytics - 24 November 2022 - Prediction of Extreme Weather Events based on angular separations-NBody gravitational accelerations of solar system bodies from Sequence Mining - Graphics plot of Gravities - related to 148,172,313,445,446,463,1165,1171,1176,1266,1289,1316,1318,1327,1358 and all sections on Correlation between gravitational effects of Mined Celestial N-Body Patterns and terrestrial extreme weather events (or Gravitational effects on climate change), Drone natural obstacle avoidance, Drone autonomous online shopping delivery, Drone Electronic Voting Machine, Artificial Intelligence models for Climate Change, Astronomical algorithms, Multifractals, Timeseries analysis, Sequence Mining-Class Association Rules
1360. (THEORY and FEATURE) GIS Weather Analytics and Climate Analytics - 28 November 2022 - Prediction of Extreme Weather Events based on angular separations-NBody gravitational accelerations of solar system bodies from Sequence Mining - Python3.x upgrade of Sequence Mining (NeuronRain Green and Antariksh - GitHub and GitLab) and JSON persistence in NeuronRain Research (SourceForge) - related to 148,172,313,445,446,463,1165,1171,1176,1266,1289,1316,1318,1327,1358,1359 and all sections on Correlation between gravitational effects of Mined Celestial N-Body Patterns and terrestrial extreme weather events (or Gravitational effects on climate change), Drone natural obstacle avoidance, Drone autonomous online shopping delivery, Drone Electronic Voting Machine, Artificial Intelligence models for Climate Change, Astronomical algorithms, Multifractals, Timeseries analysis, Sequence Mining-Class Association Rules
1361. (THEORY and FEATURE) GIS Weather Analytics and Climate Analytics - 29 November 2022 - Prediction of Extreme Weather Events based on angular separations-NBody gravitational accelerations of solar system bodies from Sequence Mining - Arbitrary Celestial Conjunctions and Reading Sequence mined Class Association Rules from JSON - related to 148,172,313,445,446,463,1165,1171,1176,1266,1289,1316,1318,1327,1358,1359,1360 and all sections on Correlation between gravitational effects of Mined Celestial N-Body Patterns and terrestrial extreme weather events (or Gravitational effects on climate change), Drone natural obstacle avoidance, Drone autonomous online shopping delivery, Drone Electronic Voting Machine, Artificial Intelligence models for Climate Change, Astronomical algorithms, Multifractals, Timeseries analysis, Sequence Mining-Class Association Rules,Computational Geometry on Riemannian Manifolds-Spacetime, ECMWF equations
1362. (THEORY and FEATURE) GIS Urban Sprawl Analytics -  Overlay of GHSL R2022A BUILT-V Visualization and Chennai Metropolitan Area Map and its clustering - 30 November 2022 and 1 December 2022 - related to 823,1163,1164,1174,1175,1177,1179,1194,1211,1226,1234,1290,1291,1292,1295,1296,1297,1301,1302,1304,1312,1313,1320,1323,1326,1328,1342,1343,1349,1350,1351 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Gridded Population Estimators (SEDAC GPW4 and GHSL convex hull estimators), DBSCAN and Neural Network Urban Extent Learners, Computational Geometry, Intrinsic Merit Rankings, R Ricker Population Estimation, Community detection, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry and Polygonal packing by Voronoi Tessellation, Four color theorem, Economic Merit, Computational Economics - GDP estimation from Urban sprawl demographics, electricity consumption, Poverty alleviation, Preferential Attachment, Automatic Delineation of Urban Sprawls, Cellular Automata-SLEUTH-Polya Urn-Dynamic Facegraph Urban Growth Models, Autonomous Driving, Expander Graphs
1363. (JIRA,THEORY and FEATURE) GIS Urban Sprawl Analytics -  Overlay of GHSL R2022A BUILT-V Visualization and Chennai Metropolitan Area Map and its DBSCAN clustering - 2 December 2022 - related to 823,1163,1164,1174,1175,1177,1179,1194,1211,1226,1234,1290,1291,1292,1295,1296,1297,1301,1302,1304,1312,1313,1320,1323,1326,1328,1342,1343,1349,1350,1351,1362 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Gridded Population Estimators (SEDAC GPW4 and GHSL convex hull estimators), DBSCAN and Neural Network Urban Extent Learners, Computational Geometry, Intrinsic Merit Rankings, R Ricker Population Estimation, Community detection, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry and Polygonal packing by Voronoi Tessellation, Four color theorem, Economic Merit, Computational Economics - GDP estimation from Urban sprawl demographics, electricity consumption, Poverty alleviation, Preferential Attachment, Automatic Delineation of Urban Sprawls, Cellular Automata-SLEUTH-Polya Urn-Dynamic Facegraph Urban Growth Models, Autonomous Driving, Expander Graphs
1364. (THEORY and FEATURE) GIS Weather Analytics and Climate Analytics - 5 December 2022 - Prediction of Extreme Weather Events from Gaussian Mixture Model - Multimodal Gaussian fit of the precipitation timeseries - related to 148,172,313,445,446,463,1165,1171,1176,1266,1289,1316,1318,1327,1358,1359,1360,1361 and all sections on Correlation between gravitational effects of Mined Celestial N-Body Patterns and terrestrial extreme weather events (or Gravitational effects on climate change), Drone natural obstacle avoidance-Drone autonomous online shopping delivery-Drone Electronic Voting Machine, Artificial Intelligence models for Climate Change, Astronomical algorithms, Multifractals, Timeseries analysis, Sequence Mining-Class Association Rules,Computational Geometry on Riemannian Manifolds-Spacetime, ECMWF equations
1365. (THEORY and FEATURE) Computational Geometric Integer Factorization - Python 3.7.5 + Spark 3.3.0 Quadcore Benchmarks - Linux Elliptic Curve Factorization gmp-ecm comparison - related to 498,601,1226,1259,1303,1319,1321,1323,1324,1325,1355 and all sections on Integer Factorization,Computational Geometry,Set Partitions-to-Tile Cover reduction by Lagranges Four Square Theorem and ILP,Primality Testing,RSA Semiprimes,Almost-Square Bounding Boxes in Large Scale Visual Recognition,Pell's Equation,Brahmagupta's Chakravala,Approximate Factoring by Newton-Raphson Rayshooting queries,Algebraic Geometry of Computational Geometric Factorization,Quantum computation and Derandomization of BQP Factorization by Condorcet Jury Theorem Majority-BQPVoterSAT boolean composition - 7 December 2022
1366. (THEORY and FEATURE) Computational Geometric Integer Factorization - Python 3.7.5 + Spark 3.3.0 Quadcore Benchmarks - Linux General Number Field Sieve Factorization (CADO-NFS) comparison - related to 498,601,1226,1259,1303,1319,1321,1323,1324,1325,1355,1365 and all sections on Integer Factorization,Computational Geometry,Set Partitions-to-Tile Cover reduction by Lagranges Four Square Theorem and ILP,Primality Testing,RSA Semiprimes,Almost-Square Bounding Boxes in Large Scale Visual Recognition,Pell's Equation,Brahmagupta's Chakravala,Approximate Factoring by Newton-Raphson Rayshooting queries,Algebraic Geometry of Computational Geometric Factorization,Quantum computation and Derandomization of BQP Factorization by Condorcet Jury Theorem Majority-BQPVoterSAT boolean composition - 9 December 2022
1367. (THEORY and FEATURE) GIS Weather Analytics and Climate Analytics - 12 December 2022 - Prediction of Extreme Weather Events from Gaussian Mixture Model - Multimodal Gaussian fit of the precipitation timeseries - Modes set from N-Body gravitations - related to 148,172,313,445,446,463,1165,1171,1176,1266,1289,1316,1318,1327,1358,1359,1360,1361,1364 and all sections on Correlation between gravitational effects of Mined Celestial N-Body Patterns and terrestrial extreme weather events (or Gravitational effects on climate change), Drone natural obstacle avoidance-Drone autonomous online shopping delivery-Drone Electronic Voting Machine, Artificial Intelligence models for Climate Change, Astronomical algorithms, Multifractals, Timeseries analysis, Sequence Mining-Class Association Rules,Computational Geometry on Riemannian Manifolds-Spacetime, ECMWF equations
1368. (THEORY and FEATURE) GIS Weather Analytics and Climate Analytics - 13 December 2022 - Prediction of Extreme Weather Events from Gaussian Mixture Model - Multimodal Gaussian fit of the precipitation timeseries - Gaussian Ensemble Rainfall Forecast from Timeseries Partition Enumeration - related to 148,172,313,445,446,463,1165,1171,1176,1266,1289,1316,1318,1327,1358,1359,1360,1361,1364,1367 and all sections on Correlation between gravitational effects of Mined Celestial N-Body Patterns and terrestrial extreme weather events (or Gravitational effects on climate change), Drone natural obstacle avoidance-Drone autonomous online shopping delivery-Drone Electronic Voting Machine, Artificial Intelligence models for Climate Change, Astronomical algorithms, Multifractals, Timeseries analysis, Sequence Mining-Class Association Rules,Computational Geometry on Riemannian Manifolds-Spacetime, ECMWF equations, Integer Partitions and Partition number, Money changeing problem
1369. (THEORY and FEATURE) Computational Geometric Integer Factorization - Python 3.7.5 + Spark 3.3.0 Quadcore Benchmarks - Linux General Number Field Sieve Factorization (CADO-NFS) comparison 2 - related to 498,601,1226,1259,1303,1319,1321,1323,1324,1325,1355,1365,1366 and all sections on Integer Factorization,Computational Geometry,Set Partitions-to-Tile Cover reduction by Lagranges Four Square Theorem and ILP,Primality Testing,RSA Semiprimes,Almost-Square Bounding Boxes in Large Scale Visual Recognition,Pell's Equation,Brahmagupta's Chakravala,Approximate Factoring by Newton-Raphson Rayshooting queries,Algebraic Geometry of Computational Geometric Factorization,Quantum computation and Derandomization of BQP Factorization by Condorcet Jury Theorem Majority-BQPVoterSAT boolean composition - 14 December 2022
1372. (THEORY and FEATURE) Computational Geometric Integer Factorization - Python 3.10.6 + Spark 3.3.0 Quadcore Multiple Consecutive Integers Benchmarks - Linux General Number Field Sieve Factorization (CADO-NFS) comparison 3 - related to 498,601,1226,1259,1303,1319,1321,1323,1324,1325,1355,1365,1366,1369 and all sections on Integer Factorization,Computational Geometry,Set Partitions-to-Tile Cover reduction by Lagranges Four Square Theorem and ILP,Primality Testing,RSA Semiprimes,Almost-Square Bounding Boxes in Large Scale Visual Recognition,Pell's Equation,Brahmagupta's Chakravala,Approximate Factoring by Newton-Raphson Rayshooting queries,Algebraic Geometry of Computational Geometric Factorization,Quantum computation and Derandomization of BQP Factorization by Condorcet Jury Theorem Majority-BQPVoterSAT boolean composition - 22 December 2022
1373. (JIRA,THEORY and FEATURE) Computational Geometric Integer Factorization - Python 3.7 + Spark 3.3.0 Quadcore Multiple Consecutive Integers Benchmarks - Linux General Number Field Sieve Factorization (CADO-NFS) comparison 4 and multiple enhancements to NeuronRain Computational Geometric Factorization - related to 498,601,1226,1259,1303,1319,1321,1323,1324,1325,1355,1365,1366,1369,1372 and all sections on Integer Factorization,Computational Geometry,Set Partitions-to-Tile Cover reduction by Lagranges Four Square Theorem and ILP,Primality Testing,RSA Semiprimes,Almost-Square Bounding Boxes in Large Scale Visual Recognition,Pell's Equation,Brahmagupta's Chakravala,Approximate Factoring by Newton-Raphson Rayshooting queries,Algebraic Geometry of Computational Geometric Factorization,Quantum computation and Derandomization of BQP Factorization by Condorcet Jury Theorem Majority-BQPVoterSAT boolean composition - 27 December 2022
1374. (JIRA,THEORY and FEATURE) Computational Geometric Integer Factorization - Python 3.7 + Spark 3.3.0 Quadcore Multiple Consecutive Integers Benchmarks - Linux General Number Field Sieve Factorization (CADO-NFS) comparison 5 and multiple enhancements to NeuronRain Computational Geometric Factorization - related to 498,562,601,1226,1259,1303,1319,1321,1323,1324,1325,1355,1365,1366,1369,1372,1373 and all sections on Integer Factorization,Computational Geometry,Set Partitions-to-Tile Cover reduction by Lagranges Four Square Theorem and ILP,Primality Testing,RSA Semiprimes,Almost-Square Bounding Boxes in Large Scale Visual Recognition,Pell's Equation,Brahmagupta's Chakravala,Approximate Factoring by Newton-Raphson Rayshooting queries,Algebraic Geometry of Computational Geometric Factorization,Quantum computation and Derandomization of BQP Factorization by Condorcet Jury Theorem Majority-BQPVoterSAT boolean composition,Grover Search,Quadratic Rational Beziers-Grobner Bases - 30 December 2022
1375. (THEORY and FEATURE) Granger causality of timeseries data (including Music, Medical Imageing-ECG, Meteorology-Precipitation, Seismology-Tremors, NBody Gravitational Accelerations, Economics-Financial Markets) - 4 January 2023 - related to 690,691,692,1257,1315,1316,1327,1348 and all sections on Music Information Retrieval(MIR), Climate analytics and Weather Forecast, Computational Economics-Quantitative Finance and TimeSeries Analysis, Graphical Event Models (GEM), Causal Event Models (CEM),Chaos and Fractals, Polynomial Interpolation, EventNet causality
1376. (THEORY and FEATURE) Granger causality of timeseries data (including Music, Medical Imageing-ECG, Meteorology-Precipitation, Seismology-Tremors, NBody Gravitational Accelerations, Economics-Financial Markets) - 9 January 2023 - related to 690,691,692,1257,1315,1316,1327,1348,1375 and all sections on Music Information Retrieval(MIR), Climate analytics and Weather Forecast, Computational Economics-Quantitative Finance and TimeSeries Analysis, Graphical Event Models (GEM), Causal Event Models (CEM),Chaos and Fractals, Polynomial Interpolation, EventNet causality
1377. (THEORY and FEATURE) GIS Urban Sprawl Analytics - Maxflow-Minxut Bottleneck measure of OSMnx transport network graph - Overlay of GHSL R2022A BUILT-V Visualization and Chennai Metropolitan Area Map - 13 January 2023 - related to 823,1163,1164,1174,1175,1177,1179,1194,1211,1226,1234,1290,1291,1292,1295,1296,1297,1301,1302,1304,1312,1313,1320,1323,1326,1328,1342,1343,1349,1350,1351,1362,1363 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Gridded Population Estimators (SEDAC GPW4 and GHSL convex hull estimators), DBSCAN and Neural Network Urban Extent Learners, Computational Geometry, Intrinsic Merit Rankings, R Ricker Population Estimation, Community detection, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry and Polygonal packing by Voronoi Tessellation, Four color theorem, Economic Merit, Computational Economics - GDP estimation from Urban sprawl demographics, electricity consumption, Poverty alleviation, Preferential Attachment, Automatic Delineation of Urban Sprawls, Cellular Automata-SLEUTH-Polya Urn-Dynamic Facegraph Urban Growth Models, Autonomous Driving, Expander Graphs
1379. (THEORY and FEATURE) Computational Geometric Integer Factorization - Python 3.7.5 + Spark 3.3.0 Quadcore 4093 bits Benchmarks - Self Initializing Quadratic Sieve Factorization and Elliptic Curve Method (SIQS + ECM) comparison  - related to 498,601,1226,1259,1303,1319,1321,1323,1324,1325,1355,1365,1366,1369 and all sections on Integer Factorization,Computational Geometry,Set Partitions-to-Tile Cover reduction by Lagranges Four Square Theorem and ILP,Primality Testing,RSA Semiprimes,Almost-Square Bounding Boxes in Large Scale Visual Recognition,Pell's Equation,Brahmagupta's Chakravala,Approximate Factoring by Newton-Raphson Rayshooting queries,Algebraic Geometry of Computational Geometric Factorization,Quantum computation and Derandomization of BQP Factorization by Condorcet Jury Theorem Majority-BQPVoterSAT boolean composition - 18 January 2023
1386. (THEORY and FEATURE) GIS Urban Sprawl Analytics - Isochrones of OSMnx transport network graph - Chennai Metropolitan Area Periurban region example - 8 February 2023 - related to 823,1163,1164,1174,1175,1177,1179,1194,1211,1226,1234,1290,1291,1292,1295,1296,1297,1301,1302,1304,1312,1313,1320,1323,1326,1328,1342,1343,1349,1350,1351,1362,1363,1377 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Gridded Population Estimators (SEDAC GPW4 and GHSL convex hull estimators), DBSCAN and Neural Network Urban Extent Learners, Computational Geometry, Intrinsic Merit Rankings, R Ricker Population Estimation, Community detection, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry and Polygonal packing by Voronoi Tessellation, Four color theorem, Economic Merit, Computational Economics - GDP estimation from Urban sprawl demographics, electricity consumption, Poverty alleviation, Preferential Attachment, Automatic Delineation of Urban Sprawls, Cellular Automata-SLEUTH-Polya Urn-Dynamic Facegraph Urban Growth Models, Autonomous Driving, Expander Graphs
1388. (THEORY and FEATURE) GIS Weather Analytics and Climate Analytics - 10 February 2023 - N-Body gravity analysis of some extreme weather and seismic events during first week of February 2023  - related to 148,172,313,445,446,463,1165,1171,1176,1266,1289,1316,1318,1327,1358,1359,1360,1361,1364,1367,1368 and all sections on Correlation between gravitational effects of Mined Celestial N-Body Patterns and terrestrial extreme weather events (or Gravitational effects on climate change), Drone natural obstacle avoidance-Drone autonomous online shopping delivery-Drone Electronic Voting Machine, Artificial Intelligence models for Climate Change, Astronomical algorithms, Multifractals, Timeseries analysis, Sequence Mining-Class Association Rules
1395. (THEORY and FEATURE) GIS Urban Sprawl Analytics - Isochrones of OSMnx transport network graph as Flood mitigation models - Chennai Metropolitan Area Periurban region example - 14 February 2023 - related to 823,1163,1164,1174,1175,1177,1179,1194,1211,1226,1234,1290,1291,1292,1295,1296,1297,1301,1302,1304,1312,1313,1320,1323,1326,1328,1342,1343,1349,1350,1351,1362,1363,1377,1386 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Gridded Population Estimators (SEDAC GPW4 and GHSL convex hull estimators), DBSCAN and Neural Network Urban Extent Learners, Computational Geometry, Intrinsic Merit Rankings, R Ricker Population Estimation, Community detection, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry and Polygonal packing by Voronoi Tessellation, Four color theorem, Economic Merit, Computational Economics - GDP estimation from Urban sprawl demographics, electricity consumption, Poverty alleviation, Preferential Attachment, Automatic Delineation of Urban Sprawls, Cellular Automata-SLEUTH-Polya Urn-Dynamic Facegraph Urban Growth Models, Autonomous Driving, Expander Graphs, Navier-Stokes equation augmented Watershed segmentation algorithm
1397. (THEORY and FEATURE) GIS Urban Sprawl Analytics - Google Earth Engine VIIRS City Nightlights Radiance support - 15 February 2023,16 February 2023 - related to 823,1163,1164,1174,1175,1177,1179,1194,1211,1226,1234,1290,1291,1292,1295,1296,1297,1301,1302,1304,1312,1313,1320,1323,1326,1328,1342,1343,1349,1350,1351,1362,1363,1377,1386,1395 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Gridded Population Estimators (SEDAC GPW4 and GHSL convex hull estimators), DBSCAN and Neural Network Urban Extent Learners, Computational Geometry, Intrinsic Merit Rankings, R Ricker Population Estimation, Community detection, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry and Polygonal packing by Voronoi Tessellation, Four color theorem, Economic Merit, Computational Economics - GDP estimation from Urban sprawl demographics, electricity consumption, Poverty alleviation, Preferential Attachment, Automatic Delineation of Urban Sprawls, Cellular Automata-SLEUTH-Polya Urn-Dynamic Facegraph Urban Growth Models, Autonomous Driving, Expander Graphs,Timeseries analysis
1398. (THEORY and FEATURE) GIS Urban Sprawl Analytics - Google Earth Engine VIIRS City Nightlights Radiance for Longitude-Latitude Bounding Box - Chennai Metropolitan Area periurban region example - 17 February 2023 - related to 823,1163,1164,1174,1175,1177,1179,1194,1211,1226,1234,1290,1291,1292,1295,1296,1297,1301,1302,1304,1312,1313,1320,1323,1326,1328,1342,1343,1349,1350,1351,1362,1363,1377,1386,1395,1397 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Gridded Population Estimators (SEDAC GPW4 and GHSL convex hull estimators), DBSCAN and Neural Network Urban Extent Learners, Computational Geometry, Intrinsic Merit Rankings, R Ricker Population Estimation, Community detection, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry and Polygonal packing by Voronoi Tessellation, Four color theorem, Economic Merit, Computational Economics - GDP estimation from Urban sprawl demographics, electricity consumption, Poverty alleviation, Preferential Attachment, Automatic Delineation of Urban Sprawls, Cellular Automata-SLEUTH-Polya Urn-Dynamic Facegraph Urban Growth Models,Expander Graphs,Timeseries analysis
1401. (THEORY and FEATURE) Computational Geometric Integer Factorization - DMRC PySpark Cloud version - Iterative Binary Search implementation - related to 498,601,1226,1259,1303,1319,1321,1323,1324,1325,1355,1365,1366,1369,1379,1381,1384,1385 and all sections on Integer Factorization (DMRC MapReduce PySpark and NC HPC Rust implementations),Computational Geometry,Set Partitions-to-Tile Cover reduction by Lagranges Four Square Theorem and ILP,Primality Testing,RSA Semiprimes,Almost-Square Bounding Boxes in Large Scale Visual Recognition,Pell's Equation,Brahmagupta's Chakravala,Approximate Factoring by Newton-Raphson Rayshooting queries,Algebraic Geometry of Computational Geometric Factorization,Quantum computation and Derandomization of BQP Factorization by Condorcet Jury Theorem Majority-BQPVoterSAT boolean composition - 21 February 2023
1404. (JIRA,THEORY and FEATURE) GIS Weather Analytics and Climate Analytics - 21 March 2023 - Resolution of a JIRA issue and N-Body gravity predictive analysis of some extreme weather events between Mid-March to Mid-April 2023  - related to 148,172,313,445,446,463,1165,1171,1176,1266,1289,1316,1318,1327,1358,1359,1360,1361,1364,1367,1368,1388 and all sections on Correlation between gravitational effects of Mined Celestial N-Body Patterns and terrestrial extreme weather events (or Gravitational effects on climate change), Drone natural obstacle avoidance-Drone autonomous online shopping delivery-Drone Electronic Voting Machine, Artificial Intelligence models for Climate Change, Astronomical algorithms, Multifractals, Timeseries analysis, Sequence Mining-Class Association Rules
1405. (THEORY and FEATURE) Recursive Lambda Function Growth - Tree Adjoining Grammar - CFG Parser for English Language from NLTK - related to 249,707,829,1133,1134,1204,1263,1269,1284,1285 and all sections on Intrinsic Merit of Texts, Question-Answering, Embedding in vectorspace, Machine Translation, Transformers Attention Model,Named Entity Recognition and Meaning Representation, Complexity models of Question-Answering (multiple choice,open-ended,adaptive and static) - LTF,PTF,Switching Circuits,TQBF,Markov Chains, Mildly Context Sensitive Grammars-Tree Adjoining Grammars for Natural Languages - 22 March 2023
1406. (THEORY and FEATURE) Social network analysis and People analytics - Opinion Mining - Aggregation of news articles based on a query - Google News scraper by Newspaper3k and GoogleNews libraries - 24 March 2023 - related to Section 1380 and all sections on Majority Voting, Approximate Majority,Election analytics-Psephology-Opinion polls,Reservoir Sampling,Topic detection and tracking,Social network analysis and People analytics from Twitter-Facebook-LinkedIn-PIPL streams
1407. (THEORY and FEATURE) Social network analysis and People analytics - Opinion Mining - Sentiment Analysis - 24 March 2023 - related to Section 1380,1406 and all sections on Majority Voting, Approximate Majority,Election analytics-Psephology-Opinion polls,Reservoir Sampling,Topic detection and tracking,Social network analysis and People analytics from Twitter-Facebook-LinkedIn-PIPL streams
1408. (THEORY and FEATURE) Social network analysis and People analytics - Opinion Poll from news article sentiments - support for VADER and Empath Sentiment Analysis added - 28 March 2023 - related to Section 588,1380,1406,1407 and all sections on Majority Voting, Approximate Majority,Election analytics-Psephology-Opinion polls,Reservoir Sampling,Topic detection and tracking,Social network analysis and People analytics from Twitter-Facebook-LinkedIn-PIPL streams, Large Scale Visuals-Analyzing Audio-Visuals for sentiment (Movies,YouTube) by LIWC-Empath, Drone Electronic Voting Machines-Multipolar voting 
1409. (THEORY and FEATURE) Social network analysis and People analytics - Opinion Poll from Google trends news article sentiments - 29 March 2023 - related to Section 588,1380,1406,1407,1408 and all sections on Majority Voting, Approximate Majority,Election analytics-Psephology-Opinion polls,Reservoir Sampling,Topic detection and tracking,Social network analysis and People analytics from Twitter-Facebook-LinkedIn-PIPL streams, Large Scale Visuals-Analyzing Audio-Visuals for sentiment (Movies,YouTube) by LIWC-Empath, Drone Electronic Voting Machines-Multipolar voting 
1410. (THEORY and FEATURE) Social network analysis and People analytics - Opinion Poll from Google trends news article sentiments 2 - multipolar sentiment votes - 31 March 2023 - related to Section 588,1380,1406,1407,1408,1409 and all sections on Majority Voting, Approximate Majority,Election analytics-Psephology-Opinion polls,Reservoir Sampling,Topic detection and tracking,Social network analysis and People analytics from Twitter-Facebook-LinkedIn-PIPL streams, Large Scale Visuals-Analyzing Audio-Visuals for sentiment (Movies,YouTube) by LIWC-Empath, Drone Electronic Voting Machines-Multipolar voting 
1411. (JIRA,THEORY and FEATURE) Social network analysis and People analytics - Opinion Poll from Google trends news article sentiments 3 - correction to multipolar sentiment votes - theory of ternary majority gate - 3 April 2023 - related to Section 588,1380,1406,1407,1408,1409,1410 and all sections on Majority Voting, Approximate Majority,Election analytics-Psephology-Opinion polls,Reservoir Sampling,Topic detection and tracking,Social network analysis and People analytics from Twitter-Facebook-LinkedIn-PIPL streams, Large Scale Visuals-Analyzing Audio-Visuals for sentiment (Movies,YouTube) by LIWC-Empath, Drone Electronic Voting Machines-Multipolar voting 
1412. (JIRA,THEORY and FEATURE) GIS Urban Sprawl Analytics - Official Overlay of GHSL and Expanded Chennai Metropolitan Area limits - Corrections to DBSCAN cluster image - 4 April 2023 - related to 823,1163,1164,1174,1175,1177,1179,1194,1211,1226,1234,1290,1291,1292,1295,1296,1297,1301,1302,1304,1312,1313,1320,1323,1326,1328,1342,1343,1349,1350,1351,1362,1363,1377,1386,1395,1397,1398 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Gridded Population Estimators (SEDAC GPW4 and GHSL convex hull estimators), DBSCAN and Neural Network Urban Extent Learners, Computational Geometry, Intrinsic Merit Rankings, Verlhulste-R Ricker Population Estimation, Community detection, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry and Polygonal packing by Voronoi Tessellation, Four color theorem, Economic Merit, Computational Economics - GDP estimation from Urban sprawl demographics, electricity consumption, Poverty alleviation, Preferential Attachment, Automatic Delineation of Urban Sprawls, Cellular Automata-SLEUTH-Polya Urn-Dynamic Facegraph Urban Growth Models,Expander Graphs,Timeseries analysis
1413. (JIRA,THEORY and FEATURE) Recursive Lambda Function Growth - Updates to Transformers Degree Attention Model - related to 249,707,829,1133,1134,1204,1263,1269,1284,1285,1405 and all sections on Intrinsic Merit of Texts, Question-Answering, Embedding in vectorspace, Machine Translation, Transformers Attention Model,Named Entity Recognition and Meaning Representation, Complexity models of Question-Answering (multiple choice,open-ended,adaptive and static) - LTF,PTF,Switching Circuits,TQBF,Markov Chains, Mildly Context Sensitive Grammars-Tree Adjoining Grammars for Natural Languages - 6 April 2023 
1414. (JIRA,THEORY and FEATURE) GIS Urban Sprawl Analytics - Official Overlay of GHSL and Expanded Chennai Metropolitan Area limits - Density based coloring of DBSCAN clusters - 11 April 2023 - related to 823,1163,1164,1174,1175,1177,1179,1194,1211,1226,1234,1290,1291,1292,1295,1296,1297,1301,1302,1304,1312,1313,1320,1323,1326,1328,1342,1343,1349,1350,1351,1362,1363,1377,1386,1395,1397,1398,1412 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Gridded Population Estimators (SEDAC GPW4 and GHSL convex hull estimators), DBSCAN and Neural Network Urban Extent Learners, Computational Geometry, Intrinsic Merit Rankings, Verlhulste-R Ricker Population Estimation, Community detection, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry and Polygonal packing by Voronoi Tessellation, Four color theorem, Economic Merit, Computational Economics - GDP estimation from Urban sprawl demographics, electricity consumption, Poverty alleviation, Preferential Attachment, Automatic Delineation of Urban Sprawls, Cellular Automata-SLEUTH-Polya Urn-Dynamic Facegraph Urban Growth Models,Expander Graphs,Timeseries analysis,Graph Edit Distance and Earth mover distance, Face recognition,Graph Isomorphism (Exact, Approximate and Subgraph),Graph matching,Graph similarity,Image Search,Quadrilateral Mesh Deformation and Isomorphism,Maximum Common Subgraph Problem and Approximate Topological Matching 
1415. (THEORY and FEATURE) People Analytics - Merit of Large Scale Visuals - Face Recognition by DBSCAN clustering similarity - related to 159,660,714,715,720,1185,1186,1187,1188,1189,1190,1201,1202,1203 and all sections on Topological Face and Handwriting recognition, Product Homotopy, Unique identification, Homeomorphism and Topological Deformations, Merit of Large Scale Visuals, People Analytics, Computational Geometry, Graph Edit Distance and Earth mover distance, Graph Isomorphism (Exact, Approximate and Subgraph),Graph matching,Graph similarity,Image Search,Quadrilateral Mesh Deformation and Isomorphism,Maximum Common Subgraph Problem, DBSCAN spatial clustering, Histogram analytics - 12 April 2023 
1416. (JIRA,THEORY and FEATURE) People Analytics - Unique Identification - Fingerprint recognition - contour kmeans clustering reverted to OpenCV2 drawContours() - 12 April 2023,13 April 2023 - related to 834,1223,1237,1260 and all sections on Merit of Large Scale Visuals, Physique Recognition From Quadrilateral mesh isomorphism,Topological Face and Handwriting recognition, Product Homotopy, Unique identification, Homeomorphism and Topological Deformations, Merit of Large Scale Visuals, People Analytics, Computational Geometry, Graph Edit Distance and Earth mover distance, Graph Isomorphism (Exact, Approximate and Subgraph),Graph matching,Graph similarity,Image Search,Quadrilateral Mesh Deformation and Isomorphism,Maximum Common Subgraph Problem and Approximate Topological Matching, Cybercrime analytics, Forensics-Predictive Policing, Fraud Analytics, Birthday Paradox, Contextual Name Parsing, PIPL Name syllable based unique person search, Collision resitant hash functions, Non Fungible Tokens 
1417. (JIRA,THEORY and FEATURE) Merit of Large Scale Visuals - Archaeology - Few more updates for drawContours() versus Pyplot and Edges/Contour polynomials of scripts - Tamil and Ashoka Brahmi script example - 17 April 2023 - related to 2,1203,1232,1233,1236,1237,1240,1287,1288 and all sections on Merit of Large Scale Visuals, Physique Recognition From Quadrilateral mesh isomorphism,Topological Face and Handwriting recognition, Archaeology-Topological Script Recognition, Product Homotopy, Homeomorphism and Topological Deformations, People Analytics, Computational Geometry, Graph Edit Distance and Earth mover distance, Graph Isomorphism (Exact, Approximate and Subgraph),Graph matching,Graph similarity,Image Search,Quadrilateral Mesh Deformation and Isomorphism,Maximum Common Subgraph Problem and Approximate Topological Matching,Text restoration
1419. (JIRA,THEORY and FEATURE) Computational Geometric Integer Factorization - DMRC PySpark Cloud and Rust High Performance Computing NC versions - Iterative Binary Search implementation - Some bugs fixed and multiple integer benchmarks in Spark and Rust - related to 498,601,1226,1259,1303,1319,1321,1323,1324,1325,1355,1365,1366,1369,1379,1381,1384,1385,1401 and all sections on Integer Factorization (DMRC MapReduce PySpark and NC HPC Rust implementations),Computational Geometry,Set Partitions-to-Tile Cover reduction by Lagranges Four Square Theorem and ILP,Primality Testing,RSA Semiprimes,Almost-Square Bounding Boxes in Large Scale Visual Recognition,Pell's Equation,Brahmagupta's Chakravala,Approximate Factoring by Newton-Raphson Rayshooting queries,Algebraic Geometry of Computational Geometric Factorization,Quantum computation and Derandomization of BQP Factorization by Condorcet Jury Theorem Majority-BQPVoterSAT boolean composition - 25 April 2023
1423. (THEORY and FEATURE) GIS Urban Sprawl Analytics -  Global Human Settlement Layer Degree of Urbanization comparison between R2022A and R2023A GHS-SMOD datasets - Expanded Chennai Metropolitan Area Bounding Box - 9 May 2023 - related to 823,1163,1164,1174,1175,1177,1179,1194,1211,1226,1234,1290,1291,1292,1295,1296,1297,1301,1302,1304,1312,1313,1320,1323,1326,1328,1342,1343,1349,1350,1351,1362,1363,1377,1386,1395,1397,1398,1412,1414 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Gridded Population Estimators (SEDAC GPW4 and GHSL convex hull estimators), DBSCAN and Neural Network Urban Extent Learners, Computational Geometry, Intrinsic Merit Rankings, Verlhulste-R Ricker Population Estimation, Community detection, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry and Polygonal packing by Voronoi Tessellation, Four color theorem, Economic Merit, Computational Economics - GDP estimation from Urban sprawl demographics, electricity consumption, Poverty alleviation, Preferential Attachment, Automatic Delineation of Urban Sprawls, Cellular Automata-SLEUTH-Polya Urn-Dynamic Facegraph Urban Growth Models,Expander Graphs,Timeseries analysis,Graph Edit Distance and Earth mover distance, Face recognition,Graph Isomorphism (Exact, Approximate and Subgraph),Graph matching,Graph similarity,Image Search,Quadrilateral Mesh Deformation and Isomorphism,Maximum Common Subgraph Problem and Approximate Topological Matching 
1424. (THEORY and FEATURE) GIS Urban Sprawl Analytics -  Global Human Settlement Layer 3D Urban Growth Model from R2023A GHS-BUILT-V and GHS-BUILT-S datasets - Expanded Chennai Metropolitan Area Bounding Box - 11 May 2023 - related to 823,1163,1164,1174,1175,1177,1179,1194,1211,1226,1234,1290,1291,1292,1295,1296,1297,1301,1302,1304,1312,1313,1320,1323,1326,1328,1342,1343,1349,1350,1351,1362,1363,1377,1386,1395,1397,1398,1412,1414,1423 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Gridded Population Estimators (SEDAC GPW4 and GHSL convex hull estimators), DBSCAN and Neural Network Urban Extent Learners, Computational Geometry, Intrinsic Merit Rankings, Verlhulste-R Ricker Population Estimation, Community detection, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry and Polygonal packing by Voronoi Tessellation, Four color theorem, Economic Merit, Computational Economics - GDP estimation from Urban sprawl demographics, electricity consumption, Poverty alleviation, Preferential Attachment, Automatic Delineation of Urban Sprawls, Cellular Automata-SLEUTH-Polya Urn-Dynamic Facegraph Urban Growth Models,Expander Graphs,Timeseries analysis,Graph Edit Distance and Earth mover distance, Face recognition,Graph Isomorphism (Exact, Approximate and Subgraph),Graph matching,Graph similarity,Image Search,Quadrilateral Mesh Deformation and Isomorphism,Maximum Common Subgraph Problem and Approximate Topological Matching 
1425. (THEORY and FEATURE) GIS Urban Sprawl Analytics -  Four colored morphological settlement classification from R2023A GHS-BUILT-C dataset - Expanded Chennai Metropolitan Area Bounding Box - 12 May 2023 - related to 823,1163,1164,1174,1175,1177,1179,1194,1211,1226,1234,1290,1291,1292,1295,1296,1297,1301,1302,1304,1312,1313,1320,1323,1326,1328,1342,1343,1349,1350,1351,1362,1363,1377,1386,1395,1397,1398,1412,1414,1423,1424 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Gridded Population Estimators (SEDAC GPW4 and GHSL convex hull estimators), DBSCAN and Neural Network Urban Extent Learners, Computational Geometry, Intrinsic Merit Rankings, Verlhulste-R Ricker Population Estimation, Community detection, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry and Polygonal packing by Voronoi Tessellation, Four color theorem, Economic Merit, Computational Economics - GDP estimation from Urban sprawl demographics, electricity consumption, Poverty alleviation, Preferential Attachment, Automatic Delineation of Urban Sprawls, Cellular Automata-SLEUTH-Polya Urn-Dynamic Facegraph Urban Growth Models,Expander Graphs,Timeseries analysis,Graph Edit Distance and Earth mover distance, Face recognition,Graph Isomorphism (Exact, Approximate and Subgraph),Graph matching,Graph similarity,Image Search,Quadrilateral Mesh Deformation and Isomorphism,Maximum Common Subgraph Problem and Approximate Topological Matching 
1426. (THEORY and FEATURE) Asymptotic approximation of Condorcet Jury Theorem - C++ implementation - related to 400,572,666,725,730,688,1136,1137,1152 and all sections on Intrinsic Merit Versus Majority Voting, Derandomization, P=BPP ("Maybe" tends to "Exists") in the context of Condorcet Jury Theorem and its derivatives, Margulis-Russo Threshold for boolean majority, Histogram analytics, Set Partition Theoretical Electronic Voting Machines, Edit distance to Earth Mover Distance reduction, Boolean function composition, KRW Conjecture, Communication complexity, Hardness amplification, Bounded Rationality, Gibbard-Satterthwaite Theorem, Ramsey coloring of sequences, Infinite Pigeonhole Principle, Voting Analytics (pre-poll and post-poll),Epsilon bias spaces - 18 May 2023
1427. (THEORY and FEATURE) People Analytics - Social Network Analysis (Search Engine Results) - Spearman Rank Correlation and Partial Ordered Rankings - related to 14,365,626,711,727,753,876,1127,1128,1129,1130,1204,1263 and all sections on People Analytics, Intrinsic Merit Versus Fame Equilibrium, BKS Conjecture, Stability and Noise Sensitivity of Interview LTF/PTF,Peres Theorem,Unique Identification,HR Analytics and Automated Recruitment,Question-Answering,Majority Voting,Condorcet Jury Theorem Variants,Margulis-Ruzzo Thresholds,Novelty Detection,Recommender Systems,AI Question-Answering, Partial Ordered Ranking, Fame-Merit equilibrium - 24 May 2023
1428. (JIRA,THEORY and FEATURE) GIS Urban Sprawl Analytics -  Four colored morphological settlement classification from R2023A GHS-BUILT-C dataset - Expanded Chennai Metropolitan Area Bounding Box - 3-Colored GHSL MSZ split into 4-colored MSZ by clearing height - 26 May 2023 - related to 823,1163,1164,1174,1175,1177,1179,1194,1211,1226,1234,1290,1291,1292,1295,1296,1297,1301,1302,1304,1312,1313,1320,1323,1326,1328,1342,1343,1349,1350,1351,1362,1363,1377,1386,1395,1397,1398,1412,1414,1423,1424,1425 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Gridded Population Estimators (SEDAC GPW4 and GHSL convex hull estimators), DBSCAN and Neural Network Urban Extent Learners, Computational Geometry, Intrinsic Merit Rankings, Verlhulste-R Ricker Population Estimation, Community detection, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry and Polygonal packing by Voronoi Tessellation, Four color theorem, Economic Merit, Computational Economics - GDP estimation from Urban sprawl demographics, electricity consumption, Poverty alleviation, Preferential Attachment, Automatic Delineation of Urban Sprawls, Cellular Automata-SLEUTH-Polya Urn-Dynamic Facegraph Urban Growth Models,Expander Graphs,Timeseries analysis,Graph Edit Distance and Earth mover distance, Face recognition,Graph Isomorphism (Exact, Approximate and Subgraph),Graph matching,Graph similarity,Image Search,Quadrilateral Mesh Deformation and Isomorphism,Maximum Common Subgraph Problem and Approximate Topological Matching 
1430. (THEORY and FEATURE) Social network analysis and People analytics - Opinion Poll from arbitrary URL content specialized to capture twitter trends - 9 June 2023 - related to Section 588,1380,1406,1407,1408,1409,1410,1411 and all sections on Majority Voting, Approximate Majority,Election analytics-Psephology-Opinion polls,Reservoir Sampling,Topic detection and tracking,Social network analysis and People analytics from Twitter-Facebook-LinkedIn-PIPL streams, Large Scale Visuals-Analyzing Audio-Visuals for sentiment (Movies,YouTube) by LIWC-Empath, Drone Electronic Voting Machines-Multipolar voting 
1431. (THEORY and FEATURE) GIS Weather Analytics and Urban Sprawl Analytics -  Zoom.Earth EUMETSAT-MeteoSAT-IODC Night Lights - 13 June 2023 - related to 823,1163,1164,1174,1175,1177,1179,1194,1211,1226,1234,1290,1291,1292,1295,1296,1297,1301,1302,1304,1312,1313,1320,1323,1326,1328,1342,1343,1349,1350,1351,1362,1363,1377,1386,1395,1397,1398,1412,1414,1423,1424,1425,1430 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Gridded Population Estimators (SEDAC GPW4 and GHSL convex hull estimators), DBSCAN and Neural Network Urban Extent Learners, Computational Geometry, Intrinsic Merit Rankings, Verlhulste-R Ricker Population Estimation, Community detection, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry and Polygonal packing by Voronoi Tessellation, Four color theorem, Economic Merit, Computational Economics - GDP estimation from Urban sprawl demographics, electricity consumption, Poverty alleviation, Preferential Attachment, Automatic Delineation of Urban Sprawls, Cellular Automata-SLEUTH-Polya Urn-Dynamic Facegraph Urban Growth Models,Expander Graphs,Timeseries analysis,Graph Edit Distance and Earth mover distance, Face recognition,Graph Isomorphism (Exact, Approximate and Subgraph),Graph matching,Graph similarity,Image Search,Quadrilateral Mesh Deformation and Isomorphism,Maximum Common Subgraph Problem and Approximate Topological Matching, Weather Forecast, Climate Analytics, Flood Mitigation 
1432. (JIRA,THEORY and FEATURE) Music Synthesizer - Refactoring of Music Synthesizer code for finetuned notes sequence - 26 June 2023 - related to 3,110,134,298,1223,1224,1257,1258,1261,1305,1306,1307,1308,1309,1310,1311,1315,1353 and all sections on Music search-Music discovery, Intrinsic Merit of Music, MIR(Music Information Retrieval), Music Similarity and Clustering, AI Music Synthesis from summation of damped sinusoids, Additive Synthesis, fMRI connectomes - OpenNeuro - Psychology of music, Weighted automata, Chaos, Deep Learning, Dynamic Time Warping-Music Timeseries analysis, Music Evoked Autobiographical Memories, Waveshaping, ThoughtNet, Majority Voting (Enjoyable music) Vs Intrinsic (Quality music) - Condorcet Jury Theorem variants,Computational Learning Theory, Boolean Function Composition, Longest Common Subsequence, Suffix Trees - Longest Repeated Substring, MultiFractal Detrended Fluctuation Analysis of Non-stationary timeseries, Ramsey Theory-Van Der Waerden Theorem for coloring of sequences
1433. (THEORY and FEATURE) Music Synthesizer - Music Weighted Automaton Learning from music clips (user defined or AI synthesized) - 28 June 2023 - related to 3,110,134,298,1223,1224,1257,1258,1261,1305,1306,1307,1308,1309,1310,1311,1315,1353,1432 and all sections on Music search-Music discovery, Intrinsic Merit of Music, MIR(Music Information Retrieval), Music Similarity and Clustering, AI Music Synthesis from summation of damped sinusoids, Additive Synthesis, fMRI connectomes - OpenNeuro - Psychology of music, Weighted automata, Chaos, Deep Learning, Dynamic Time Warping-Music Timeseries analysis, Music Evoked Autobiographical Memories, Waveshaping, ThoughtNet, Majority Voting (Enjoyable music) Vs Intrinsic (Quality music) - Condorcet Jury Theorem variants,Computational Learning Theory, Boolean Function Composition, Longest Common Subsequence, Suffix Trees - Longest Repeated Substring, MultiFractal Detrended Fluctuation Analysis of Non-stationary timeseries, Ramsey Theory-Van Der Waerden Theorem for coloring of sequences, Pumping Lemma, Normalized Compression Distance-Kolmogorov complexity
1434. (THEORY and FEATURE) Music Information Retrieval - Music Weighted Automata Graph Analytics - 3 July 2023 - related to 3,110,134,298,1223,1224,1257,1258,1261,1305,1306,1307,1308,1309,1310,1311,1315,1353,1432,1433 and all sections on Music search-Music discovery, Intrinsic Merit of Music, MIR(Music Information Retrieval), Music Similarity and Clustering, AI Music Synthesis from summation of damped sinusoids, Additive Synthesis, fMRI connectomes - OpenNeuro - Psychology of music, Weighted automata, Chaos, Deep Learning, Dynamic Time Warping-Music Timeseries analysis, Music Evoked Autobiographical Memories, Waveshaping, ThoughtNet, Majority Voting (Enjoyable music) Vs Intrinsic (Quality music) - Condorcet Jury Theorem variants,Computational Learning Theory, Boolean Function Composition, Longest Common Subsequence, Suffix Trees - Longest Repeated Substring, MultiFractal Detrended Fluctuation Analysis of Non-stationary timeseries, Ramsey Theory-Van Der Waerden Theorem for coloring of sequences, Pumping Lemma, Normalized Compression Distance-Kolmogorov complexity, Merit of Large Scale Visuals
1435. (THEORY and FEATURE) Music Information Retrieval - AI Music Synthesis by Random walks on Music Weighted Automata Directed Graph - 7 July 2023 - related to 3,110,134,298,1223,1224,1257,1258,1261,1305,1306,1307,1308,1309,1310,1311,1315,1353,1432,1433,1434 and all sections on Music search-Music discovery, Intrinsic Merit of Music, MIR(Music Information Retrieval), Music Similarity and Clustering, AI Music Synthesis from summation of damped sinusoids, Additive Synthesis, fMRI connectomes - OpenNeuro - Psychology of music, Weighted automata, Chaos, Deep Learning, Dynamic Time Warping-Music Timeseries analysis, Music Evoked Autobiographical Memories, Waveshaping, ThoughtNet, Majority Voting (Enjoyable music) Vs Intrinsic (Quality music) - Condorcet Jury Theorem variants,Computational Learning Theory, Boolean Function Composition, Longest Common Subsequence, Suffix Trees - Longest Repeated Substring, MultiFractal Detrended Fluctuation Analysis of Non-stationary timeseries, Ramsey Theory-Van Der Waerden Theorem for coloring of sequences, Pumping Lemma, Normalized Compression Distance-Kolmogorov complexity, Merit of Large Scale Visuals, Recurrent Neural Networks
1436. (THEORY and FEATURE) Facebook Prophet model of timeseries data - Stock quotes usecase (extensible to any timeseries in Music, Medical Imageing-ECG, Meteorology-Precipitation, Seismology-Tremors, NBody Gravitational Accelerations, Economics-Financial Markets) - 11 July 2023 - related to 690,691,692,1257,1315,1316,1327,1348,1375,1376 and all sections on Music Information Retrieval(MIR), Climate analytics and Weather Forecast, Computational Economics-Quantitative Finance and TimeSeries Analysis, Graphical Event Models (GEM), Causal Event Models (CEM), Chain Event Graphs(CEG), Chaos and Fractals, EventNet causality, Multifractal Detrended Fluctuation Analysis (MFDFA)
1437. (THEORY and FEATURE) Facebook Prophet model of timeseries data - Stock quotes usecase (extensible to any timeseries in Music, Medical Imageing-ECG, Meteorology-Precipitation, Seismology-Tremors, NBody Gravitational Accelerations, Economics-Financial Markets) - Longest Repeated Substring in binary fluctuations as changepoints - 13 July 2023 - related to 690,691,692,1257,1315,1316,1327,1348,1375,1376,1436 and all sections on Music Information Retrieval(MIR), Climate analytics and Weather Forecast, Computational Economics-Quantitative Finance and TimeSeries Analysis, Graphical Event Models (GEM), Causal Event Models (CEM), Chain Event Graphs(CEG), Chaos and Fractals, EventNet causality, Multifractal Detrended Fluctuation Analysis (MFDFA)
1438. (THEORY and FEATURE) Facebook Prophet model of timeseries data - Stock quotes usecase (extensible to any timeseries in Music, Medical Imageing-ECG, Meteorology-Precipitation, Seismology-Tremors, NBody Gravitational Accelerations, Economics-Financial Markets) - Hurst exponent of stockquote timeseries - 16 July 2023 - related to 690,691,692,1257,1315,1316,1327,1348,1367,1375,1376,1436,1437 and all sections on Music Information Retrieval(MIR), Climate analytics and Weather Forecast, Computational Economics-Quantitative Finance and TimeSeries Analysis, Graphical Event Models (GEM), Causal Event Models (CEM), Chain Event Graphs(CEG), Chaos and Fractals, EventNet causality, Multifractal Detrended Fluctuation Analysis (MFDFA), Gaussian Ensemble-Gaussian Mixture Models in Weather precipitation timeseries
1439. (JIRA,THEORY and FEATURE) Music Information Retrieval - AI Music Synthesis by Random walks on Music Weighted Automata Directed Graph - Concert synthesis by Percussion instrument overlay on Piano music - through Music21 MIDI,MuseScore,FluidSynth,Pydub support - 26 July 2023 - related to 3,110,134,298,1223,1224,1257,1258,1261,1305,1306,1307,1308,1309,1310,1311,1315,1353,1432,1433,1434,1438 and all sections on Music search-Music discovery, Intrinsic Merit of Music, MIR(Music Information Retrieval), Music Similarity and Clustering, AI Music Synthesis from summation of damped sinusoids, Additive Synthesis, fMRI connectomes - OpenNeuro - Psychology of music, Weighted automata, Chaos, Deep Learning, Dynamic Time Warping-Music Timeseries analysis, Music Evoked Autobiographical Memories, Waveshaping, ThoughtNet, Majority Voting (Enjoyable music) Vs Intrinsic (Quality music) - Condorcet Jury Theorem variants,Computational Learning Theory, Boolean Function Composition, Longest Common Subsequence, Suffix Trees - Longest Repeated Substring, MultiFractal Detrended Fluctuation Analysis of Non-stationary timeseries, Ramsey Theory-Van Der Waerden Theorem for coloring of sequences, Pumping Lemma, Normalized Compression Distance-Kolmogorov complexity, Merit of Large Scale Visuals, Recurrent Neural Networks,Neo-Riemannian Theory of Music
1440. (JIRA,THEORY and FEATURE) Music Information Retrieval - AI Music Synthesis by Random walks on Music Weighted Automata Directed Graph - Concert synthesis by multiple instrument orchestra overlay on Piano music - through Music21 MIDI,MuseScore,FluidSynth,Pydub support - refinements to synthesized notes based on WFA state transition probability distribution  - 28 July 2023 - related to 3,110,134,298,1223,1224,1257,1258,1261,1305,1306,1307,1308,1309,1310,1311,1315,1353,1432,1433,1434,1438,1439 and all sections on Music search-Music discovery, Intrinsic Merit of Music, MIR(Music Information Retrieval), Music Similarity and Clustering, AI Music Synthesis from summation of damped sinusoids, Additive Synthesis, fMRI connectomes - OpenNeuro - Psychology of music, Weighted automata, Chaos, Deep Learning, Dynamic Time Warping-Music Timeseries analysis, Music Evoked Autobiographical Memories, Waveshaping, ThoughtNet, Majority Voting (Enjoyable music) Vs Intrinsic (Quality music) - Condorcet Jury Theorem variants,Computational Learning Theory, Boolean Function Composition, Longest Common Subsequence, Suffix Trees - Longest Repeated Substring, MultiFractal Detrended Fluctuation Analysis of Non-stationary timeseries, Ramsey Theory-Van Der Waerden Theorem for coloring of sequences, Pumping Lemma, Normalized Compression Distance-Kolmogorov complexity, Merit of Large Scale Visuals, Recurrent Neural Networks,Neo-Riemannian Theory of Music
1441. (JIRA,THEORY and FEATURE) Music Information Retrieval - AI Music Synthesis by Random walks on Music Weighted Automata Directed Graph - Concert synthesis by multiple instrument orchestra overlay on Piano music - through Music21 MIDI,MuseScore,FluidSynth,Pydub support - refinements to synthesized notes based on WFA state transition probability distribution - some more bug fixes - 8 August 2023 - related to 3,110,134,298,1223,1224,1257,1258,1261,1305,1306,1307,1308,1309,1310,1311,1315,1353,1432,1433,1434,1438,1439,1440 and all sections on Music search-Music discovery, Intrinsic Merit of Music, MIR(Music Information Retrieval), Music Similarity and Clustering, AI Music Synthesis from summation of damped sinusoids, Additive Synthesis, fMRI connectomes - OpenNeuro - Psychology of music, Weighted automata, Chaos, Deep Learning, Dynamic Time Warping-Music Timeseries analysis, Music Evoked Autobiographical Memories, Waveshaping, ThoughtNet, Majority Voting (Enjoyable music) Vs Intrinsic (Quality music) - Condorcet Jury Theorem variants,Computational Learning Theory, Boolean Function Composition, Longest Common Subsequence, Suffix Trees - Longest Repeated Substring, MultiFractal Detrended Fluctuation Analysis of Non-stationary timeseries, Ramsey Theory-Van Der Waerden Theorem for coloring of sequences, Pumping Lemma, Normalized Compression Distance-Kolmogorov complexity, Merit of Large Scale Visuals, Recurrent Neural Networks,Neo-Riemannian Theory of Music
1442. (THEORY and FEATURE) People Analytics - Social Network Analysis - GitHub Code Search REST API statistics and Source lines of code for COCOMO Effort Estimation - related to 14,365,626,711,727,753,876,1127,1128,1129,1130,1204,1263,1269,1427 and all sections on People Analytics, Intrinsic Merit Versus Fame Equilibrium, BKS Conjecture, Stability and Noise Sensitivity of Interview LTF/PTF,Peres Theorem,Unique Identification,Talent Analytics,HR Analytics and Automated Recruitment,Question-Answering,Majority Voting,Condorcet Jury Theorem Variants,Margulis-Ruzzo Thresholds,Novelty Detection,Recommender Systems,AI Question-Answering, Partial Ordered Ranking, Fame-Merit equilibrium, Intrinsic Merit as Query Complexity,Software Analytics-Mythical Manmonth-CathedralAndBazaar - 9 August 2023
1443. (THEORY and FEATURE) Software Analytics and Kernel Analytics - an STrace-LTrace shell script to machine-learn Filesystem prefetch patterns for readahead() system call - related to 1191,619,770,906,911,771,1192 and all sections on Program Analysis, AsFer-USBmd-VIRGO-KingCobra FTrace kernel callgraph analysis - Valgrind-Callgrind-KCacheGrind-Flamegraph userspace callgraph analysis, SATURN control flow analysis of VIRGO linux kernel, Software Analytics, Pandemic model of Botnet-Defense adversarial Game theoretic security, Cybercrime analytics, Anti-Malware,Anti-Ransomware,Anti-Theft and Anti-Plagiarism tools, KML, LAKE - 11 August 2023
1444. (THEORY and FEATURE) Software Analytics and Kernel Analytics - Python script to parse asfer_syscall_trace.log for Filesystem prefetch VIRGO kernel analytics config - related to 1191,619,770,906,911,771,1192,1443 and all sections on Program Analysis, AsFer-USBmd-VIRGO-KingCobra FTrace kernel callgraph analysis - Valgrind-Callgrind-KCacheGrind-Flamegraph userspace callgraph analysis, SATURN control flow analysis of VIRGO linux kernel, Software Analytics, Pandemic model of Botnet-Defense adversarial Game theoretic security, Cybercrime analytics, Anti-Malware,Anti-Ransomware,Anti-Theft and Anti-Plagiarism tools, Filesystem Prefetch, KML, LAKE - 14 August 2023
1447. (THEORY and FEATURE) GIS Weather Analytics and Urban Sprawl Analytics - Chennai Metropolitan Area - Periurban Road Network Elevation Model and Flood Isochrone - 22 August 2023 - related to 823,1163,1164,1174,1175,1177,1179,1194,1211,1226,1234,1290,1291,1292,1295,1296,1297,1301,1302,1304,1312,1313,1320,1323,1326,1328,1342,1343,1349,1350,1351,1362,1363,1377,1386,1395,1397,1398,1412,1414,1423,1424,1425,1430,1431 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Gridded Population Estimators (SEDAC GPW4 and GHSL convex hull estimators), DBSCAN and Neural Network Urban Extent Learners, Computational Geometry, Intrinsic Merit Rankings, Verlhulste-R Ricker Population Estimation, Community detection, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry and Polygonal packing by Voronoi Tessellation, Four color theorem, Economic Merit, Computational Economics - GDP estimation from Urban sprawl demographics, electricity consumption, Poverty alleviation, Preferential Attachment, Automatic Delineation of Urban Sprawls, Cellular Automata-SLEUTH-Polya Urn-Dynamic Facegraph Urban Growth Models,Expander Graphs,Timeseries analysis,Graph Edit Distance and Earth mover distance, Face recognition,Graph Isomorphism (Exact, Approximate and Subgraph),Graph matching,Graph similarity,Image Search,Quadrilateral Mesh Deformation and Isomorphism,Maximum Common Subgraph Problem and Approximate Topological Matching, Weather Forecast, Climate Analytics, Flood Mitigation 
1448. (THEORY and FEATURE) GIS Urban Sprawl Analytics - Implementation of OECD-GHSL-JRC Functional Urban Area Lineation Regression Model for Global Human Settlement Layer - Chennai Metropolitan Area Example - 28 Augut 2023 - related to 823,1163,1164,1174,1175,1177,1179,1194,1211,1226,1234,1290,1291,1292,1295,1296,1297,1301,1302,1304,1312,1313,1320,1323,1326,1328,1342,1343,1349,1350,1351,1362,1363,1377,1386,1387,1395,1397,1398,1412,1414,1423 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Gridded Population Estimators (SEDAC GPW4 and GHSL convex hull estimators), DBSCAN and Neural Network Urban Extent Learners, Computational Geometry, Intrinsic Merit Rankings, Verlhulste-R Ricker Population Estimation, Community detection, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry and Polygonal packing by Voronoi Tessellation, Four color theorem, Economic Merit, Computational Economics - GDP estimation from Urban sprawl demographics, electricity consumption, Poverty alleviation, Preferential Attachment, Automatic Delineation of Urban Sprawls, Cellular Automata-SLEUTH-Polya Urn-Dynamic Facegraph Urban Growth Models,Expander Graphs,Timeseries analysis,Graph Edit Distance and Earth mover distance, Face recognition,Graph Isomorphism (Exact, Approximate and Subgraph),Graph matching,Graph similarity,Image Search,Quadrilateral Mesh Deformation and Isomorphism,Maximum Common Subgraph Problem and Approximate Topological Matching 
1449. (JIRA,THEORY and FEATURE) GIS Urban Sprawl Analytics - Updates to OECD-GHSL-JRC Functional Urban Area Lineation Regression Model for Global Human Settlement Layer - Chennai Metropolitan Area Example - 31 Augut 2023 - related to 823,1163,1164,1174,1175,1177,1179,1194,1211,1226,1234,1290,1291,1292,1295,1296,1297,1301,1302,1304,1312,1313,1320,1323,1326,1328,1342,1343,1349,1350,1351,1362,1363,1377,1386,1387,1395,1397,1398,1412,1414,1423,1448 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Gridded Population Estimators (SEDAC GPW4 and GHSL convex hull estimators), DBSCAN and Neural Network Urban Extent Learners, Computational Geometry, Intrinsic Merit Rankings, Verlhulste-R Ricker Population Estimation, Community detection, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry and Polygonal packing by Voronoi Tessellation, Four color theorem, Economic Merit, Computational Economics - GDP estimation from Urban sprawl demographics, electricity consumption, Poverty alleviation, Preferential Attachment, Automatic Delineation of Urban Sprawls, Cellular Automata-SLEUTH-Polya Urn-Dynamic Facegraph Urban Growth Models,Expander Graphs,Timeseries analysis,Graph Edit Distance and Earth mover distance, Face recognition,Graph Isomorphism (Exact, Approximate and Subgraph),Graph matching,Graph similarity,Image Search,Quadrilateral Mesh Deformation and Isomorphism,Maximum Common Subgraph Problem and Approximate Topological Matching 
1450. (THEORY and FEATURE) Astronomical and Archaeological analytics - Space Cone Search and Archaeoastronomical dating by Proper Motion - 6 September 2023 - related to 2,18,714,731,1206,1255,1236 and all sections on Merit of Large Scale Visuals, Archaeology, Text Restoration, Astronomical Datasets, Archaeology, Topological Script Recognition
1451. (THEORY and FEATURE) GIS Weather Analytics and Climate Analytics - 11 September 2023 - Updates to matlplotlib plot nomenclature and N-Body gravitational acceleration analysis of 2 date ranges 5-13 September 2023 and 1-31 October 2023  - related to 148,172,313,445,446,463,1165,1171,1176,1266,1289,1316,1318,1327,1358,1359,1360,1361,1364,1367,1368,1388,1404 and all sections on Correlation between gravitational effects of Mined Celestial N-Body Patterns and terrestrial extreme weather events (or Gravitational effects on climate change), Drone natural obstacle avoidance-Drone autonomous online shopping delivery-Drone Electronic Voting Machine, Artificial Intelligence models for Climate Change, Astronomical algorithms, Multifractals, Timeseries analysis, Sequence Mining-Class Association Rules
1452. (THEORY and FEATURE) People Analytics - Social Network Analysis - enhancements to GitHub Code Search REST API statistics and support for regular expression search of repository clones - related to 14,365,626,711,727,753,876,1127,1128,1129,1130,1204,1263,1269,1427,1442 and all sections on People Analytics, Intrinsic Merit Versus Fame Equilibrium, BKS Conjecture, Stability and Noise Sensitivity of Interview LTF/PTF,Peres Theorem,Unique Identification,Talent Analytics,HR Analytics and Automated Recruitment,Question-Answering,Majority Voting,Condorcet Jury Theorem Variants,Margulis-Ruzzo Thresholds,Novelty Detection,Recommender Systems,AI Question-Answering, Partial Ordered Ranking, Fame-Merit equilibrium, Intrinsic Merit as Query Complexity,Software Analytics-Mythical Manmonth-CathedralAndBazaar - 15 September 2023
+    codesearchstats1=hranal.codesearch_statistics(query="shrinivaasanka+THEORY+and+FEATURE",personalaccesstoken="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")
+    codesearchstats2=hranal.codesearch_statistics(query="FEATURE",filepath="../asfer-docs/AstroInferDesign.txt")
+    codesearchstats2=hranal.codesearch_statistics(query="FEATURE",filepath="../../usb-md64-github-code/USBmd_notes.txt")
+    codesearchstats2=hranal.codesearch_statistics(query="FEATURE",filepath="../../virgo64-linux-github-code/virgo-docs/VirgoDesign.txt")
+    codesearchstats2=hranal.codesearch_statistics(query="FEATURE",filepath="../../kingcobra64-github-code/KingCobraDesignNotes.txt")
+    codesearchstats2=hranal.codesearch_statistics(query="FEATURE",filepath="../../Grafit/course_material/ComputerScienceMiscellaneous/ComputerScienceMiscellaneous_CourseNotes.txt")
+    codesearchstats2=hranal.codesearch_statistics(query="FEATURE",filepath="../../Grafit/course_material/Programming/Python/Python_CourseNotes.txt")
+    codesearchstats2=hranal.codesearch_statistics(query="FEATURE",filepath="../../Grafit/course_material/Programming/Go/Go_CourseNotes.txt")
+    codesearchstats2=hranal.codesearch_statistics(query="FEATURE",filepath="../../Grafit/course_material/Programming/C/C_CourseNotes.txt")
+    codesearchstats2=hranal.codesearch_statistics(query="FEATURE",filepath="../../Grafit/course_material/Programming/C++/CPlusPlus_CourseNotes.txt")
+    codesearchstats2=hranal.codesearch_statistics(query="FEATURE",filepath="../../Grafit/course_material/Programming/C++/code/namefilter.txt")
+    codesearchstats2=hranal.codesearch_statistics(query="FEATURE",filepath="../../Grafit/course_material/Programming/GUI/AngularJS_CourseNotes.txt")
+    codesearchstats2=hranal.codesearch_statistics(query="FEATURE",filepath="../../Grafit/course_material/Programming/GUI/TypeScript_CourseNotes.txt")
+    codesearchstats2=hranal.codesearch_statistics(query="FEATURE",filepath="../../Grafit/course_material/Programming/R/R_CourseNotes.txt")
+    codesearchstats2=hranal.codesearch_statistics(query="FEATURE",filepath="../../Grafit/course_material/Programming/Rust/Rust_CourseNotes.txt")
+    codesearchstats2=hranal.codesearch_statistics(query="FEATURE",filepath="../../Grafit/course_material/Programming/Java/Java_CourseNotes.txt")
+    codesearchstats2=hranal.codesearch_statistics(query="FEATURE",filepath="../../Grafit/course_material/NeuronRain/AdvancedComputerScienceAndMachineLearning/AdvancedComputerScienceAndMachineLearning.txt")
+    codesearchstats2=hranal.codesearch_statistics(query="FEATURE",filepath="../../Grafit/course_material/NeuronRain/LinuxKernelAndCloud/BigdataAnalyticsCloud_CourseNotes.txt")
+    codesearchstats2=hranal.codesearch_statistics(query="FEATURE",filepath="../../Grafit/course_material/NeuronRain/LinuxKernelAndCloud/code/AdvertisementAnalytics_RecommenderSystemsCF.txt")
+    codesearchstats2=hranal.codesearch_statistics(query="FEATURE",filepath="../../Grafit/course_material/NeuronRain/LinuxKernelAndCloud/LinuxKernelAndCloud.txt")

==================================
Regular expression search of  ../../usb-md64-github-code/USBmd_notes.txt  for query  FEATURE :
==================================
1298. (THEORY and FEATURE) Program Analysis and Software analytics - USBmd driver - motivations, network traffic analytics,
879. (FEATURE) NeuronRain USBmd Debug and Malafide Traffic Analytics
880. (FEATURE) AsFer commits for USBmd as on 11 December 2015 - USBWWAN stream data backend in MongoDB
881. (FEATURE-DONE) Spark Cloud Analytics for Linux Kernel 4.10.3 64 bit with Kernel Address Sanitizer debug logging enabled - 15 August 2017
882. (FEATURE-DONE) Spark Cloud Analytics for Linux Kernel 4.10.3 64 bit with Kernel Address Sanitizer debug logging enabled - 15 August 2017
883. (FEATURE-DONE) Commits - 24 September 2017 -  USB-md driver for USB and Wireless LAN analytics for 4.13.3 64-bit kernel
769. (FEATURE) USBWWAN analytics - USBmon and FTrace logs analysis - 15 November 2018 - this section is an extended draft on respective topics in NeuronRain AstroInfer design -  https://github.com/shrinivaasanka/asfer-github-code/blob/master/asfer-docs/AstroInferDesign.txt
770. (THEORY and FEATURE) Program Analysis and Software Analytics - USBmd FTrace Kernel Function CallGraph Generation for Analysis - 22 November 2018 - this section is an extended draft on respective topics in NeuronRain AstroInfer design -  https://github.com/shrinivaasanka/asfer-github-code/blob/master/asfer-docs/AstroInferDesign.txt

==================================
Regular expression search of  ../../virgo64-linux-github-code/virgo-docs/VirgoDesign.txt  for query  FEATURE :
==================================
892. (FEATURE - DONE-minimum separate config file support in client and kernel service )1. More Sophisticated VIRGO config file and read_virgo_config() has to be invoked on syscall clients virgo_clone and virgo_malloc also. Earlier config was being read by kernel module only which would work only on a single machine. A separate config module kernel service has been added for future use while exporting kernel-wide configuration related symbols. VIRGO config files have been split into /etc/virgo_client.conf and /etc/virgo_cloud.conf to delink the cloud client and kernel service config parameters reading and to do away with oft occurring symbol lookup errors and multiple definition errors for num_cloud_nodes and node_ip_addrs_in_cloud - these errors are frequent in 3.15.5 kernel than 3.7.8 kernel. Each VIRGO module and system call now reads the config file independent of others - there is a read_virgo_config_<module>_<client_or_service>() function variant for each driver and system call. Though at present smacks of a replicated code, in future the config reads for each component (system call or module) might vary significantly depending on necessities.  New kernel module config has been added in drivers/virgo. This is for future prospective use as a config export driver that can be looked up by any other VIRGO module for config parameters.  include/linux/virgo_config.h has the declarations for all the config variables declared within each of the VIRGO kernel modules.  Config variables in each driver and system call have been named with prefix and suffix to differentiate the module and/or system call it serves.  In geographically distributed cloud virgo_client.conf has to be in client nodes and virgo_cloud.conf has to be in cloud nodes. For VIRGO Queue - KingCobra REQUEST-REPLY peer-to-peer messaging system same node can have virgo_client.conf and virgo_cloud.conf.  Above segregation largely simplifies the build process as each module and system call is independently built without need for a symbol to be exported from other module by pre-loading it.(- from commit comments done few months ago)
893. (FEATURE - Special case implementation DONE) 2. Object Marshalling and Unmarshalling (Serialization) Features - Feature 4 is a marshalling feature too as Python world PyObjects are serialized into VIRGO linux kernel and unmarshalled back bottom-up with CPython and Boost::Python C++ invocations - CPython and Boost internally take care of serialization.
894. (FEATURE - DONE) Virgo_malloc(), virgo_set(), virgo_get() and virgo_free() syscalls that virtualize the physical memory across all cloud nodes into a single logical memory behemoth (NUMA visavis UMA). (There are random crashes in copy_to_user and copy_from_user in syscall path for VIRGO memory pooling commands that were investigated but turned out to be mystery). These crashes have either been resolved or occur less in 3.15.5 and 4.1.5 kernels.
895. (FEATURE - DONE) Integrated testing of AsFer-VIRGO Linux Kernel request roundtrip - invocation of VIRGO linux kernel system calls from AsFer Python via C++ or C extensions - Commits for this have been done on 29 January 2016. This unifies userlevel applications and kernelspace modules so that AsFer Python makes VIRGO linux kernel an extension. Following is schematic diagram and More details in commit notes below.
896. (FEATURE - DONE) Multithreading of VIRGO cloudexec kernel module (if not already done by kernel module subsystem internally)
897. (FEATURE - DONE) Sophisticated queuing and persistence of CPU and Memory pooling requests in Kernel Side (by possibly improving already existing kernel workqueues). Either open source implementations like ZeroMQ/ActiveMQ can be used or Queuing implementation has to be written from scratch or both. ActiveMQ supports REST APIs and is JMS implementation. This feature has been marked completed because recently NeuronRain AsFer backend has been updated to support KingCobra REQUEST_REPLY.queue as a datasource for Streaming Abstract Generator. By enabling use_as_kingcobra_service=1 in cpupooling and memorypooling VIRGO drivers, any incoming CPU and Memory related request can be routed to KingCobra by linux workqueue in VIRGO queue and disk persisted (/var/log/REQUEST_REPLY.queue) by KingCobra servicerequest recipient. Also Kafka Publisher/Subscriber have been implemented in NeuronRain AsFer which invoke Streaming Abstract Generator with KingCobra REQUEST_REPLY.queue as datasource to publish persisted already received CPU and Memory requests to Kafka Message Queue. Thus queuing and persistence for VIRGO CPU and Memory is in place. ZeroMQ does not have persistence and is used for NeuronRain client side Router-Dealer concurrent request servicing pattern.
898. (FEATURE - DONE-Minimum Functionality - this section is an extended draft on respective topics in NeuronRain AstroInfer design -  https://github.com/shrinivaasanka/asfer-github-code/blob/master/asfer-docs/AstroInferDesign.txt) Integration of Asfer(AstroInfer) algorithm codes into VIRGO which would add machine learning capabilities into VIRGO - That is, VIRGO cloud subsystem which is part of a linux kernel installation "learns" and "adapts" to the processes that are executed on VIRGO. This catapults the power of the Kernel and Operating System into an artificially (rather approximately naturally) intelligent computing platform (a software "brain"). For example VIRGO can "learn" about "execution times" of processes and suitably act for future processes. PAC Learning of functions could be theoretical basis for this.  Initial commits for Kernel Analytics Module which reads the /etc/virgo_kernel_analytics.conf config have been done. This config file virgo_kernel_analytics.conf having csv(s) of key-value pairs of analytics variables is set by AsFer or any other Machine Learning code.  With this VIRGO Linux Kernel is endowed with abilities to dynamically evolve than being just a platform for user code. Implications are huge - for example, a config variable "MaxNetworkBandwidth=255" set by the ML miner in userspace based on a Perceptron or Logistic Regression executed on network logs can be read by a kernel module that limits the network traffic to 255Mbps. Thus kernel is no longer a static predictable blob behemoth. With this, VIRGO is an Internet-of-Things kernel that does analytics and based on analytics variable values integrated hardware can be controlled across the cloud through remote kernel module function invocation. This facility has been made dynamic with Boost::Python C++ and CPython extensions that permit flow of objects from machine learnt AsFer kernel analytics variables to VIRGO Linux Kernel memory drivers via VIRGO system calls directly and back - Commits on 29 January 2016 - this should obviate re-reading /etc/virgo_kernel_analytics.conf and is an exemplary implementation which unifies C++/Python into C/Kernel.
900. (FEATURE - ONGOING) Virgo is an effort to virtualize the cloud as a single machine - Here cloud is not limited to servers and desktops but also mobile devices that run linux variants like Android, and other Mobile OSes. In the longterm, Virgo may have to be ported or optimized for handheld devices. Boost::Python AsFer-VIRGO system call invocations implemented in NeuronRain is framework for implementing python applications interfacing with kernel. If deployed on Mobile processors (e.g by overlaying Android Kernel with VIRGO layer) there are IDEs like QPython to develop python apps for Android.
901. (FEATURE - DONE) Memory Pooling Subsystem Driver - Virgo_malloc(), Virgo_set(), Virgo_get() and Virgo_free() system calls and their Kernel Module Implementations. In addition to syscall path, telnet or userspace socket client interface is also provided for both VIRGO CPU pooling(virgo_clone()) and VIRGO Memory Pooling Drivers.
902. (FEATURE - DONE) Virgo Cloud File System with virgo_cloud_open(), virgo_cloud_read() , virgo_cloud_write() and virgo_cloud_close() commands invoked through telnet path has been implemented that transcends disk storage in all nodes in the cloud. It is also fanciful feature addition that would make VIRGO a complete all-pervading cloud platform. The remote telnet clients send the file path and the buf to be read or data to be written. The Virgo File System kernel driver service creates a unique Virgo File Descriptor for each struct file* opened by filp_open() and is returned to client. Earlier design option to use a hashmap (linux/hashmap.h) looked less attractive as file desciptor is an obvious unique description for open file and also map becomes unscalable. The kernel upcall path has been implemented (paramIsExecutable=0) and may not be necessary in most cases and all above cloudfs commands work in kernelspace using VFS calls.
903. (FEATURE - DONE) VIRGO Cloud File System commands through syscall paths - virgo_open(),virgo_close(),virgo_read() and virgo_write(). All the syscalls have been implemented with testcases and more bugs fixed. After fullbuild and testing, virgo_open() and virgo_read() work and copy_to_user() is working.
904. (FEATURE - DONE) VIRGO memory pooling feature is also a distributed key-value store similar to other prominent key-store software like BigTable implementations, Dynamo, memory caching tools etc., but with a difference that VIRGO mempool is implemented as part of Linux Kernel itself thus circumventing userspace latencies. Due to Kernel space VIRGO mempool has an added power to store and retrieve key-value pair in hardware devices directly which otherwise is difficult in userspace implementations.
906. (FEATURE-DONE) Socket Debugging, Program Analysis and Verification features for user code that can find bugs statically. Socket skbuff debug utility and SATURN Program Analysis Software has been integrated into NEURONRAIN VIRGO Linux Kernel.
907. (FEATURE - DONE-Minimum Functionality) Operating System Logfile analysis using Machine Learning code in AstroInfer for finding patterns of processes execution and learn rules from the log. Kernel_Analytics VIRGO module reads /etc/virgo_kernel_analytics.conf config key-value pairs which are set by AsFer or other Machine Learning Software. At present an Apache Spark usecase that mines Uncomplicated Fire Wall logs in kern.log for most prominent source IP has been implemented in AsFer codebase : http://sourceforge.net/p/asfer/code/704/tree/python-src/SparkKernelLogMapReduceParser.py . This is set as a key-value config in /etc/virgo_kernel_analytics.conf read and exported by kernel_analytics module.
911. (FEATURE - SATURN integration - minimum functionality DONE) Program Comprehension features as an add-on described in : https://sites.google.com/site/kuja27/PhDThesisProposal.pdf?attredirects=0. SATURN program analysis has been integrated into VIRGO linux with a stub driver.
912. (FEATURE - DONE) Bakery Algorithm implementation - cloudsync kernel module
913. (FEATURE - minimal EventNet Logical Clock primitive implemented in AstroInfer and this section is an extended draft on respective topics in NeuronRain AstroInfer design -  https://github.com/shrinivaasanka/asfer-github-code/blob/master/asfer-docs/AstroInferDesign.txt) Implementation of Distributed Systems primitives for VIRGO cloud viz., Logical Clocks, Termination Detection, Snapshots, Cache Coherency subsystem etc.,(as part of cloudsync driver module). Already a simple timestamp generation feature has been implemented for KingCobra requests with <ipaddress>:<localmachinetimestamp> format
914. (FEATURE - minimum functionality DONE - this section is an extended draft on respective packing/filling/tiling topics in NeuronRain AstroInfer design specific to kernel SLAB allocator -  https://github.com/shrinivaasanka/asfer-github-code/blob/master/asfer-docs/AstroInferDesign.txt) Enhancements to kmem if it makes sense, because it is better to rely on virgo_malloc() for per machine memory management and wrap it around with a cloudwide VIRGO Unique ID based address lookup implementation of which is already in place.
915. (FEATURE - ONGOING) Cleanup the code and remove unnecessary comments.
916. (FEATURE - DONE) Documentation - This design document is also a documentation for commit notes and other build and debugging technical details. Doxygen html cross-reference documentation for AsFer, USBmd, VIRGO, KingCobra and Acadpdrafts has been created along with summed-up design document and committed to GitHub Repository at https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs
917. (FEATURE - DONE) Telnet path to virgo_cloud_malloc,virgo_cloud_set and virgo_cloud_get has been tested and working. This is similar to memcached but stores key-value in kernelspace (and hence has the ability to write to and retrieve from any device driver memory viz., cards, handheld devices).An optional todo is to write a script or userspace socket client that connects to VIRGO mempool driver for these commands.
919. (FEATURE - DONE) VIRGO queue driver with native userspace queue and kernel workqueue-handler framework that is optionally used for KingCobra and is invoked through VIRGO cpupooling and memorypooling drivers. (Schematic in http://sourceforge.net/p/kcobra/code-svn/HEAD/tree/KingCobraDesignNotes.txt and http://sourceforge.net/p/acadpdrafts/code/ci/master/tree/Krishna_iResearch_opensourceproducts_archdiagram.pdf)
920. (FEATURE - DONE) KERNELSPACE EXECUTION ACROSS CLOUD NODES which geographically distribute userspace and kernelspace execution creating 
921. (FEATURE - DONE) VIRGO platform as on 5 May 2014 implements a minimum set of features and kernelsocket commands required for a cloud OS kernel: CPU virtualization(virgo_clone), Memory virtualization(virgo_malloc,virgo_get,virgo_set,virgo_free) and a distributed cloud file system(virgo_open,virgo_close,virgo_read,virgo_write) on the cloud nodes and thus gives a logical view of one unified, distributed linux kernel across all cloud nodes that splits userspace and kernelspace execution across cloud as above.
922. (FEATURE - DONE) VIRGO Queue standalone kernel service has been implemented in addition to paths in schematics above. VIRGO Queue listens on hardcoded port 60000 and enqueues the incoming requests to VIRGO queue which is serviced by KingCobra:
923. (FEATURE - DONE) EventNet kernel module service:
924. (FEATURE - DONE) Related to point 22 - Reuse EventNet cloudwide logical time infinite graph in AsFer in place of Logical clocks. At present the eventnet driver listens on port 20000 and writes the edges and vertices files in kernel using vfs_read()/vfs_write(). These text files can then be read by the AsFer code to generate DOT files and visualize the graph with graphviz.
925. (FEATURE - OPTIONAL) The kernel modules services listening on ports could return a JSON response when connected instead of plaintext, conforming to REST protocol. Additional options for protocol buffers which are becoming a standard data interchange format.
926. (FEATURE-Minimum Functionality DONE) Pointer Swizzling and Unswizzling of VIRGO addressspace pointers to/from VIRGO Unique ID (VUID). Presently VIRGO memory system calls implement a basic minimal pointer address translation to unique kmem location identifier.
987. (FEATURE - DONE) VIRGO Kernel Modules and System Calls major rewrite for 3.15.5 kernel - 17 August 2014
772. (FEATURE) Commits as on 3 March 2015 - Initial commits for Kernel Analytics Module which reads the /etc/virgo_kernel_analytics.conf config (and) VIRGO memorypooling Key-Value Store Architecture Diagram - - this section is an extended draft on respective topics in NeuronRain AstroInfer design -  https://github.com/shrinivaasanka/asfer-github-code/blob/master/asfer-docs/AstroInferDesign.txt
1016. (FEATURE - DONE)  Python-C++-VIRGOKernel and Python-C-VIRGOKernel boost::python and cpython implementations:
1022. (FEATURE-DONE) Socket Buffer Debug Utility Function - uses linux skbuff facility
1023. (FEATURE-DONE) Commits as on 24 February 2016
771. (FEATURE-DONE) Software Analytics - SATURN Program Analysis added to VIRGO Linux kernel drivers - this section is an extended draft on respective topics in NeuronRain AstroInfer design -  https://github.com/shrinivaasanka/asfer-github-code/blob/master/asfer-docs/AstroInferDesign.txt
1025.(FEATURE-DONE) NEURONRAIN - ASFER Commits for VIRGO - CloudFS systems calls integrated into Boost::Python C++ and Python CAPI invocations
775. (FEATURE) VIRGO64 Kernel Analytics - Streaming Implementation - 13 December 2017 - this section is an extended draft on respective topics in NeuronRain AstroInfer design -  https://github.com/shrinivaasanka/asfer-github-code/blob/master/asfer-docs/AstroInferDesign.txt
773. (FEATURE) Linux Kernel 5.1.4, PXRC Drone/UAV/Flight Controller, UVC Video WebCam driver, Kernel Analytics, NeuronRain Usecases - 28 May 2019 - this section is an extended draft on respective topics in NeuronRain AstroInfer design -  https://github.com/shrinivaasanka/asfer-github-code/blob/master/asfer-docs/AstroInferDesign.txt
774. (FEATURE) Concurrent Managed Workqueue(CMWQ), VIRGO64 Queueing and KingCobra64 messaging - 12 June 2019 - this section is an extended draft on respective topics in NeuronRain AstroInfer design and KingCobra design -  https://github.com/shrinivaasanka/asfer-github-code/blob/master/asfer-docs/AstroInferDesign.txt,https://github.com/shrinivaasanka/kingcobra64-github-code/blob/master/KingCobraDesignNotes.txt
1445. (THEORY and FEATURE) Kernel Analytics - Script to gather loadbalancer statistics for VIRGO linux kernel syscalls - 16 August 2023 - related to 1191,619,770,906,911,771,1192,1443,1444 and all sections on Program Analysis, AsFer-USBmd-VIRGO-KingCobra FTrace kernel callgraph analysis - Valgrind-Callgrind-KCacheGrind-Flamegraph userspace callgraph analysis, SATURN control flow analysis of VIRGO linux kernel, Software Analytics, Pandemic model of Botnet-Defense adversarial Game theoretic security, Cybercrime analytics, Anti-Malware,Anti-Ransomware,Anti-Theft and Anti-Plagiarism tools, Filesystem Prefetch, KML, LAKE

==================================
Regular expression search of  ../../kingcobra64-github-code/KingCobraDesignNotes.txt  for query  FEATURE :
==================================
1088. (THEORY and FEATURE) Analytics on the Problem reports sent to the cloud queue give a pattern of corrupt nodes. Intrinsic Merit ranking with Citation graph maxflow considering cloud as a flow network where a node positively or negatively cites or "opines" about a node, as mentioned in http://arxiv.org/abs/1006.4458 (author's Master's thesis) and http://www.nist.gov/tac/publications/2010/participant.papers/CMI_IIT.proceedings.pdf(published by the author during PhD) give a p2p ranking of cloud nodes that can be used for analysis though may not be reliable fully. AsFer has bigdata analytics functionality that fits well to this point to analyse the problem reports with machine learning algorithms and set the key-value pairs that are read by VIRGO kernel_analytics module and exported kernelwide. The persisted REQUEST_REPLY.queue with the logged request-reply IPs and timestamps can be mined with AsFer bigdata capability (e.g. Spark)
779. (FEATURE-DONE) Commits - CVXPY implementation for Eisenberg-Gale Convex Program - 18 August 2017 -  - this section is an extended draft on respective topics in NeuronRain AstroInfer Design - https://github.com/shrinivaasanka/asfer-github-code/blob/master/asfer-docs/AstroInferDesign.txt
780. (FEATURE-DONE - this section is an extended draft on respective topics in NeuronRain AstroInfer Design - https://github.com/shrinivaasanka/asfer-github-code/blob/master/asfer-docs/AstroInferDesign.txt) Commits - Convex Optimization - DCCP - 21 August 2017
1118. (FEATURE-DONE) Commits - Convex Optimization - DCCP - 22 August 2017
1119. (FEATURE-DONE) Commits - Convex Optimization update - 29 August 2017
778. (FEATURE-DONE) Convex Optimization - Pricing Computation - 30 August 2017 - this section is an extended draft on respective topics in NeuronRain AstroInfer Design - https://github.com/shrinivaasanka/asfer-github-code/blob/master/asfer-docs/AstroInferDesign.txt
1120. (FEATURE-DONE) KingCobra Kernelspace Messaging Driver for 4.13.3 64-bit kernel - 24 September 2017
1121. (FEATURE-DONE) Commits - telnet - VIRGO64Queue - KingCobra64 -  25 September 2017
1122. (FEATURE-DONE) VIRGO64 Queueing Kernel Module Listener - KingCobra64 - 4.13.3 - 6 October 2017
777. (FEATURE-DONE) KingCobra64 Neuro Electronic Currency transactional cloud move - Perfect Forward - 17 January 2018 - this section is an extended draft on respective topics in NeuronRain AstroInfer Design - https://github.com/shrinivaasanka/asfer-github-code/blob/master/asfer-docs/AstroInferDesign.txt
776. (FEATURE) Concurrent Managed Workqueue(CMWQ), VIRGO64 Queueing and KingCobra64 messaging - 12 June 2019 - this section is an extended draft on respective IoT messaging and kernel analytics topics in NeuronRain AstroInfer Design - https://github.com/shrinivaasanka/asfer-github-code/blob/master/asfer-docs/AstroInferDesign.txt
1216. (THEORY and FEATURE) Algorithmic Trading in Fictitious Neuro Cryptocurrency - EventNet Graphical Event Model (GEM) HyperLedger implementation - 14 February 2022 - related to 690,789,790,791,1213,1214,1215 and all sections on Computational Economics - Theory of Value (economic merit), Algorithmic trading, Quantitative Majority Circuit simulation of Demand-Supply, Bounded Width Branching Programs, Algorithmic Game Theory and Mechanism Design, Money Trail, Poverty Alleviation, Graphical Event Models and Causal Event Models, Timeseries analysis, Integer Factorization and Money Changing Program ILP Proof of Work for Neuro Cryptocurrency, Byzantine Fault Tolerance

==================================
Regular expression search of  ../../Grafit/course_material/ComputerScienceMiscellaneous/ComputerScienceMiscellaneous_CourseNotes.txt  for query  FEATURE :
==================================
834. (THEORY and FEATURE) Social Network Analysis - People Analytics - Unique Identification - 12 January 2018 - How would you uniquely identify an object from a plethora of objects? - Birthday Paradox, Contextual Name Parsing, PIPL Name syllable based unique person search - related to all sections of People Analytics
835. (THEORY and FEATURE) Unsorted Search - Kernel lifting and Computational Geometric search - 19 January 2018 - How would you find needle in haystack? - related to all sections on Computational Geometric Hyperplanar Point Location, Locality Sensitive Hashing and Shell Turing Machines
850. (THEORY and FEATURE) How would you avert collision of two trains speeding along on same track in opposing directions?  - Critical Sections and Synchronization - 3 November 2018, 9 August 2020 - related to all sections on Program Analysis, Software Analytics, Software Transactional Memory, Lockfree datastructures, VIRGO Bakery Algorithm implementation, VIRGO Read-Copy-Update of NeuronRain Theory Drafts
849. (THEORY and FEATURE) 29 May 2020 - Probability of Odd number of Heads in Coin Toss - related to
830. (THEORY and FEATURE) Set Partition Analytics, Voting Analytics, Ramsey 2-coloring - m men and n women are to be seated in a row so that no two women sit together. If m > n, show that the number of ways in which they can be seated is m! (m+1)! / (m-n+1)! - (Question from IIT-JEE 1983) - related to all sections of NeuronRain Theory Drafts on Set Partitions, Theoretical Electronic Voting Machines, Ramsey coloring of sequences, Complementary Sets, Avoidance Patterns in Primes - 18 June 2020, 19 June 2020

==================================
Regular expression search of  ../../Grafit/course_material/Programming/Python/Python_CourseNotes.txt  for query  FEATURE :
==================================
844. (THEORY and FEATURE) 6 January 2018,18 July 2020 - Currying and Partial Function Application in Python - related to all sections on Recursive Lambda Function Growth algorithm implementation for learning lambda functions from Natural Language Texts and Text analytics
862. (THEORY and FEATURE) NeuronRainApps - NeuronRain Usecases - MAVSDK Python Async I/O Drone Simulator - related to 637,713,722 and all sections on Drone Autonomous Delivery, Drone Electronic Voting Machines, Large Scale Visuals/Urban Sprawl/GIS Analytics, VIRGO PXRC Flight Controller Kernel Driver - 18 August 2020
863. (THEORY and FEATURE) MAVSDK Python jMAVSIM Drone flight simulator - Proof-of-Concept implementation related to 862 and all sections on Drone Autonomous Delivery, Drone EVMs, Large Scale Visuals/Urban Sprawl/GIS Analytics, VIRGO PXRC Flight controller kernel driver - 26 August 2020
866. (THEORY and FEATURE) A* (A-Star) Best First Search Algorithm Implementation - Python 3.8.5 - 8 September 2020, 27 October 2020 - related to all sections on Drone Autonomous Delivery Navigation, Drone Obstacle Avoidance, Drone Electronic Voting Machines and Graph Analytics
871. (THEORY and FEATURE) Generating all possible permuted strings of an alphabet - related to 843 and all sections on Social networks, Bipartite and General Graph Maximum Matching, Symmetric Group, Permanent, Boolean majority, Ramsey coloring - Number of Perfect (Mis)Matchings - 28 October 2020
1149. (THEORY and FEATURE) ThoughtNet Evocation of Thought Hyperedges by Set Intersection of Hypervertices - related to 620,1147 and all 
1153. (THEORY and FEATURE) ThoughtNet Evocation of Thought Hyperedges by Set Intersection of Hypervertices - related to 620,1147,1149 and all sections of ThoughtNet Hypergraph Evocation, Contextual Multiarmed Bandits, Reinforcement Learning, Word Sense Disambiguation, Balls-Bins
1163. (THEORY and FEATURE) Drone Electronic Voting Machine - Set Partition Analytics electronic_voting_machine() invocation - PX4 SITL
1164. (THEORY and FEATURE) Drone Electronic Voting Machine - Set Partition Analytics electronic_voting_machine_asynchronous() wrapper
1354.(THEORY and FEATURE) OS Scheduling and Hashing Dynamic Sets - Python 3.11 Prototype implementation of Survival Index Deadline Scheduler - 14 November 2022 - related to 751 and all sections on Set partitions, Computational geometry, Program analysis/Software analytics/Scheduler Analytics among other topics in NeuronRain Theory Drafts, Sun Microsystems-Oracle-Global Analytics Patent Disclosures and Timeout implementations
1357. (THEORY and FEATURE) OS Scheduling and Hashing Dynamic Sets - Python 3.11 implementation of Survival Index Deadline Scheduler - 17 November 2022 - related to 751,1354 and all sections on Set partitions, Computational geometry, Program analysis/Software analytics/Scheduler Analytics among other topics in NeuronRain Theory Drafts, Sun Microsystems-Oracle-Global Analytics Patent Disclosures and Timeout implementations, Machine Learning enabled VIRGO Linux Kernel for Massive Datasets on Cloud 
1370. (THEORY and FEATURE) String Analytics and Large Scale Visuals Analytics - Python 3.11 Matrix mirror utility primitive - 
1371. (THEORY and FEATURE) String Analytics and Large Scale Visual Analytics - Python 3.11 String Factorization - Vowelless text compression as a consonant-vowel vectors Matrix product - 19 December 2022 - related to 2,745,1123,1370 and all sections on Text analytics,String analytics and Large Scale Visuals Analytics,Compressed Sensing,Vowelless Text Compression, Embedding of syllables in vectorspace, Matrix multiplication, Ramsey coloring of texts by consonants-vowels
1403. (THEORY and FEATURE) String Analytics and Large Scale Visual Analytics - Python 3.11 + NumPy Strings and Large Scale Visual Intersection - 17 March 2023 - related to all sections on Text analytics,String analytics and Large Scale Visuals Analytics

==================================
Regular expression search of  ../../Grafit/course_material/Programming/Go/Go_CourseNotes.txt  for query  FEATURE :
==================================
1382. (THEORY and FEATURE) String Analytics - String reversals by XOR swap algorithm - Multiple return values within a Go function, Goroutines and Gochannels for synchronization - related to 1380 and all sections on String analytics - 24 January 2023
1383. (THEORY and FEATURE) String Analytics - String reversals by XOR swap algorithm - definition of separate Go function for reversing a string by XOR swap - related to 1380,1382 and all sections on String analytics, Large Scale Visuals Analytics, String mirroring (topological reverse of string) - Python 3.11 Matrix mirror utility primitive - based on O(1) NumPy fliplr() memory view implementation - 31 January 2023

==================================
Regular expression search of  ../../Grafit/course_material/Programming/C/C_CourseNotes.txt  for query  FEATURE :
==================================

==================================
Regular expression search of  ../../Grafit/course_material/Programming/C++/CPlusPlus_CourseNotes.txt  for query  FEATURE :
==================================
858. (THEORY and FEATURE) 17 July 2017,9 August 2020 - Self-Aware Software, Quines - related to all sections on Formal Languages, Program Analysis, Software Analytics 
855. (THEORY and FEATURE) 24 September 2018,9 August 2020 - Fowler-Noll-Vo Hashing, Custom Hash Functions in unordered_map, Nested Template Classes - related to all sections on Locality Sensitive Hashing, Separate Chaining Bucketization
854. (ThEORY and FEATURE) 28 October 2018,9 August 2020 - Three Distances Theorem and Fibonacci Hashing - related to all sections on Locality Sensitive Hashing, Separate Chaining Bucketization
856. (THEORY and FEATURE) 26 December 2018 - Bridge and Iterator Design Patterns - related to all sections on Software Analytics, Program Analysis, Survival Index Timeout and Scheduler of NeuronRain Theory Drafts
851. (THEORY and FEATURE) 12 February 2019, 9 August 2020 - Software Transactional Memory - related to Program Analysis, Software Analytics, Software Transactional Memory, Lockfree datastructures, Bakery Algorithm, Read-copy-update sections of NeuronRain Theory Drafts
852. (THEORY and FEATURE) 23 February 2019,9 August 2020 - Concurrency, Promise and Future Asynchronous I/O - related to Program Analysis, Software Analytics, Software Transactional Memory, Lockfree datastructures, Bakery Algorithm, Read-copy-update, Drone Autonomous Delivery sections of NeuronRain Theory Drafts
853. (THEORY and FEATURE) 6 February 2020, 9 August 2020 - Read-Copy-Update mentioned in VIRGO Design Document of NeuronRain Theory Drafts has been implemented in userspace - related to Program Analysis, Software Analytics, Software Transactional Memory, Lockfree datastructures, Bakery Algorithm, Read-copy-update sections of NeuronRain Theory Drafts
857. (THEORY and FEATURE) 28 April 2020 - Name filter - C++ STL containers and algorithms - copy,copy_if,shared_ptr,tokenizer - related to all sections on People Analytics, Named Entity Recognition, Name filters (learning proper nouns in a text)
1222. (THEORY and FEATURE) 22 December 2020 - Russian Peasant Multiplication in Linear Time by BitShift operator - related to
1293. (THEORY and FEATURE) NeuronRainApps - Obstacle Free Lattice Walks - Usecase implementation of Autonomous Driving ADAS algorithm in
1294. (THEORY and FEATURE) NeuronRainApps - Obstacle Free Lattice Walks - Usecase implementation of Autonomous Driving ADAS algorithm in Section 864 - item 59 - All Pairs Paths in Grid Lattice - related to 1253 and all sections on Async IO, Drone Electronic Voting Machines, GIS and Urban Sprawl Analytics, Merit of Large Scale Visuals, Drone Obstacle Avoidance, Computational Geometry, ADAS-Obstacle avoidance, Autonomous Vehicles, Unmanned Aerial Vehicle Navigation-Autonomous Drone Delivery-Passenger Drones, Wiring Problem
1378. (THEORY and FEATURE) String Analytics and Intrinsic Merit of Music - Fisher-Yates-Knuth Shuffle - permutation catalog of all possible music waveforms - related to 3,110,134,298,1223,1224,1257,1258,1261,1305,1306,1307,1308,1309,1310,1311,1315,1353 and all sections on Music search-Music discovery, Intrinsic Merit of Music, MIR(Music Information Retrieval), Music Similarity and Clustering, AI Music Synthesis from summation of damped sinusoids, Additive Synthesis, fMRI connectomes - OpenNeuro - Psychology of music, Weighted automata, Chaos, Deep Learning, Dynamic Time Warping-Music Timeseries analysis, Music Evoked Autobiographical Memories, Waveshaping, ThoughtNet, Majority Voting (Enjoyable music) Vs Intrinsic (Quality music) - Condorcet Jury Theorem variants,Computational Learning Theory, Boolean Function Composition, Longest Common Subsequence, Suffix Trees - Longest Repeated Substring, MultiFractal Detrended Fluctuation Analysis of Non-stationary timeseries,Granger causality of music waveforms, Definition of Creativity, Pseudorandom permutations and Pseudorandom (number) generators - Mersenne Twister - 17 January 2023
1380. (THEORY and FEATURE) String Analytics and Intrinsic Merit of Music - Fisher-Yates-Knuth Shuffle augmented by Reservoir sampling - permutation catalog of all possible music waveforms - related to 3,110,134,298,572,666,1223,1224,1257,1258,1261,1305,1306,1307,1308,1309,1310,1311,1315,1351,1353,1378 and all sections on Music search-Music discovery, Intrinsic Merit of Music, MIR(Music Information Retrieval), Music Similarity and Clustering, AI Music Synthesis from summation of damped sinusoids, Additive Synthesis, fMRI connectomes - OpenNeuro - Psychology of music, Weighted automata, Chaos, Deep Learning, Dynamic Time Warping-Music Timeseries analysis, Music Evoked Autobiographical Memories, Waveshaping, ThoughtNet, Majority Voting (Enjoyable music) Vs Intrinsic (Quality music) - Condorcet Jury Theorem variants,Computational Learning Theory, Boolean Function Composition, Longest Common Subsequence, Suffix Trees - Longest Repeated Substring, MultiFractal Detrended Fluctuation Analysis of Non-stationary timeseries,Granger causality of music waveforms, Definition of Creativity, Pseudorandom permutations and Pseudorandom (number) generators - Mersenne Twister, Leaky bucket algorithm, Boolean composition of Majority circuit and Voter SAT,Majority Voting circuit-Psephology-Sampling of population for Opinion mining,Bertrand Ballot Theorem - 25 January 2023
1429. (THEORY and FEATURE) Russian Peasant Multiplication in Linear Time by BitShift operator - Lowerbound estimate of last row of the tableau for an alternative non-trivial reversal of multiplication (or factoring) - related to 668,1221,1222 and all sections on Integer Factorization, Succinct Datastrucures, Numeric Compression, Arithmetic Circuits, Computational Geometric Factorization - Average case Sequential Optimization, Stirling Approximation of Gamma Function - 7 June 2023

==================================
Regular expression search of  ../../Grafit/course_material/Programming/C++/code/namefilter.txt  for query  FEATURE :
==================================

==================================
Regular expression search of  ../../Grafit/course_material/Programming/GUI/AngularJS_CourseNotes.txt  for query  FEATURE :
==================================

==================================
Regular expression search of  ../../Grafit/course_material/Programming/GUI/TypeScript_CourseNotes.txt  for query  FEATURE :
==================================
1387. (THEORY and FEATURE) GIS Urban Sprawl Analytics - Google Maps Traffic Layer Live Busy Traffic - TypeScript GUI - Chennai Metropolitan Area Periurban region example - 9 February 2023 - related to 823,1163,1164,1174,1175,1177,1179,1194,1211,1226,1234,1290,1291,1292,1295,1296,1297,1301,1302,1304,1312,1313,1320,1323,1326,1328,1342,1343,1349,1350,1351,1362,1363,1377,1386 and all sections on GIS Urban Sprawl Analytics, Merit of Large Scale Visuals, Gridded Population Estimators (SEDAC GPW4 and GHSL convex hull estimators), DBSCAN and Neural Network Urban Extent Learners, Computational Geometry, Intrinsic Merit Rankings, R Ricker Population Estimation, Community detection, Social Network Analytics, Space filling by Curves, Unequal Circle and Polynomial packing, Computational Geometry and Polygonal packing by Voronoi Tessellation, Four color theorem, Economic Merit, Computational Economics - GDP estimation from Urban sprawl demographics, electricity consumption, Poverty alleviation, Preferential Attachment, Automatic Delineation of Urban Sprawls, Cellular Automata-SLEUTH-Polya Urn-Dynamic Facegraph Urban Growth Models, Autonomous Driving, Expander Graphs, Isochrones

==================================
Regular expression search of  ../../Grafit/course_material/Programming/R/R_CourseNotes.txt  for query  FEATURE :
==================================
823. (THEORY and FEATURE) People Analytics - Social Network and Urban Sprawl Analytics - Ricker - Population Dynamics - Functions, Loops, Variables, Timeseries and Plots in R - 22,23,24,25,26 May 2020, 2,3,4 June 2020 - related to 487,572,770
824. (FEATURE) People Analytics - Social Network Analysis - CoronaVirus2019 analyzer - Statistics in R - Data Frames,Factors,Histograms,Fitting a Probability Distribution - 27 May 2020, 2,3,4 June 2020 - related to 487,572,770
825. (THEORY and FEATURE) People Analytics - Social Network Analysis - CoronaVirus2019 analyzer - Correlation coefficients in R - Concatenation of Vectors, c() function, Vector arithmetic, Correlation of two datasets - related to 487,572,770 - 2,3,4 June 2020
828. (THEORY and FEATURE) People Analytics - Social Network Analysis - CoronaVirus2019 analyzer - Linear Models - 11,12 June 2020, 26 July 2021 - related to 487,572,752,770,823,824,825
831. (THEORY and FEATURE) People Analytics - Social Network Analysis - CoronaVirus2019 analyzer - Cellular Automaton Graph (CAGraph) - Regression Models of Diffusion - Iteratively Re-Weighted Least Squares (IWLS) - 22,23,24,25 June 2020 - related to 678,740,762,828,830 and all sections on Business Intelligence, Voting Analytics, Urban Sprawl Analytics, Random Walks on Expanders of NeuronRain Theory Drafts
870. (THEORY and FEATURE) People Analytics - Social Network Analysis - CoronaVirus2019 Analyzer - Exponential Fit in R - related to 744,831
1231. (THEORY and FEATURE) People Analytics - Social Network Analysis - CoronaVirus2019 analyzer - Recomputed Spearman, Kendall Tau, Pearson Correlation coefficients of COVID19 dataset and Verhulste-Pearl-Reed Logistic in R - related to 487,572,770 and all sections on People Analytics, Urban Sprawl Analytics, Social Network Analysis, ERSIR-SIS model of pandemic/cybercrimes/opinions, Cellular Automaton Graph model of Social Networks - 30 March 2022 
1235. (THEORY and FEATURE) People Analytics - Social Network Analysis - CoronaVirus2019 analyzer - Recomputed Spearman, Kendall Tau, Pearson Correlation coefficients for revised COVID19 dataset (Lancet,WHO estimates) and corrections to Verhulste-Pearl-Reed and May Logistic code in R - related to 487,572,770,1231 and all sections on People Analytics, Urban Sprawl Analytics, Social Network Analysis, ERSIR-SIS model of pandemic/cybercrimes/opinions, Cellular Automaton Graph model of Social Networks - 18 April 2022 
1241. (THEORY and FEATURE) People Analytics - Social Network Analysis - CoronaVirus2019 analyzer - Excess Mortality Model implementation -
1396. (JIRA,THEORY and FEATURE) People Analytics - Social Network Analysis - CoronaVirus2019 analyzer - Recomputed Spearman, Kendall Tau, Pearson Correlation coefficients for revised COVID19 dataset and changes to Verhulste-Pearl-Reed and May Logistic code in R - related to 487,572,770,1231,1235 and all sections on People Analytics, Urban Sprawl Analytics, Social Network Analysis, ERSIR-SIS model of pandemic/cybercrimes/opinions, Cellular Automaton Graph model of Social Networks - 14 February 2023 

==================================
Regular expression search of  ../../Grafit/course_material/Programming/Rust/Rust_CourseNotes.txt  for query  FEATURE :
==================================
1381. (THEORY and FEATURE) Rasterization or rectification of hyperbolic arc and Factor point location in Rust- Sequential version and iterative binary search - related to 1379 and all sections on Integer Factorization,Computational Geometry,Set Partitions-to-Tile Cover reduction by Lagranges Four Square Theorem and ILP,Primality Testing,RSA Semiprimes,Almost-Square Bounding Boxes in Large Scale Visual Recognition,Pell's Equation,Brahmagupta's Chakravala,Approximate Factoring by Newton-Raphson Rayshooting queries,Algebraic Geometry of Computational Geometric Factorization,Quantum computation and Derandomization of BQP Factorization by Condorcet Jury Theorem Majority-BQPVoterSAT boolean composition - 23 January 2023 
1384. (THEORY and FEATURE) Computational Geometric Factorization - Rayon Parallel iterator Rasterization or rectification of hyperbolic arc and Factor point location in Rust- Sequential and Parallel versions - related to 1383 and all sections on Integer Factorization,Computational Geometry,Set Partitions-to-Tile Cover reduction by Lagranges Four Square Theorem and ILP,Primality Testing,RSA Semiprimes,Almost-Square Bounding Boxes in Large Scale Visual Recognition,Pell's Equation,Brahmagupta's Chakravala,Approximate Factoring by Newton-Raphson Rayshooting queries,Algebraic Geometry of Computational Geometric Factorization,Quantum computation and Derandomization of BQP Factorization by Condorcet Jury Theorem Majority-BQPVoterSAT boolean composition - 2 February 2023 
1385. (THEORY and FEATURE) Computational Geometric Factorization - High Performance Computing implementation for Supercomputers - Rayon Parallel iterator Rasterization or rectification of hyperbolic arc and Factor point location in Rust- Sequential and Parallel versions - multiple consecutive integers - performance benchmarks - related to 1383,1384 and all sections on Integer Factorization,Computational Geometry,Set Partitions-to-Tile Cover reduction by Lagranges Four Square Theorem and ILP,Primality Testing,RSA Semiprimes,Almost-Square Bounding Boxes in Large Scale Visual Recognition,Pell's Equation,Brahmagupta's Chakravala,Approximate Factoring by Newton-Raphson Rayshooting queries,Algebraic Geometry of Computational Geometric Factorization,Quantum computation and Derandomization of BQP Factorization by Condorcet Jury Theorem Majority-BQPVoterSAT boolean composition - 7 February 2023 
1446. (THEORY and FEATURE) Computational Geometric Factorization - High Performance Computing implementation for Supercomputers - Rayon Parallel iterator Rasterization or rectification of hyperbolic arc and Factor point location in Rust- Sequential and Parallel versions - multiple consecutive integers - Major rewrite for 64-bits integer support and (29 and 59) bits integer performance benchmarks - related to 1383,1384,1385 and all sections on Integer Factorization,Computational Geometry,Set Partitions-to-Tile Cover reduction by Lagranges Four Square Theorem and ILP,Primality Testing,RSA Semiprimes,Almost-Square Bounding Boxes in Large Scale Visual Recognition,Pell's Equation,Brahmagupta's Chakravala,Approximate Factoring by Newton-Raphson Rayshooting queries,Algebraic Geometry of Computational Geometric Factorization,Quantum computation and Derandomization of BQP Factorization by Condorcet Jury Theorem Majority-BQPVoterSAT boolean composition - 17 August 2023 

==================================
Regular expression search of  ../../Grafit/course_material/Programming/Java/Java_CourseNotes.txt  for query  FEATURE :
==================================

==================================
Regular expression search of  ../../Grafit/course_material/NeuronRain/AdvancedComputerScienceAndMachineLearning/AdvancedComputerScienceAndMachineLearning.txt  for query  FEATURE :
==================================
759. (THEORY and FEATURE) RNN and GRU - this section is an extended draft on respective topics in NeuronRain AstroInfer design -  https://github.com/shrinivaasanka/asfer-github-code/blob/master/asfer-docs/AstroInferDesign.txt
842. (THEORY and FEATURE) Computational Geometric Factorization and Planar Point Location, Wavelet Trees, Sublinear Multiple String Concatenation - related to all sections on String analytics and Planar Factor Point Location by Wavelet Trees - 8 February 2018, 18 July 2020
1210. (THEORY and FEATURE) CNF 3SAT Least Squares Approximate Solver - Epsilon Bias Generator for randomly chosen clauses of CNFSAT - Least Squares solution of 3SAT Random matrices of the form AX=B - Creating Biased Coin from Fair Coin - 27 February 2018 - related to all sections on P Versus NP, Hardness Amplification, CNF 3SAT approximate solver
760. (THEORY and FEATURE) Newton-Raphson approximate factoring - 6 April 2018 - this section is an extended draft on respective topics in NeuronRain AstroInfer design -  https://github.com/shrinivaasanka/asfer-github-code/blob/master/asfer-docs/AstroInferDesign.txt
761. (THEORY and FEATURE) Chomsky Sentences - 6 April 2018 - this section is an extended draft on respective topics in NeuronRain AstroInfer design -  https://github.com/shrinivaasanka/asfer-github-code/blob/master/asfer-docs/AstroInferDesign.txt
750. (THEORY and FEATURE) Money-Changing Problem and minimum partition - 6 May 2018, 9 May 2018, 18 February 2020 - this section is an extended theory draft on set partitions, Neuro academic-use perfect forward fictitious cryptocurrency in NeuronRain, optimal denomination and coin problems among other topics in NeuronRain AstroInfer Design - https://github.com/shrinivaasanka/asfer-github-code/blob/master/asfer-docs/AstroInferDesign.txt
751. (THEORY and FEATURE) OS Scheduling and Hashing Dynamic Sets - 24 May 2018, 31 October 2018, 11 March 2019, 8 October 2019, 6 November 2019, 18 February 2020, 1 May 2020, 5 May 2020, 2,3,4 June 2020, 30 July 2020,1 January 2021,21 September 2021 - related to all sections on Set partitions, Computational geometry, Program analysis/Software analytics/Scheduler Analytics among other topics in NeuronRain Theory Drafts 
762. (THEORY and FEATURE) Markov Chains Random Walks on a Random Graph and Television Viewership, Merit of Large Scale Visuals, Media Analytics, Business Intelligence, Timeseries, Computational Geometry, Intrinsic Merit and Originality/Creative Genius, Graphical Event Models and EventNet - 4 June 2018,3 July 2018,7 March 2019,7 May 2020, 2,3,4 June 2020, 25 January 2021, 8 April 2021,14 April 2021 - this section is an extended draft on respective topics in NeuronRain AstroInfer design -  https://github.com/shrinivaasanka/asfer-github-code/blob/master/asfer-docs/AstroInferDesign.txt
763. (THEORY and FEATURE) Non-graph theoretic Intrinsic merit measures of texts, Reputation Rankings, Sybils and Collusions - 16 July 2018, 23 April 2020, 29 June 2020, 30 June 2020 - this section is an extended draft of sections 783,815 and respective topics in NeuronRain AstroInfer design - Intrinsic Merit of texts, Vowelless text compression and Hyphenated Syllable vectorspace of words -  https://github.com/shrinivaasanka/asfer-github-code/blob/master/asfer-docs/AstroInferDesign.txt
1208. (THEORY and FEATURE) Software Analytics and Merit of Large Scale Visuals - Rooted Tree Isomorphism and Graph Non-Isomorphism of Source code versioning systems - AHU Algorithm - Difference between two trees (delta) - Isomorphism of k-d trees for object recognition - 7 August 2018 - related to all sections on Computational Geometry, Computer Graphics - Face recognition,Handwriting recognition, Mesh Deformation Isomorphisms-Approximate Topological Matching
764. (THEORY and FEATURE) Gordian Knot and One Way Functions - 15 October 2018, 19 October 2018 - this section is an extended draft on respective topics in NeuronRain AstroInfer design -  https://github.com/shrinivaasanka/asfer-github-code/blob/master/asfer-docs/AstroInferDesign.txt
767. (THEORY and FEATURE) Leaky Bucket Algorithm and Time Series Analysis - 30 November 2019 - this section is an extended draft on respective topics in NeuronRain AstroInfer design -  https://github.com/shrinivaasanka/asfer-github-code/blob/master/asfer-docs/AstroInferDesign.txt

==================================
Regular expression search of  ../../Grafit/course_material/NeuronRain/LinuxKernelAndCloud/BigdataAnalyticsCloud_CourseNotes.txt  for query  FEATURE :
==================================
752. (THEORY and FEATURE) 2 January 2019, 9 January 2019, 8 January 2020, 22 January 2020, 23 January 2020, 29 January 2020, 31 January 2020, 2 February 2020,4 May 2020,12 May 2020,15 May 2020, 2,3,4,7 July 2020,28 October 2020,3 November 2020,2 December 2020,5 December 2020,1 January 2021,29 January 2021,1 February 2021,5 March 2021,1 May 2021,8 June 2021 - Searching, Indexing, Computational Geometric point location queries, Factorization in Randomized NC - Binary Search Nuances, B-Trees, Sharding - related to 227,666,730,762,828,831,864,870,1123 and all sections of People Analytics,Histogram Analytics,Social Network Analysis,Majority Voting,Syllable vectorspace text analytics,Space filling,Cellular automata,Graphical Event Models and Causal Event Models (GEM and CEM)  and Computational Geometric Planar Point Location Factorization in NeuronRain Theory Drafts 
1144. (THEORY and FEATURE) Computational Geometric point location queries, Factorization in Randomized NC, SETH, String complexity and distance measures, Causal and Graphical Event Models, Space filling and Cellular automata - related to 752 and all sections of People Analytics,Histogram Analytics,Social Network Analysis,Majority Voting,Syllable vectorspace text analytics,Graphical Event Models and Causal Event Models (GEM and CEM)  and Computational Geometric Planar Point Location Factorization in NeuronRain Theory Drafts - 8 June 2021, 21 August 2021
758. (THEORY and FEATURE) 21 January 2019 - FP Growth Algorithm for mining frequent patterns and mining timeout dictionaries example - this section is an extended draft on respective topics in NeuronRain AstroInfer design -  https://github.com/shrinivaasanka/asfer-github-code/blob/master/asfer-docs/AstroInferDesign.txt
757. (THEORY and FEATURE) 16 March 2019 - Set Partitions in SymPy, Survival Index Timeout OS Scheduler 
837. (THEORY and FEATURE) People Analytics and Economic merit (Spending Analyzer) - Credit Card Datasets - 9 July 2019 - Fraud Analytics in Spark 2.4.3
756. (THEORY and FEATURE) 21 October 2019 - Advertisement Analytics - Recommender Systems - ALS Collaborative Filtering - this section is an extended draft on respective topics in NeuronRain AstroInfer design -  https://github.com/shrinivaasanka/asfer-github-code/blob/master/asfer-docs/AstroInferDesign.txt
755. (THEORY and FEATURE) 23 October 2019, 1 November 2019 - Sequence Mining of Astronomical Datasets by Spark PrefixSpan - this section is an extended draft on respective topics in NeuronRain AstroInfer design -  https://github.com/shrinivaasanka/asfer-github-code/blob/master/asfer-docs/AstroInferDesign.txt
754. (THEORY and FEATURE) 18 December 2019, 19 December 2019, 22 July 2020, 23 July 2020 - Intrinsic Performance Ratings and Sports Analytics, Streaming Histogram analytics, Partition distance measures, Random graph streams, Logic and Game theory - this section is an extended draft on respective topics in NeuronRain AstroInfer design -  https://github.com/shrinivaasanka/asfer-github-code/blob/master/asfer-docs/AstroInferDesign.txt
753. (THEORY and FEATURE) Social Network Analytics, People Analytics, Preferential Attachment, Urban Sprawls, Graph Edit Distance and Intrinsic Merit Rankings - 20 February 2020,26 February 2020,29 April 2020,17 May 2020,18 May 2020,28 May 2020,15 August 2020,24 December 2020 - related to 762, 821, 1128 and all sections on urban planning analytics, GIS analytics among other topics in NeuronRain Theory Drafts
821. (THEORY and FEATURE) Word Embedding on a Vectorspace - Spark SkipGram Log Likelihood - Text Similarity, Dissimilarity and Merit Measure of Originality - 10 May 2020,11 May 2020 - related to 762,815 and all sections on Kernel Lifting, Intrinsic Merit of Academic publications/Large Scale Visuals/Music/People, Psychoanalysis and Shell Turing Machines
822. (FEATURE) Word Embedding of Text on Vectorspace - Merit of Academic Publications - an alternative to H-index - implementation changes - 11 May 2020 - related to 821
826. (FEATURE) Spark SkipGram Word2Vec Bibliometrics - increased vocabulary and accuracy - 9,11 June 2020
827. (THEORY and FEATURE) Intrinsic Merit of Academic Publications - Bibliometrics - First Order Logic, Monoidal Categories, Girard Geometry of Interactions (GoI), Sequent Calculus, ProofNets - related to 624,821,822,826 - 10,11,13,14,15,16,17 June 2020
829. (THEORY and FEATURE) Intrinsic Merit of Academic Publications - Bibliometrics - SkipGram Word2Vec of publication full text - Concept Cloud Wordle - TOP Categories, High Dimensional Inference, Shell Turing Machines and Kernel Lifting,Lambda functions and Beta Reduction, Meaning representation, Graph Edit Distance - related to 827 - 13,14,15,16,17 June 2020,13 July 2020, 6 December 2020, 25 January 2021, 5 March 2021
836. (THEORY and FEATURE) People Analytics - Theoretical (Drone) Electronic Voting Machines - Population Count - Number of 1s (Decimal parity) in a bitstream - Various algorithms - Parallel computation in Spark - 3 July 2020
839. (THEORY and FEATURE) Bibliometrics - Patents as ProofNets and Search - Novelty detection and Originality merit measure, Latent Semantic Analysis, Low Rank Approximation - 6,7,8 July 2020 - related to 829
840. (THEORY and FEATURE) Fraud Analytics - Cybercrime analyzers - related to 752, 770 (USBWWAN wireless traffic and Ftrace analyzers) - 6,7,8 July 2020
841. (THEORY and FEATURE) Digital Watermarking of Large Scale Visuals in OpenCV - related to 581,840 and all sections on Large Scale Visual Recognition Analytics, Handwriting Recognition and Fraud analytics - 10,11,12 July 2020
848. (THEORY and FEATURE) 1 August 2020 - Number crunching - Sublogarithmic Prime power encoding of huge integers by Computational Geometric Factorization and 2060 bits integer factorization quadcore benchmark - related to 2 and all sections on Text Compression and Compressed Sensing, Factorization and its applications, Multiplicative Integer Partitions of NeuronRain Theory Drafts
859. (THEORY and FEATURE) Numeric Compression by Unique Integer Factorization - updated - Spark 
1129. (THEORY and FEATURE) People Analytics - Feasibility of Automated Talent Recruitment - Fame Versus
1131.(THEORY and FEATURE) Bibliometrics - Merit of Academic Publications - Transformers Attention Model implementation - related to 702,707
1140. (THEORY and FEATURE) Teapot Shards and Space filling - related to 135,649,819,752 and all sections on Space filling, Equal and Unequal 
1141. (THEORY and FEATURE) Digital Watermarking - refactored - Image and Video functions - related to 841 and all sections on Merit of
1145. (THEORY and FEATURE) Causal and Graphical Event Models, Collatz Conjecture, Economic Datasets, Complementary Functions and Sequences,
1147. (THEORY and FEATURE) ThoughtNet Hypergraph - Difficulty in unique determination of a hyperedge - 24 June 2021 - related to all sections
1151. (THEORY and FEATURE) Graph Theoretic Urban Sprawl Analytics, Konigsberg problem, Edge and Vertex covers, Social Network Analysis, Eulerian circuits, Dense subgraphs and Minimum spanning tree - related to 753 and all sections on Urban Sprawl and GIS analytics, Graph theoretic Merit of Large Scale Visuals, Image segmentation, Drone Navigation, Social Network Analysis - 14,15,16 July 2021

==================================
Regular expression search of  ../../Grafit/course_material/NeuronRain/LinuxKernelAndCloud/code/AdvertisementAnalytics_RecommenderSystemsCF.txt  for query  FEATURE :
==================================

==================================
Regular expression search of  ../../Grafit/course_material/NeuronRain/LinuxKernelAndCloud/LinuxKernelAndCloud.txt  for query  FEATURE :
==================================

(<class 'ValueError'>, ValueError("invalid literal for int() with base 10: 'Proﬁle'"), <traceback object at 0x7f11cca5daf0>)
(<class 'IndexError'>, IndexError('list index out of range'), <traceback object at 0x7f11cca5daf0>)
(<class 'IndexError'>, IndexError('list index out of range'), <traceback object at 0x7f11cca5daf0>)
(<class 'ValueError'>, ValueError("invalid literal for int() with base 10: 'https://sites.google.com/site/kuja27/'"), <traceback object at 0x7f11ccefdbe0>)
Profile
(<class 'ValueError'>, ValueError("invalid literal for int() with base 10: 'Experience'"), <traceback object at 0x7f11ccefdbe0>)
(<class 'ValueError'>, ValueError("invalid literal for int() with base 10: 'Architect'"), <traceback object at 0x7f11ccefdbe0>)
(<class 'ValueError'>, ValueError("invalid literal for int() with base 10: 'Home'"), <traceback object at 0x7f11ccefdbe0>)
(<class 'ValueError'>, ValueError("invalid literal for int() with base 10: 'Jobs'"), <traceback object at 0x7f11ccefdbe0>)
(<class 'ValueError'>, ValueError("invalid literal for int() with base 10: 'Network'"), <traceback object at 0x7f11ccefdbe0>)
(<class 'ValueError'>, ValueError("invalid literal for int() with base 10: 'Proﬁle'"), <traceback object at 0x7f11ccefdbe0>)
startdate: 2015-04-01 00:00:00
enddate: 2015-09-01 00:00:00
(<class 'ValueError'>, ValueError("invalid literal for int() with base 10: 'Consultant'"), <traceback object at 0x7f11ccefde60>)
startdate: 2014-06-01 00:00:00
enddate: 2014-07-01 00:00:00
(<class 'ValueError'>, ValueError("invalid literal for int() with base 10: 'Consultant'"), <traceback object at 0x7f11ccefdb40>)
startdate: 2014-02-01 00:00:00
enddate: 2014-02-01 00:00:00
(<class 'ValueError'>, ValueError("invalid literal for int() with base 10: 'Consultant'"), <traceback object at 0x7f11ccefdc80>)
startdate: 2013-10-01 00:00:00
enddate: 2013-12-01 00:00:00
startdate: 2011-07-01 00:00:00
enddate: 2013-01-01 00:00:00
startdate: 2010-08-01 00:00:00
enddate: 2011-08-01 00:00:00
(<class 'ValueError'>, ValueError("invalid literal for int() with base 10: 'Consultant'"), <traceback object at 0x7f11cca5daf0>)
startdate: 2011-01-01 00:00:00
enddate: 2011-03-01 00:00:00
(<class 'ValueError'>, ValueError("invalid literal for int() with base 10: 'M.Sc'"), <traceback object at 0x7f11cca5db40>)
startdate: 2008-08-01 00:00:00
enddate: 2010-07-01 00:00:00
startdate: 2006-03-01 00:00:00
enddate: 2008-07-01 00:00:00
(<class 'ValueError'>, ValueError("invalid literal for int() with base 10: 'Verizon'"), <traceback object at 0x7f11cca5db90>)
startdate: 2005-07-01 00:00:00
enddate: 2005-08-01 00:00:00
(<class 'ValueError'>, ValueError("invalid literal for int() with base 10: 'Member'"), <traceback object at 0x7f11cca5dc80>)
startdate: 2000-02-01 00:00:00
enddate: 2005-07-01 00:00:00
startdate: 1999-07-01 00:00:00
enddate: 2000-01-01 00:00:00
Education
(<class 'ValueError'>, ValueError("invalid literal for int() with base 10: 'Education'"), <traceback object at 0x7f11cca5dc30>)
startdate: 2010-01-01 00:00:00
enddate: 2011-01-01 00:00:00
startdate: 2008-01-01 00:00:00
enddate: 2010-01-01 00:00:00
startdate: 1995-01-01 00:00:00
enddate: 1999-01-01 00:00:00
startdate: 1988-01-01 00:00:00
enddate: 1992-01-01 00:00:00
(<class 'ValueError'>, ValueError("invalid literal for int() with base 10: 'Skills'"), <traceback object at 0x7f11cca5dc30>)
(<class 'ValueError'>, ValueError("invalid literal for int() with base 10: 'Recommendations'"), <traceback object at 0x7f11cca5dc30>)
(<class 'ValueError'>, ValueError("invalid literal for int() with base 10: 'Accomplishments'"), <traceback object at 0x7f11cca5dc30>)
(<class 'ValueError'>, ValueError("invalid literal for int() with base 10: 'Contact'"), <traceback object at 0x7f11cca5dc30>)
number of connections: 366
connections: ['Working', 'on', 'Private', 'Open', 'Source', 'Architecture,', 'Research', 'And', 'Development', 'initiative', 'Srinivasan', 'Kannan', 'Chennai', 'Mathematical', 'Institute', 'Chennai,', 'Tamil', 'Nadu,', 'India', '·', '366', 'EDIT', 'PROFILE', 'Srinivasan,', 'update', 'your', 'proﬁle', 'to', 'get', 'noticed', 'Get', 'news', 'and', 'insights', 'in', 'your', 'feed!', 'Get', 'updates', 'from', 'industry', 'experts.', 'Start', 'by', 'following', '5', 'people', 'you', 'like.', 'FOLLOW', 'PEOPLE', 'Proﬁle', '9', 'Your', 'proﬁle', 'views', '366', 'Your', 'Connections', 'https://sites.google.com/site/kuja27/', 'Experience', 'Free', 'Open', 'Course', 'Material', 'GRAFIT', 'Open', 'Learning,', 'Chennai', 'and', 'Kumbakonam', 'May', '2010', '-', 'Present', 'See', 'description', 'Founder,', 'Open', 'Source', 'Architect', 'and', 'Developer', 'Krishna', 'iResearch', '(parallel,self-started,non-funded,not-for-proﬁt,opensource', 'research', 'initiative),', 'Chennai', 'and', 'Kumbakonam', 'May', '2003', '-', 'Present', 'Open', 'in', 'app', 'See', 'description', 'Architect', 'Home', 'Jobs', 'Network', 'Proﬁle', 'Search', 'for', 'people', 'CusDelight-CloudEnablers-Corestack,', 'Chennai', 'Apr', '2015', '-', 'Sep', '2015', 'Consultant', '-', 'Fulltime', 'Clockwork', 'Interviews', '-', 'PiQube', 'Jun', '2014', '-', 'Jul', '2014', 'Consultant', 'Clockwork', 'Interviews', '-', 'PiQube,', 'In-Ofﬁce-', 'Chennai', 'Feb', '2014', '-', 'Feb', '2014', 'Consultant', '-', 'parttime', '-', 'nonproﬁt', 'Clockwork', 'Interviews', '-', 'PiQube,', 'Kumbakonam', 'Oct', '2013', '-', 'Dec', '2013', 'Senior', 'Lead', 'Software', 'Architect', 'Global', 'Analytics', 'Jul', '2011', '-', 'Jan', '2013', 'Junior', 'research', 'fellow', 'Chennai', 'Mathematical', 'Institute', 'Aug', '2010', '-', 'Aug', '2011', 'Consultant', 'Global', 'Analytics', 'Jan', '2011', '-', 'Mar', '2011', 'M.Sc', 'Chennai', 'Mathematical', 'Institute', 'Aug', '2008', '-', 'Jul', '2010', 'See', 'description', 'senior', 'engg', 'specialist', 'webMethods', '(now', 'Software', 'AG)', 'Mar', '2006', '-', 'Jul', '2008', 'System', 'analyst', 'Verizon', 'Jul', '2005', '-', 'Aug', '2005', 'Member-Tech', 'Staff', 'Sun', 'Microsystems', '(now', 'Oracle)', 'Feb', '2000', '-', 'Jul', '2005', 'associate', 'software', 'enggr', 'BaaN', 'Infosystems', '(Hyderabad)', 'Jul', '1999', '-', 'Jan', '2000', 'Education', 'Chennai', 'Mathematical', 'Institute', 'Open', 'in', 'app', '(Ph.D),', 'Theoretical', 'Computer', 'Science', '2010', '-', '2011', 'See', 'description', 'Chennai', 'Mathematical', 'Institute', 'M.Sc,', 'Theoretical', 'Computer', 'Science', '2008', '-', '2010', 'See', 'description', 'PSG', 'College', 'of', 'Technology', 'Bachelor', 'of', 'Engineering', '(BE),', 'Computer', 'Science', 'and', 'Engineering', '1995', '-', '1999', 'Dakshina', 'Bharat', 'Hindi', 'Prachar', 'Sabha', 'B.A,', 'Hindi', '1988', '-', '1992', 'Skills', 'Recommendations', 'Accomplishments', 'Contact', 'Open', 'in', 'app']
Tenure statistics - avg_n_pos_per_prev_tenure,avg_pos_len,avg_prev_tenure_len,n_prev_tenures,tenure_len,n_followers: [1, 48492000.0, 43309440.0, 15, [126230400], 366]
Work Experience: ['Apr 2015 - Sep 2015', 'Jun 2014 - Jul 2014', 'Feb 2014 - Feb 2014', 'Oct 2013 - Dec 2013', 'Jul 2011 - Jan 2013', 'Aug 2010 - Aug 2011', 'Jan 2011 - Mar 2011', 'Aug 2008 - Jul 2010', 'Mar 2006 - Jul 2008', 'Jul 2005 - Aug 2005', 'Feb 2000 - Jul 2005', 'Jul 1999 - Jan 2000']
Academics: ['2010 - 2011', '2008 - 2010', '1995 - 1999', '1988 - 1992']
Tenures: ['Apr 2015 - Sep 2015', 'Jun 2014 - Jul 2014', 'Feb 2014 - Feb 2014', 'Oct 2013 - Dec 2013', 'Jul 2011 - Jan 2013', 'Aug 2010 - Aug 2011', 'Jan 2011 - Mar 2011', 'Aug 2008 - Jul 2010', 'Mar 2006 - Jul 2008', 'Jul 2005 - Aug 2005', 'Feb 2000 - Jul 2005', 'Jul 1999 - Jan 2000', '2010 - 2011', '2008 - 2010', '1995 - 1999', '1988 - 1992']
Tenure Histogram - Integer Partition - : [13219200, 2592000, 0, 5270400, 47520000, 31536000, 5097600, 60393600, 73699200, 2678400, 170812800, 15897600, 31536000, 63158400, 126230400, 126230400]
Tenure Histogram - Partition Rank: 170812784
leftjustified: ['p', 'q', 'r', 's', 't']
embedding1: ['p', 'q', 'r', 's', 't']
embedding2: ['p', 'q', 'r', 's', 'z']
Alphabet Vectorspace Embedding Distance between  ['p', 'q', 'r', 's', 't']  and  ['p', 'q', 'r', 's', 'z'] : [[0.]
 [0.]
 [0.]
 [0.]]
Normalized Alphabet Vectorspace Embedding Distance between  ['p', 'q', 'r', 's', 't']  and  ['p', 'q', 'r', 's', 'z'] : [[0.]
 [0.]
 [0.]
 [0.]]
leftjustified: ['S', 'h', 'r', 'i', 'n', 'i', 'v', 'a', 's', '#', '#', '#']
embedding1: ['S', 'h', 'r', 'i', 'n', 'i', 'v', 'a', 's', '#', '#', '#']
embedding2: ['S', 'h', 'r', 'i', 'n', 'i', 'v', 'a', 'a', 's', 'a', 'n']
Alphabet Vectorspace Embedding Distance between  ['S', 'h', 'r', 'i', 'n', 'i', 'v', 'a', 's', '#', '#', '#']  and  ['S', 'h', 'r', 'i', 'n', 'i', 'v', 'a', 'a', 's', 'a', 'n'] : [[0.]
 [0.]
 [0.]
 [0.]]
Normalized Alphabet Vectorspace Embedding Distance between  ['S', 'h', 'r', 'i', 'n', 'i', 'v', 'a', 's', '#', '#', '#']  and  ['S', 'h', 'r', 'i', 'n', 'i', 'v', 'a', 'a', 's', 'a', 'n'] : [[0.]
 [0.]
 [0.]
 [0.]]
leftjustified: ['S', 'h', 'r', 'i', 'n', 'i', 'v', 'a', 's', '#']
embedding1: ['S', 'h', 'r', 'i', 'n', 'i', 'v', 'a', 's', '#']
embedding2: ['S', 'r', 'i', 'n', 'i', 'v', 'a', 's', 'a', 'n']
Alphabet Vectorspace Embedding Distance between  ['S', 'h', 'r', 'i', 'n', 'i', 'v', 'a', 's', '#']  and  ['S', 'r', 'i', 'n', 'i', 'v', 'a', 's', 'a', 'n'] : [[0.]
 [0.]
 [0.]
 [0.]]
Normalized Alphabet Vectorspace Embedding Distance between  ['S', 'h', 'r', 'i', 'n', 'i', 'v', 'a', 's', '#']  and  ['S', 'r', 'i', 'n', 'i', 'v', 'a', 's', 'a', 'n'] : [[0.]
 [0.]
 [0.]
 [0.]]
leftjustified: ['S', 'r', 'i', 'n', 'i', 'v', 'a', 's', 'a', 'n', '#', '#']
embedding1: ['S', 'h', 'r', 'i', 'n', 'i', 'v', 'a', 'a', 's', 'a', 'n']
embedding2: ['S', 'r', 'i', 'n', 'i', 'v', 'a', 's', 'a', 'n', '#', '#']
Alphabet Vectorspace Embedding Distance between  ['S', 'h', 'r', 'i', 'n', 'i', 'v', 'a', 'a', 's', 'a', 'n']  and  ['S', 'r', 'i', 'n', 'i', 'v', 'a', 's', 'a', 'n', '#', '#'] : [[0.]
 [0.]
 [0.]
 [0.]]
Normalized Alphabet Vectorspace Embedding Distance between  ['S', 'h', 'r', 'i', 'n', 'i', 'v', 'a', 'a', 's', 'a', 'n']  and  ['S', 'r', 'i', 'n', 'i', 'v', 'a', 's', 'a', 'n', '#', '#'] : [[0.]
 [0.]
 [0.]
 [0.]]
leftjustified: ['R', 'a', 's', 'a']
embedding1: ['R', 'a', 's', 'a']
embedding2: ['R', 'a', 'j', 'a']
Alphabet Vectorspace Embedding Distance between  ['R', 'a', 's', 'a']  and  ['R', 'a', 'j', 'a'] : [[0.]
 [0.]
 [0.]
 [0.]]
Normalized Alphabet Vectorspace Embedding Distance between  ['R', 'a', 's', 'a']  and  ['R', 'a', 'j', 'a'] : [[0.]
 [0.]
 [0.]
 [0.]]
embedding1: [['n', 'o'], ['m', 'i'], ['n', 'a', 'l']]
embedding2: [['s', 'e'], ['m', 'i'], ['n', 'a', 'l']]
ordembedding1: [[110, 111], [109, 105], [110, 97, 108]]
ordembedding2: [[115, 101], [109, 105], [110, 97, 108]]
Earth Mover Distance between two String syllable tensors: (0.006666666828095913, None, array([[110.,   0.,   0.,   0.,   0.,   0.,   0.],
       [  5., 101.,   0.,   0.,   0.,   0.,   0.],
       [  0.,   0., 109.,   0.,   0.,   0.,   0.],
       [  0.,   0.,   0., 105.,   0.,   0.,   0.],
       [  0.,   0.,   0.,   0., 110.,   0.,   0.],
       [  0.,   0.,   0.,   0.,   0.,  97.,   0.],
       [  0.,   0.,   0.,   0.,   0.,   0., 108.]], dtype=float32))
embedding1: [['t', 'e', 'r'], ['m', 'i'], ['n', 'a', 'l']]
embedding2: [['s', 'e'], ['m', 'i'], ['n', 'a', 'l']]
ordembedding1: [[116, 101, 114], [109, 105], [110, 97, 108]]
ordembedding2: [[115, 101], [109, 105], [110, 97, 108]]
Earth Mover Distance between two String syllable tensors: (0.0, None, array([[115.,   0.,   0.,   0.,   0.,   0.,   0.],
       [  0., 101.,   0.,   0.,   0.,   0.,   0.],
       [  0.,   0.,   0.,   0.,   0.,   0.,   0.],
       [  0.,   0., 109.,   0.,   0.,   0.,   0.],
       [  0.,   0.,   0., 105.,   0.,   0.,   0.],
       [  0.,   0.,   0.,   0., 110.,   0.,   0.],
       [  0.,   0.,   0.,   0.,   0.,  97.,   0.],
       [  0.,   0.,   0.,   0.,   0.,   0., 108.]], dtype=float32))
embedding1: [['S', 'h', 'r', 'i'], ['n', 'i'], ['v', 'a', 'a'], ['s', 'a', 'n']]
embedding2: [['S', 'r', 'i'], ['n', 'i'], ['v', 'a', 's', 'a', 'n']]
ordembedding1: [[83, 104, 114, 105], [110, 105], [118, 97, 97], [115, 97, 110]]
ordembedding2: [[83, 114, 105], [110, 105], [118, 97, 115, 97, 110]]
Earth Mover Distance between two String syllable tensors: (0.3320339024066925, None, array([[ 83.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.],
       [  0., 104.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.],
       [  0.,   9., 105.,   0.,   0.,   0.,   0.,   0.,   0.,   0.],
       [  0.,   1.,   0.,   0.,   0.,   0.,   0.,   0.,   0., 104.],
       [  0.,   0.,   0., 110.,   0.,   0.,   0.,   0.,   0.,   0.],
       [  0.,   0.,   0.,   0., 105.,   0.,   0.,   0.,   0.,   0.],
       [  0.,   0.,   0.,   0.,   0., 118.,   0.,   0.,   0.,   0.],
       [  0.,   0.,   0.,   0.,   0.,   0.,  97.,   0.,   0.,   0.],
       [  0.,   0.,   0.,   0.,   0.,   0.,   0.,  97.,   0.,   0.],
       [  0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.],
       [  0.,   0.,   0.,   0.,   0.,   0.,   0.,  11.,   0.,   0.],
       [  0.,   0.,   0.,   0.,   0.,   0.,   0.,   7.,  97.,   6.]],
      dtype=float32))
embedding1: [['a'], ['b'], ['c'], ['d'], ['e'], ['p']]
embedding2: [['f'], ['g'], ['d'], ['h'], ['k'], ['l']]
ordembedding1: [[97], [98], [99], [100], [101], [112]]
ordembedding2: [[102], [103], [100], [104], [107], [108]]
Earth Mover Distance between two String syllable tensors: (0.006410256493836641, None, array([[ 97.,   0.,   0.,   0.,   0.,   0.],
       [  0.,  98.,   0.,   0.,   0.,   0.],
       [  0.,   0.,  99.,   0.,   0.,   0.],
       [  0.,   0.,   0., 100.,   0.,   0.],
       [  0.,   0.,   0.,   0., 101.,   0.],
       [  0.,   0.,   0.,   0.,   4., 108.]], dtype=float32))
Edit Distance between two Strings: 6
[
     {
          "@available_sources": 108,
          "@http_status_code": 200,
          "@persons_count": 1,
          "@search_id": "1909110837557399604094477464130613465",
          "@visible_sources": 15,
          "available_data": {
               "premium": {
                    "addresses": 2,
                    "educations": 5,
                    "emails": 6,
                    "genders": 1,
                    "images": 5,
                    "jobs": 24,
                    "names": 3,
                    "relationships": 6,
                    "social_profiles": 6,
                    "user_ids": 7,
                    "usernames": 2
               }
          },
          "person": {
               "@id": "16986908-d9c4-4a03-b6d3-d3e5bc578905",
               "@match": 1.0,
               "@search_pointer": "19d6503daaa1cad0926272cc431743784861996c6bf6d3ddc94c34c3bbdb0de0fe99cd7e53decc6e9952e09fa272a727ef2100325d83777827a88a4b0f8862e4f9c63247391ade9779a54f902b56392852062292b2184b37343c9ae0392145c52fd549d3890cd483e0f143d66ec5ef0e5c25ac040dedc87828376f8e788bf5875f3be42b58bf468f5cf1499782a33bea46dd0c1392799050442564d90bffae1953666fa3a29ff6879d4a1c41744c18a5e8188a0dfed1c25c0ba944e8e0374b488cab475c6c9ff526e8904145ccc4cfd6a5cbc2173ffaca506d175f6defa89ae3835426b2b4fdd9ee8d50bd484ddb95a69b6294c2499e329466e7648d6c58955f2ccd6a377a4f7f86403915982f74803f3ec8089b10dd88b4e1c1fe57c2eee1872a847f073fed7040d734240441844467fe04b5d4e5427f61842c45563fe91f646f7cfed2d22fd2f8ac3bbdeeb7d2ccd01eb89d86e787aa424f966741754f515f24c4622912480c31f2463774c06ed6f29f2bb26a3d66cc86ce153b551675d94e1f4dd70d48464468b4d70b76a5df132301195ba8bcd8e1927efee8b18fa602e059db4000962e3dc250b282c0f2a5b6a86b67d7dbd43ba87ef170e9a858aad9b795e4766ab798faf6e3b2b7d5ae3b1b76e95480484db52773f2b38e1984b8ff4218b7551012c554aa5b2f6ffb11b4da149922cd2fe0502da87ccc152b33bbc48646241b2f4e13582a0dd7e210ccbe351075d27d1f2775c524ddb6a0c6ee3e478ada6d5bfd113dd1ebda9fcf34a02ecd91e67af342e51c452fb0eedf2df13b1637515538cfacc3ede8acb8580a1a32132fe62c4a770d2d0385a74bfab5897e1fb21c52650e3f4996ffb1f7bda15aebe4a19cbda8eef4a4e6b93502aa5b1e875ffce894ce9ce15f91aea523108290bfd517832c0a45e187f0903928d39b84f107547e68bf937b306f96b5ec30f9cd2054cc6b01e8d53e6b10c656fc3b7437d9f7e76595d2d14bf0fe7e2067c600ea661b63de408aa72ec50329c3030bac63c36cf2a0b625b7aaa03cb29aef46e9db563f6060a8e2c51c1308b8fe839724ef8ef758b62d464b782bc9753d67019031833282c9b09ce33065773c315d9e14c4a1cc7dd8f0220cb72af6df337423ad3977197e0b6f4469f5ab21184233adb0a868b8e38aae442628d3b628315a57d1ba47a004129451580f10b08a1ea4cb4b44b74850e36a919438111f0a4eea8c14a63061a84f8da0172a2cc001fb0182c588318c77548b0c7f20dbab2b4f6c3da62897db003e92e545dff29266ea398d33039a9c2f322a368f54ea80e05b8f0a45937cdb38a5e2b3813ec62981961560ec606069cfe040c4a82f4d0115e2a7d6b3aee3e62fb8298ced43026df34a49fa107fa6da065f1abc7995270774541285ebd5781a4198db6018b8f24c6e53296e6789cf0b95fa29972e6400c1e78c2eeed0f8a9365bf60afc5613e487d1920286c2f61d0e459704476cc5808cb50fcee240b7f10f0cd80759d0b099aba6438068b05f8d22628dc777569d79d43fccb0cb7f2574cde30e3fdf94ea36bd0d723d1d2104d9da22371befc312d18f06c1fbbd9ad9b419b817ab2e9c961063b754f46d5678664f41d1767d11d004357ffaecb6b7072cf9f20e820a05b3d3a51e0c2c8b43395ef5479b869a9dec6157754b1c74a16aa9d0ce57bf5cd2f0f9c3a735e941fd64cbc6bcb744094251c623356dd9d2e6d47e6710aceae9ae69c2275c7df51b3198155763c1f2588ab1a29f638df6e16947d356e5a3e52f1ab4ebadeee79f763dc7c3b7f6ac290f3574fb84e3d2a02e4312d754e3875ed920dff4facb963d779739ea6cc484e60b0ab57a982788c436f992196938088249768bc6603c6c0d1d703b9c22580dc3f96eb50cd38adf3d072bd68fb4f0bb07db2a93b4308cd428864ec47f0e3540b9f7eb5e9fff588427d04c387aacd4ccaec18dd124f5653050aab000dce87c80c2b7b9b71457c768ae16513b2028fb5a4722a94aa4b2fc36a1e752d29016dcfcd8a22d3a1b0f118918bafb396ec9ff4d22d91272279c874b595dbbc8b6f6a991b40efe4379818d6917bfb6953c7f08dc31d79554d979f533a55214909b46ecdbccd70db9d4c143312f732e89b4013a79bb71b601a9a8cb6ee429a9ffec261d366060b5ce3dd08bfe142f9906eb7d46996071206cfa4bd98f7be6a685a09952614bce300a56ece43357c077b06c1c58152d98a40fa2443bc5d2e4bc2780ca792f258b6ce3f55fe6e2c95659ab4866127eebd2d713ece5d267face8054386b86defc5a43d56b3bab2e89ea7f11307e7f15ec171a4970090ef224a05b4b6b7bfe4abadc1e4f41ec67878f563260168540bac45cb883e34d0f56ba0636390048ac09e74452d3149591560ac25ced9f7eec6dc43654a2e016d1df305d0197f24a76cea6e8b2af9c51bad360ee2913afb530c4357044caaf31e7c456b13e82ef3c3c00b074500f3db0c273db01de4c04aeb6f6e5e8eafbe2455e02c311ebeb1c1319097d4255ac99aefb5c5a60c0c2c7e7fae5e7afa8ba72a1cca30ba575154ac779f1f38f6b7744fd9cbb20d877f0e6acbb584c886c056226e41052d8b5eb8e509467dddfff84e1a80f793b9633642c9902d8cbbf23d139bba40179e797416da037c752d634061022216657a59cf1c2928d631e712a4e8f4992cebc9395365f292380ff7407d31077841194075aa379cddb469528d6d16d4ebd8f42ee5efe461a39785172d3701d762416a77817049a954cc4f133b10875d6075b77e1e4554dfbc6a0ed671029d4fe61d6dc09a39c732e28f48f1b1ff6a1194dc211e238c35617209ce75dd756500c6e552624b2c409c74ab9ed77aeed632dd7ab07d5b264a0f8ad107f81263488403ff1ed5dbeb666257dae28b5449e4d57c10f4e7a69ab175aefd0d9c87a6aba8d8f6fa8147bcc6c2dc05485e92c09d59fde91d10b5d06cd04ae6df70736c99cd8d0eaf1ee518bbee29c04a5012b6d8ff4ab6f4420adf4858debd910048281a4bc1750906b611cd44aed1b12c0ad546597275f282d48bd6ce6ce77a53236a1adb9d4a2aa604ad63b9dacdfd554a6cdcef3cbb5d7965e4e85fd426437559e0304eefd68440bccac1456fec821fefd919ffdfa98bc9224ea1b136032b4733159c03fb5f1d03c3d6fd0e47799d5aae6e01e39883ef42fe41e8b9da01dda28cc32baf4f748e7384d91b20520c511cd73b05cc3a120c945cde2df25358ec1021b4b3ae9f223c2c41bbb81568c31b02a5bd6feec87d4e48224167b11eb32e4a2a32016303ac73a3ef68cfb294ca057210c684fa7548be0ef4786d42c4790e438b1eb6398aa5c6ce797a85a1d3419ed947a27fcfd8fbdae9cfb3b3913a982c611c51bdd4695248c954f501c6f58eda3ae767b9edca5f230076c474fe34003c11b47e575dd25174d43d68d4ef11ad9cc027c0756ee13a1aa7f4686b290cf1b13a71d40070a1fddf9dc5081e47e5f9781c42585f3f08bc6e819fd4f976a250d05d0fc1bb5e5a81d547913d05ff99ce9eac53d3863cc312f041eef45547c1c3271c96ae3dd86673cae6fff5461e270dc081fe8fb224aefe5eef09644f9963d7872c4009105ca0a85cf02834121570d39fc4e6eddf4bf40039985597daffc5aa3468f0b343f2415ed2fd35bdf77ff8af18fd19adbaf59f79729f682131e42fce10137ac63a7034d5cbdd1585bd8d2d9944c8fa73a9deb432d721a013c19a8144107ac550a29aa1fa3c030075ca713279c5be4938388b9ecef73d771806fb61f8e119f88710b2d0d31c976072f1e047b8f40b5b9a74b4239df6f14b4bbf03eef475dd8b33ed8e875e1b9124049adef6384efb8b037e3406af5cf7987b957d62a53e685b31509f9be2946cb83dea3a65da39a618c4cfd18a6ad3ae55434996632531a239673a4977bf2ed7c9419cf8e2ecb6d28bbc66dfcc15885c59f57b83acb885e446400266676e712900d7dfd2d564d06befe44127fd8d45f95e9dd8dfd7ccade1e1eb93891e67ca376a178ee1c82fea30c68ff19db4d90368e89642404a372fe284d44109cac638c720033ba343a5c7a62cd63dea80520d6fb91f7d46125995f4b971996a228ce2eb870d8c376ef827de7ce0c64a331131f5f943228428e955a8eb1a738b174d0669542a5ff7a916c4e7cc87f73bb670f092b91ad9d9cf2dbab435793f0a0ddbe1ae51fdc29ea277143c21913781039cfff5bc11fb6d175a11c36ac18bbe778272879f449c0e417ac9bc753f99f45381fab50108b5fd7d510dd0c26bb14adb3589157e4a6cfb07b8c1fb58df6058105b4c4c7439e6c7ae3bb03fd790fe5962263093f1f36baf610556a08afa4a40d1362cc1b25b1f6397a75ef45f21b88c71335c0215411e216c50c9e95293326f8d6c3971030170d46193a3d79ac40126503f8b76f0795851cc48c0ae4909104d9ed459c34d19176f5a4c79a7a480a90cd909772e2d4974bdaa83393dbb56505d97f3537905ad1d950bb03cc605e2e9264a68e71fd79348cadbdd078174e7848cead4b7c05945e869bb5d927b49335b89d4589286fcdda19f4b745cf9772ce651a55db1dadbde0adbe5332b05450385ed081330151d94db3f77a7e438654b812d3c92854e82dd24d53ab74236b1c2434e4dfe0c00944804e6741bb3645837eb3dde833f02f4f38b990ef3886d63bc84e2b7cc7d0c6c58ddd1f3c4799160a2974b56e46117dad9892107d587b513c55a762d08d6c54fa05fbfa9e9d5bd879386bea4448c5823aba68461451d8f602c8795ebc2ef5fab286c0cfbf7bc157971720c76182c6190a1182b85562d634c7e98a24cef6b025a72601d24056e8819c6462794810c8c45c614e31649919d6daab823d7177d430902ce353fda36841c91cc644fc58e763feb7a3e8657541ee0234d450a4246344509f86f7baf8b777af9d69aa60e9500d6cf4dce31518b36c7d449855e8540df6b557818076b254155f432d75b18ae57a86ca1cc0b8fbe10591aae259b51dfe4562298ccdba7a7e83084d5895055677444d7aa64c7629ac7d5329d44b3d09074d500c204f21a5ea229f60fa99d046b10bac0604f23e6b5c71e4e17b18d7b1ae000b3d0ad125fe69ad8d80250950c50b768cbe83c1cfeb154357447936e4297bf1f91a594db54fd9812ceb1b76b0ef6fe07d75334f7d13aea606fcec66818e1f0d686826e3f873fc7dd70b77e48abbedafcf70a2a9635d992e4989719972bc956880d6e455fb076cb39d1e5402d7c74db95bb1c0a3534fe114b2838e4683cf79334d58655d652266d1e89e106ea432fca3d012545661597826d24b88cb5ff553f17d64773ba965f10c762e6bfbf561a0bed6661a2785595ac8b046c492413fdac5694b791d47f2730248a684d843507767be536585be2cda4fb2cdec51fffe60e7156ce6918ba904be6a90ea9898b9fef27216b0914e2485f4c71ead775540f02bf14520a7dcd8a5d73dae87663e949cce591f51886973d15d9b4ea4cab3e1d71a3a6f98f3f7332f584da1a282b68c9ca5a1d9658e03b5287ae09fc8020ee6c857d610edf8b63a163d6da0ad4ddf9b1ebb388c2bc750640a53e2cdc1f7de89712d89564503201f9dd4def7662d7a11e5b6a8fe71ed63be57b15a8ed9d188c8836d8429d5709de92a64755d8d4aeda66da94f933eb01a81a79f4a8583ca05dd2291966a17683f16b44570ae50acae25c74dd4c532dcdb8e7758187693cd562eaa3cfcef6bb6be447a966ecfaaf14727cb38d1665b19f29757d2b67de5857324e25ea50bd44d0bc4c62205945b5cf0c4b6d39f5d8a60b754a30f8a86f7c140e7474625043bc5ebe8b6f3bd6c35354a9c67a26b2b136e9aa4d9dec6b49eb6b115ce3b2ef9967f1b16e793ee06f393ae7839dca7e4390d07cedea301ccc0c3dafdc9839f0b990d2ebbb34bff5dbef0cfd4ff996df96f50d9ff8132bbab0144ebd12542dae58143afb6cb60c235dcd8cd6e519726f0bca93c993d1a0645ae6d31f46d5e5df914f77eb771a15f2622bcfe263cb21afa35b63938be2b8a962762a2045db5dd4da6850958f2a399132739ecf4455a0cb84c8c047f3f0b2d5b1bdac9b210226b2e3ae7821f3f3a5bde69ee733bbbf59e7a13a8926f22422e7f1e40afcef12d03d39c06561326886dc40e0c1acbd3450f5a07dfaee8fa3ac07b225db9066a9c0087bca0f4fd8a1f204862203a78672edd89fdad0dd7d8d5d5f5488dcc9bf905c49dc27422a93b34b5b7e420477dcb5a43876cddcb377dec45adeffd414303b51da9ac7386d9705773d835d047e5fa93f63618e551ef2bf78877d49165d42e88f0449e9efac6a31eeb5d58a5642d7741d12adf50a19f932e25cde9462eed353a5413860f58bb472c8fa8c548c8faa154b4644ec33dae787772cbab98f887f29ac4800e355db2d8e7f43b03cdf9d820459d03bb3bb39c68ec41c2cbef59952453b3dbcf167d804b9858aa5538ec792f4795dc80ec8e148a3918ead3a4d4ff5cb7eab08fb10db4d0d08309292e178909c309fa77ee8c16a3581917242c78d5e2b828fb0cd741222d669a8acf4c2b8e6f5518d840ecb78a94450c1fdaedc15d3bb504d530683688a3a619a9468a91157bf1b0f8fd7301c4a35289bf028856f13e9800a1857d8dd106c6c9a29823ef425082b2871b6bf31ef898b44896b93058c4eff495bf95755b0b74bedcd516f4012e344d0fa53907141eb78c59c9cb6d877f0008109952553f0f0b78b798a6806839dd309df31912a0d425649386508716863352c6447f75ba7b18be065b5f098ec23e4a5c25344f5cfb3559ca09efa3ab0ba505f40f5f04",
               "addresses": [
                    {
                         "@last_seen": "2018-06-28",
                         "@valid_since": "2010-12-03",
                         "city": "Chennai",
                         "country": "IN",
                         "display": "Chennai, India"
                    },
                    {
                         "@last_seen": "2018-06-28",
                         "@type": "work",
                         "@valid_since": "2015-09-30",
                         "city": "Kumbakonam",
                         "country": "IN",
                         "display": "Kumbakonam, India"
                    }
               ],
               "emails": [
                    {
                         "@email_provider": true,
                         "@last_seen": "2018-12-15",
                         "@type": "personal",
                         "@valid_since": "2012-07-22",
                         "address": "full.email.available@business.subscription",
                         "address_md5": "af96cf33e2024e7328bbc7675f771b1e",
                         "display": "full.email.available@business.subscription"
                    },
                    {
                         "@email_provider": true,
                         "@type": "personal",
                         "@valid_since": "2011-12-05",
                         "address": "full.email.available@business.subscription",
                         "address_md5": "a9e46cba401df1afdd7e1b5eba5b21a1",
                         "display": "full.email.available@business.subscription"
                    },
                    {
                         "@email_provider": true,
                         "@type": "personal",
                         "@valid_since": "2010-07-08",
                         "address": "full.email.available@business.subscription",
                         "address_md5": "5a35e71a9e313cd83fc1b36e8a921f51",
                         "display": "full.email.available@business.subscription"
                    },
                    {
                         "@email_provider": false,
                         "@last_seen": "2018-12-15",
                         "@valid_since": "2012-12-27",
                         "address": "full.email.available@business.subscription",
                         "address_md5": "6764275e5425999d910c4ac9976b1438",
                         "display": "full.email.available@business.subscription"
                    },
                    {
                         "@email_provider": true,
                         "@type": "personal",
                         "@valid_since": "2013-01-18",
                         "address": "full.email.available@business.subscription",
                         "address_md5": "e8c9ea39bf6e7cf1d0b75eaf19bb5760",
                         "display": "full.email.available@business.subscription"
                    },
                    {
                         "@email_provider": false,
                         "@type": "work",
                         "@valid_since": "2012-12-19",
                         "address": "full.email.available@business.subscription",
                         "address_md5": "0ba5c26ba75e2c48b4f08dc8e7b5d890",
                         "display": "full.email.available@business.subscription"
                    }
               ],
               "gender": {
                    "@valid_since": "2011-12-05",
                    "content": "male",
                    "display": "Male"
               },
               "images": [
                    {
                         "@valid_since": "2011-12-05",
                         "display": "http://graph.facebook.com/1186474769/picture?type=large",
                         "thumbnail_token": "AE2861B242686E6ACBCD539D133B8AE59A9AE962DB1FA5AA7AF08DAAD76B0DFE1F64838CD9CDB2322ADF85744B699B543C4E5FE3AC5A925CC78A78485D1B1861F699",
                         "url": "http://graph.facebook.com/1186474769/picture?type=large"
                    },
                    {
                         "@valid_since": "2016-01-17",
                         "display": "https://s-media-cache-ak0.pinimg.com/avatars/shrinivaasanka_1392636070_140.jpg",
                         "thumbnail_token": "AE2861B20B7D6E22CA814E9059348AAB9C99E565D51CA7AE27F1CCF2813454AE0530DAD8D9DCAD302ACB85625B6E8A56301D5AF4BF5C841BCD927073511B186BF39AC63006E11FBB5344F8B1D7E0B6B7AD9EBF71FCF012DD7E",
                         "url": "https://s-media-cache-ak0.pinimg.com/avatars/shrinivaasanka_1392636070_140.jpg"
                    },
                    {
                         "@last_seen": "2018-06-28",
                         "@valid_since": "2018-06-28",
                         "display": "https://media.licdn.com/dms/image/C5103AQElIOVKZ6nowg/profile-displayphoto-shrink_200_200/0?e=1535587200&v=beta&t=KGXPR6F4RKV3CymWr3LeTWUcV3de2Z7r2q2uAXaHZzk",
                         "thumbnail_token": "AE2861B20B7D6E22D4C9479C5C7387EF9C9CE823D35EABEA73B2CFB4863058AE4E7CF680C78DE8100FEF9B583B4BA97E6F1D5CF5B9128708CC9F784005054530B6D99C6148A128E5131BFBA8CFF5F9BDB5A8E97CF99A12DD7A9948B1D92730DCE7C5B74B5A526211CCC892B90151753EF5024DCEF082F55F1D7CD48C24C2D3BC4B16AE791B158B4A2F1489127F24C416775DD40F4560CE582B87BC16D23EB38D8D8373FBD7",
                         "url": "https://media.licdn.com/dms/image/C5103AQElIOVKZ6nowg/profile-displayphoto-shrink_200_200/0?e=1535587200&v=beta&t=KGXPR6F4RKV3CymWr3LeTWUcV3de2Z7r2q2uAXaHZzk"
                    },
                    {
                         "@last_seen": "2017-02-02",
                         "@valid_since": "2017-02-02",
                         "display": "http://pbs.twimg.com/profile_images/823093144023494656/uh0w69z8.jpg",
                         "thumbnail_token": "AE2861B242686E7DDBDF0D814A3486E1D19BE9609F41B4AA71B6D0FEB03454A84C36C69ACE8FE8616799C625402DD0176D4A07B4EB0BD80FCBC9661A59521977AFD9972655A229EE5A47EFE393B3",
                         "url": "http://pbs.twimg.com/profile_images/823093144023494656/uh0w69z8.jpg"
                    },
                    {
                         "@valid_since": "2014-03-29",
                         "display": "http://lh4.googleusercontent.com/-lsiOU7rL21o/AAAAAAAAAAI/AAAAAAAAAF0/JajVx47Doq4/photo.jpg",
                         "thumbnail_token": "AE2861B242686E61D1980D9252328CEA9A8DF568C252A9AB63BAD2EFC13E56A4047ED9C69FF28E662CE6C5201B32A365183272C39F7CB63BEAD6506D2169601884E8B14601FE0AEB0D22AEEF90C3FFA2EAD8AB24A6B14FC320C61FA8D869688DE9C5B2455F54",
                         "url": "http://lh4.googleusercontent.com/-lsiOU7rL21o/AAAAAAAAAAI/AAAAAAAAAF0/JajVx47Doq4/photo.jpg"
                    }
               ],
               "names": [
                    {
                         "@valid_since": "2000-01-01",
                         "display": "Shrinivas Kannan",
                         "first": "Shrinivas",
                         "last": "Kannan"
                    },
                    {
                         "@last_seen": "2018-06-28",
                         "@valid_since": "2014-01-01",
                         "display": "Srinivasan Kannan",
                         "first": "Srinivasan",
                         "last": "Kannan"
                    },
                    {
                         "@valid_since": "2011-12-05",
                         "display": "Shrinivaasan Ka",
                         "first": "Shrinivaasan",
                         "last": "Ka"
                    }
               ],
               "relationships": [
                    {
                         "@subtype": "Follower",
                         "@type": "other",
                         "@valid_since": "2012-07-13",
                         "names": [
                              {
                                   "@valid_since": "2012-07-13",
                                   "display": "Vinod Kumar Devi",
                                   "first": "Vinod",
                                   "last": "Devi",
                                   "middle": "Kumar"
                              }
                         ]
                    },
                    {
                         "@subtype": "Follower",
                         "@type": "other",
                         "@valid_since": "2012-07-13",
                         "names": [
                              {
                                   "@valid_since": "2012-07-13",
                                   "display": "Prakash Chandrasekaran",
                                   "first": "Prakash",
                                   "last": "Chandrasekaran"
                              }
                         ]
                    },
                    {
                         "@subtype": "Follower",
                         "@type": "other",
                         "@valid_since": "2012-07-13",
                         "names": [
                              {
                                   "@valid_since": "2012-07-13",
                                   "display": "Pranabendu Misra",
                                   "first": "Pranabendu",
                                   "last": "Misra"
                              }
                         ]
                    },
                    {
                         "@subtype": "Follower",
                         "@type": "other",
                         "@valid_since": "2012-07-13",
                         "names": [
                              {
                                   "@valid_since": "2012-07-13",
                                   "display": "Ram Janakiraman",
                                   "first": "Ram",
                                   "last": "Janakiraman"
                              }
                         ]
                    },
                    {
                         "@subtype": "Follower",
                         "@type": "other",
                         "@valid_since": "2012-07-13",
                         "names": [
                              {
                                   "@valid_since": "2012-07-13",
                                   "display": "Jose Mathew",
                                   "first": "Jose",
                                   "last": "Mathew"
                              }
                         ]
                    },
                    {
                         "@subtype": "Follower",
                         "@type": "other",
                         "@valid_since": "2012-07-13",
                         "names": [
                              {
                                   "@valid_since": "2012-07-13",
                                   "display": "Shubho Sengupta",
                                   "first": "Shubho",
                                   "last": "Sengupta"
                              }
                         ]
                    }
               ],
               "urls": [
                    {
                         "@category": "professional_and_business",
                         "@domain": "linkedin.com",
                         "@name": "LinkedIn",
                         "@source_id": "3226b889ddb5e951c00e509d2f677d39",
                         "display": "https://www.linkedin.com/in/srinivasan-kannan-608a671",
                         "url": "https://www.linkedin.com/in/srinivasan-kannan-608a671"
                    },
                    {
                         "@category": "personal_profiles",
                         "@domain": "facebook.com",
                         "@name": "Facebook",
                         "@source_id": "304265879bd07c9f1ba793284967b272",
                         "display": "http://facebook.com/people/_/1186474769",
                         "url": "http://facebook.com/people/_/1186474769"
                    },
                    {
                         "@category": "personal_profiles",
                         "@domain": "twitter.com",
                         "@name": "Twitter",
                         "@source_id": "ba371ee483f15414764f0b6797df4b60",
                         "display": "http://www.twitter.com/ka_shrinivaasan",
                         "url": "http://www.twitter.com/ka_shrinivaasan"
                    },
                    {
                         "@category": "personal_profiles",
                         "@domain": "pinterest.com",
                         "@name": "Pinterest",
                         "@source_id": "c405e60965da03eb4ce5a2965a77f127",
                         "display": "http://pinterest.com/shrinivaasanka/",
                         "url": "http://pinterest.com/shrinivaasanka/"
                    },
                    {
                         "@category": "personal_profiles",
                         "@domain": "flickr.com",
                         "@name": "Flickr",
                         "@source_id": "63eefc3611d18b58921a5ccb51c2d500",
                         "display": "http://www.flickr.com/people/51784765@N08/",
                         "url": "http://www.flickr.com/people/51784765@N08/"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "media.readthedocs.org",
                         "@name": "media.readthedocs.org",
                         "@source_id": "8474c14ec15ec65092689cef292773e7",
                         "display": "https://media.readthedocs.org/pdf/neuronrain-documentation/latest/neuronrain-documentation.pdf",
                         "url": "https://media.readthedocs.org/pdf/neuronrain-documentation/latest/neuronrain-documentation.pdf"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "openhub.net",
                         "@name": "openhub.net",
                         "@source_id": "7f0c0fa64f272b316c76abaf6b787b8d",
                         "display": "https://www.openhub.net/accounts/ka_shrinivaasan",
                         "url": "https://www.openhub.net/accounts/ka_shrinivaasan"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "5d99cf42-a-62cb3a1a-s-sites.googlegroups.com",
                         "@name": "5d99cf42-a-62cb3a1a-s-sites.googlegroups.com",
                         "@source_id": "27bc4419dd77f547f973c57389952486",
                         "display": "https://5d99cf42-a-62cb3a1a-s-sites.googlegroups.com/site/kuja27/CV_of_SrinivasanKannan_alias_KaShrinivaasan_alias_ShrinivasKannan.pdf?attachauth=ANoY7cot5zOBoNPJEw-kl3cAhmRiJbeqB43D41dU6ld7NKo06FbHyeR5eGjpXANAfuyVhFc0Cfp6g6vcdpYwfxGCjqUXBK79Py5v2jcQyH1g7gigtpMSH2kV7EoysjqsAmg5_R0bPXbrfzmzMosUDlufh8PGynZO3IaV5uLr-eqoLs_2zGk3pXgxzju_ucU8rTDlFN8xtvNyGMI4tMcYKlHdadi41idbXK2JrmSteqZ5NubGv8iI5pxm_mg-_rQFi0Qn_F7gr_EUSW53mh835atEu_lFZwa-og%3D%3D&attredirects=0",
                         "url": "https://5d99cf42-a-62cb3a1a-s-sites.googlegroups.com/site/kuja27/CV_of_SrinivasanKannan_alias_KaShrinivaasan_alias_ShrinivasKannan.pdf?attachauth=ANoY7cot5zOBoNPJEw-kl3cAhmRiJbeqB43D41dU6ld7NKo06FbHyeR5eGjpXANAfuyVhFc0Cfp6g6vcdpYwfxGCjqUXBK79Py5v2jcQyH1g7gigtpMSH2kV7EoysjqsAmg5_R0bPXbrfzmzMosUDlufh8PGynZO3IaV5uLr-eqoLs_2zGk3pXgxzju_ucU8rTDlFN8xtvNyGMI4tMcYKlHdadi41idbXK2JrmSteqZ5NubGv8iI5pxm_mg-_rQFi0Qn_F7gr_EUSW53mh835atEu_lFZwa-og%3D%3D&attredirects=0"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "media.readthedocs.org",
                         "@name": "media.readthedocs.org",
                         "@source_id": "ba7becc544f19f6579529dce3617e415",
                         "display": "https://media.readthedocs.org/pdf/neuronrain-documentation/latest/neuronrain-documentation.pdf",
                         "url": "https://media.readthedocs.org/pdf/neuronrain-documentation/latest/neuronrain-documentation.pdf"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "media.readthedocs.org",
                         "@name": "media.readthedocs.org",
                         "@source_id": "a187301de5216b550db21bb3d073b7ba",
                         "display": "https://media.readthedocs.org/pdf/neuronrain-documentation/latest/neuronrain-documentation.pdf",
                         "url": "https://media.readthedocs.org/pdf/neuronrain-documentation/latest/neuronrain-documentation.pdf"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "5d99cf42-a-62cb3a1a-s-sites.googlegroups.com",
                         "@name": "5d99cf42-a-62cb3a1a-s-sites.googlegroups.com",
                         "@source_id": "bb9ab15cc8c31a651dc8d169f3cb770b",
                         "display": "https://5d99cf42-a-62cb3a1a-s-sites.googlegroups.com/site/kuja27/CV_of_SrinivasanKannan_alias_KaShrinivaasan_alias_ShrinivasKannan.pdf?attachauth=ANoY7cot5zOBoNPJEw-kl3cAhmRiJbeqB43D41dU6ld7NKo06FbHyeR5eGjpXANAfuyVhFc0Cfp6g6vcdpYwfxGCjqUXBK79Py5v2jcQyH1g7gigtpMSH2kV7EoysjqsAmg5_R0bPXbrfzmzMosUDlufh8PGynZO3IaV5uLr-eqoLs_2zGk3pXgxzju_ucU8rTDlFN8xtvNyGMI4tMcYKlHdadi41idbXK2JrmSteqZ5NubGv8iI5pxm_mg-_rQFi0Qn_F7gr_EUSW53mh835atEu_lFZwa-og%3D%3D&attredirects=0",
                         "url": "https://5d99cf42-a-62cb3a1a-s-sites.googlegroups.com/site/kuja27/CV_of_SrinivasanKannan_alias_KaShrinivaasan_alias_ShrinivasKannan.pdf?attachauth=ANoY7cot5zOBoNPJEw-kl3cAhmRiJbeqB43D41dU6ld7NKo06FbHyeR5eGjpXANAfuyVhFc0Cfp6g6vcdpYwfxGCjqUXBK79Py5v2jcQyH1g7gigtpMSH2kV7EoysjqsAmg5_R0bPXbrfzmzMosUDlufh8PGynZO3IaV5uLr-eqoLs_2zGk3pXgxzju_ucU8rTDlFN8xtvNyGMI4tMcYKlHdadi41idbXK2JrmSteqZ5NubGv8iI5pxm_mg-_rQFi0Qn_F7gr_EUSW53mh835atEu_lFZwa-og%3D%3D&attredirects=0"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "openhub.net",
                         "@name": "openhub.net",
                         "@source_id": "9bdcae1054557a34a719bcb4ad9aef83",
                         "display": "https://www.openhub.net/accounts/ka_shrinivaasan",
                         "url": "https://www.openhub.net/accounts/ka_shrinivaasan"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "openhub.net",
                         "@name": "openhub.net",
                         "@source_id": "1b11ac4c32332032b2519b0c8891b727",
                         "display": "https://www.openhub.net/accounts/ka_shrinivaasan",
                         "url": "https://www.openhub.net/accounts/ka_shrinivaasan"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "media.readthedocs.org",
                         "@name": "media.readthedocs.org",
                         "@source_id": "5b9c377a5214db6b93f47938dd2b370c",
                         "display": "https://media.readthedocs.org/pdf/neuronrain-documentation/latest/neuronrain-documentation.pdf",
                         "url": "https://media.readthedocs.org/pdf/neuronrain-documentation/latest/neuronrain-documentation.pdf"
                    },
                    {
                         "@category": "personal_profiles",
                         "@domain": "sites.google.com",
                         "@last_seen": "2018-06-28",
                         "@valid_since": "2014-01-01",
                         "display": "https://sites.google.com/site/kuja27/",
                         "url": "https://sites.google.com/site/kuja27/"
                    },
                    {
                         "@category": "personal_profiles",
                         "@domain": "sourceforge.net",
                         "@last_seen": "2018-06-28",
                         "@valid_since": "2015-09-30",
                         "display": "http://sourceforge.net/users/ka_shrinivaasan",
                         "url": "http://sourceforge.net/users/ka_shrinivaasan"
                    },
                    {
                         "@category": "personal_profiles",
                         "@domain": "facebook.com",
                         "@valid_since": "2014-01-01",
                         "display": "http://www.facebook.com/shrinivaasan.ka",
                         "url": "http://www.facebook.com/shrinivaasan.ka"
                    }
               ],
               "user_ids": [
                    {
                         "@last_seen": "2018-06-28",
                         "@valid_since": "2010-07-08",
                         "content": "5611688@linkedin",
                         "display": "5611688@linkedin"
                    },
                    {
                         "@valid_since": "2013-02-16",
                         "content": "51784765@N08@flickr",
                         "display": "51784765@N08@flickr"
                    },
                    {
                         "@last_seen": "2017-02-02",
                         "@valid_since": "2011-06-28",
                         "content": "14233931@twitter",
                         "display": "14233931@twitter"
                    },
                    {
                         "@valid_since": "2011-12-05",
                         "content": "1186474769@facebook",
                         "display": "1186474769@facebook"
                    },
                    {
                         "@valid_since": "2013-01-18",
                         "content": "103402979170580834945@google",
                         "display": "103402979170580834945@google"
                    },
                    {
                         "@last_seen": "2018-06-28",
                         "@valid_since": "2010-07-08",
                         "content": "1/a67/608@linkedin",
                         "display": "1/a67/608@linkedin"
                    },
                    {
                         "@last_seen": "2018-06-28",
                         "@valid_since": "2010-07-08",
                         "content": "#608a671@linkedin",
                         "display": "#608a671@linkedin"
                    }
               ],
               "usernames": [
                    {
                         "@valid_since": "2011-12-05",
                         "content": "shrinivaasan.ka",
                         "display": "shrinivaasan.ka"
                    },
                    {
                         "@last_seen": "2017-02-02",
                         "@valid_since": "2011-06-28",
                         "content": "ka_shrinivaasan",
                         "display": "ka_shrinivaasan"
                    }
               ]
          },
          "query": {
               "emails": [
                    {
                         "@type": "personal",
                         "address": "ka.shrinivaasan@gmail.com",
                         "address_md5": "af96cf33e2024e7328bbc7675f771b1e",
                         "display": "ka.shrinivaasan@gmail.com"
                    }
               ],
               "names": [
                    {
                         "display": "Srinivasan Kannan",
                         "first": "Srinivasan",
                         "last": "Kannan"
                    }
               ]
          }
     },
     {
          "@available_sources": 151,
          "@http_status_code": 200,
          "@persons_count": 18,
          "@search_id": "1909110838012194018513888886462560180",
          "available_data": {
               "premium": {
                    "addresses": 53,
                    "dobs": 3,
                    "educations": 29,
                    "genders": 16,
                    "images": 27,
                    "jobs": 116,
                    "landline_phones": 8,
                    "languages": 6,
                    "mobile_phones": 11,
                    "names": 31,
                    "origin_countries": 8,
                    "phones": 19,
                    "relationships": 11,
                    "social_profiles": 32,
                    "user_ids": 50,
                    "usernames": 13
               }
          },
          "possible_persons": [
               {
                    "@match": 0.14,
                    "@search_pointer": "5b1a46e4d43365daa0c35bee85eb02f35709b962da6a41b978f6698275c9b5d11ed283a09170252912cb782a233e157f38218ff0f14023ce6702b3fc3a9b41644d27f348b79f0ac60bc55e48788310242fcac7bf2b65b04a4d5a0ed7eb863a85d2a855cebad852741973d36a395194303fde9fdff9a6681e81e1abc3838d0dab199e2c3c101d9e7418faaad1ebcd188c0ec1be85fe015a2609d4589f5f5639770c48ba7a7c7dc2bb284dc404c9cc4ebd2cea5aa0d8ee741ceca1ced917bf1b9eed90dbc2775e8cf7636dbdc0df29f3956cce8e622d1525b851b5a780312b2d60966f42b00acaa5740e51602c492cb13601e19471eee8abdb5d1b422cf06284a2a745cdaaf063887ff70212bb9a4ed3ad17db433e18d42fcdc39123b9e2d027b1a53d91d92bb71ffe670ae554858bc12f8e76a7f8ab3500c65ffac85771173b4791a6c6c744a71bcdc003e97bbb67731c3661a7abae6fb28e9b2fb50d699163afa9ddfde76830d21bfd8451b37490a5a3f80ac64922eb322472f6260af4f28d0d31989eaeca71b5fa7b23de200430efb80dbe4e9b99d73d25d75bbec2376c9f0ea985e789d1d69654c5ee75983dba00e12604ba18c367a6467bedcf00ba4c04288d44d42c570d2f60841270783e2abf8cfff31ca00861beb0743890daa73ab3bb4691fae4ed7ed96eba4a9f17c0ff8e74ec537094f93a425076392b27c58e54692f797b685e9cae414005e842300c5d0b3e5f5488a9f058069a13ee86a9b2cd8e3ddf0d3f7ed7b2a3c1068723e8116dc838775b83d14ea38ec9c02884f58c819e5639b082a70b7a7c5b8914cecd9fd7a2748e71e6a9bcc437e7d7cff6e0e1d778e0bd58764049ea018483a5579ed4540c5ab1c9ff7f4d9ab55dd7aa38238d0e0e3631c5d82f7db8b6b9315167f8e77f53d897930ff3401f872835aa424292c9964871430e198bf5db372b7f3eaa01eac614483275bc0ee8672f966e711d61de7d75598fa53129ff41cebf4b4ce421a9746f50da235216aad49090135f731bf017167665d94a312824a413012a34220c03e4adc4ca1b01db6e9987b2797f49c57589f1a28f58ae8a56ef58a39505db7520623c015413def4716f9593cc808e210ace4c4d262ebb169ddc3507335f03b042bcb499bfa2eb049610fc128300bff9bc912f64d8cd13c2469d523f30893dfcecef94811a3ee833384d7b5b021d48322499a852d4e67a2c8cbb1769724d44cde3c2305c268893c94f6f246ac02955159340ded7286e4cfe4e05f5c741ebc7b4d75ed1276c5055b4c0dfae2236be5a19c0acef25d7fa5672a10bf151881eb773525e10be4bcdd3b1f885e6a19ec6bd7e2ecf202a2c6f6529ed7a4accc2f184f65e4830401edb3d7459fc787ccbd12ffdd43015b1652e5ffeac27e84c125b36c88d094bff4205ded132887ca990c94fd25eb40d2a5758bca95e6c24916d4f9879fc95fac96b7840b838a2c97a072a4fed4c9ebe17e5ba112abb9d20ac92b3f2da0b2cc82483f7121efdba1da83c6ccc149d11c88b7205ed95ff7e9f94eeeccf3bedc88c9429ea9723d5ed97eebc5a28acf3b1475e4532798b9047bf4dc18e6b2641f6a056830e9daf0846bea3b526804c81be09bd7d9534729a0c6818fa54d4143ff6dab1800e4987b6473d19ae0c527623d07501e3693aadf93a9f936e19830d1663e05a58cc6eab18f5dbc42a59f7baa201a17d177674218148dfbf9ff7ae42aa1a77b752462c1a64bdfc75dc4ea3af616d76fca425345d2e81756fdd07c7095893d5b6e6d69faa79af1da03cabcd0e20ef6a29fb1b9ce66a1831b541e4181cf671d87361942a20b7360d9b866edc128742f10f520b41b86c983553f7cacdfc4e3e83e888d6fb3779523b64ad1d4038288bdbba0c9830b202398a50b84605cd7b3ec4b1005747d90fe82aafde651869d7d42b6f738a43afccf36b65fbc0cb371e93f88a99d191823a9246af4cf6c03763723f54fa793ff9a41e7411c5e416672fa65a1f7e136df07eecf39cbdad7c693d7ec82999809e30f6898089fc30a4ddf2dc815cd4ad9deaea764fe53beb116f0e3af3645a2021cb20c96bcf6a1ab4fa76ad96965fe5631d07d59f08f26304a811ec63bdc6a24b8587acdb8730ba6cdb297ea5084be20922613f45a60856cac8faa7674a56289974fd96fc82e700c10a18cb31312077d2e91d0992a286c300ae46ab1f49e3ab360a297d519dc0bdc81a9549276d188438ae01188d85baaa19fe3080334531c2ee1c389cbd7a9704fa51db096c9de2e4d709ecc7e13d22384437d89ba7da10c9b651cd30f78cf5761749135ace03ce5bea2e37f42fbc4e456df2e095a4906d26c51379a00a91894167999946813f3f00a5ded4c2a327e76a1d696013d30de3fec7adb82874348a107fe09a090e337470493dd4a9b51d911a8dead98272f7bdf200c460ecd0acbece6dcc0c1fa52fcfdc6631f58be6ad5c645aef96a1ac6d51bc5af6d37913b58e6393d3da3076d40644c7f46cdd302e9dc6917bda7d78e4b202f3b42b0e4e85cf5cbdfeb2153fb8c507f0ba2aafcf50114e96d942594013a71732775369a685214a65ebca0aeb502f932d36be3cb00b5d170f151e7b191283a35f2fde301da397e1c61bd3c0f9263ce4dc49fa631237f9852859bb4fab6b1160db4d60bc78b33fa7c9d5d7eed5a7fc888381882a435551f7f32b4cb079310a0711415b36d20ab46e5e4cc5c60a36154f9f6de1c1fb20dc57a6fced51a050ba407f002663a13549473456f5a0f6b35c3cd422fc99d9c90eff5abd94c9bf946134760bb11da8bfa03f9826299a18be64b4e79a76154662be5561598918966edbdb19583d52e66a5cc42d51722464089fcf86b73a279d7886fdcaeae486dd7c97a76527dd352e4cb8eeeb9bea939639e301abefb48f622c5ad2ea66831ab8176345393ca84c11198d0f4b344cbc6f481566d217438e2a7070db896738772ca70fc85afc29f823766ce8784f235c1879c74ebe0287b4d5e4175bb21fbee303bce1c7ae9bf2ca2e90ff7c8f7a6d459f506da881771e143348b89d4f439b139214ad890ae32feeb5faa711cc19090f539fba86979578ef6a63f08a4500ed09762abb7e25e4d963be0a8b9152e181d09983269600711eb6342ac23d57ad849da6965f26d45e6de4b4837e9f19d85a647dd697341f9ff4eabf1e15dc27f7e8130dd0921ba872db3ab564f3ac80323cd916e8c2322d3b65fb241ab17f64209fb7f6713115fee8a970a27e5424cdff211dd927c92d5ff70a3d8df9608671494c51f946b4452dc5a3721c1d453c3b286a7ce2c606c5c3fcd78d99bd522fb9d2e98c08fe64001ef8c0cd416e294e1b6d82da28397e00d495ba613d38b6a037ba1113e5fa2930e43668c3961f5313af9d21583d7256eda6d3e5bf8394977606b6d9a5ec3995a376bcd25d3b968f53405ea9d3789728c7edba3b6c67ab7081e2204960ed264b6741125855d1fefd58c3f2b82ed5a36605cb5caa8e1ec2644c6e5f1d51ebc530aa8a76c0a83147108e1daa5a66c07e39e10eaefa8c02e0c0d67406744ee4c890ee6415865a030a8ca0c372082919c98fb2d4bc2e7ad96f0ffb85474649c9e48b0a4fcf7c5b8922752ab69e7b71fb4200f45fb5142a9d93f718727d2c8061817c5edb7cc030330ecb25c43599908c9606662e36f36550965eb5b8606122eb50d53c697885f29281e5fa2e82650f8247fe60e905c7e22f09a475f9f1f3d6b6839f4cd880a03a821adf5ee694429ad68599763cea6b7682ec16ef7702363c191b162335e4c6f5ec573280e60a3f86808c7e11c6789901a3dba78852c620a13d64766b5200f94b87bebd729b22bb01cb0773cf78c65827a87671189e4148b7a56a57504eb50b756d836ee5d24bcc50f149b4a051fb4fff36aab414b14d83cfe8e35386902a645857c0c9cfafaf3cab56f2088ec3cac28068f9f0c78274554e8db738c9e39f984608278c08f2b96503edf8868113e6eb2ab003b2d6b7a354066340da1556a0a98befc0895a117244618acc6b627241056c08192b61ddc03a8973a10d393ca3c3a09266223703f06e4a69a0f761a06332deac633317eb6c33ec6cfaf85760662340006af2b6906dce3048889988f2a0d0481fa8b2e86bbf3fbc024438aeccbffa9aaa5a5668583cef9f41e74427d3efdb4645e43f3a7759f6e1b42dd05b20851e3078e0dd31783174a6ac46072e2556f008e4bc20a8761e0d18a94e0535da44e3e2ed5c4e02ec8517e05c3e6b8551ee2e9303012bf9211bd97c0693047db1706595afb47d696f7ce282837ac48fc3e7508eda70e885e50602d8b54da0bd6bbc4bbcbb7efa4dc5beafcac4e47fc43795fd7c210333452d6755a87afc9e8e8378f06722e70c5b9f13e225885616b9ec0956ae7364d11d5bd758af96d5f324a16507b44f77a35a7e8f39e61a619f546570adbc172c8b4682c47588b525a4e4d9cd875094733bee572cfa764550f3445e7f7922bc1e617fbbe231fe01a357e1d447d424bab8fffb110b7aa4f17e3522067f6d61689b7e6d3634bd4026a716037b52af03670419d550b6ef11276965debab800b09413ed8fb0dffb1381e7e2a709841cef4ea4f89e4a32d551fc6012d623e6155811af6ad8c3602c7bed5ca0faf81072e0984a61d658a6a46b9f31468f65e0b26dde98aad66ae832f1c57d337cda6faba63b0f33454cac90743b67b333ec0fcf60da1ec15da9b404d166945fcd9967d24097270a6d95d9d8d7865924f462b5fc9a58e3a5204fc5ff2fdead608254644a8f57ad51267b164ebfb714c07c6625d8d7178aab25f0bcd773cc0989094bfe726738d815732bb6a9dd2b6ccaf1353ac83941b4a2a442ee89286e0ed38b6b8a8ab6d800b04183e33148d3138cf39ebf045be0540e0160162e1e3c4208f410a10be3655e2ea6db2cb9a4d7a9de5c12273c32e9670db233b6cfe657cf0722bfbbfcdefe1b7bce6020a454db1900f26371c947ed11499e072e0442c6c171957e58b94718b1cbbed88646",
                    "addresses": [
                         {
                              "@last_seen": "2018-06-28",
                              "@valid_since": "2010-12-03",
                              "city": "Chennai",
                              "country": "IN",
                              "display": "Chennai, India"
                         },
                         {
                              "@last_seen": "2018-06-28",
                              "@type": "work",
                              "@valid_since": "2015-09-30",
                              "city": "Kumbakonam",
                              "country": "IN",
                              "display": "Kumbakonam, India"
                         }
                    ],
                    "gender": {
                         "@valid_since": "2011-12-05",
                         "content": "male",
                         "display": "Male"
                    },
                    "images": [
                         {
                              "@valid_since": "2011-12-05",
                              "display": "http://graph.facebook.com/1186474769/picture?type=large",
                              "thumbnail_token": "AE2861B242686E6ACBCD539D133B8AE59A9AE962DB1FA5AA7AF08DAAD76B0DFE1F64838CD9CDB2322ADF85744B699B543C4E5FE3AC5A925CC78A78485D1B1861F699",
                              "url": "http://graph.facebook.com/1186474769/picture?type=large"
                         },
                         {
                              "@valid_since": "2016-01-17",
                              "display": "https://s-media-cache-ak0.pinimg.com/avatars/shrinivaasanka_1392636070_140.jpg",
                              "thumbnail_token": "AE2861B20B7D6E22CA814E9059348AAB9C99E565D51CA7AE27F1CCF2813454AE0530DAD8D9DCAD302ACB85625B6E8A56301D5AF4BF5C841BCD927073511B186BF39AC63006E11FBB5344F8B1D7E0B6B7AD9EBF71FCF012DD7E",
                              "url": "https://s-media-cache-ak0.pinimg.com/avatars/shrinivaasanka_1392636070_140.jpg"
                         },
                         {
                              "@last_seen": "2018-06-28",
                              "@valid_since": "2018-06-28",
                              "display": "https://media.licdn.com/dms/image/C5103AQElIOVKZ6nowg/profile-displayphoto-shrink_200_200/0?e=1535587200&v=beta&t=KGXPR6F4RKV3CymWr3LeTWUcV3de2Z7r2q2uAXaHZzk",
                              "thumbnail_token": "AE2861B20B7D6E22D4C9479C5C7387EF9C9CE823D35EABEA73B2CFB4863058AE4E7CF680C78DE8100FEF9B583B4BA97E6F1D5CF5B9128708CC9F784005054530B6D99C6148A128E5131BFBA8CFF5F9BDB5A8E97CF99A12DD7A9948B1D92730DCE7C5B74B5A526211CCC892B90151753EF5024DCEF082F55F1D7CD48C24C2D3BC4B16AE791B158B4A2F1489127F24C416775DD40F4560CE582B87BC16D23EB38D8D8373FBD7",
                              "url": "https://media.licdn.com/dms/image/C5103AQElIOVKZ6nowg/profile-displayphoto-shrink_200_200/0?e=1535587200&v=beta&t=KGXPR6F4RKV3CymWr3LeTWUcV3de2Z7r2q2uAXaHZzk"
                         },
                         {
                              "@valid_since": "2014-03-29",
                              "display": "http://lh4.googleusercontent.com/-lsiOU7rL21o/AAAAAAAAAAI/AAAAAAAAAF0/JajVx47Doq4/photo.jpg",
                              "thumbnail_token": "AE2861B242686E61D1980D9252328CEA9A8DF568C252A9AB63BAD2EFC13E56A4047ED9C69FF28E662CE6C5201B32A365183272C39F7CB63BEAD6506D2169601884E8B14601FE0AEB0D22AEEF90C3FFA2EAD8AB24A6B14FC320C61FA8D869688DE9C5B2455F54",
                              "url": "http://lh4.googleusercontent.com/-lsiOU7rL21o/AAAAAAAAAAI/AAAAAAAAAF0/JajVx47Doq4/photo.jpg"
                         },
                         {
                              "@last_seen": "2017-02-02",
                              "@valid_since": "2017-02-02",
                              "display": "http://pbs.twimg.com/profile_images/823093144023494656/uh0w69z8.jpg",
                              "thumbnail_token": "AE2861B242686E7DDBDF0D814A3486E1D19BE9609F41B4AA71B6D0FEB03454A84C36C69ACE8FE8616799C625402DD0176D4A07B4EB0BD80FCBC9661A59521977AFD9972655A229EE5A47EFE393B3",
                              "url": "http://pbs.twimg.com/profile_images/823093144023494656/uh0w69z8.jpg"
                         }
                    ],
                    "names": [
                         {
                              "@last_seen": "2018-06-28",
                              "@valid_since": "2014-01-01",
                              "display": "Srinivasan Kannan",
                              "first": "Srinivasan",
                              "last": "Kannan"
                         },
                         {
                              "@valid_since": "2000-01-01",
                              "display": "Shrinivas Kannan",
                              "first": "Shrinivas",
                              "last": "Kannan"
                         },
                         {
                              "@valid_since": "2011-12-05",
                              "display": "Shrinivaasan Ka",
                              "first": "Shrinivaasan",
                              "last": "Ka"
                         }
                    ],
                    "relationships": [
                         {
                              "@subtype": "Follower",
                              "@type": "other",
                              "@valid_since": "2012-07-13",
                              "names": [
                                   {
                                        "@valid_since": "2012-07-13",
                                        "display": "Vinod Kumar Devi",
                                        "first": "Vinod",
                                        "last": "Devi",
                                        "middle": "Kumar"
                                   }
                              ]
                         },
                         {
                              "@subtype": "Follower",
                              "@type": "other",
                              "@valid_since": "2012-07-13",
                              "names": [
                                   {
                                        "@valid_since": "2012-07-13",
                                        "display": "Prakash Chandrasekaran",
                                        "first": "Prakash",
                                        "last": "Chandrasekaran"
                                   }
                              ]
                         },
                         {
                              "@subtype": "Follower",
                              "@type": "other",
                              "@valid_since": "2012-07-13",
                              "names": [
                                   {
                                        "@valid_since": "2012-07-13",
                                        "display": "Pranabendu Misra",
                                        "first": "Pranabendu",
                                        "last": "Misra"
                                   }
                              ]
                         },
                         {
                              "@subtype": "Follower",
                              "@type": "other",
                              "@valid_since": "2012-07-13",
                              "names": [
                                   {
                                        "@valid_since": "2012-07-13",
                                        "display": "Ram Janakiraman",
                                        "first": "Ram",
                                        "last": "Janakiraman"
                                   }
                              ]
                         },
                         {
                              "@subtype": "Follower",
                              "@type": "other",
                              "@valid_since": "2012-07-13",
                              "names": [
                                   {
                                        "@valid_since": "2012-07-13",
                                        "display": "Jose Mathew",
                                        "first": "Jose",
                                        "last": "Mathew"
                                   }
                              ]
                         },
                         {
                              "@subtype": "Follower",
                              "@type": "other",
                              "@valid_since": "2012-07-13",
                              "names": [
                                   {
                                        "@valid_since": "2012-07-13",
                                        "display": "Shubho Sengupta",
                                        "first": "Shubho",
                                        "last": "Sengupta"
                                   }
                              ]
                         }
                    ],
                    "user_ids": [
                         {
                              "@last_seen": "2018-06-28",
                              "@valid_since": "2010-07-08",
                              "content": "5611688@linkedin",
                              "display": "5611688@linkedin"
                         },
                         {
                              "@valid_since": "2013-02-16",
                              "content": "51784765@N08@flickr",
                              "display": "51784765@N08@flickr"
                         },
                         {
                              "@last_seen": "2017-02-02",
                              "@valid_since": "2011-06-28",
                              "content": "14233931@twitter",
                              "display": "14233931@twitter"
                         },
                         {
                              "@valid_since": "2011-12-05",
                              "content": "1186474769@facebook",
                              "display": "1186474769@facebook"
                         },
                         {
                              "@valid_since": "2013-01-18",
                              "content": "103402979170580834945@google",
                              "display": "103402979170580834945@google"
                         },
                         {
                              "@last_seen": "2018-06-28",
                              "@valid_since": "2010-07-08",
                              "content": "1/a67/608@linkedin",
                              "display": "1/a67/608@linkedin"
                         },
                         {
                              "@last_seen": "2018-06-28",
                              "@valid_since": "2010-07-08",
                              "content": "#608a671@linkedin",
                              "display": "#608a671@linkedin"
                         }
                    ],
                    "usernames": [
                         {
                              "@last_seen": "2017-02-02",
                              "@valid_since": "2011-06-28",
                              "content": "ka_shrinivaasan",
                              "display": "ka_shrinivaasan"
                         },
                         {
                              "@valid_since": "2014-01-01",
                              "content": "shrinivaasan.ka",
                              "display": "shrinivaasan.ka"
                         }
                    ]
               },
               {
                    "@match": 0.14,
                    "@search_pointer": "c9868984e0b1b797f1fbe54759556cc9bae2f8bd01185e89e0ee42693558e6e216133b01d164ef6fd2dee14f587d589a222d2d8baf9efc1023f3e007220676c05e234e08880e1a145efe4c8e897c95ac576d53e690e80e2db408e911279e1be901785bb27498db97d196ab5a9fd458eacf24159bcf2e48797f63a9aa71c010b49e4fd668e9a6d00b847e066ad3144aa7d1a0a2866344791d52d016ac42fa158b88af484110c17831181be01666631c5f41793a358d59a2fbc696cb76cf3c570fec5df60d65b3bd28268f6a13c8cc9d4be67af7b81530d39474cf677eb825c43670fb61858f4d14814f02ed0410975da2149ba9c1fb454c0c1fc2f294e28d0a75d44c140305691e24373733d8d1996efe87fa906462caf9e96c6c79b4235af365d163ca41bdbf2cdb3e4eec0e34b44f3d51a144df3050921077b170a87891572ec9cf81f7b2b87a8d067c77a28107a103b35fde970c1313da0d0dd06477295e1e3ed4080d7b3fc1539cafd7709ca08a09f321274aeec716fec704d54947715d214982b9618d2be1fd0e5b5374a98fa468b6203603fc746d200577da6506afae25935f60c4a8d69dfc5424aea194f5c8b34f689e4673d106496d604305512df48843ee5b1fc9ef69d0a4ac0ee8b384bb9b42bcc128f7a4146ab89be311a0e05fda4358e3bd8a7775613dd487bb5c4cef108548e2a8c69f269ca2d7203e1903defb",
                    "gender": {
                         "@valid_since": "2014-02-11",
                         "content": "male",
                         "display": "Male"
                    },
                    "images": [
                         {
                              "@valid_since": "2014-11-11",
                              "display": "http://lh4.googleusercontent.com/-MF3QH4taY5o/AAAAAAAAAAI/AAAAAAAAALM/3RoFlmy6I98/photo.jpg",
                              "thumbnail_token": "AE2861B242686E61D1980D9252328CEA9A8DF568C252A9AB63BAD2EFC13E56A4047EF8F3C5EC93652ACBAE241B32A365183272C39F7CB63BEAD6506D2169601884E8B14C7CFE73D80832BAB6DEB1D9EAE6D8AB24A6B14FC320C61FA8D869688DE9C5B2455F54",
                              "url": "http://lh4.googleusercontent.com/-MF3QH4taY5o/AAAAAAAAAAI/AAAAAAAAALM/3RoFlmy6I98/photo.jpg"
                         }
                    ],
                    "names": [
                         {
                              "@valid_since": "2014-02-11",
                              "display": "Shrinivas Kannan",
                              "first": "Shrinivas",
                              "last": "Kannan"
                         },
                         {
                              "@valid_since": "2014-11-11",
                              "display": "Srinivasan Kannan",
                              "first": "Srinivasan",
                              "last": "Kannan"
                         }
                    ],
                    "user_ids": [
                         {
                              "@valid_since": "2014-11-11",
                              "content": "111994949685611811308@google",
                              "display": "111994949685611811308@google"
                         }
                    ]
               },
               {
                    "@match": 0.0,
                    "@search_pointer": "280511eebd39ebc276997bdf0ac5c3a2ae1db3dfb33042652c91a8972c6f34a861a6eae7359193d235714cb28b174ea81f01d3b234f72ce6a4d4bfc10088b6417e4df3e4256b15c5927865cb5dfa949aeb586825199eed8073958d8609225a87c8d96d91638cd1f58299e268a8353ffbc0f6535639d6de9c84c0f0acaafc1ca706f4ae38840572c993b32a429ff27633026a0fa687d2027660c3bda1aef482c40c92b649cb18c42865a9c5f2dc97e65d58675caedc8c4bf9692247fb41eccfe17428d7fe2e1dc48fb751c68d1430d6923b21ee37cef9a7540932a2c6c0d5497e9c80b0ca76e9030a36cc85686cbe411e54b4661a8da9297d8262a5d411bdddebcfab2245ba383c2c6b74862b004a23bf811868a25e88aa39125577b017fe82e3d1fb5e372bd0ad539f4704b3b239dd2d46015970b7a7b415306a140b8bbd957ada960ab1724c0b8f83f058bc8109b9006ed588d2f5c3e24e1c04475ccc44f99d6451564ce4ca44ac1b0460ea10f8c485f89aa8526be61e7b115341974f135fed54b1a9f00085efdd0852e070d17f3d1fab669a73e8706535b21d9778eea17a6bfa385153f430772aa6ad8cb768c655b81cd504c6a2e4cb9a48914e2d0ffede0c02bda7d840f7460b306b963db8b65f263736af703e7893fcb37d3e36fb9c64d57d2c9fd5022da0c2ab0007a9aefccaed0b4c0c6cd5c368d30d677c20b17025f5743204cd3872e6f26646d252f7104e09a28e309ee0be0b170159459fde2e68992306c66489bec4f1711ef69e5a0f2c8eac70e638b6dfabacafd339b278cca3230c6f990e3278644e9de1834e1ab46c9b3c76b972e920b22d05e1d8c512623eb140bef653dcbf16ea869e89d35e6b666c49ce00ea65f8e0d0753f1302c0ac2a742981af5d4dd24f6abb5751c2ed145e478d1f56b196a1aa117fcfd5ae71dab3ab1f826e17df2e8496ddf9466ae061ac469cd902c8ab73856dc50855488069ccd126d4888382b49fd3c196beee9c51ba26d8fd232379378509691874c009908be753ba2a3a63806e6423827271941d9538734e4666c55f7e361913c961df6f9440d46760b417add6e34b508c0b637feecb1ec07695b854529835618d23721062335dcf602f3a2952d08821cd424313911f55372c4c9ff819640e168c2f5731a3c055861f2f65edb3077402a0685689fc19",
                    "addresses": [
                         {
                              "@last_seen": "2019-02-05",
                              "@valid_since": "2016-02-02",
                              "city": "Bhopal",
                              "country": "IN",
                              "display": "Bhopal, India"
                         }
                    ],
                    "gender": {
                         "content": "male",
                         "display": "Male"
                    },
                    "names": [
                         {
                              "@last_seen": "2019-02-05",
                              "@valid_since": "2016-02-02",
                              "display": "Shrinivas Kannan",
                              "first": "Shrinivas",
                              "last": "Kannan"
                         }
                    ],
                    "origin_countries": [
                         {
                              "country": "IN",
                              "display": "India"
                         }
                    ],
                    "user_ids": [
                         {
                              "@last_seen": "2019-02-05",
                              "@valid_since": "2016-02-02",
                              "content": "b8/9b/b5b@linkedin",
                              "display": "b8/9b/b5b@linkedin"
                         },
                         {
                              "@last_seen": "2019-02-05",
                              "@valid_since": "2016-02-02",
                              "content": "418245047@linkedin",
                              "display": "418245047@linkedin"
                         },
                         {
                              "@last_seen": "2019-02-05",
                              "@valid_since": "2016-02-02",
                              "content": "#b5b09bb8@linkedin",
                              "display": "#b5b09bb8@linkedin"
                         }
                    ]
               },
               {
                    "@match": 0.0,
                    "@search_pointer": "",
                    "addresses": [
                         {
                              "@valid_since": "2008-01-01",
                              "city": "Memphis",
                              "country": "US",
                              "display": "7742 Deer Trail Lane, Memphis, Tennessee",
                              "house": "7742",
                              "state": "TN",
                              "street": "Deer Trail Lane",
                              "zip_code": "38133"
                         },
                         {
                              "@valid_since": "2010-03-29",
                              "city": "Fort Lee",
                              "country": "US",
                              "display": "533 Walnut Street, Fort Lee, New Jersey",
                              "house": "533",
                              "state": "NJ",
                              "street": "Walnut Street",
                              "zip_code": "07024"
                         },
                         {
                              "@last_seen": "2017-06-18",
                              "@valid_since": "2008-03-28",
                              "city": "Champaign",
                              "country": "US",
                              "display": "1617 Cornell Drive, Champaign, Illinois",
                              "house": "1617",
                              "state": "IL",
                              "street": "Cornell Drive",
                              "zip_code": "61821"
                         },
                         {
                              "@type": "old",
                              "@valid_since": "2007-10-20",
                              "city": "Urbana",
                              "country": "US",
                              "display": "Urbana, Illinois",
                              "state": "IL"
                         },
                         {
                              "@valid_since": "2004-09-01",
                              "city": "Champaign",
                              "country": "US",
                              "display": "3304 Cypress Creek Road, Champaign, Illinois",
                              "house": "3304",
                              "state": "IL",
                              "street": "Cypress Creek Road",
                              "zip_code": "61822"
                         },
                         {
                              "@last_seen": "2018-12-23",
                              "@type": "work",
                              "@valid_since": "2015-09-30",
                              "country": "US",
                              "display": "California, United States",
                              "state": "CA"
                         },
                         {
                              "@valid_since": "2008-03-28",
                              "city": "Bloomington",
                              "country": "US",
                              "display": "1007 Arlene Court, Bloomington, Illinois",
                              "house": "1007",
                              "state": "IL",
                              "street": "Arlene Court",
                              "zip_code": "61701"
                         },
                         {
                              "@valid_since": "2008-01-01",
                              "city": "Bloomington",
                              "country": "US",
                              "display": "3103 Wilshire Court, Bloomington, Illinois",
                              "house": "3103",
                              "state": "IL",
                              "street": "Wilshire Court",
                              "zip_code": "61704"
                         },
                         {
                              "@type": "work",
                              "city": "Champaign",
                              "country": "US",
                              "display": "1206 S 6th Street, Champaign, Illinois",
                              "house": "1206",
                              "state": "IL",
                              "street": "S 6Th Street",
                              "zip_code": "61820"
                         },
                         {
                              "@last_seen": "2018-12-23",
                              "@valid_since": "2013-01-17",
                              "city": "Chennai",
                              "country": "IN",
                              "display": "Chennai, India"
                         },
                         {
                              "@last_seen": "2018-12-23",
                              "@type": "work",
                              "@valid_since": "2015-09-30",
                              "city": "Bangalore",
                              "country": "IN",
                              "display": "Bangalore, India"
                         },
                         {
                              "@last_seen": "2018-12-23",
                              "@type": "work",
                              "@valid_since": "2015-09-30",
                              "city": "Bern",
                              "country": "CH",
                              "display": "Bern, Switzerland"
                         }
                    ],
                    "dob": {
                         "date_range": {
                              "end": "1950-06-30",
                              "start": "1950-06-01"
                         },
                         "display": "69 years old"
                    },
                    "gender": {
                         "@valid_since": "2010-03-29",
                         "content": "male",
                         "display": "Male"
                    },
                    "images": [
                         {
                              "@valid_since": "2014-05-24",
                              "display": "http://graph.facebook.com/100000309703756/picture?type=large",
                              "thumbnail_token": "AE2861B242686E6ACBCD539D133B8AE59A9AE962DB1FA5AA7AF08DABDF6D09F918638C82C68EEC6468858778176997563C4C47FBAE58CA16C28B7649464C5230A194C53304E778",
                              "url": "http://graph.facebook.com/100000309703756/picture?type=large"
                         },
                         {
                              "@last_seen": "2018-12-23",
                              "@valid_since": "2018-12-23",
                              "display": "https://media.licdn.com/dms/image/C5603AQET3ZEkWt0j0g/profile-displayphoto-shrink_200_200/0?e=1551312000&v=beta&t=2y6AzYk3kEBHUjtSey_RlC3dsilgCpv0w8hYvCZtF9I",
                              "thumbnail_token": "AE2861B20B7D6E22D4C9479C5C7387EF9C9CE823D35EABEA73B2CFB4863058AE4E7CF680C08DE8100FEFA3222E5889732D4359B2B9128708CC9F784005054530B6D99C6148A128E5131BFBA8CFF5F9BDB5A8E97CF99A12DD7A9948B1D92730DCE1C1B1425F506211CCC892B90151753EF50234F09E93DD30307BED8230B9C5AF5212B9330822B35E4913AC487726B53C361F91461F4CF94310BBA055F03EB38D8D8373FBD7",
                              "url": "https://media.licdn.com/dms/image/C5603AQET3ZEkWt0j0g/profile-displayphoto-shrink_200_200/0?e=1551312000&v=beta&t=2y6AzYk3kEBHUjtSey_RlC3dsilgCpv0w8hYvCZtF9I"
                         },
                         {
                              "@valid_since": "2012-11-19",
                              "display": "http://avatars.zenfs.com/users/1DJGkdA6uAAECQWEo8AceAQ==.large.png",
                              "thumbnail_token": "AE2861B242686E6CCFCD57944F2EC5FC9A96E07E9E52A9A838AACFFE9D2E16F86F19F2DE92FCED241FEBB252254AA74B613250E79F6CCA478D95705E074D0F29ABCED66442B824B75240E0E994",
                              "url": "http://avatars.zenfs.com/users/1DJGkdA6uAAECQWEo8AceAQ==.large.png"
                         }
                    ],
                    "languages": [
                         {
                              "@inferred": true,
                              "display": "en",
                              "language": "en"
                         }
                    ],
                    "names": [
                         {
                              "@last_seen": "2018-12-23",
                              "@valid_since": "2008-01-01",
                              "display": "Srinivas Kannan",
                              "first": "Srinivas",
                              "last": "Kannan"
                         },
                         {
                              "@last_seen": "2017-06-18",
                              "@valid_since": "2000-01-01",
                              "display": "Srinivasan Kannan",
                              "first": "Srinivasan",
                              "last": "Kannan",
                              "prefix": "Mr"
                         },
                         {
                              "@valid_since": "2010-03-29",
                              "display": "Kannan Srinivasan",
                              "first": "Kannan",
                              "last": "Srinivasan"
                         }
                    ],
                    "origin_countries": [
                         {
                              "country": "IN",
                              "display": "India"
                         }
                    ],
                    "phones": [
                         {
                              "@valid_since": "2009-09-13",
                              "country_code": 1,
                              "display": "309-661-0108",
                              "display_international": "+1 309-661-0108",
                              "number": 3096610108
                         },
                         {
                              "@valid_since": "2009-09-13",
                              "country_code": 1,
                              "display": "217-355-2281",
                              "display_international": "+1 217-355-2281",
                              "number": 2173552281
                         },
                         {
                              "@type": "work_phone",
                              "country_code": 1,
                              "display": "217-333-2330",
                              "display_international": "+1 217-333-2330",
                              "number": 2173332330
                         },
                         {
                              "@type": "work_phone",
                              "country_code": 1,
                              "display": "217-333-7953",
                              "display_international": "+1 217-333-7953",
                              "number": 2173337953
                         }
                    ],
                    "user_ids": [
                         {
                              "@last_seen": "2018-12-23",
                              "@valid_since": "2011-03-20",
                              "content": "8157776@linkedin",
                              "display": "8157776@linkedin"
                         },
                         {
                              "@last_seen": "2018-12-23",
                              "@valid_since": "2011-03-20",
                              "content": "2/894/b28@linkedin",
                              "display": "2/894/b28@linkedin"
                         },
                         {
                              "@valid_since": "2014-05-24",
                              "content": "100000309703756@facebook",
                              "display": "100000309703756@facebook"
                         },
                         {
                              "@last_seen": "2018-12-23",
                              "@valid_since": "2011-03-20",
                              "content": "#b288942@linkedin",
                              "display": "#b288942@linkedin"
                         }
                    ],
                    "usernames": [
                         {
                              "@valid_since": "2014-05-24",
                              "content": "srinivas.kannan.7",
                              "display": "srinivas.kannan.7"
                         }
                    ]
               },
               {
                    "@match": 0.0,
                    "@search_pointer": "1c91fbc3bba92276eb722e9364d820548cb98531a34ca7713b45f47543e2468e08041eb2063db1d860a7ca532ba691689f675ce829c39b57626510777f56700d86058478fb6975dfbe7eeabe4f7ffc09b5bd72c97d16f5670de96de6e521dd90ed724b94d8f516b4732d28c2fa16c6987ecdba694d27d1a0d2a6136724469f96455f3b911208a9e53d1c93071bc8dc32a4b8280b99620593f7fdf47b1d4d28c9a85771962d63fcf5014f0b44d1f2d4a428527a6065761fce1d40cf46455c6f5e4e58eafe101c2ca8e566ad09e3921296b051e847ac5fa36ca655dd7f2769375faaf8f9d3b2447b359a2a4b5b63f1d58bba5c817c108fccbd3b70ac707de2d5c312613f450093186e54e91da3a9470e9657af1b6e9e3194b237ecb4ff002a4aef728971e856c4d30cc7b428ec64ee86e99c3c56202cca6349134cc02190a60983919065652a3632ab5ce3883b040fa003a9ef58b22874df6cb1937a8f78497d10f678d9ac3b834983a2b64ada74d53f3a362c453964527190c46b9eec9770fdc5d096d4eb3d3668512c5e7bc1bf0e9bc5c50c7bbce4e9c77931b7ee361dba4c2fc7a591701658adb61ab222b2b691306833ad5bb17154b3a6d710fda9eb2c360a8f7ad8c31f7d5383bbfb9b77ef42f419493454f423ffebb1a827a5be52c69b10",
                    "gender": {
                         "@valid_since": "2014-01-01",
                         "content": "male",
                         "display": "Male"
                    },
                    "images": [
                         {
                              "@valid_since": "2011-07-01",
                              "display": "http://graph.facebook.com/100001627092130/picture?type=large",
                              "thumbnail_token": "AE2861B242686E6ACBCD539D133B8AE59A9AE962DB1FA5AA7AF08DABDF6D09F81D618285CF8FEA626E858778176997563C4C47FBAE58CA16C28B7649464C5230A194C33909E270",
                              "url": "http://graph.facebook.com/100001627092130/picture?type=large"
                         }
                    ],
                    "names": [
                         {
                              "@valid_since": "2011-07-01",
                              "display": "Shrinivas Kannan",
                              "first": "Shrinivas",
                              "last": "Kannan"
                         }
                    ],
                    "user_ids": [
                         {
                              "@valid_since": "2011-07-01",
                              "content": "100001627092130@facebook",
                              "display": "100001627092130@facebook"
                         }
                    ],
                    "usernames": [
                         {
                              "@valid_since": "2014-01-01",
                              "content": "shrinivas.kannan",
                              "display": "shrinivas.kannan"
                         }
                    ]
               },
               {
                    "@match": 0.0,
                    "@search_pointer": "83952f39a46f725b8570b3bf53695246ed9795026b8d93a98d064a41ca23acf8ca545aef39b9834634cf04ca094683651e910d285f77620dca2dcddb90bbc3e4dfe456af5c7df7d6de47cd7cc88b86976670fc31a349f2b10085c9bf6b376d3f57978b98b1cc6f1b9f19c42ca093887358ded0e94111cc03f49fbce35f1153513cc5dde46ad626e05e4e390181ddf24f1faae34c23553b70ce8db7f85f5f34fc2f90132ef96eaba5bd6d3da614690e9983ca2861adf94950d20cbaffee2e04ed15f7ccfd264187f78ac2da3f81f7eb9ab836ab26a3221b168f8dd99715df76003acc146d003f0b852dced78b04efb41f58cb062fcbe9a77ed5cfe7b8e96a1d58bd58de10fdea359e85614fa176a869501126e6aed178d9c5ecb17eb17f70fb2a6e8ba4736aac4428e2a6e0de9788c4175673999878a247d2864ea562e20dba0eecb80fafc3d4151a7de96599ad1a153e96b2ff5b7e0522afeda5245de489bd5bfb80687527884090efb538ff2c5c4c727098e330a415ce885bb6de46e9f69c68ed6e23bc59bcfd218056877ec38eb215db7e4a535fc9c4fcbbb0b5d6da78fad4d37cc11753499bc90068bf2a32e4f19477b4a4278abd72e5bbbde2169b98557a310600be3345a2c5c0aaf12547a3269df413d05eab0c92d9c8f28bb614202e33f996c3de7c8a81b0578bf78e79577aa5bbfa34d690251222168b862e60f175cc",
                    "gender": {
                         "@valid_since": "2011-10-28",
                         "content": "male",
                         "display": "Male"
                    },
                    "images": [
                         {
                              "@valid_since": "2011-10-28",
                              "display": "http://graph.facebook.com/100000180565088/picture?type=large",
                              "thumbnail_token": "AE2861B242686E6ACBCD539D133B8AE59A9AE962DB1FA5AA7AF08DABDF6D09F91A6B8580C088EB6966858778176997563C4C47FBAE58CA16C28B7649464C5230A194C53304E778",
                              "url": "http://graph.facebook.com/100000180565088/picture?type=large"
                         }
                    ],
                    "names": [
                         {
                              "@valid_since": "2011-10-28",
                              "display": "Shrinivas Kannan",
                              "first": "Shrinivas",
                              "last": "Kannan"
                         }
                    ],
                    "user_ids": [
                         {
                              "@valid_since": "2011-10-28",
                              "content": "100000180565088@facebook",
                              "display": "100000180565088@facebook"
                         }
                    ]
               },
               {
                    "@match": 0.0,
                    "@search_pointer": "",
                    "addresses": [
                         {
                              "@valid_since": "2008-11-05",
                              "city": "Atlanta",
                              "country": "US",
                              "display": "Atlanta, Georgia",
                              "state": "GA"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@valid_since": "2011-01-15",
                              "city": "Burbank",
                              "country": "US",
                              "display": "Burbank, California",
                              "state": "CA"
                         },
                         {
                              "@type": "work",
                              "@valid_since": "2010-12-09",
                              "city": "Oklahoma City",
                              "country": "US",
                              "display": "Oklahoma City, Oklahoma",
                              "state": "OK"
                         },
                         {
                              "@type": "work",
                              "@valid_since": "2015-08-12",
                              "country": "US",
                              "display": "Washington, United States",
                              "state": "WA"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@type": "work",
                              "@valid_since": "2011-01-15",
                              "city": "Milpitas",
                              "country": "US",
                              "display": "Milpitas, California",
                              "state": "CA"
                         },
                         {
                              "@type": "work",
                              "@valid_since": "2015-08-12",
                              "city": "Houston",
                              "country": "US",
                              "display": "Houston, Texas",
                              "state": "TX"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@valid_since": "2011-01-15",
                              "apartment": "17",
                              "city": "Sunnyvale",
                              "country": "US",
                              "display": "180-17 Locksunart Way, Sunnyvale, California",
                              "house": "180",
                              "state": "CA",
                              "street": "Locksunart Way",
                              "zip_code": "94087"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@type": "work",
                              "@valid_since": "2012-07-12",
                              "city": "Farmington",
                              "country": "US",
                              "display": "Farmington, Michigan",
                              "state": "MI",
                              "zip_code": "48335"
                         },
                         {
                              "@type": "work",
                              "@valid_since": "2015-08-12",
                              "city": "Bangalore",
                              "country": "IN",
                              "display": "Bangalore, India"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@type": "work",
                              "@valid_since": "2015-08-12",
                              "city": "Chennai",
                              "country": "IN",
                              "display": "Chennai, India"
                         }
                    ],
                    "gender": {
                         "@valid_since": "2008-11-05",
                         "content": "male",
                         "display": "Male"
                    },
                    "images": [
                         {
                              "@last_seen": "2018-06-27",
                              "@valid_since": "2017-08-01",
                              "display": "https://media.licdn.com/mpr/mpr/shrinknp_400_400/p/1/000/0ff/22f/063ef70.jpg",
                              "thumbnail_token": "AE2861B20B7D6E22D4C9479C5C7387EF9C9CE823D35EABEA7AAFCEB4822D4BE6583BC7DC98D6B521019EC7212B29D21476031CB3F10DC74A8CC9774A4F1A133FEA99C63354B777BA491EA6BC81E3E3BABACAEE79",
                              "url": "https://media.licdn.com/mpr/mpr/shrinknp_400_400/p/1/000/0ff/22f/063ef70.jpg"
                         },
                         {
                              "@last_seen": "2017-03-04",
                              "@valid_since": "2016-01-09",
                              "display": "https://media.licdn.com/mpr/mpr/shrinknp_200_200/p/1/000/0ff/22f/063ef70.jpg",
                              "thumbnail_token": "AE2861B20B7D6E22D4C9479C5C7387EF9C9CE823D35EABEA7AAFCEB4822D4BE6583BC7DC98D6B5210198C7212B2FD21476031CB3F10DC74A8CC9774A4F1A133FEA99C63354B777BA491EA6BC81E3E3BABACAEE79",
                              "url": "https://media.licdn.com/mpr/mpr/shrinknp_200_200/p/1/000/0ff/22f/063ef70.jpg"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@valid_since": "2019-02-10",
                              "display": "https://media.licdn.com/dms/image/C4E03AQE1hxPgPttP8w/profile-displayphoto-shrink_200_200/0?e=1554940800&v=beta&t=rGUfCJItgEreM3IPoLmkuLDRaHT1RnvzCy18oDXtocY",
                              "thumbnail_token": "AE2861B20B7D6E22D4C9479C5C7387EF9C9CE823D35EABEA73B2CFB4863058AE4E7CF681B38DE8100FEFC6790C4D85742D0763BAA9128708CC9F784005054530B6D99C6148A128E5131BFBA8CFF5F9BDB5A8E97CF99A12DD7A9948B1D92730DCE1C4BB475D586211CCC892B90151753EF50274CEFDB4E423123CE1820094DDF66F11B3063A1BAA513E25BE694F70A4223655A507462DE04412BB890FE03EB38D8D8373FBD7",
                              "url": "https://media.licdn.com/dms/image/C4E03AQE1hxPgPttP8w/profile-displayphoto-shrink_200_200/0?e=1554940800&v=beta&t=rGUfCJItgEreM3IPoLmkuLDRaHT1RnvzCy18oDXtocY"
                         },
                         {
                              "@valid_since": "2012-12-02",
                              "display": "http://socialprofiles.zenfs.com/images/6162366953f48e32ea78c291ed00c755_192.jpg",
                              "thumbnail_token": "AE2861B242686E7ED6CF4A94512D99E99991EA68C31FBCA079B9CFB58C3254E6423ED4D293CEF4676F9CC522422BDB116A1507BABB0EC51FC2CE294F5211103CA199C06306E475D5564DE4F5CDF7F7F5BA84B228F4F014DB7885",
                              "url": "http://socialprofiles.zenfs.com/images/6162366953f48e32ea78c291ed00c755_192.jpg"
                         }
                    ],
                    "names": [
                         {
                              "@valid_since": "2000-01-01",
                              "display": "Srinivasan Kappalur Kannan",
                              "first": "Srinivasan",
                              "last": "Kannan",
                              "middle": "Kappalur"
                         },
                         {
                              "@valid_since": "2008-11-05",
                              "display": "Srinivasan K K.k.",
                              "first": "Srinivasan",
                              "last": "K.K.",
                              "middle": "K"
                         },
                         {
                              "@last_seen": "2018-06-27",
                              "@valid_since": "2010-12-09",
                              "display": "Srinivasan Vk",
                              "first": "Srinivasan",
                              "last": "Vk"
                         }
                    ],
                    "user_ids": [
                         {
                              "@last_seen": "2017-03-04",
                              "@valid_since": "2010-12-09",
                              "content": "7731475@linkedin",
                              "display": "7731475@linkedin"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@valid_since": "2011-01-15",
                              "content": "5/a12/335@linkedin",
                              "display": "5/a12/335@linkedin"
                         },
                         {
                              "@last_seen": "2017-03-04",
                              "@valid_since": "2010-12-09",
                              "content": "2/70a/297@linkedin",
                              "display": "2/70a/297@linkedin"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@valid_since": "2011-01-15",
                              "content": "17442905@linkedin",
                              "display": "17442905@linkedin"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@valid_since": "2011-01-15",
                              "content": "#335a125@linkedin",
                              "display": "#335a125@linkedin"
                         },
                         {
                              "@last_seen": "2017-03-04",
                              "@valid_since": "2010-12-09",
                              "content": "#29770a2@linkedin",
                              "display": "#29770a2@linkedin"
                         }
                    ],
                    "usernames": [
                         {
                              "@last_seen": "2018-06-27",
                              "@valid_since": "2015-08-12",
                              "content": "srinivasanvk",
                              "display": "srinivasanvk"
                         }
                    ]
               },
               {
                    "@match": 0.0,
                    "@search_pointer": "9709d33a40b728d97461bcf681e57e9382be027d6f3017816362a6714d885d2643733207a9efcfdebc465ac0349be4bae71679c8f3f57a26a07e345f3b18de14fa890488e70cf5ff1b765d1c7e9fa21998baf32003c040133fbecbf4dd4a888f70c5089c0cd37a62964d499f197a0a38c885d0e78836a4cc4756b18351a1d75291a6a3ea20a8d51d3ca9d43ef8bc495923022f33b872fa75b94001c2930296915a29886bdfc1f723f27a43b74b846b42cea1ec0cb25368effe3659cea192e49f9add8ec8edc69c9b824a288679b61a59ecea02d240007ef2837f9bef78bba3bcff0a89373775dc1b37d2d3bd2c85fb340a602b9c5ff19765ea4545dd212aa58480f181752373825cc7c12d925ba59ef649aa543352f1a6b0b8c2f553ad6fef085b3c8f91e4184bae87922f42461f72e33c268f4e011b719a69b9510d9382f05d6fa7c071997c3b75de9852324601d7805bc0ea9c9874729621f88519b918c65591cbbd89a7e7024f3bdf1e3d648b2dd9f1a35d7d9357f174f3d33657a0193a8793e6e6750229473bca1d258a5d1937a02edb53dffb726c688bcac0d2514535b1e795e174d5e79bf8efda4d405d63eb037ec2f15175bc703c4019b641010aa7ae727288cb314ae23ee3f7b08f0b61da7ba1b9a609e04a0b24be429a16b97b1dd34451d6844f07bc97212b14cfe9a02f53330486d463ea7f40ba2d95718f72c839afe66f3a53d3b93ee332f161437c7c395791904eb56bd225ea45676bd9e050406a82ca8c801abccb7ebfbcc76a3b0d8cbaa5dccc1dfb26a29f193f807ae73b17fa0574bf85c42a2f40647fdee83048ee35d000232a124538c310016b18a016584fadbcad158e56400faddef621966b90d1b87c65d8d52cecb7b9dd49534b6cba35251a11721595df452896809ae061e00c7d030c461eea34a5749081e4f051112698d33d4b4bf494e3cfb5b6f196ee749cfc3eae18c8ea14542be47d5dc452e8176a2149af8572476a2154fc1bc439cb57aea7baab0ae63bbe4604a126faa42752ac6e724175424b13b49dbdac91ff5dcd0c07839c55afe2778fc3dea5852da0cb5bc8ddedeeadea8670e94a4379f1c6ebfa9c8bf291af90045aceb0a4371ddbf0c5a6cc56ddd7ff0c05435c7c720a84a2be8006da1ac818ed2d898e0c787e09fce928236827d5d93326fbe94777146b7c93c4c3eb6a3f36741a315b7bd275919d1912c25ffc7658df2e12c8693b27e19e408e3d101ccce8a3651954397e78074fa29bbde57edead582cc3ea2a9a70c8cde3696017a9d2f2af786fb5aad75baddffe879ca5525a90ea4833ce2242082bd5f55cafbf5068c99b45deba9e73177c072e14aa6c0ba786dbdde7c9a6849ac816bd3109e64418252658d665af0961c2b9f39b3348974288e31090c870cbb95576e28613153037693fd154aa68b35d7a0177aa7065c94512b053e3203d64247c684b1d44d190bbeb2a0dfbba398b19cb5ffafb09ff6b977750fcb3a86ff5f9f31207ac46990a861ad213a459c6c3cf5030cb34f7e5dfd98498370a30872f87e7119430e78a6e19c84c84862f7f2b927152ae104e0e066e2c77a4431d7561d6569dfee820dc96f3135d2a2f1793231d31b4b8c29a3e0d12f7e628ddea2807139d0f71cc10024ef29b8f79933454cf684b80adf449164364b1ece680bbd716143298ed9b0ca230bb959cfa3ef3bf520353d2850843aaaef2b0736304905a44c7d12ee142208171ca1193f0758fcebe5d5e5cedf2ae917c6a1ec7537146ef1ec17e882490a37649d1f3f88fdb62a8a09f187d7174debec1895ac119f5026a1886bab5a1cdbce40b0cbf0467d28887b712afbbc868d9a84b767e20e5c84b3adbacac91dfc0a0af4fa04b7d2c3d9c4a21bdfb1b6efddcea8b369891199847cf72fe50dedf2c0def38a15c7eb6c7e0e74baa5cd2e9f90e70900d6c6b3540ff902cb561fc4864687ffa15457c8e95e3a667f6d499167629010289738c878cf0d96aab5c0750ab0acbe571bc002d8aa5a33a63758681b44513acef0afcf3be9b11c186512abb1e8aa5f1a7cc9fdc43131c1f98ebb6cb6617014b6b3cb24bbca09594897897320f759006aacef6213971f72d2cc257a4f2c9657df8c826674dc6cc557613ede2e32e47d2d6bbdd87b962267edb62a957de5d0eee7732a2fef120f6fd9e6c43ab52861d8b1096ec903d597788336f0ff63325d6891dcc2e32b275878c49cf76d60688a98ad5456a44a0f0965a72705641e6251b5248d79ff83a6e1d25a620d275d447776a717f6043b8c1d50d12dff3331493451a62265a677810736e3ba15bbfbe5c90bd7b7b34a28470a61d564577f0fd0a8e0b69f5a1cccee4d5d6a43e5a48c1006f965cbd5680cc10f7230a78476f2b5a164c1ca0cefacc0d6352933c0f7c95745bc5e4838f29a1fe48a0e835cab19b59df9778754ebad860938021e1aee59bdb72f6169edb9c1ae6c39d21b520ced934ab5fc2a3bdbe597b0fba561c3c7bdf99a06c9e917f92010fdbee08ce2eba2d3640c48d9e66e4317257f0f94da5dde4c2379f77e33fe6a87465b8f6b6904e4a8a7f0b9c9db82c090a3d2d46a2abdd129692b6319f579dab43262eb22ddb37349b6c625d0232137adabd2c06fc0e837a8863d96617cba27c6cfee071a5664facfae6a32c64e7c220362387d4a187613359398bd9b374c6a0a3b9c3fea52058a17730ed18a1b2a4dc6ead1c274927107332133427bf2d6bad8292e4741cffb524ab4fe92a25aaa8dd10dc985e6241291f665c9111f410a9c984d4682fae49b0a998ee827b048be3cee0de9c71f9fac6af806e1767f7180e146c4d059dbd6a14993beca9e24937924abd042a989e3870d219072b423e0d4f0c42302a47aa9771e7afed1870952b44ae42013052ef0138f89b3308b158618e07d5dd5caf511b8c497b617053addc42528b0e95a8e2310023ed30888d85bab027d77ec34e0e73d40a3fb879d403b0973c123efdbba9f41c114b5755093f8d5c84c6baaceebf9d0ec0da88b9a5b8bf623e48ac05b2ea019708c1da8b6f8a373b16b2e6d447e04c2ca5c234b734d8525367235fd0aa440774968759a194b0d41bd46330c441e0c7e46bb52cf96eb11e63e3b6bb653858a62e8ebdf6ab198c9a1af972ca4534b5f9505923e6624efdcd6840973db14cc4da775e3074536c13efc781f99e68a238989119fd60401a05e1f87b502ba947f8ea8930799a0ea8f300b9a95eb5b174b8d7da20b2f047a74edab928e86045e14264fbace1a8c5e1a3ff5d83ee70a8f2f9508a1d963b9044975472da5e6b9072277a0cbd8dcd37ffeeb8243fd370d7889eb5fbdf5d0783aa2cef7d720973fb32c000d380f582af309f26e4c51c4d3d6e0974a53f6a88927f4c734ad0e2f6775faaf29756c50297663cd781a93b3c968cd3b237359072740f3ba3a5da8f0896d12c951ab2c863e73f864fa968a3076fc0178363361adafe044965a5ae529c68af5437600ff97741459054c2482b6e884c5228d7eb995d91282b2473ff9c8cbed2d07227543e12717fffc24d4538a5c6dec09cef39de8bf7369c4d4ad05bb6d643ee83a7a23222b634a76fd5ca214ebbd618c7c3f11b04a17e6b660d40025f44f68db7c01ddfc763f37ec6410b6164229a594d82bdc0a920ff44565547dc49f758764ccb3b5a69f38532ae37937672722302",
                    "addresses": [
                         {
                              "@valid_since": "2009-09-13",
                              "city": "Cupertino",
                              "country": "US",
                              "display": "20990 Valley Green Drive, Cupertino, California",
                              "house": "20990",
                              "state": "CA",
                              "street": "Valley Green Drive",
                              "zip_code": "95014"
                         },
                         {
                              "@valid_since": "2008-01-01",
                              "apartment": "74",
                              "city": "Cupertino",
                              "country": "US",
                              "display": "7375-74 Rollingdell Drive, Cupertino, California",
                              "house": "7375",
                              "state": "CA",
                              "street": "Rollingdell Drive",
                              "zip_code": "95014"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@valid_since": "2014-01-01",
                              "city": "Fremont",
                              "country": "US",
                              "display": "46855 Shale Common, Fremont, California",
                              "house": "46855",
                              "state": "CA",
                              "street": "Shale Common",
                              "zip_code": "94539"
                         },
                         {
                              "@valid_since": "2010-11-20",
                              "city": "San Francisco",
                              "country": "US",
                              "display": "San Francisco, California",
                              "state": "CA"
                         },
                         {
                              "city": "Fremont",
                              "country": "US",
                              "display": "4875 Mowry Avenue, Fremont, California",
                              "house": "4875",
                              "state": "CA",
                              "street": "Mowry Avenue",
                              "zip_code": "94538"
                         },
                         {
                              "@last_seen": "2017-06-15",
                              "@valid_since": "2007-05-28",
                              "apartment": "7AE",
                              "city": "Cleveland",
                              "country": "US",
                              "display": "1701-7AE E 12th Street, Cleveland, Ohio",
                              "house": "1701",
                              "state": "OH",
                              "street": "E 12Th Street",
                              "zip_code": "44114"
                         },
                         {
                              "apartment": "247",
                              "city": "Beaverton",
                              "country": "US",
                              "display": "2442-247 Nw Schmidt Way, Beaverton, Oregon",
                              "house": "2442",
                              "state": "OR",
                              "street": "NW Schmidt Way",
                              "zip_code": "97006"
                         },
                         {
                              "@last_seen": "2017-06-18",
                              "@valid_since": "2009-09-13",
                              "city": "Cleveland",
                              "country": "US",
                              "display": "1700 E 13th Street, Cleveland, Ohio",
                              "house": "1700",
                              "state": "OH",
                              "street": "E 13Th Street",
                              "zip_code": "44114"
                         },
                         {
                              "@last_seen": "2017-04-06",
                              "@valid_since": "2017-04-06",
                              "country": "IN",
                              "display": "India"
                         }
                    ],
                    "gender": {
                         "@valid_since": "2007-05-28",
                         "content": "male",
                         "display": "Male"
                    },
                    "images": [
                         {
                              "@last_seen": "2017-09-20",
                              "@valid_since": "2010-06-06",
                              "display": "http://graph.facebook.com/596453924/picture?type=large",
                              "thumbnail_token": "AE2861B242686E6ACBCD539D133B8AE59A9AE962DB1FA5AA7AF089A2D9690CFA1261819A86D4B8252BD8922E00649241641F52F0B958D11ED09075115311196AF5",
                              "url": "http://graph.facebook.com/596453924/picture?type=large"
                         },
                         {
                              "@valid_since": "2013-09-15",
                              "display": "http://lh4.googleusercontent.com/-yk5juzgLFEs/AAAAAAAAAAI/AAAAAAAADVo/XtnyuLytZ4U/photo.jpg",
                              "thumbnail_token": "AE2861B242686E61D1980D9252328CEA9A8DF568C252A9AB63BAD2EFC13E56A4047ECCDEC3D7AE2B39E6B1540732A365183272C39F7CB63BEAD6506D2169601884E8B4565EFE18FE090DA397DEF3CAE78BD8AB24A6B14FC320C61FA8D869688DE9C5B2455F54",
                              "url": "http://lh4.googleusercontent.com/-yk5juzgLFEs/AAAAAAAAAAI/AAAAAAAADVo/XtnyuLytZ4U/photo.jpg"
                         },
                         {
                              "@valid_since": "2012-10-01",
                              "display": "http://avatars.zenfs.com/users/1FyN1wmHcAAECAIJHXIlwQYAA.large.png",
                              "thumbnail_token": "AE2861B242686E6CCFCD57944F2EC5FC9A96E07E9E52A9A838AACFFE9D2E16F86D2AFB8481D093321FEBB2523554A86C013A5FF58F64B63B8D95705E074D0F29ABCED66442B824B75240E0E994",
                              "url": "http://avatars.zenfs.com/users/1FyN1wmHcAAECAIJHXIlwQYAA.large.png"
                         }
                    ],
                    "languages": [
                         {
                              "@inferred": true,
                              "display": "en_US",
                              "language": "en",
                              "region": "US"
                         }
                    ],
                    "names": [
                         {
                              "@last_seen": "2019-02-10",
                              "@valid_since": "2007-05-28",
                              "display": "Kannan Srinivasan",
                              "first": "Kannan",
                              "last": "Srinivasan"
                         },
                         {
                              "@valid_since": "2008-01-01",
                              "display": "Srinivasan Kannan",
                              "first": "Srinivasan",
                              "last": "Kannan",
                              "prefix": "Ms"
                         }
                    ],
                    "origin_countries": [
                         {
                              "country": "IN",
                              "display": "India"
                         }
                    ],
                    "phones": [
                         {
                              "@valid_since": "2009-09-13",
                              "country_code": 1,
                              "display": "216-861-9949",
                              "display_international": "+1 216-861-9949",
                              "number": 2168619949
                         },
                         {
                              "@valid_since": "2008-01-01",
                              "country_code": 1,
                              "display": "408-446-1014",
                              "display_international": "+1 408-446-1014",
                              "number": 4084461014
                         }
                    ],
                    "relationships": [
                         {
                              "@type": "other",
                              "@valid_since": "2010-04-30",
                              "names": [
                                   {
                                        "@valid_since": "2010-04-30",
                                        "display": "Biranchi Kar (biranchik)",
                                        "first": "Biranchi",
                                        "last": "Kar"
                                   }
                              ]
                         },
                         {
                              "@subtype": "Follower",
                              "@type": "other",
                              "@valid_since": "2012-07-01",
                              "names": [
                                   {
                                        "@valid_since": "2012-07-01",
                                        "display": "Peter Prakash",
                                        "first": "Peter",
                                        "last": "Prakash"
                                   }
                              ]
                         }
                    ],
                    "user_ids": [
                         {
                              "@last_seen": "2017-09-20",
                              "@valid_since": "2010-06-06",
                              "content": "596453924@facebook",
                              "display": "596453924@facebook"
                         },
                         {
                              "@valid_since": "2012-10-18",
                              "content": "49951573@N00@flickr",
                              "display": "49951573@N00@flickr"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@valid_since": "2010-11-20",
                              "content": "1892723@linkedin",
                              "display": "1892723@linkedin"
                         },
                         {
                              "@valid_since": "2012-10-08",
                              "content": "100370837718409462074@google",
                              "display": "100370837718409462074@google"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@valid_since": "2010-11-20",
                              "content": "0/773/3ab@linkedin",
                              "display": "0/773/3ab@linkedin"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@valid_since": "2010-11-20",
                              "content": "#3ab773@linkedin",
                              "display": "#3ab773@linkedin"
                         }
                    ],
                    "usernames": [
                         {
                              "@valid_since": "2011-06-24",
                              "content": "kannan.sri",
                              "display": "kannan.sri"
                         },
                         {
                              "@valid_since": "2010-04-30",
                              "content": "sricann",
                              "display": "sricann"
                         }
                    ]
               },
               {
                    "@match": 0.0,
                    "@search_pointer": "f006505a18d61c65c6a892fc12098501dab259a58b0828b0ed6b3f1e333b8b41d7ae56fe9a771336fef365ab6716ef9ebf574138f3c1d850ada4c6c3bee97a31619e6a04bd4f4957b282a93196624e8325f2b76bb6f5cbfa3dc181ce39369353a8aef4fca491be6c6b3424f8459ce3bf56722a43d2a1f5cb5829d26047ac91008038325ed684f684dff2d81e1489a11b254d43b3884293e09841b239be6c4357c7e8802345498352b53e924653b20dbf96001359f0e1c6c969796765316c93edd7beb5e6c1bcd169f77dd83de836b14ff9385b50426cff06f677c6891a01d296f6e047a6b285be9a1b5aeea12092e380b19730bc7a28af9afbcca66de35ad623f88896cab4b709ac4c2342beb23bd0981906c30a0261405ccc30f19df3f0c2e12d9a6787168d2fef8685eae455886fae883810e7bc9bd5d8a60bb6fe8dd1210ccd5cbb9d2c9740a693449c65db6e04d919bca10f41bc4b889d5b1603aa2e8e71639aa41ed7f0138dcc6d950d3b68c3fda5a1cd541b18ce8c03e1e4fd6eb2a6c36c1bcee55b822141d48d5fa8ef5f4133c25bb9be3c625f9d755adcf834641922da5aa13f7194de52633a6a27b7b8818c73795c64d2fdbccfaf8aef96c4adc3e9bce72f02916703f7d1e48a4828423b92d6bfd4195f24a6f7e223c3426a2e9577afb494f59caa71b487fa6d8aa3188b304c6f8b8b9c8d84bc6d163cc25c61092101db6a66b5cf2527256399d9bc4f54f7007d45d7d9d5694975578659fda29eba8b12d09cc5e0a133e96aa62fa383b76f3b2dd77310c19071aecb7bd9357f19421decd1694a15f1a273910bce172464325e07794ed2795c4b77da8035ea317349356511f006f2f1e8671a98324a44e8b6aa4420facb2979b489b16cd4dbbaaf0bed0113d072464e45b146adb72007aa0fcbd3d3822b017be4a69010ee717ea4c62327db90fd5f75fb92f5461bf2111b78eee0d98dfda458c777b7e5b9ceba07aa1398a4b7a856484cbbf432ba85b6874b6ee24962a94e5eb9b0c58ab11ec7feffd97f5c9402f5d1bb936d0e1990e72e0781c174cf8c6562085398cbb0c1f036113f12047630249ffe66f24e5ae37561b1edeaf4624528d28c4de032cc6687ac6937a6453326b63e221ed5bed05e8b67e6cf83549205b491ec5b5d04960dea56fb7445c0300643ac593648c89339dea3c0f1a614c797c94ea3857aac28e1b2dad3482779f6f303a39d67bb5a8d25a663d12de0eda0ec4d9d407c9aac54a497dd7755036d524c28faae0fe8bdc548ec89f822ee86e615d2600f6d4c4cf2d14d1ac32078fd7f7f1cf724e3cc17afa6418fdfa1f9f38083988014aa48427df2c053fc680baee761bcff7bdea3607fccb265e94d599b8d11167f9a4222c9d897c0f39ddcc80bfc2638e63d23abeada63901d971b83202a01cd9276c46a1a12cfa561690fbef6c1c456893c955e688200acc4ccc9547544621e8e7eee97206b83d00e13be9c2aa174474d4f12c5d2a14ab787cbebd9b7adbbeae5130afd01fa907745d3855cd1bcf2c430e8c2af724c9c4ed06c92a8ca65b2812a7371883686688d532511c4b75e4d512f5b62012878c632872e8901a9d3bf07a28ec61e0441f853b2a8f39bbd013c8acb9744806d86467fe2f455390113616c800d1cdd41163976fec55582364f0975faee4d71165bbea559176149072063233d469ccb826ece647ecc71500efd275f7ea5cf2b854eff9b456b36d731da37d65d0f9db4e693292eb0d2e369a8e673888d417b80dc986126b1d5a9fc8cde31a498c75d39b1d3de294c473ac5db8afcd7c56253dc4274ef3b5980a4594d2d2c06892da7eb63bd68ab96559153b7d095f08747f38deace7682ae4b65763fed003ff4c847df0af20fadc32ae56e2d0fe4d2a162edbc4a2b6d5792043c58f0388224b1e589a7eeb6a12bf716d4a513816d4c08610b7fd74bda4a43a0e2ac05d722a1202aa43d3a606cdc909e6885fff3f5579ca7d4eeebe93672e79f899a27b2a5f75d8f8cbf2b6ee4a7eb2de5ce105b36c89d4a60a2bd205fa16d5329cb9c958845de4d26edc6b41e77a46d9298b41cab49b7d812af4671680b5363f25b07b40b7b561cdc027b285789ee42e965163a1cbd560b12758a151149635de0e4268f6154b11a4a3817501a757d0a98567bdc00a2db5a7f037c43e841b610a990fb13aae958b87e81019a7b54e884a05c31cd2671288fba306f217cdf30311626041b35a1c074b65cb5062af1252744d06f8f6ca81a7ae68472d71a0ecf61f1ca2025ae7626f22426732282384ea37a1e0b559f0be4a0718686d5d864f447cde335aa30ccc2d0aa0a759978bf288e01c82a316320d42f2ecb0a7a574d8dc4f8ec4463d133f12ff9d0fab5ab16ac2cb7e78a063817533e44a053f21ec27980f5a7eb681454171fdea00cf6c2003efa4d1702946cd6bf5fe8d3ff3804f1bf6e126a04f6521c4f4302c78ed4ce119dfbc1bae01ecf0040d7aae9a0f4f9b9b6cf01b909be4562ab605c3cf13003cbb610685156ef9f21f1b6c7e81ff64f809f9e84a6e8cecf1c7c7f5013747f5800b480925525bd1a7404d5a5a456bb98f64a1ad46f958187415fa055380abe92ccb9b735fb6def8bc50320bbdb5eab4cd9ba1331c1b2fd5b427470fa5b787f0d19d5f942cb5b1aaabfe2c5cc72893e5c4dec2c376e1203da551c0edb5fad0d57d58eb96bae3791b50f80ed91991014e73e29387aa0a1985f0e628e65dc3abc89b4e03171d90171af52dc3b8fcf7c19b14376a23682fc6986a926a78c645875d3c334ef07b68ce1561244ded87fb876990082b9fb5ff4cdcbf152dba21bcf1e9b80190984eb6595e13c5ccaa328eb847bbe67ddfad20dac0022d4ddca179c8bfbbff63d",
                    "addresses": [
                         {
                              "@last_seen": "2018-11-25",
                              "@valid_since": "2013-01-19",
                              "city": "Ahmedabad",
                              "country": "IN",
                              "display": "Ahmedabad, India"
                         },
                         {
                              "@last_seen": "2018-11-25",
                              "@valid_since": "2014-05-15",
                              "city": "Mumbai",
                              "country": "IN",
                              "display": "Mumbai, India"
                         }
                    ],
                    "dob": {
                         "@last_seen": "2017-10-17",
                         "@valid_since": "2017-10-17",
                         "date_range": {
                              "end": "1984-08-28",
                              "start": "1984-08-28"
                         },
                         "display": "35 years old"
                    },
                    "gender": {
                         "@valid_since": "2010-10-19",
                         "content": "male",
                         "display": "Male"
                    },
                    "images": [
                         {
                              "@last_seen": "2018-07-28",
                              "@valid_since": "2009-07-16",
                              "display": "http://graph.facebook.com/745165086/picture?type=large",
                              "thumbnail_token": "AE2861B242686E6ACBCD539D133B8AE59A9AE962DB1FA5AA7AF08BAFDA6C0FFC1B6B839A86D4B8252BD8922E00649241641F52F0B958D11ED09075115311196AF5",
                              "url": "http://graph.facebook.com/745165086/picture?type=large"
                         }
                    ],
                    "languages": [
                         {
                              "display": "en_US",
                              "language": "en",
                              "region": "US"
                         }
                    ],
                    "names": [
                         {
                              "@last_seen": "2018-11-25",
                              "@valid_since": "2009-07-16",
                              "display": "Srinivasan Kannan",
                              "first": "Srinivasan",
                              "last": "Kannan"
                         }
                    ],
                    "origin_countries": [
                         {
                              "country": "IN",
                              "display": "India"
                         }
                    ],
                    "relationships": [
                         {
                              "@type": "other",
                              "@valid_since": "2009-07-16",
                              "names": [
                                   {
                                        "@valid_since": "2009-07-16",
                                        "display": "Aanjaney Nath",
                                        "first": "Aanjaney",
                                        "last": "Nath"
                                   }
                              ]
                         },
                         {
                              "@type": "other",
                              "@valid_since": "2009-07-16",
                              "names": [
                                   {
                                        "@valid_since": "2009-07-16",
                                        "display": "Rishabh Jain",
                                        "first": "Rishabh",
                                        "last": "Jain"
                                   }
                              ]
                         }
                    ],
                    "user_ids": [
                         {
                              "@last_seen": "2018-07-28",
                              "@valid_since": "2009-07-16",
                              "content": "745165086@facebook",
                              "display": "745165086@facebook"
                         },
                         {
                              "@last_seen": "2018-11-25",
                              "@valid_since": "2013-01-19",
                              "content": "53204000@linkedin",
                              "display": "53204000@linkedin"
                         },
                         {
                              "@last_seen": "2018-11-25",
                              "@valid_since": "2013-01-19",
                              "content": "15/999/428@linkedin",
                              "display": "15/999/428@linkedin"
                         },
                         {
                              "@last_seen": "2018-11-25",
                              "@valid_since": "2013-01-19",
                              "content": "#42899915@linkedin",
                              "display": "#42899915@linkedin"
                         }
                    ],
                    "usernames": [
                         {
                              "@valid_since": "2014-01-01",
                              "content": "srinivasan.kannan.100",
                              "display": "srinivasan.kannan.100"
                         }
                    ]
               },
               {
                    "@match": 0.0,
                    "@search_pointer": "f9082fe53ebb40a6dd0cf2b7af12d997b50fa27caa56b380dd194f9cd17c77f10a75ca57b96ad9b98fbe8aa45ee28ac10b5885ee3804cace61ec8c3575138e4e680b05a22c2939b6910f715d66cd32e0858938103fac9546a6b7d349d6171c160aaa64066adb3fd41f3c68da2b4057416af626042c2796da08c460e3a13141b69df4b6a2d12971b9dfd118542b326123cb4b8fdaf42d0d7f3e0ff08514d10a5a421a5ff35a2c116bb914814abb3aced71e4273a36db6c46cbfaf5dfef4df3bdb8b90b6898a4b1cc8081fb50788398325b6135f3d75733bdd333d2137e50d80bd8a48da1761c2067329dff6f8ea0e0fe69841730883116b8cff528f099c77a5374682eaf383361c1e8a66816a3b5f26dee5f10e0e8eb226065e007edc995826afacdc5ed33db78fbc46fbf8288a814105be2953a9e0040cf408ec42da52d09262d2ac1d6595e07b842622c374b60e0c70c67ddab76b38d102fbac1d4a76fefc7704c43a8a040eae0559b48f9b4bcfeb35ab6e1df32b22c84b7b384b29a265b065ec087bc3466a56822ed51c98725fb3df20440ff23ec6e1b8e50764941bfe3d6cd8bd4518be97be8d47d526f54256bdbdbc48257888507acc0311078c78b78e247e334a81dc1240a9124528ce00dc8d17d6aef6266bcb61b3ed19009c003c3126f24b742990cfd2fefa34053227eafaf7bed153bbe5d1a0f86ff18633be2fd37e11dd2268e28cf4fbd3aaa015a2dc1279d5d8f86d7978e5d940fb2c072fbb641fb553c5572575d5c3c3ddba5bbce1b9ef07c04f25052d616299ec76c5492fb77ba011af36bdfa2be2c18c354aae6b9d2f1f04ab81d14feafb507bb31975739af32a8d8d986ff1e2a22e051558f2b365023bbce21dfe3df9741ae3993346cc955d22347224b4785f5e18f2229d47a66bfaccf8311952d4a1227e881c2050b8f4f9b4ed17fa2b20a02fb48ee558d50861cde8d9f46c599f403a67c6ddd9479608fa88e53ddb7c78074e8f45800b1a54e7fadeb6f7404fc1d422824f6c45535a203d0b20c9128142343a412ede30a34889032bc09f8277fbc4c7fbc02e3878f903993154ea4bce1e7e3f011ebd47724c1dd5a441ca655c3657aa22705c064d91cd1732656467e684a610b8b871b8b89ebf558b006c7e3d9f0c1e1d57e0a8708ce92311df6f41498611b3637aeead1605edbc699b78ef839bd6037e77df7dcbe350e87c56cb8009041e1a5f3d7cf0b910165d5f47abcf0e1ce51ff2c8b0d2cb69b02b25144b9be85743fd83de081afade961ccf94a42616cd594e86a9502696b16f931f77d8d865b702c79173b11f61778d276a36dbc3c2aacc3a787fc396b0c7a861b774cbb4521b1b4f24b2a9932a9c594674b25f13d1d3262c9c1a3e10a357b8d1b6cffb892fd648e72655182613d734574b872caeabb7fab276da217fb8f3059a41d77464d062b421b49808b5ca951051837d85dbf625c3cf851de47bca1450f361085c4a71cf819697f41ec4976ddce7cf788067d484e64f561fc707cd73c5f63ae9b8d8e393c3ecfbce743ed7f99cfc017845d8d8668254ca517fc38e653f1c76cdefcb49a3522b97e1f986eeb7bc1177d5062e35cd50ca089beba620e880e495b652d91a258caa8a41d9bbdfad7a4044bdced112fd2cd411ae42722bade2dd6cfcc9d369b3cbb835fd762786f3e7b7b80c233c3ce976aacf8e781404dfa7a9ef1de56e1f50b7568e1c408f5a92d0ef70464cba74c9a4ffea670cf478bfc90a1b4877bcd924244a8238828846b0a685261b1bb1e502dc05846ac8ae2dbf5af3ec5be5cc6899afb0bf4a31f53926fed1bd4e9a03907dbbcef37fe08478e5034d1e58023f13f825d4c0e5c0fd5f0a8df9b4f8a54db86f6041a56cdbcdb0837c2284c692ac6716e2f996f13f95c9c89dd55bd66033920ae871f5bace38b5d641e36037a22cda505baf5a0c065a3d00fea2bb9c6693de056553277831a1c2db7f8048a0f313bc8f513b9efa8fa45ca8d4b918017d59920ac75b230d3117975433c640fe26882db3f199d83801a27773e36ef1065507d13e07dee776022a847df3d42e4cfd2d32da78d97ee6b9ea329507b2639690e3109b98b1cd750f3dbdf115f925ad6ef032ebd27864ae9921462ab68b25603c9fe182cfd556068bd2156cbe00e3bd0c51f13cc1127e9ed8c59f19d68caafb7f1cc48ca3c77aab108060b3f733a9b57348d008571b5f172c394284b0530ad58187ebe1c3ed596bba69aadc679eb70474fccd0a2d55ab9d04c0d12518760eaf4dea471dbc20455af6be1e85d3b825320c8a20d58218c6f3ecff71f9f9e081ff1491314ec3d748a3462579472c668ec7db80489146e24ab457a7ed1fcf226dcc233b21473f0563a210efc785f55b875605758b19db45c55cf832c6942f1376175a870a4de32956b093bde5b613f1bdce5e9317076e6f85ac88cf827a79256025f07c005d66858ce3bebdb20b2a9895ab202827e292a03b192bad5c9cabb90f03f5c4e4e301e3eb540d2fe76789c605eaa3114565ddd0376c93a4f8f988a9fafc973bb9c704b6532f6a451973c3684674ec74e4f4967c3cc4cad8aa103b40e214af461ecc23575a617518f0351be06739aac821739fd82f2c1ce7ab2019e4ad91865beade95ae3a8ee07eeacc32035eaacbbbb79a6f61f72ef15d440468876a38cb5d2f49d46d227ddcee8b0efd82bb41356411a3a84415248055466933656543f10279f7c1319cc0b3e73b378c73288989b50aaf9e0ef3d629a6652846ea56e3a41d7a99119ef8b0471fb3bd8d40278ed173569d0ea07b575e4703812e8c3aecefcc81c5669406d28a176051b790c7fa3f9e7aa23f28e5f02830c8bf4dc755fd73e4f64907d9670b50b35ea41c2e85f8dcb0600ed0044fbf35e2f1318f640cc2a891c1dc0636c4522f109e96d0f3ec2191d3ec7b09b82634cced812bfa8afd4c21976ed2480abfa6bdc94fb20d6a51a50166a826899e7324b6d18570d47abcd7f767ce84f20270263f7b048e0910689f837eef085de832e6ffd6c2f06c4fe4a16e2f6dfbe0e3468ac21f89511915452771a3f67b0c9097d15d3db2683653ae5085573e86cf8f0d2bb87531c00c52004233a1ab57f7e3dbabb887e8114ea7a91b01e3157b1facf1f8959618d81f53974b8c4fd31aa3c41eebe3ac4d72bdf7ea58f7ffbf0a8a5f1fe56c49e8788923c24c07c985cf90db733c2a826ae5bea0",
                    "addresses": [
                         {
                              "@last_seen": "2018-11-28",
                              "@valid_since": "2013-01-17",
                              "city": "Bangalore",
                              "country": "IN",
                              "display": "Bangalore, India"
                         },
                         {
                              "@last_seen": "2018-11-28",
                              "@valid_since": "2014-01-01",
                              "city": "Singapore",
                              "country": "SG",
                              "display": "Singapore, Singapore"
                         }
                    ],
                    "dob": {
                         "@last_seen": "2017-09-23",
                         "@valid_since": "2017-09-23",
                         "date_range": {
                              "end": "1978-12-31",
                              "start": "1978-01-01"
                         },
                         "display": "41 years old"
                    },
                    "gender": {
                         "@valid_since": "2010-10-19",
                         "content": "male",
                         "display": "Male"
                    },
                    "images": [
                         {
                              "@last_seen": "2017-10-05",
                              "@valid_since": "2010-07-14",
                              "display": "http://graph.facebook.com/1109157976/picture?type=large",
                              "thumbnail_token": "AE2861B242686E6ACBCD539D133B8AE59A9AE962DB1FA5AA7AF08DAADF6408FC1C6A8283D9CDB2322ADF85744B699B543C4E5FE3AC5A925CC78A78485D1B1861F699",
                              "url": "http://graph.facebook.com/1109157976/picture?type=large"
                         },
                         {
                              "@last_seen": "2018-07-23",
                              "@valid_since": "2018-07-23",
                              "display": "https://media.licdn.com/dms/image/C5603AQGG83_815pSvQ/profile-displayphoto-shrink_200_200/0?e=1538006400&v=beta&t=wm-B2pcQZgmqRLL_TZxoudwW9drp1-AtM-Z4LoPP0ME",
                              "thumbnail_token": "AE2861B20B7D6E22D4C9479C5C7387EF9C9CE823D35EABEA73B2CFB4863058AE4E7CF680C08DE8100FEDB0294742DA156C0360F48F128708CC9F784005054530B6D99C6148A128E5131BFBA8CFF5F9BDB5A8E97CF99A12DD7A9948B1D92730DCE7C8B2435B546211CCC892B90151753EF50271E4859095193819DCA01F80C2896A1E88102F1FAA790D20E6456931C761015BAB532D21C36F1A9FD621FC3EB38D8D8373FBD7",
                              "url": "https://media.licdn.com/dms/image/C5603AQGG83_815pSvQ/profile-displayphoto-shrink_200_200/0?e=1538006400&v=beta&t=wm-B2pcQZgmqRLL_TZxoudwW9drp1-AtM-Z4LoPP0ME"
                         }
                    ],
                    "languages": [
                         {
                              "display": "en_US",
                              "language": "en",
                              "region": "US"
                         }
                    ],
                    "names": [
                         {
                              "@valid_since": "2010-07-14",
                              "display": "Srinivasan Kannan",
                              "first": "Srinivasan",
                              "last": "Kannan"
                         },
                         {
                              "@valid_since": "2016-07-23",
                              "display": "Srinivas Kannan",
                              "first": "Srinivas",
                              "last": "Kannan"
                         }
                    ],
                    "origin_countries": [
                         {
                              "country": "IN",
                              "display": "India"
                         }
                    ],
                    "user_ids": [
                         {
                              "@last_seen": "2018-11-28",
                              "@valid_since": "2012-10-13",
                              "content": "36389196@linkedin",
                              "display": "36389196@linkedin"
                         },
                         {
                              "@last_seen": "2017-10-05",
                              "@valid_since": "2010-07-14",
                              "content": "1109157976@facebook",
                              "display": "1109157976@facebook"
                         },
                         {
                              "@last_seen": "2018-11-28",
                              "@valid_since": "2012-10-13",
                              "content": "10/22a/690@linkedin",
                              "display": "10/22a/690@linkedin"
                         },
                         {
                              "@last_seen": "2018-11-28",
                              "@valid_since": "2012-10-13",
                              "content": "#69022a10@linkedin",
                              "display": "#69022a10@linkedin"
                         }
                    ],
                    "usernames": [
                         {
                              "@valid_since": "2014-01-01",
                              "content": "srinivasan.kannan.395",
                              "display": "srinivasan.kannan.395"
                         }
                    ]
               },
               {
                    "@match": 0.0,
                    "@search_pointer": "054fd437e4f9bc9db7270c821b4f9d7f8edc99cf8a8dc964221213b8f95fab5801ee0a02708f0b5b1aecee05c199a4600a1c2ed1685301182499f01bd9af32f59f27550f534d3a52f94ebfd0fef1f0cd3be133ff84624e500ce605faf41b5cf44b7f14bc62b9c6083167643e3b6f22f08388a2e463979b3188958563191b284dc68cffc6e45a6daa8bd83fc4ecc0aab153dc02617440fbdfe8a23bb332743ad4bcecfc822688631dd6239b5760411f447dad86fc807d39d474ca1301f01add94c0e2c342680cfa76855ed05d597dac3794d543171d88c59f9fee61b1c1d48491614932d8814af224c902c00a55c68c59b92b58238082ef0005306ec67de72ae93368e824fc6e4e4d39d863a80d14b53c5a63d2572f798347e914815be0d4c65e74b6384e36a30219286d52f9bc0d6b3867e868f4ff5c9866f91d64bde86bde6a6688e94fecc9d39f14a0ff2f7db4d8b22bd2866c9d55da46f30f39cd25c3d27f7d83b0d4e830abb44b293fcb88b1ab5249441e2bd0ee01d8a9324c5e40b2b9280e40653b3c48a2678cd62f89c28b86ea69d23e9e89874f804317dbfd47f66e13d70ae5b402bc8f9c12689e7575f0e2e1b73f4fa3ccb4b8a690a8b543c6f9025c5e914ca4326b7f109ad7334eceb673df1f4936f5edea63382f39866f8f48191f0f3adf0f76781b7ba534bde5b3cf4162a0f6501f4fd11644b4021a128744def3b3d4db23645aabf24a68e04c9f60cb5bd51f083fae79852bbade81e26ae0c274d4a6f4f48e195078e90e80d4f6ac12232dcde08996136633dce1215bf071eae2379fb0bf6075c56dff175535a65977d2af0c6383f4b881eef0da1996444526a33506561a6aa5c6f363664649916e9e34e424ed647eb290130d4ab8ae2477f8c5dd88078dff75d11f81add2f801a4c508dd35c59b6f8ba9ed734e85e84490966d4220f861c7b323220414202b0ddea29f77ebcf5364f68eafe40aa53a29e28d3d9c808e60c23fc0a307d735326746a5089ccf723925f0cab1cd279f8639327a7a96515440457e0d7d68e750f72ffcdecf5437cb7fb5e4b30d18aed5d70cc45f87baf1e53841f7a2cf35016a1c525d9874bbc87cdb7df9159cbcda22d55673dac4595b58f82cb2662e9cbcde2d1b7e8638805fc9db7b610eeca67513a52dfbb362fa668d9c22c4d81ae9909da3187e51af60a3c0e4500791b7179fdaf9ba0b234f42fa4e10a1bcbf69cb72742aa4f52d0a67594196e8227807246a031608dcabce73e9b5e498b7c998b6ee5e9e7d4e93d5d3f545083b03100b33ca5c07f2378867aec53e5d5044eac50ed5d2d94b0bfe93d02bee66ef4af93eb4ca216d5b53492da2428d45be7de1a87942e2618660e4dba39e6c5a87fb0e1326d2a07e9cd8fcd98fc7ca19a1d3d2c2c3f40e3129dd4c67d19c6cecf258e08d5d45a0264c915fff0b4a51532d344e7cddbacbd889fcfed746141ccc0747c5749a49e87923adf7103e506728339a35396174c96c3561ec268f7b4da9d1262b37cf563f41f739ec28371ad6c2363f5ea229c87596c5df6e631b151c5f8265246e1fb924f09b3e12622ea139ffdd30f808314ba3f799ea8a708d3a12b6ac49490a52367a5a0028542ebf66016d15b77be35d50a510b423e127047c61e69c637648c6fc08b75a62ba9e5aacdd436f781252b7c82b0b806ca066c00cd3bd3cf0aec87cfa07b814fa7606324b0a98b09cd1017d2c8321ccc077b6481a5905fc1d546f1f9d5a0ca4ca14503eb4d8f84c8030cf32a5d1d81bb7882e92eb4b4b7c265dc4534f62562582613e36fe87bc0d5fd91d2b0412e035c6c53a42315f9be14244b3850e807702f8a8a4e26bdea1b2e57979992f129137175782570cd9009f8d5b464a955cacb116687dee79a08c9cea88cb370963e8215c8397631e37f103d4927cdd34a123ec4465eeab42108327a4c04cb56276f86b6682d8664f1ebfa602f25bfb8fe528a1787c7b2c381c2f2f39eea8105a3517e6fb547f05ad1e0de43ce8960751fcc68ef55e384e72764f689f3766a2a193236f895b2ef8391cf5cb81785c67c73dd71242a8801d717448fa7d19f60a9a1343d392946f7291c4bdb896e6c21e7caa00fd7f5bab99cd0acd3a569a84c54bbbd9d8335302a60c3713d6c73e5809243651c0e6b167ac179d49d67301393b0731109d90cf75192d33fc91aa2a52095bfe88cfda2c00fd220f5efb6ba945c352a7e649d4d691a094ceabdfcb46a2462e00e7068fe9e3147cb0037e2167ee53661c354f99355a54acea8a684ee778300c849e43f9907f3cd4e14fcb4758f7d3cb0bc0b32f845e995d9f21f180302749905bbb432a5306dbbf3bdd44a5859f980c81158aad0d2308babefc1e634e42b35fd669a03969f4b90444242ccfde3afa14bad9b7d162e67d9ee15ed40a727e4fbc87b826657edc09a713745c0e0b2eb9dedbaa244c9796677eb9ab622944eb1a5744282a8ec65ed5a7f24c6cc8fa1ca964ac0e4941558407c112701cd46132cfa9c5b12f214ab832719925220e016a97be79580dc4a1596447c63c22aa710e7222d5b4ceee38c7f1b821533a8170834760d1ad18aff80c415f57919280cb2dde500ab773810abc4a2dcad10de2282400301008cfb3355de937d37d948a253cc02b92c49a7a56d2a9ecc99c6a42221befd2e9eaed15c3f3d5f5bb58e940d2249c48da4f65ddb78f5eb2c5018b05d60f4415814711e4423223999f978312aba722e706caa7cb234338bbd28f0fbfba7edd1766be042a711ae5b10e79a74a0b595a5bb349bf359e4ac57338d333ce5c9da6239d94ac85e0a9cfb6190cc52db5aaec2b0d33c0814fa8d4f95a1a11a7b66fe228deb32cb9cce61e5130b1ef07604de4447ed41503b1c4",
                    "addresses": [
                         {
                              "@last_seen": "2016-12-31",
                              "@valid_since": "2016-10-20",
                              "city": "Chandler",
                              "country": "US",
                              "display": "Chandler, Arizona",
                              "state": "AZ"
                         },
                         {
                              "@valid_since": "2014-01-01",
                              "country": "US",
                              "display": "Minnesota, United States",
                              "state": "MN"
                         },
                         {
                              "city": "Demarest",
                              "country": "US",
                              "display": "142 Anderson Avenue, Demarest, New Jersey",
                              "house": "142",
                              "state": "NJ",
                              "street": "Anderson Avenue",
                              "zip_code": "07627"
                         },
                         {
                              "@valid_since": "2010-12-22",
                              "city": "Albany",
                              "country": "US",
                              "display": "Albany, New York",
                              "state": "NY"
                         },
                         {
                              "@valid_since": "2000-01-01",
                              "country": "US",
                              "display": "Utah, United States",
                              "state": "UT"
                         }
                    ],
                    "gender": {
                         "@valid_since": "2014-01-01",
                         "content": "male",
                         "display": "Male"
                    },
                    "images": [
                         {
                              "@valid_since": "2010-06-25",
                              "display": "http://graph.facebook.com/562401682/picture?type=large",
                              "thumbnail_token": "AE2861B242686E6ACBCD539D133B8AE59A9AE962DB1FA5AA7AF089ADDD6909F81D6B879A86D4B8252BD8922E00649241641F52F0B958D11ED09075115311196AF5",
                              "url": "http://graph.facebook.com/562401682/picture?type=large"
                         }
                    ],
                    "names": [
                         {
                              "@last_seen": "2016-12-31",
                              "@valid_since": "2010-06-24",
                              "display": "Srinivasan Kannan",
                              "first": "Srinivasan",
                              "last": "Kannan"
                         }
                    ],
                    "phones": [
                         {
                              "country_code": 1,
                              "display": "201-461-5000",
                              "display_international": "+1 201-461-5000",
                              "number": 2014615000
                         }
                    ],
                    "user_ids": [
                         {
                              "@valid_since": "2010-06-25",
                              "content": "562401682@facebook",
                              "display": "562401682@facebook"
                         },
                         {
                              "@last_seen": "2016-12-31",
                              "@valid_since": "2010-06-24",
                              "content": "3/582/973@linkedin",
                              "display": "3/582/973@linkedin"
                         },
                         {
                              "@last_seen": "2016-12-31",
                              "@valid_since": "2010-06-24",
                              "content": "10372839@linkedin",
                              "display": "10372839@linkedin"
                         },
                         {
                              "@last_seen": "2016-12-31",
                              "@valid_since": "2010-06-24",
                              "content": "#9735823@linkedin",
                              "display": "#9735823@linkedin"
                         }
                    ],
                    "usernames": [
                         {
                              "@valid_since": "2014-01-01",
                              "content": "srinivasan.kannan.52",
                              "display": "srinivasan.kannan.52"
                         }
                    ]
               },
               {
                    "@match": 0.0,
                    "@search_pointer": "6715f0477f675992ddc4d31f3602228d2e38e83f5d235c0a35bfb962cbb04464f5ae61f027d4760465806d33db812a8875253a19ef7b3c36a177ba0f10688a3e82dd032c23a50fd12321ce01e32a612dd3883d942d21db99aef4eb0f16fd22d3c7ea7c8d2831103ee73e83467d2cdf0650eb7539064d8809fd316d2c16a336463f95463775ec8e2738020254cb831066d4ee758bbdd52b444de4bb85fafce8e68ace05f762d7abcb3f1ae79f289cd8fd5dd9b3cf5028855bf079766d60801f4c931d05e0dd240b6aeb20d961fd19baaf83fac5eb28992b01f7ff26aa9ab81344397f1aacdd7e87afc12c37e6f267dd4353b20cefbdfce74a3ecc420ba26070c071b8d47428520b0eb2e5a4fafacd25c52758140aa0521ef5979c2a437212d21af86acd6680252b110cd2df35626c28c108143c370f360f60e36abc675808db75e7a33d5279b1a013f311314be09d9286ee43605035901cabd0925af0f4da17ef532c202e6c270e99c2f2337cfadb1ec3",
                    "addresses": [
                         {
                              "@valid_since": "2017-07-07",
                              "country": "IN",
                              "display": "India"
                         }
                    ],
                    "gender": {
                         "content": "male",
                         "display": "Male"
                    },
                    "names": [
                         {
                              "@valid_since": "2017-07-07",
                              "display": "Shrinivas Kannan",
                              "first": "Shrinivas",
                              "last": "Kannan"
                         }
                    ],
                    "origin_countries": [
                         {
                              "country": "IN",
                              "display": "India"
                         }
                    ]
               },
               {
                    "@match": 0.0,
                    "@search_pointer": "",
                    "addresses": [
                         {
                              "@last_seen": "2019-02-09",
                              "@type": "work",
                              "@valid_since": "2014-01-01",
                              "city": "Ambattur",
                              "country": "IN",
                              "display": "Ambattur, India"
                         },
                         {
                              "@last_seen": "2019-02-09",
                              "@type": "work",
                              "@valid_since": "2011-01-28",
                              "city": "Chennai",
                              "country": "IN",
                              "display": "Chennai, India"
                         },
                         {
                              "@valid_since": "2013-01-17",
                              "city": "Ghaziabad",
                              "country": "IN",
                              "display": "Ghaziabad, India"
                         }
                    ],
                    "gender": {
                         "@valid_since": "2010-09-21",
                         "content": "male",
                         "display": "Male"
                    },
                    "images": [
                         {
                              "@valid_since": "2010-07-14",
                              "display": "http://graph.facebook.com/100000496523308/picture?type=large",
                              "thumbnail_token": "AE2861B242686E6ACBCD539D133B8AE59A9AE962DB1FA5AA7AF08DABDF6D09F91F6A8380C48EE86166858778176997563C4C47FBAE58CA16C28B7649464C5230A194C33909E270",
                              "url": "http://graph.facebook.com/100000496523308/picture?type=large"
                         },
                         {
                              "@last_seen": "2019-04-29",
                              "@valid_since": "2019-04-29",
                              "display": "https://media.licdn.com/dms/image/C4E03AQFQBdOLD0o0Dg/profile-displayphoto-shrink_800_800/0?e=1562198400&v=beta&t=UTSlO2DR4eupXvKMx3342H2ANRTUsSFQSFuaJZnLSxw",
                              "thumbnail_token": "AE2861B20B7D6E22D4C9479C5C7387EF9C9CE823D35EABEA73B2CFB4863058AE4E7CF681B38DE8100FECA6531052AE60691C03C6B9128708CC9F784005054530B6D99C6148A128E5131BFBA8CFF5F9BDB5A8E37CF99A18DD7A9948B1D92730DCE2C2B34A55546211CCC892B90151753EF50253DDFBBEE85B1F1AB2A20781C8B36D0CA4796444ED55483691734F14851F067EB5380274C55A2483B514CE3EB38D8D8373FBD7",
                              "url": "https://media.licdn.com/dms/image/C4E03AQFQBdOLD0o0Dg/profile-displayphoto-shrink_800_800/0?e=1562198400&v=beta&t=UTSlO2DR4eupXvKMx3342H2ANRTUsSFQSFuaJZnLSxw"
                         },
                         {
                              "@valid_since": "2016-02-03",
                              "display": "https://media.licdn.com/mpr/mpr/shrinknp_200_200/AAEAAQAAAAAAAAS3AAAAJDFmOTAxMzA0LTE3YWItNDIyZi04NjcxLWRiZjAxZjYwYTI4Nw.jpg",
                              "thumbnail_token": "AE2861B20B7D6E22D4C9479C5C7387EF9C9CE823D35EABEA7AAFCEB4822D4BE6583BC7DC98D6B5210198C7212B2FD214763272C79F7CA63BE2B8506D2169600AF6E8B141709B04CC0A3B829ADFCAEA92EEBB8F09FA9C77A43EF83CC7C54068D9E0BEE810152C057383E4C59A1C7F7E41F66652C09C9CD0473138E1E11682F9A11B74E9",
                              "url": "https://media.licdn.com/mpr/mpr/shrinknp_200_200/AAEAAQAAAAAAAAS3AAAAJDFmOTAxMzA0LTE3YWItNDIyZi04NjcxLWRiZjAxZjYwYTI4Nw.jpg"
                         }
                    ],
                    "languages": [
                         {
                              "display": "en_US",
                              "language": "en",
                              "region": "US"
                         }
                    ],
                    "names": [
                         {
                              "@valid_since": "2011-01-28",
                              "display": "Srinivasan Kannan",
                              "first": "Srinivasan",
                              "last": "Kannan"
                         },
                         {
                              "@last_seen": "2019-04-29",
                              "@valid_since": "2010-07-14",
                              "display": "Kannan Srinivasan",
                              "first": "Kannan",
                              "last": "Srinivasan"
                         }
                    ],
                    "origin_countries": [
                         {
                              "country": "IN",
                              "display": "India"
                         }
                    ],
                    "user_ids": [
                         {
                              "@valid_since": "2011-01-28",
                              "content": "6/676/828@linkedin",
                              "display": "6/676/828@linkedin"
                         },
                         {
                              "@valid_since": "2011-01-28",
                              "content": "19565600@linkedin",
                              "display": "19565600@linkedin"
                         },
                         {
                              "@valid_since": "2010-07-14",
                              "content": "100000496523308@facebook",
                              "display": "100000496523308@facebook"
                         },
                         {
                              "@valid_since": "2011-01-28",
                              "content": "#8286766@linkedin",
                              "display": "#8286766@linkedin"
                         }
                    ],
                    "usernames": [
                         {
                              "@last_seen": "2019-04-29",
                              "@valid_since": "2013-01-17",
                              "content": "srini1968",
                              "display": "srini1968"
                         },
                         {
                              "@valid_since": "2014-01-01",
                              "content": "kannan.srinivasan.718",
                              "display": "kannan.srinivasan.718"
                         }
                    ]
               },
               {
                    "@match": 0.0,
                    "@search_pointer": "f3c48753bc47e55e697e5ce63aca6885db60ed8a82d8553c581f25b0fe1792db34f9f8d7bd3449d78fe305a872592cfe844553a9a17db4bd40afd93d189ebc1bd5f29d06fecf4800fd49eddf7c0aaa57e00f6b0fe56c853438f3612d0c56407977e89c6f89fd56d9a922935faa6168a9bfb93935e2fef6e1c2341958a6415afcc6d7d1f5002e407b601e00ee82d80064ee269b23f7077c5be7ad3b3b5ee054868f34fe8b0d47db7763dfa891ab4b4fa21ca1a808fc6fed392100de7a56f24e02881f7ab724d8e76600da6518a3cc444a328f61b3b7aded3b8fad6c6a80cd4117b32bafa68b2a881ad7c57a623d2fee97949416813f9d7e9c2be6397fa9a6e96835569ed6c63d3acd0d9a7d9cfcc294c531021ee45df5ac01ec8292e2e88c7c362c5e469cee4fab81882d869fc40c906f667585bc2fbbd7056c28f1487bd193d346cde233e7d58e131b5f0bfd019ea917dce680f18ed6cfe499b717bd6f0c430f8019c05617892dc76c25a9da47b2bb25b0abf18d237cce963be1c4b614704cd4ba05ac879f81ebc71ba399046d7af55f3bfe88efbf50f6c67939b87bc9414c1072303d0d70d5f916bd84aafc015ec8917335b75e19872852fc6da2313e1b9fb73c7554a41ef87cacd339a2b7cbb3384f9ee275f25adc209c69a7fec147bdb6f645615595a761ee2bdfa0871df1b6a2b4912c8d9b0e1d8bb6e54f610df7509440a2a19bf195b9acab85593a72b1ef041d1908c6f6942837ce9bd43771b6931ab5687f43b7844a7ff4438bed402e66608fa3a123ae6d5d31c486331928dbd6a49700ddf9ec1b29a8c615d395655e833fe81ac3d0d8826fe986526550840608fcc96fd4789b00b0a3dc3f07d463c63440bb6f11bb43c69ba5126deb77e96501db37aea53b47ef6fb12bf1058aa0895a618d8859ad36490e13ab7998c32a3389e1cadfa73fd763f7deaf676438f361c685fca8659f6fd678e6b34427fdcc87ab4bc269a9ca14f06f78066a2442e37b5b66f3d7be8057ffc4bfa09f7639055f79fae56a7e7c3ef4a353f39f31283d983f9ff44fd6ed7660aa384d9c9ba3e79c57a115f8a49092a76f70ed3418db03b6d0ee70c84b1bd654ce8e462837d1c79f9fccebb73124ce1c220a0a98421a00370117dd73f022b3846dd8aec4f40f31ceea6578c0c939280ed5a488326ec723873e1148dc16e749c666af5b9df3926890a2444c2f29e0b8b0d42b17e5e5ddef44c973fdd5da826684ab31de316ee921a5d7c79b525d79e9c9c13ccaf02a85407bc2bca97cefcff6a998d40292457c74e5a45be4bd25267cf79fefc8ccc0d21440c43e854c2a627002cacd963b5ba44b1461ed8419486d29bf6d1c07ea602e2807a683a89b78c09efd693399f28ba5a1ed166c40d155b284d6ad7c19fde92ff7070ccc81cd427b6b184fcede66a661541106cfceccc9747dc9329dc519790d54a33381d8667fa6e27fe347e895907d10c4d14ce36943de7ce8647e815f631b3d24b0b46dd0c22f33836446d2de7230501c22d75bcca15c47efcb4fb7850b7821562125d471df5db3cc245ed5391cb9314fbd7e786feef32a6b8c48aae701262e036ce134afa7f6d2f2d376efecab2d8900c6d475ff54ee20cd04ce8ff639c5400e412cf0f62152b040a88235b2296985d2807e8d5b61b6b7a9540b0e3c76bbde7593d916b1cf2f1415318291d9811fe5e31d2852245137e3c9e8e98ec5c2c28086efb7eeea23f997672d3cc7b570588f7d948f720673934393796dca73bea8ebb13afdf536d6b9f5cb59e3b61e2727ccb43dfc13620505f9cf6d0dffc3ee8c2012acc0c8772c4809ce102ec11323e7099a0bb1c81237610538d6d30115171a12d6b5ee1cdcd31d74e05923ce04542e22021dbf01b37396a8f03f06facdd376e467b65f683ca723e301908c43e4e7408a25fc0abc7533e31497cb48737de09d37964dc3ed846358191811dd539b407e70c9389981c6be09ea916512ce7eeff30700a37608a55b0e77ddc8b5278e19638928636dbe976a9e4d8f1f3ed16abcdf44c714b1c814f3a8ac0ddd69191b2524f09eeb8a391dcda1a328c202113b9849d636cb2cc7b55e219fb7e959444a1c8fff06c9dd6d0762d36cae148ea1aa4b211e73bf334ad1292df732151d3dc27a3683fb2b2cf0193fa204dfc2266fff136e497fa4123270a7c43ccc6d810df2b9e2572c2e597053e7df562442c9ee82a79618fd1f655426dec1f1fa6bcb4b7109555cd605e62bc5f91383335dee741f214d9101fa5782a9923a42a80809789f8bfdead27a9e7109bf9f82f116e6f8eadf48bcc195047a03d8885c3514522e54bd43b861353d16a82d1b70ba9303d7cf46088009e3b2ba79d775fb0f893c2671781b193de963c6e5e2de56aa566fa0ea5a026bb182b75e890a09b610017b8886d90edc60db05c9450a38522df1ad1ee9ab594290dbdcadb647a929470d11db5904b14a4a1a39f5d405d0fdc8390f4e7f6714f9d0e55131888a020c814820323ee6ae8f8876fe7d8792fbba6bc3baa249a38f8aa4bf89a69f6303c7359f41eab35b55473ecd1c0794663217fea17341175dfc1cb6db5d12579f7b35ab153173e9436e021051ee5a1c0c93a26cef53976c796782f111676831b0c25a8d63f4274d9b5bcf86f1f8ff5cebcfd7b3cad1c3bd92d2a229bd7b3580ee7ae3802362e9b31f6bc9f3c8ae99948aaa297031867b83c1cdfc99177e216a583326bbd72430a225320ba761b43efa66a2d343bc3df0afe01bf75083e6f51b041ea86f9c928cca3d8e19d4d280a1a7bbba0ac5fcf9eb83a4bb87058b35c2f8cb8c65941591aa2f5936c3da7df62c27591f954bdfeca8ad181e96e52c6bbfa8cd6ef4c2ee4ae19fd14665e8ebc57585ad52232ec471af233a1788e1131461e390db1d6547e079a15f587f3c7b8d139eb7e4b8425c79c4c6d00fdcc9d025d3f17f3ee50f1eee0379d31a8fe3923fc6dca7dc6a78b3b11b76db270cc31ee008df792f0a57af417d1e26dea73fdae50bfa80b097f69e81628f2ce6318d53baa159090f57e51f5c773013dcfbc7956909a7a3a268fdf3d1e64bb828ae49e423a92d18f59a60fe4042392fde86445f9acaf1f8628036c9f5a2d1a0e5adc77894b3c1d66abbae3fcf2a2d42cf9018a0751606047cd6ff1243a8f66183c3f6508de5b45927a329873c6d6536d8453b0fbf00f4f7a13bc5155863a8e6eb29bf661172f1cc9ae057472883dfac3dfe802b1d3f252b5b7a6176713af9eb3a8e4067b078e8bbe6e197a96cd7439f62551086630c89d2210da7df0f155ee3cde5f3da0e9524715ca35533fe2c0fac53e524e6da7e7399e202b12d52bf8b5faba15fb5a7a214da62f48725f6d75298cef24bd1018be5b01cc79146c05160136999e39f3589262a1d6f341b6c46c01ad04eea7d74774cb85641f5abe65946076a5c7f99b550c5be673cdc89add2ac773b531da288cb965a009301f1fd83b29254093c95a13cd3c06c9c1f002ea9777eefa202b9b0f26176028d9d2fbdb096f05b2fb1c1136920cde15e59275df4c24b0cb5cf0a8c8bca4ff0a7f1f448ef579f59229c5518ed8ccefb34ba6dcf3710351f2460ca4c01dec541dead2d3ea6ae99229ad2aabfcf3b7c4086303aab13bcbbe0d7431b7041",
                    "addresses": [
                         {
                              "@last_seen": "2017-09-04",
                              "@valid_since": "2007-07-10",
                              "city": "Cupertino",
                              "country": "US",
                              "display": "20995 Pepper Tree Lane, Cupertino, California",
                              "house": "20995",
                              "state": "CA",
                              "street": "Pepper Tree Lane",
                              "zip_code": "95014"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@type": "work",
                              "@valid_since": "2009-08-27",
                              "city": "Santa Clara",
                              "country": "US",
                              "display": "Santa Clara, California",
                              "state": "CA"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@type": "work",
                              "@valid_since": "2014-01-01",
                              "country": "US",
                              "display": "Ohio, United States",
                              "state": "OH"
                         }
                    ],
                    "gender": {
                         "@valid_since": "2007-07-10",
                         "content": "male",
                         "display": "Male"
                    },
                    "images": [
                         {
                              "@last_seen": "2019-02-10",
                              "@valid_since": "2019-02-10",
                              "display": "https://media.licdn.com/dms/image/C5603AQE_Hatbyhd_Xg/profile-displayphoto-shrink_200_200/0?e=1555545600&v=beta&t=uYyk9QMKD7ldoA72xgc0925vTiHHaiGtmO2WPseEHgU",
                              "thumbnail_token": "AE2861B20B7D6E22D4C9479C5C7387EF9C9CE823D35EABEA73B2CFB4863058AE4E7CF680C08DE8100FEFA8591569805D31176CDAB9128708CC9F784005054530B6D99C6148A128E5131BFBA8CFF5F9BDB5A8E97CF99A12DD7A9948B1D92730DCE1C5B74758566211CCC892B90151753EF50273D0D1B99E381603C2F01E95FF841173A42D3440E62F4F018B4853099725075B8B314542DF732F8AAE0BEC3EB38D8D8373FBD7",
                              "url": "https://media.licdn.com/dms/image/C5603AQE_Hatbyhd_Xg/profile-displayphoto-shrink_200_200/0?e=1555545600&v=beta&t=uYyk9QMKD7ldoA72xgc0925vTiHHaiGtmO2WPseEHgU"
                         }
                    ],
                    "names": [
                         {
                              "@valid_since": "2010-03-29",
                              "display": "Kannan Srinivasan",
                              "first": "Kannan",
                              "last": "Srinivasan"
                         },
                         {
                              "@last_seen": "2017-09-04",
                              "@valid_since": "2007-07-10",
                              "display": "Srinivasa Kannan",
                              "first": "Srinivasa",
                              "last": "Kannan"
                         },
                         {
                              "display": "Kannan Srinivasa",
                              "first": "Kannan",
                              "last": "Srinivasa"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@valid_since": "2009-08-27",
                              "display": "Srinivasan Kannan",
                              "first": "Srinivasan",
                              "last": "Kannan"
                         }
                    ],
                    "user_ids": [
                         {
                              "@last_seen": "2019-02-10",
                              "@valid_since": "2012-09-29",
                              "content": "39951687@linkedin",
                              "display": "39951687@linkedin"
                         },
                         {
                              "@valid_since": "2012-10-22",
                              "content": "28933167@N08@flickr",
                              "display": "28933167@N08@flickr"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@valid_since": "2012-09-29",
                              "content": "11/468/233@linkedin",
                              "display": "11/468/233@linkedin"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@valid_since": "2012-09-29",
                              "content": "#23346811@linkedin",
                              "display": "#23346811@linkedin"
                         }
                    ],
                    "usernames": [
                         {
                              "@valid_since": "2012-10-22",
                              "content": "srisan80",
                              "display": "srisan80"
                         }
                    ]
               },
               {
                    "@match": 0.0,
                    "@search_pointer": "7ab8b95795394d1f382e6dbedcacb462966a578ca105c101a7b67cfe9acdbdfef8a11692cc913e3095f17dc56bc8f6da60e7efd63516fe03493d9c702217441976fed68c956e56cb32a7b9dd2e92730d943d6a5b18794cecd90631127939025bc86200484509639d2448a07865f3ac1c054883461f4638cbc5f558a9258a4cc83eebb2686adc350439cc585b3f53e5e7a604384aa898a18d3af7dcedaf4c19cd59845194ea04d97b898106b10919eaeea3a0ad9a32f4188338eb9e6235b7222fa46b0a39370a5e1b06475a21c6866325d11def9e3f1a6cb2c940fe4a89139e1c20d7716abfac9e2a147138307f8de15422c442e694bbf5d7af7742c81742a0c133bb7a2c72b30d7f4aad8565e283e3388b8da04c5b4cf6e189999b9b243ca2bd7129ffb7aeb8b5c94182a82d1f70065d5ac17df7cf7240443926d588673d246f3ed7802cde8d0291211627feef4a1fff3fc425c594b3d23e195bafda442a50244e3450743530e066adfbee8adaf8ea9ef005dd5f612a3a6f246d326362c5b79cf24813bd81fa7f77aac7fd0868e5d333ec9e7a7f4fc1aaa4471ec50242244dc3954a704ba34d879d60822db7fd367a3a1cc8e20b21cab581d8936d1d09d5b3a3d5da45d4dd5c77695880f98eb10a36e5b09dea916e779877ced4b0b5c5e79ed42ed86f7fb64e3afe3f58780b0cfc0aedc3411de6df5d548eb7c36ff573e9ea2ee1bd010e72e8a81db6809f80f83c7ad057790e9be5b8fb44298e02d3f8b7b8b13113a91330a1c2b71bb60a11268c14c53b48eea26221037cda94a884bf196b0748446e2dc31ba0053db4ad8465483a0c78e31a62851d3aa18a05f8fc4f7ff31470426aeaf97e177f61a691703b6a4215",
                    "addresses": [
                         {
                              "@valid_since": "2009-09-14",
                              "city": "Gibsonia",
                              "country": "US",
                              "display": "1056 Old Orchard Drive, Gibsonia, Pennsylvania",
                              "house": "1056",
                              "state": "PA",
                              "street": "Old Orchard Drive",
                              "zip_code": "15044"
                         }
                    ],
                    "languages": [
                         {
                              "@inferred": true,
                              "display": "en",
                              "language": "en"
                         }
                    ],
                    "names": [
                         {
                              "@valid_since": "2009-09-14",
                              "display": "Srinivasan Kannan",
                              "first": "Srinivasan",
                              "last": "Kannan"
                         }
                    ],
                    "origin_countries": [
                         {
                              "country": "IN",
                              "display": "India"
                         }
                    ],
                    "phones": [
                         {
                              "@valid_since": "2009-09-14",
                              "country_code": 1,
                              "display": "724-625-2822",
                              "display_international": "+1 724-625-2822",
                              "number": 7246252822
                         }
                    ]
               },
               {
                    "@match": 0.0,
                    "@search_pointer": "08db3e36d4133ac73b5c54438d47e6a59fadf45b879871509a47dab0447c0ee5862eeb1a06ef04c1763863863de68ae2e4f2df0f223924af9eab6107e200e79b2a70b6be379fdbdb9075fa870b3b675b169585a745cfd2d5fbb2f5bb25e4c7a2292a1c9a0aba5c5c31e77b602cddf634fbf5cc3059b0c6d6c2c8637e439d967e67c12852b93c59e9cb42ddd04243f79895969955ab6125b74dc9e2b6f04186c09c6ff62552698a00044cee4b2ba1de7e5e7301b771dcae4146c40a494b19da0dcecc3b032cb6ce987f91f537d2c5e900085b8abb27e898cc0fa55da491c7b33d01030adf9cf7862ba3660a317797cff6ad4c82df407cff94a5f0bae4b777a2b045fec4b6ee8dc0228799d7ed4bb3902f513607d8a3990dd3111290b89753b7f0cf255dc9041d186d112b05c9b32dd5a8e0077707c664c76f1a6bcdfff5f8fc8e2642a0eae6204a1d75f1f702b16300ec2d20fd2941a179a01f063bac49070578",
                    "addresses": [
                         {
                              "@type": "old",
                              "@valid_since": "2009-08-27",
                              "city": "Sunnyvale",
                              "country": "US",
                              "display": "Sunnyvale, California",
                              "state": "CA"
                         }
                    ],
                    "names": [
                         {
                              "@valid_since": "2009-08-27",
                              "display": "Srinivasan Kannan",
                              "first": "Srinivasan",
                              "last": "Kannan"
                         }
                    ]
               },
               {
                    "@match": 0.0,
                    "@search_pointer": "7d3b22f03729f2766b8ceab4798d49559b6b9395c7a5cd0121b85ee8c990519c6d0d8a4f828b4a3447d07efee747fb0f7f95d42041ce258017398c06ae0d5d5f3115a42a4754d8acc600f9f63aebd2cb5137543b6462cd04850657e3e0dbc6197034737396f612736be5bc5ff70878a0e5fc63a53c02612a0b6b7a46d2b77a6da15bee60b07329d215152fd93a22dc20fda09d084c36f8a425e309303057f9775c47f07d6e1e32ef0c1b3bcc6390df6ae4c69bb047a235ac3be06f2648c29cc4953ef76d2e1bb141e666a67f11a362d07a76d002ce2d4a17594df62323ba415eda2ac43faa8965aa1f03f487b0f4357df9c24e96d119f8346c2b4377dd2b886e72281c966f9fe3e42b6322e4bfbe8d93112f27f95dc16f35e64374650f4ebcdedbbafefdf8e5f495b2fee3d7f56750afe4fec0b91e058f9f1217c5d109944f6378694d69aa9ef90a96e931c36da3ea26489fc8f03a63094ad17c40b3a73249ec8d26cd51dccb45c0cedc4e9112e0715a87bbd9f23ea5086a32a6faa5acc73367b43f96e48ff8b009735755bad8f12f1449d41a02b69d9b23b91466a8efb15e6c904860d066b4f6c74acf26a8247b379e",
                    "addresses": [
                         {
                              "@valid_since": "2010-03-29",
                              "city": "Spring",
                              "country": "US",
                              "display": "17 E Amberglow Circle, Spring, Texas",
                              "house": "17",
                              "state": "TX",
                              "street": "E Amberglow Circle",
                              "zip_code": "77381"
                         }
                    ],
                    "gender": {
                         "@valid_since": "2010-03-29",
                         "content": "male",
                         "display": "Male"
                    },
                    "names": [
                         {
                              "@valid_since": "2010-03-29",
                              "display": "Kannan Srinivasan",
                              "first": "Kannan",
                              "last": "Srinivasan"
                         }
                    ]
               },
               {
                    "@match": 0,
                    "@search_pointer": "638b143149dfd139f2a713888830df5599b5c197d9bf223a75e69277b871518a4e9de57b119d5ddc175e46e7baf3198715bbc181c6a4b80f2ce85eed712b9b51d82d9ed4f1900a5df159d141ab799afe9ec356b82c8cceb8d541140419c57b3dd45afba18514a669106dcd1b1e265209a387f76b9bee433edcaf1c5c10f5b8a16b8083d5860919f3d9445a0eeafb89e27b16c51e82ccea251d98b444d2c67b02ae11d6da37d9b83a319044f007ffa4d8b9a3ba57f29ef6e2da11354b143e64d972054ea6ff147971c07031298c0710235bbae21d1ebd63af9ac665fd2beec1c16ad53ff473344af1da7340728956929bf019bb516979779edd14e42d809be780f5f394c51f7602bbb78732e50dc06cbd1de55c9674e8becef80e83a7b6ff24af2996b27eb8ffa24dc6d20a944cfecc78637e808f822eb683fdca50a8185c65145baeeb1c80abdc17e3fe5c13af0ff96cfc4c2bd0b6ca85f861bef3f8fe10a17ea6c0df22216d0389dc2cd5a76c9f0aead925c1148aed3419fc49c7675c30c3fecff1a209400a9779b15d48d8d4a13eae303f28bc3d85fcd1d035f702b632056f365a291a98988762a3378e4ba82918e00928044a9dfc9e6fc9d21e7e3d5da3f2675128cbb4c7e74d38648a43daf179c42180ead3c3881013d481ef4ac21b89a3efc362174ad93bcb73866995265464ab2e00a4a77bce6663b88892b428bb6a3b96eb181cfff72a394ea7d8eec8c1681effe66f57b4c19f2cb9c247033192e06409113dc4923c8134497c7a2193d116215c9c138598e43c5036c615bc18e546fe",
                    "gender": {
                         "@valid_since": "2012-09-23",
                         "content": "male",
                         "display": "Male"
                    },
                    "images": [
                         {
                              "@valid_since": "2014-09-09",
                              "display": "http://lh4.googleusercontent.com/-D6XgaQbcJKQ/AAAAAAAAAAI/AAAAAAAAAAA/kt6gUGPfS1E/photo.jpg",
                              "thumbnail_token": "AE2861B242686E61D1980D9252328CEA9A8DF568C252A9AB63BAD2EFC13E56A4047EF183AEDABA003CC9BD5A2532A365183272C39F7CB63BEAD6506D2169601884E8B14170FE2BFE5113839CF7E1C3E29BD8AB24A6B14FC320C61FA8D869688DE9C5B2455F54",
                              "url": "http://lh4.googleusercontent.com/-D6XgaQbcJKQ/AAAAAAAAAAI/AAAAAAAAAAA/kt6gUGPfS1E/photo.jpg"
                         }
                    ],
                    "names": [
                         {
                              "@valid_since": "2013-02-04",
                              "display": "Srinivasan Vk",
                              "first": "Srinivasan",
                              "last": "Vk"
                         }
                    ],
                    "relationships": [
                         {
                              "@subtype": "Follower",
                              "@type": "other",
                              "@valid_since": "2012-09-23",
                              "names": [
                                   {
                                        "@valid_since": "2012-09-23",
                                        "display": "Siva Sivaramakrishnan",
                                        "first": "Siva",
                                        "last": "Sivaramakrishnan"
                                   }
                              ]
                         }
                    ],
                    "user_ids": [
                         {
                              "@valid_since": "2013-02-04",
                              "content": "108021571527487428426@google",
                              "display": "108021571527487428426@google"
                         }
                    ]
               }
          ],
          "query": {
               "emails": [
                    {
                         "@type": "personal",
                         "address": "shrinivas.kannan@gmail.com",
                         "address_md5": "a9e46cba401df1afdd7e1b5eba5b21a1",
                         "display": "shrinivas.kannan@gmail.com"
                    }
               ],
               "names": [
                    {
                         "display": "Srinivasan Kannan",
                         "first": "Srinivasan",
                         "last": "Kannan"
                    }
               ]
          }
     },
     {
          "@available_sources": 108,
          "@http_status_code": 200,
          "@persons_count": 1,
          "@search_id": "1909110838073304227941230824618469706",
          "@visible_sources": 15,
          "available_data": {
               "premium": {
                    "addresses": 2,
                    "educations": 5,
                    "emails": 6,
                    "genders": 1,
                    "images": 5,
                    "jobs": 24,
                    "names": 3,
                    "relationships": 6,
                    "social_profiles": 6,
                    "user_ids": 7,
                    "usernames": 2
               }
          },
          "person": {
               "@id": "4e63d78a-751f-4e89-b325-ada7d8cf534a",
               "@match": 1.0,
               "@search_pointer": "",
               "addresses": [
                    {
                         "@last_seen": "2018-06-28",
                         "@valid_since": "2010-12-03",
                         "city": "Chennai",
                         "country": "IN",
                         "display": "Chennai, India"
                    },
                    {
                         "@last_seen": "2018-06-28",
                         "@type": "work",
                         "@valid_since": "2015-09-30",
                         "city": "Kumbakonam",
                         "country": "IN",
                         "display": "Kumbakonam, India"
                    }
               ],
               "emails": [
                    {
                         "@email_provider": true,
                         "@last_seen": "2018-12-15",
                         "@type": "personal",
                         "@valid_since": "2012-07-22",
                         "address": "full.email.available@business.subscription",
                         "address_md5": "af96cf33e2024e7328bbc7675f771b1e",
                         "display": "full.email.available@business.subscription"
                    },
                    {
                         "@email_provider": true,
                         "@type": "personal",
                         "@valid_since": "2011-12-05",
                         "address": "full.email.available@business.subscription",
                         "address_md5": "a9e46cba401df1afdd7e1b5eba5b21a1",
                         "display": "full.email.available@business.subscription"
                    },
                    {
                         "@email_provider": true,
                         "@type": "personal",
                         "@valid_since": "2010-07-08",
                         "address": "full.email.available@business.subscription",
                         "address_md5": "5a35e71a9e313cd83fc1b36e8a921f51",
                         "display": "full.email.available@business.subscription"
                    },
                    {
                         "@email_provider": false,
                         "@last_seen": "2018-12-15",
                         "@valid_since": "2012-12-27",
                         "address": "full.email.available@business.subscription",
                         "address_md5": "6764275e5425999d910c4ac9976b1438",
                         "display": "full.email.available@business.subscription"
                    },
                    {
                         "@email_provider": true,
                         "@type": "personal",
                         "@valid_since": "2013-01-18",
                         "address": "full.email.available@business.subscription",
                         "address_md5": "e8c9ea39bf6e7cf1d0b75eaf19bb5760",
                         "display": "full.email.available@business.subscription"
                    },
                    {
                         "@email_provider": false,
                         "@type": "work",
                         "@valid_since": "2012-12-19",
                         "address": "full.email.available@business.subscription",
                         "address_md5": "0ba5c26ba75e2c48b4f08dc8e7b5d890",
                         "display": "full.email.available@business.subscription"
                    }
               ],
               "gender": {
                    "@valid_since": "2011-12-05",
                    "content": "male",
                    "display": "Male"
               },
               "images": [
                    {
                         "@valid_since": "2011-12-05",
                         "display": "http://graph.facebook.com/1186474769/picture?type=large",
                         "thumbnail_token": "AE2861B242686E6ACBCD539D133B8AE59A9AE962DB1FA5AA7AF08DAAD76B0DFE1F64838CD9CDB2322ADF85744B699B543C4E5FE3AC5A925CC78A78485D1B1861F699",
                         "url": "http://graph.facebook.com/1186474769/picture?type=large"
                    },
                    {
                         "@valid_since": "2016-01-17",
                         "display": "https://s-media-cache-ak0.pinimg.com/avatars/shrinivaasanka_1392636070_140.jpg",
                         "thumbnail_token": "AE2861B20B7D6E22CA814E9059348AAB9C99E565D51CA7AE27F1CCF2813454AE0530DAD8D9DCAD302ACB85625B6E8A56301D5AF4BF5C841BCD927073511B186BF39AC63006E11FBB5344F8B1D7E0B6B7AD9EBF71FCF012DD7E",
                         "url": "https://s-media-cache-ak0.pinimg.com/avatars/shrinivaasanka_1392636070_140.jpg"
                    },
                    {
                         "@last_seen": "2018-06-28",
                         "@valid_since": "2018-06-28",
                         "display": "https://media.licdn.com/dms/image/C5103AQElIOVKZ6nowg/profile-displayphoto-shrink_200_200/0?e=1535587200&v=beta&t=KGXPR6F4RKV3CymWr3LeTWUcV3de2Z7r2q2uAXaHZzk",
                         "thumbnail_token": "AE2861B20B7D6E22D4C9479C5C7387EF9C9CE823D35EABEA73B2CFB4863058AE4E7CF680C78DE8100FEF9B583B4BA97E6F1D5CF5B9128708CC9F784005054530B6D99C6148A128E5131BFBA8CFF5F9BDB5A8E97CF99A12DD7A9948B1D92730DCE7C5B74B5A526211CCC892B90151753EF5024DCEF082F55F1D7CD48C24C2D3BC4B16AE791B158B4A2F1489127F24C416775DD40F4560CE582B87BC16D23EB38D8D8373FBD7",
                         "url": "https://media.licdn.com/dms/image/C5103AQElIOVKZ6nowg/profile-displayphoto-shrink_200_200/0?e=1535587200&v=beta&t=KGXPR6F4RKV3CymWr3LeTWUcV3de2Z7r2q2uAXaHZzk"
                    },
                    {
                         "@last_seen": "2017-02-02",
                         "@valid_since": "2017-02-02",
                         "display": "http://pbs.twimg.com/profile_images/823093144023494656/uh0w69z8.jpg",
                         "thumbnail_token": "AE2861B242686E7DDBDF0D814A3486E1D19BE9609F41B4AA71B6D0FEB03454A84C36C69ACE8FE8616799C625402DD0176D4A07B4EB0BD80FCBC9661A59521977AFD9972655A229EE5A47EFE393B3",
                         "url": "http://pbs.twimg.com/profile_images/823093144023494656/uh0w69z8.jpg"
                    },
                    {
                         "@valid_since": "2014-03-29",
                         "display": "http://lh4.googleusercontent.com/-lsiOU7rL21o/AAAAAAAAAAI/AAAAAAAAAF0/JajVx47Doq4/photo.jpg",
                         "thumbnail_token": "AE2861B242686E61D1980D9252328CEA9A8DF568C252A9AB63BAD2EFC13E56A4047ED9C69FF28E662CE6C5201B32A365183272C39F7CB63BEAD6506D2169601884E8B14601FE0AEB0D22AEEF90C3FFA2EAD8AB24A6B14FC320C61FA8D869688DE9C5B2455F54",
                         "url": "http://lh4.googleusercontent.com/-lsiOU7rL21o/AAAAAAAAAAI/AAAAAAAAAF0/JajVx47Doq4/photo.jpg"
                    }
               ],
               "names": [
                    {
                         "@valid_since": "2000-01-01",
                         "display": "Shrinivas Kannan",
                         "first": "Shrinivas",
                         "last": "Kannan"
                    },
                    {
                         "@last_seen": "2018-06-28",
                         "@valid_since": "2014-01-01",
                         "display": "Srinivasan Kannan",
                         "first": "Srinivasan",
                         "last": "Kannan"
                    },
                    {
                         "@valid_since": "2011-12-05",
                         "display": "Shrinivaasan Ka",
                         "first": "Shrinivaasan",
                         "last": "Ka"
                    }
               ],
               "relationships": [
                    {
                         "@subtype": "Follower",
                         "@type": "other",
                         "@valid_since": "2012-07-13",
                         "names": [
                              {
                                   "@valid_since": "2012-07-13",
                                   "display": "Vinod Kumar Devi",
                                   "first": "Vinod",
                                   "last": "Devi",
                                   "middle": "Kumar"
                              }
                         ]
                    },
                    {
                         "@subtype": "Follower",
                         "@type": "other",
                         "@valid_since": "2012-07-13",
                         "names": [
                              {
                                   "@valid_since": "2012-07-13",
                                   "display": "Prakash Chandrasekaran",
                                   "first": "Prakash",
                                   "last": "Chandrasekaran"
                              }
                         ]
                    },
                    {
                         "@subtype": "Follower",
                         "@type": "other",
                         "@valid_since": "2012-07-13",
                         "names": [
                              {
                                   "@valid_since": "2012-07-13",
                                   "display": "Pranabendu Misra",
                                   "first": "Pranabendu",
                                   "last": "Misra"
                              }
                         ]
                    },
                    {
                         "@subtype": "Follower",
                         "@type": "other",
                         "@valid_since": "2012-07-13",
                         "names": [
                              {
                                   "@valid_since": "2012-07-13",
                                   "display": "Ram Janakiraman",
                                   "first": "Ram",
                                   "last": "Janakiraman"
                              }
                         ]
                    },
                    {
                         "@subtype": "Follower",
                         "@type": "other",
                         "@valid_since": "2012-07-13",
                         "names": [
                              {
                                   "@valid_since": "2012-07-13",
                                   "display": "Jose Mathew",
                                   "first": "Jose",
                                   "last": "Mathew"
                              }
                         ]
                    },
                    {
                         "@subtype": "Follower",
                         "@type": "other",
                         "@valid_since": "2012-07-13",
                         "names": [
                              {
                                   "@valid_since": "2012-07-13",
                                   "display": "Shubho Sengupta",
                                   "first": "Shubho",
                                   "last": "Sengupta"
                              }
                         ]
                    }
               ],
               "urls": [
                    {
                         "@category": "professional_and_business",
                         "@domain": "linkedin.com",
                         "@name": "LinkedIn",
                         "@source_id": "3226b889ddb5e951c00e509d2f677d39",
                         "display": "https://www.linkedin.com/in/srinivasan-kannan-608a671",
                         "url": "https://www.linkedin.com/in/srinivasan-kannan-608a671"
                    },
                    {
                         "@category": "personal_profiles",
                         "@domain": "facebook.com",
                         "@name": "Facebook",
                         "@source_id": "304265879bd07c9f1ba793284967b272",
                         "display": "http://facebook.com/people/_/1186474769",
                         "url": "http://facebook.com/people/_/1186474769"
                    },
                    {
                         "@category": "personal_profiles",
                         "@domain": "twitter.com",
                         "@name": "Twitter",
                         "@source_id": "ba371ee483f15414764f0b6797df4b60",
                         "display": "http://www.twitter.com/ka_shrinivaasan",
                         "url": "http://www.twitter.com/ka_shrinivaasan"
                    },
                    {
                         "@category": "personal_profiles",
                         "@domain": "pinterest.com",
                         "@name": "Pinterest",
                         "@source_id": "c405e60965da03eb4ce5a2965a77f127",
                         "display": "http://pinterest.com/shrinivaasanka/",
                         "url": "http://pinterest.com/shrinivaasanka/"
                    },
                    {
                         "@category": "personal_profiles",
                         "@domain": "flickr.com",
                         "@name": "Flickr",
                         "@source_id": "63eefc3611d18b58921a5ccb51c2d500",
                         "display": "http://www.flickr.com/people/51784765@N08/",
                         "url": "http://www.flickr.com/people/51784765@N08/"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "openhub.net",
                         "@name": "openhub.net",
                         "@source_id": "7f0c0fa64f272b316c76abaf6b787b8d",
                         "display": "https://www.openhub.net/accounts/ka_shrinivaasan",
                         "url": "https://www.openhub.net/accounts/ka_shrinivaasan"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "media.readthedocs.org",
                         "@name": "media.readthedocs.org",
                         "@source_id": "a187301de5216b550db21bb3d073b7ba",
                         "display": "https://media.readthedocs.org/pdf/neuronrain-documentation/latest/neuronrain-documentation.pdf",
                         "url": "https://media.readthedocs.org/pdf/neuronrain-documentation/latest/neuronrain-documentation.pdf"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "5d99cf42-a-62cb3a1a-s-sites.googlegroups.com",
                         "@name": "5d99cf42-a-62cb3a1a-s-sites.googlegroups.com",
                         "@source_id": "27bc4419dd77f547f973c57389952486",
                         "display": "https://5d99cf42-a-62cb3a1a-s-sites.googlegroups.com/site/kuja27/CV_of_SrinivasanKannan_alias_KaShrinivaasan_alias_ShrinivasKannan.pdf?attachauth=ANoY7cot5zOBoNPJEw-kl3cAhmRiJbeqB43D41dU6ld7NKo06FbHyeR5eGjpXANAfuyVhFc0Cfp6g6vcdpYwfxGCjqUXBK79Py5v2jcQyH1g7gigtpMSH2kV7EoysjqsAmg5_R0bPXbrfzmzMosUDlufh8PGynZO3IaV5uLr-eqoLs_2zGk3pXgxzju_ucU8rTDlFN8xtvNyGMI4tMcYKlHdadi41idbXK2JrmSteqZ5NubGv8iI5pxm_mg-_rQFi0Qn_F7gr_EUSW53mh835atEu_lFZwa-og%3D%3D&attredirects=0",
                         "url": "https://5d99cf42-a-62cb3a1a-s-sites.googlegroups.com/site/kuja27/CV_of_SrinivasanKannan_alias_KaShrinivaasan_alias_ShrinivasKannan.pdf?attachauth=ANoY7cot5zOBoNPJEw-kl3cAhmRiJbeqB43D41dU6ld7NKo06FbHyeR5eGjpXANAfuyVhFc0Cfp6g6vcdpYwfxGCjqUXBK79Py5v2jcQyH1g7gigtpMSH2kV7EoysjqsAmg5_R0bPXbrfzmzMosUDlufh8PGynZO3IaV5uLr-eqoLs_2zGk3pXgxzju_ucU8rTDlFN8xtvNyGMI4tMcYKlHdadi41idbXK2JrmSteqZ5NubGv8iI5pxm_mg-_rQFi0Qn_F7gr_EUSW53mh835atEu_lFZwa-og%3D%3D&attredirects=0"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "media.readthedocs.org",
                         "@name": "media.readthedocs.org",
                         "@source_id": "ba7becc544f19f6579529dce3617e415",
                         "display": "https://media.readthedocs.org/pdf/neuronrain-documentation/latest/neuronrain-documentation.pdf",
                         "url": "https://media.readthedocs.org/pdf/neuronrain-documentation/latest/neuronrain-documentation.pdf"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "media.readthedocs.org",
                         "@name": "media.readthedocs.org",
                         "@source_id": "8474c14ec15ec65092689cef292773e7",
                         "display": "https://media.readthedocs.org/pdf/neuronrain-documentation/latest/neuronrain-documentation.pdf",
                         "url": "https://media.readthedocs.org/pdf/neuronrain-documentation/latest/neuronrain-documentation.pdf"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "5d99cf42-a-62cb3a1a-s-sites.googlegroups.com",
                         "@name": "5d99cf42-a-62cb3a1a-s-sites.googlegroups.com",
                         "@source_id": "bb9ab15cc8c31a651dc8d169f3cb770b",
                         "display": "https://5d99cf42-a-62cb3a1a-s-sites.googlegroups.com/site/kuja27/CV_of_SrinivasanKannan_alias_KaShrinivaasan_alias_ShrinivasKannan.pdf?attachauth=ANoY7cot5zOBoNPJEw-kl3cAhmRiJbeqB43D41dU6ld7NKo06FbHyeR5eGjpXANAfuyVhFc0Cfp6g6vcdpYwfxGCjqUXBK79Py5v2jcQyH1g7gigtpMSH2kV7EoysjqsAmg5_R0bPXbrfzmzMosUDlufh8PGynZO3IaV5uLr-eqoLs_2zGk3pXgxzju_ucU8rTDlFN8xtvNyGMI4tMcYKlHdadi41idbXK2JrmSteqZ5NubGv8iI5pxm_mg-_rQFi0Qn_F7gr_EUSW53mh835atEu_lFZwa-og%3D%3D&attredirects=0",
                         "url": "https://5d99cf42-a-62cb3a1a-s-sites.googlegroups.com/site/kuja27/CV_of_SrinivasanKannan_alias_KaShrinivaasan_alias_ShrinivasKannan.pdf?attachauth=ANoY7cot5zOBoNPJEw-kl3cAhmRiJbeqB43D41dU6ld7NKo06FbHyeR5eGjpXANAfuyVhFc0Cfp6g6vcdpYwfxGCjqUXBK79Py5v2jcQyH1g7gigtpMSH2kV7EoysjqsAmg5_R0bPXbrfzmzMosUDlufh8PGynZO3IaV5uLr-eqoLs_2zGk3pXgxzju_ucU8rTDlFN8xtvNyGMI4tMcYKlHdadi41idbXK2JrmSteqZ5NubGv8iI5pxm_mg-_rQFi0Qn_F7gr_EUSW53mh835atEu_lFZwa-og%3D%3D&attredirects=0"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "openhub.net",
                         "@name": "openhub.net",
                         "@source_id": "9bdcae1054557a34a719bcb4ad9aef83",
                         "display": "https://www.openhub.net/accounts/ka_shrinivaasan",
                         "url": "https://www.openhub.net/accounts/ka_shrinivaasan"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "openhub.net",
                         "@name": "openhub.net",
                         "@source_id": "1b11ac4c32332032b2519b0c8891b727",
                         "display": "https://www.openhub.net/accounts/ka_shrinivaasan",
                         "url": "https://www.openhub.net/accounts/ka_shrinivaasan"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "media.readthedocs.org",
                         "@name": "media.readthedocs.org",
                         "@source_id": "5b9c377a5214db6b93f47938dd2b370c",
                         "display": "https://media.readthedocs.org/pdf/neuronrain-documentation/latest/neuronrain-documentation.pdf",
                         "url": "https://media.readthedocs.org/pdf/neuronrain-documentation/latest/neuronrain-documentation.pdf"
                    },
                    {
                         "@category": "personal_profiles",
                         "@domain": "sites.google.com",
                         "@last_seen": "2018-06-28",
                         "@valid_since": "2014-01-01",
                         "display": "https://sites.google.com/site/kuja27/",
                         "url": "https://sites.google.com/site/kuja27/"
                    },
                    {
                         "@category": "personal_profiles",
                         "@domain": "sourceforge.net",
                         "@last_seen": "2018-06-28",
                         "@valid_since": "2015-09-30",
                         "display": "http://sourceforge.net/users/ka_shrinivaasan",
                         "url": "http://sourceforge.net/users/ka_shrinivaasan"
                    },
                    {
                         "@category": "personal_profiles",
                         "@domain": "facebook.com",
                         "@valid_since": "2014-01-01",
                         "display": "http://www.facebook.com/shrinivaasan.ka",
                         "url": "http://www.facebook.com/shrinivaasan.ka"
                    }
               ],
               "user_ids": [
                    {
                         "@last_seen": "2018-06-28",
                         "@valid_since": "2010-07-08",
                         "content": "5611688@linkedin",
                         "display": "5611688@linkedin"
                    },
                    {
                         "@valid_since": "2013-02-16",
                         "content": "51784765@N08@flickr",
                         "display": "51784765@N08@flickr"
                    },
                    {
                         "@last_seen": "2017-02-02",
                         "@valid_since": "2011-06-28",
                         "content": "14233931@twitter",
                         "display": "14233931@twitter"
                    },
                    {
                         "@valid_since": "2011-12-05",
                         "content": "1186474769@facebook",
                         "display": "1186474769@facebook"
                    },
                    {
                         "@valid_since": "2013-01-18",
                         "content": "103402979170580834945@google",
                         "display": "103402979170580834945@google"
                    },
                    {
                         "@last_seen": "2018-06-28",
                         "@valid_since": "2010-07-08",
                         "content": "1/a67/608@linkedin",
                         "display": "1/a67/608@linkedin"
                    },
                    {
                         "@last_seen": "2018-06-28",
                         "@valid_since": "2010-07-08",
                         "content": "#608a671@linkedin",
                         "display": "#608a671@linkedin"
                    }
               ],
               "usernames": [
                    {
                         "@valid_since": "2011-12-05",
                         "content": "shrinivaasan.ka",
                         "display": "shrinivaasan.ka"
                    },
                    {
                         "@last_seen": "2017-02-02",
                         "@valid_since": "2011-06-28",
                         "content": "ka_shrinivaasan",
                         "display": "ka_shrinivaasan"
                    }
               ]
          },
          "query": {
               "emails": [
                    {
                         "address": "kashrinivaasan@live.com",
                         "address_md5": "6764275e5425999d910c4ac9976b1438",
                         "display": "kashrinivaasan@live.com"
                    }
               ],
               "names": [
                    {
                         "display": "Srinivasan Kannan",
                         "first": "Srinivasan",
                         "last": "Kannan"
                    }
               ]
          }
     }
]
[
     {
          "@available_sources": 108,
          "@http_status_code": 200,
          "@persons_count": 1,
          "@search_id": "1909110837557399604094477464130613465",
          "@visible_sources": 15,
          "available_data": {
               "premium": {
                    "addresses": 2,
                    "educations": 5,
                    "emails": 6,
                    "genders": 1,
                    "images": 5,
                    "jobs": 24,
                    "names": 3,
                    "relationships": 6,
                    "social_profiles": 6,
                    "user_ids": 7,
                    "usernames": 2
               }
          },
          "person": {
               "@id": "16986908-d9c4-4a03-b6d3-d3e5bc578905",
               "@match": 1.0,
               "@search_pointer": "",
               "addresses": [
                    {
                         "@last_seen": "2018-06-28",
                         "@valid_since": "2010-12-03",
                         "city": "Chennai",
                         "country": "IN",
                         "display": "Chennai, India"
                    },
                    {
                         "@last_seen": "2018-06-28",
                         "@type": "work",
                         "@valid_since": "2015-09-30",
                         "city": "Kumbakonam",
                         "country": "IN",
                         "display": "Kumbakonam, India"
                    }
               ],
               "emails": [
                    {
                         "@email_provider": true,
                         "@last_seen": "2018-12-15",
                         "@type": "personal",
                         "@valid_since": "2012-07-22",
                         "address": "full.email.available@business.subscription",
                         "address_md5": "af96cf33e2024e7328bbc7675f771b1e",
                         "display": "full.email.available@business.subscription"
                    },
                    {
                         "@email_provider": true,
                         "@type": "personal",
                         "@valid_since": "2011-12-05",
                         "address": "full.email.available@business.subscription",
                         "address_md5": "a9e46cba401df1afdd7e1b5eba5b21a1",
                         "display": "full.email.available@business.subscription"
                    },
                    {
                         "@email_provider": true,
                         "@type": "personal",
                         "@valid_since": "2010-07-08",
                         "address": "full.email.available@business.subscription",
                         "address_md5": "5a35e71a9e313cd83fc1b36e8a921f51",
                         "display": "full.email.available@business.subscription"
                    },
                    {
                         "@email_provider": false,
                         "@last_seen": "2018-12-15",
                         "@valid_since": "2012-12-27",
                         "address": "full.email.available@business.subscription",
                         "address_md5": "6764275e5425999d910c4ac9976b1438",
                         "display": "full.email.available@business.subscription"
                    },
                    {
                         "@email_provider": true,
                         "@type": "personal",
                         "@valid_since": "2013-01-18",
                         "address": "full.email.available@business.subscription",
                         "address_md5": "e8c9ea39bf6e7cf1d0b75eaf19bb5760",
                         "display": "full.email.available@business.subscription"
                    },
                    {
                         "@email_provider": false,
                         "@type": "work",
                         "@valid_since": "2012-12-19",
                         "address": "full.email.available@business.subscription",
                         "address_md5": "0ba5c26ba75e2c48b4f08dc8e7b5d890",
                         "display": "full.email.available@business.subscription"
                    }
               ],
               "gender": {
                    "@valid_since": "2011-12-05",
                    "content": "male",
                    "display": "Male"
               },
               "images": [
                    {
                         "@valid_since": "2011-12-05",
                         "display": "http://graph.facebook.com/1186474769/picture?type=large",
                         "thumbnail_token": "AE2861B242686E6ACBCD539D133B8AE59A9AE962DB1FA5AA7AF08DAAD76B0DFE1F64838CD9CDB2322ADF85744B699B543C4E5FE3AC5A925CC78A78485D1B1861F699",
                         "url": "http://graph.facebook.com/1186474769/picture?type=large"
                    },
                    {
                         "@valid_since": "2016-01-17",
                         "display": "https://s-media-cache-ak0.pinimg.com/avatars/shrinivaasanka_1392636070_140.jpg",
                         "thumbnail_token": "AE2861B20B7D6E22CA814E9059348AAB9C99E565D51CA7AE27F1CCF2813454AE0530DAD8D9DCAD302ACB85625B6E8A56301D5AF4BF5C841BCD927073511B186BF39AC63006E11FBB5344F8B1D7E0B6B7AD9EBF71FCF012DD7E",
                         "url": "https://s-media-cache-ak0.pinimg.com/avatars/shrinivaasanka_1392636070_140.jpg"
                    },
                    {
                         "@last_seen": "2018-06-28",
                         "@valid_since": "2018-06-28",
                         "display": "https://media.licdn.com/dms/image/C5103AQElIOVKZ6nowg/profile-displayphoto-shrink_200_200/0?e=1535587200&v=beta&t=KGXPR6F4RKV3CymWr3LeTWUcV3de2Z7r2q2uAXaHZzk",
                         "thumbnail_token": "AE2861B20B7D6E22D4C9479C5C7387EF9C9CE823D35EABEA73B2CFB4863058AE4E7CF680C78DE8100FEF9B583B4BA97E6F1D5CF5B9128708CC9F784005054530B6D99C6148A128E5131BFBA8CFF5F9BDB5A8E97CF99A12DD7A9948B1D92730DCE7C5B74B5A526211CCC892B90151753EF5024DCEF082F55F1D7CD48C24C2D3BC4B16AE791B158B4A2F1489127F24C416775DD40F4560CE582B87BC16D23EB38D8D8373FBD7",
                         "url": "https://media.licdn.com/dms/image/C5103AQElIOVKZ6nowg/profile-displayphoto-shrink_200_200/0?e=1535587200&v=beta&t=KGXPR6F4RKV3CymWr3LeTWUcV3de2Z7r2q2uAXaHZzk"
                    },
                    {
                         "@last_seen": "2017-02-02",
                         "@valid_since": "2017-02-02",
                         "display": "http://pbs.twimg.com/profile_images/823093144023494656/uh0w69z8.jpg",
                         "thumbnail_token": "AE2861B242686E7DDBDF0D814A3486E1D19BE9609F41B4AA71B6D0FEB03454A84C36C69ACE8FE8616799C625402DD0176D4A07B4EB0BD80FCBC9661A59521977AFD9972655A229EE5A47EFE393B3",
                         "url": "http://pbs.twimg.com/profile_images/823093144023494656/uh0w69z8.jpg"
                    },
                    {
                         "@valid_since": "2014-03-29",
                         "display": "http://lh4.googleusercontent.com/-lsiOU7rL21o/AAAAAAAAAAI/AAAAAAAAAF0/JajVx47Doq4/photo.jpg",
                         "thumbnail_token": "AE2861B242686E61D1980D9252328CEA9A8DF568C252A9AB63BAD2EFC13E56A4047ED9C69FF28E662CE6C5201B32A365183272C39F7CB63BEAD6506D2169601884E8B14601FE0AEB0D22AEEF90C3FFA2EAD8AB24A6B14FC320C61FA8D869688DE9C5B2455F54",
                         "url": "http://lh4.googleusercontent.com/-lsiOU7rL21o/AAAAAAAAAAI/AAAAAAAAAF0/JajVx47Doq4/photo.jpg"
                    }
               ],
               "names": [
                    {
                         "@valid_since": "2000-01-01",
                         "display": "Shrinivas Kannan",
                         "first": "Shrinivas",
                         "last": "Kannan"
                    },
                    {
                         "@last_seen": "2018-06-28",
                         "@valid_since": "2014-01-01",
                         "display": "Srinivasan Kannan",
                         "first": "Srinivasan",
                         "last": "Kannan"
                    },
                    {
                         "@valid_since": "2011-12-05",
                         "display": "Shrinivaasan Ka",
                         "first": "Shrinivaasan",
                         "last": "Ka"
                    }
               ],
               "relationships": [
                    {
                         "@subtype": "Follower",
                         "@type": "other",
                         "@valid_since": "2012-07-13",
                         "names": [
                              {
                                   "@valid_since": "2012-07-13",
                                   "display": "Vinod Kumar Devi",
                                   "first": "Vinod",
                                   "last": "Devi",
                                   "middle": "Kumar"
                              }
                         ]
                    },
                    {
                         "@subtype": "Follower",
                         "@type": "other",
                         "@valid_since": "2012-07-13",
                         "names": [
                              {
                                   "@valid_since": "2012-07-13",
                                   "display": "Prakash Chandrasekaran",
                                   "first": "Prakash",
                                   "last": "Chandrasekaran"
                              }
                         ]
                    },
                    {
                         "@subtype": "Follower",
                         "@type": "other",
                         "@valid_since": "2012-07-13",
                         "names": [
                              {
                                   "@valid_since": "2012-07-13",
                                   "display": "Pranabendu Misra",
                                   "first": "Pranabendu",
                                   "last": "Misra"
                              }
                         ]
                    },
                    {
                         "@subtype": "Follower",
                         "@type": "other",
                         "@valid_since": "2012-07-13",
                         "names": [
                              {
                                   "@valid_since": "2012-07-13",
                                   "display": "Ram Janakiraman",
                                   "first": "Ram",
                                   "last": "Janakiraman"
                              }
                         ]
                    },
                    {
                         "@subtype": "Follower",
                         "@type": "other",
                         "@valid_since": "2012-07-13",
                         "names": [
                              {
                                   "@valid_since": "2012-07-13",
                                   "display": "Jose Mathew",
                                   "first": "Jose",
                                   "last": "Mathew"
                              }
                         ]
                    },
                    {
                         "@subtype": "Follower",
                         "@type": "other",
                         "@valid_since": "2012-07-13",
                         "names": [
                              {
                                   "@valid_since": "2012-07-13",
                                   "display": "Shubho Sengupta",
                                   "first": "Shubho",
                                   "last": "Sengupta"
                              }
                         ]
                    }
               ],
               "urls": [
                    {
                         "@category": "professional_and_business",
                         "@domain": "linkedin.com",
                         "@name": "LinkedIn",
                         "@source_id": "3226b889ddb5e951c00e509d2f677d39",
                         "display": "https://www.linkedin.com/in/srinivasan-kannan-608a671",
                         "url": "https://www.linkedin.com/in/srinivasan-kannan-608a671"
                    },
                    {
                         "@category": "personal_profiles",
                         "@domain": "facebook.com",
                         "@name": "Facebook",
                         "@source_id": "304265879bd07c9f1ba793284967b272",
                         "display": "http://facebook.com/people/_/1186474769",
                         "url": "http://facebook.com/people/_/1186474769"
                    },
                    {
                         "@category": "personal_profiles",
                         "@domain": "twitter.com",
                         "@name": "Twitter",
                         "@source_id": "ba371ee483f15414764f0b6797df4b60",
                         "display": "http://www.twitter.com/ka_shrinivaasan",
                         "url": "http://www.twitter.com/ka_shrinivaasan"
                    },
                    {
                         "@category": "personal_profiles",
                         "@domain": "pinterest.com",
                         "@name": "Pinterest",
                         "@source_id": "c405e60965da03eb4ce5a2965a77f127",
                         "display": "http://pinterest.com/shrinivaasanka/",
                         "url": "http://pinterest.com/shrinivaasanka/"
                    },
                    {
                         "@category": "personal_profiles",
                         "@domain": "flickr.com",
                         "@name": "Flickr",
                         "@source_id": "63eefc3611d18b58921a5ccb51c2d500",
                         "display": "http://www.flickr.com/people/51784765@N08/",
                         "url": "http://www.flickr.com/people/51784765@N08/"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "media.readthedocs.org",
                         "@name": "media.readthedocs.org",
                         "@source_id": "8474c14ec15ec65092689cef292773e7",
                         "display": "https://media.readthedocs.org/pdf/neuronrain-documentation/latest/neuronrain-documentation.pdf",
                         "url": "https://media.readthedocs.org/pdf/neuronrain-documentation/latest/neuronrain-documentation.pdf"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "openhub.net",
                         "@name": "openhub.net",
                         "@source_id": "7f0c0fa64f272b316c76abaf6b787b8d",
                         "display": "https://www.openhub.net/accounts/ka_shrinivaasan",
                         "url": "https://www.openhub.net/accounts/ka_shrinivaasan"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "5d99cf42-a-62cb3a1a-s-sites.googlegroups.com",
                         "@name": "5d99cf42-a-62cb3a1a-s-sites.googlegroups.com",
                         "@source_id": "27bc4419dd77f547f973c57389952486",
                         "display": "https://5d99cf42-a-62cb3a1a-s-sites.googlegroups.com/site/kuja27/CV_of_SrinivasanKannan_alias_KaShrinivaasan_alias_ShrinivasKannan.pdf?attachauth=ANoY7cot5zOBoNPJEw-kl3cAhmRiJbeqB43D41dU6ld7NKo06FbHyeR5eGjpXANAfuyVhFc0Cfp6g6vcdpYwfxGCjqUXBK79Py5v2jcQyH1g7gigtpMSH2kV7EoysjqsAmg5_R0bPXbrfzmzMosUDlufh8PGynZO3IaV5uLr-eqoLs_2zGk3pXgxzju_ucU8rTDlFN8xtvNyGMI4tMcYKlHdadi41idbXK2JrmSteqZ5NubGv8iI5pxm_mg-_rQFi0Qn_F7gr_EUSW53mh835atEu_lFZwa-og%3D%3D&attredirects=0",
                         "url": "https://5d99cf42-a-62cb3a1a-s-sites.googlegroups.com/site/kuja27/CV_of_SrinivasanKannan_alias_KaShrinivaasan_alias_ShrinivasKannan.pdf?attachauth=ANoY7cot5zOBoNPJEw-kl3cAhmRiJbeqB43D41dU6ld7NKo06FbHyeR5eGjpXANAfuyVhFc0Cfp6g6vcdpYwfxGCjqUXBK79Py5v2jcQyH1g7gigtpMSH2kV7EoysjqsAmg5_R0bPXbrfzmzMosUDlufh8PGynZO3IaV5uLr-eqoLs_2zGk3pXgxzju_ucU8rTDlFN8xtvNyGMI4tMcYKlHdadi41idbXK2JrmSteqZ5NubGv8iI5pxm_mg-_rQFi0Qn_F7gr_EUSW53mh835atEu_lFZwa-og%3D%3D&attredirects=0"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "media.readthedocs.org",
                         "@name": "media.readthedocs.org",
                         "@source_id": "ba7becc544f19f6579529dce3617e415",
                         "display": "https://media.readthedocs.org/pdf/neuronrain-documentation/latest/neuronrain-documentation.pdf",
                         "url": "https://media.readthedocs.org/pdf/neuronrain-documentation/latest/neuronrain-documentation.pdf"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "media.readthedocs.org",
                         "@name": "media.readthedocs.org",
                         "@source_id": "a187301de5216b550db21bb3d073b7ba",
                         "display": "https://media.readthedocs.org/pdf/neuronrain-documentation/latest/neuronrain-documentation.pdf",
                         "url": "https://media.readthedocs.org/pdf/neuronrain-documentation/latest/neuronrain-documentation.pdf"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "5d99cf42-a-62cb3a1a-s-sites.googlegroups.com",
                         "@name": "5d99cf42-a-62cb3a1a-s-sites.googlegroups.com",
                         "@source_id": "bb9ab15cc8c31a651dc8d169f3cb770b",
                         "display": "https://5d99cf42-a-62cb3a1a-s-sites.googlegroups.com/site/kuja27/CV_of_SrinivasanKannan_alias_KaShrinivaasan_alias_ShrinivasKannan.pdf?attachauth=ANoY7cot5zOBoNPJEw-kl3cAhmRiJbeqB43D41dU6ld7NKo06FbHyeR5eGjpXANAfuyVhFc0Cfp6g6vcdpYwfxGCjqUXBK79Py5v2jcQyH1g7gigtpMSH2kV7EoysjqsAmg5_R0bPXbrfzmzMosUDlufh8PGynZO3IaV5uLr-eqoLs_2zGk3pXgxzju_ucU8rTDlFN8xtvNyGMI4tMcYKlHdadi41idbXK2JrmSteqZ5NubGv8iI5pxm_mg-_rQFi0Qn_F7gr_EUSW53mh835atEu_lFZwa-og%3D%3D&attredirects=0",
                         "url": "https://5d99cf42-a-62cb3a1a-s-sites.googlegroups.com/site/kuja27/CV_of_SrinivasanKannan_alias_KaShrinivaasan_alias_ShrinivasKannan.pdf?attachauth=ANoY7cot5zOBoNPJEw-kl3cAhmRiJbeqB43D41dU6ld7NKo06FbHyeR5eGjpXANAfuyVhFc0Cfp6g6vcdpYwfxGCjqUXBK79Py5v2jcQyH1g7gigtpMSH2kV7EoysjqsAmg5_R0bPXbrfzmzMosUDlufh8PGynZO3IaV5uLr-eqoLs_2zGk3pXgxzju_ucU8rTDlFN8xtvNyGMI4tMcYKlHdadi41idbXK2JrmSteqZ5NubGv8iI5pxm_mg-_rQFi0Qn_F7gr_EUSW53mh835atEu_lFZwa-og%3D%3D&attredirects=0"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "openhub.net",
                         "@name": "openhub.net",
                         "@source_id": "9bdcae1054557a34a719bcb4ad9aef83",
                         "display": "https://www.openhub.net/accounts/ka_shrinivaasan",
                         "url": "https://www.openhub.net/accounts/ka_shrinivaasan"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "openhub.net",
                         "@name": "openhub.net",
                         "@source_id": "1b11ac4c32332032b2519b0c8891b727",
                         "display": "https://www.openhub.net/accounts/ka_shrinivaasan",
                         "url": "https://www.openhub.net/accounts/ka_shrinivaasan"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "media.readthedocs.org",
                         "@name": "media.readthedocs.org",
                         "@source_id": "5b9c377a5214db6b93f47938dd2b370c",
                         "display": "https://media.readthedocs.org/pdf/neuronrain-documentation/latest/neuronrain-documentation.pdf",
                         "url": "https://media.readthedocs.org/pdf/neuronrain-documentation/latest/neuronrain-documentation.pdf"
                    },
                    {
                         "@category": "personal_profiles",
                         "@domain": "sites.google.com",
                         "@last_seen": "2018-06-28",
                         "@valid_since": "2014-01-01",
                         "display": "https://sites.google.com/site/kuja27/",
                         "url": "https://sites.google.com/site/kuja27/"
                    },
                    {
                         "@category": "personal_profiles",
                         "@domain": "sourceforge.net",
                         "@last_seen": "2018-06-28",
                         "@valid_since": "2015-09-30",
                         "display": "http://sourceforge.net/users/ka_shrinivaasan",
                         "url": "http://sourceforge.net/users/ka_shrinivaasan"
                    },
                    {
                         "@category": "personal_profiles",
                         "@domain": "facebook.com",
                         "@valid_since": "2014-01-01",
                         "display": "http://www.facebook.com/shrinivaasan.ka",
                         "url": "http://www.facebook.com/shrinivaasan.ka"
                    }
               ],
               "user_ids": [
                    {
                         "@last_seen": "2018-06-28",
                         "@valid_since": "2010-07-08",
                         "content": "5611688@linkedin",
                         "display": "5611688@linkedin"
                    },
                    {
                         "@valid_since": "2013-02-16",
                         "content": "51784765@N08@flickr",
                         "display": "51784765@N08@flickr"
                    },
                    {
                         "@last_seen": "2017-02-02",
                         "@valid_since": "2011-06-28",
                         "content": "14233931@twitter",
                         "display": "14233931@twitter"
                    },
                    {
                         "@valid_since": "2011-12-05",
                         "content": "1186474769@facebook",
                         "display": "1186474769@facebook"
                    },
                    {
                         "@valid_since": "2013-01-18",
                         "content": "103402979170580834945@google",
                         "display": "103402979170580834945@google"
                    },
                    {
                         "@last_seen": "2018-06-28",
                         "@valid_since": "2010-07-08",
                         "content": "1/a67/608@linkedin",
                         "display": "1/a67/608@linkedin"
                    },
                    {
                         "@last_seen": "2018-06-28",
                         "@valid_since": "2010-07-08",
                         "content": "#608a671@linkedin",
                         "display": "#608a671@linkedin"
                    }
               ],
               "usernames": [
                    {
                         "@valid_since": "2011-12-05",
                         "content": "shrinivaasan.ka",
                         "display": "shrinivaasan.ka"
                    },
                    {
                         "@last_seen": "2017-02-02",
                         "@valid_since": "2011-06-28",
                         "content": "ka_shrinivaasan",
                         "display": "ka_shrinivaasan"
                    }
               ]
          },
          "query": {
               "emails": [
                    {
                         "@type": "personal",
                         "address": "ka.shrinivaasan@gmail.com",
                         "address_md5": "af96cf33e2024e7328bbc7675f771b1e",
                         "display": "ka.shrinivaasan@gmail.com"
                    }
               ],
               "names": [
                    {
                         "display": "Srinivasan Kannan",
                         "first": "Srinivasan",
                         "last": "Kannan"
                    }
               ]
          }
     },
     {
          "@available_sources": 151,
          "@http_status_code": 200,
          "@persons_count": 18,
          "@search_id": "1909110838012194018513888886462560180",
          "available_data": {
               "premium": {
                    "addresses": 53,
                    "dobs": 3,
                    "educations": 29,
                    "genders": 16,
                    "images": 27,
                    "jobs": 116,
                    "landline_phones": 8,
                    "languages": 6,
                    "mobile_phones": 11,
                    "names": 31,
                    "origin_countries": 8,
                    "phones": 19,
                    "relationships": 11,
                    "social_profiles": 32,
                    "user_ids": 50,
                    "usernames": 13
               }
          },
          "possible_persons": [
               {
                    "@match": 0.14,
                    "@search_pointer": "5b1a46e4d43365daa0c35bee85eb02f35709b962da6a41b978f6698275c9b5d11ed283a09170252912cb782a233e157f38218ff0f14023ce6702b3fc3a9b41644d27f348b79f0ac60bc55e48788310242fcac7bf2b65b04a4d5a0ed7eb863a85d2a855cebad852741973d36a395194303fde9fdff9a6681e81e1abc3838d0dab199e2c3c101d9e7418faaad1ebcd188c0ec1be85fe015a2609d4589f5f5639770c48ba7a7c7dc2bb284dc404c9cc4ebd2cea5aa0d8ee741ceca1ced917bf1b9eed90dbc2775e8cf7636dbdc0df29f3956cce8e622d1525b851b5a780312b2d60966f42b00acaa5740e51602c492cb13601e19471eee8abdb5d1b422cf06284a2a745cdaaf063887ff70212bb9a4ed3ad17db433e18d42fcdc39123b9e2d027b1a53d91d92bb71ffe670ae554858bc12f8e76a7f8ab3500c65ffac85771173b4791a6c6c744a71bcdc003e97bbb67731c3661a7abae6fb28e9b2fb50d699163afa9ddfde76830d21bfd8451b37490a5a3f80ac64922eb322472f6260af4f28d0d31989eaeca71b5fa7b23de200430efb80dbe4e9b99d73d25d75bbec2376c9f0ea985e789d1d69654c5ee75983dba00e12604ba18c367a6467bedcf00ba4c04288d44d42c570d2f60841270783e2abf8cfff31ca00861beb0743890daa73ab3bb4691fae4ed7ed96eba4a9f17c0ff8e74ec537094f93a425076392b27c58e54692f797b685e9cae414005e842300c5d0b3e5f5488a9f058069a13ee86a9b2cd8e3ddf0d3f7ed7b2a3c1068723e8116dc838775b83d14ea38ec9c02884f58c819e5639b082a70b7a7c5b8914cecd9fd7a2748e71e6a9bcc437e7d7cff6e0e1d778e0bd58764049ea018483a5579ed4540c5ab1c9ff7f4d9ab55dd7aa38238d0e0e3631c5d82f7db8b6b9315167f8e77f53d897930ff3401f872835aa424292c9964871430e198bf5db372b7f3eaa01eac614483275bc0ee8672f966e711d61de7d75598fa53129ff41cebf4b4ce421a9746f50da235216aad49090135f731bf017167665d94a312824a413012a34220c03e4adc4ca1b01db6e9987b2797f49c57589f1a28f58ae8a56ef58a39505db7520623c015413def4716f9593cc808e210ace4c4d262ebb169ddc3507335f03b042bcb499bfa2eb049610fc128300bff9bc912f64d8cd13c2469d523f30893dfcecef94811a3ee833384d7b5b021d48322499a852d4e67a2c8cbb1769724d44cde3c2305c268893c94f6f246ac02955159340ded7286e4cfe4e05f5c741ebc7b4d75ed1276c5055b4c0dfae2236be5a19c0acef25d7fa5672a10bf151881eb773525e10be4bcdd3b1f885e6a19ec6bd7e2ecf202a2c6f6529ed7a4accc2f184f65e4830401edb3d7459fc787ccbd12ffdd43015b1652e5ffeac27e84c125b36c88d094bff4205ded132887ca990c94fd25eb40d2a5758bca95e6c24916d4f9879fc95fac96b7840b838a2c97a072a4fed4c9ebe17e5ba112abb9d20ac92b3f2da0b2cc82483f7121efdba1da83c6ccc149d11c88b7205ed95ff7e9f94eeeccf3bedc88c9429ea9723d5ed97eebc5a28acf3b1475e4532798b9047bf4dc18e6b2641f6a056830e9daf0846bea3b526804c81be09bd7d9534729a0c6818fa54d4143ff6dab1800e4987b6473d19ae0c527623d07501e3693aadf93a9f936e19830d1663e05a58cc6eab18f5dbc42a59f7baa201a17d177674218148dfbf9ff7ae42aa1a77b752462c1a64bdfc75dc4ea3af616d76fca425345d2e81756fdd07c7095893d5b6e6d69faa79af1da03cabcd0e20ef6a29fb1b9ce66a1831b541e4181cf671d87361942a20b7360d9b866edc128742f10f520b41b86c983553f7cacdfc4e3e83e888d6fb3779523b64ad1d4038288bdbba0c9830b202398a50b84605cd7b3ec4b1005747d90fe82aafde651869d7d42b6f738a43afccf36b65fbc0cb371e93f88a99d191823a9246af4cf6c03763723f54fa793ff9a41e7411c5e416672fa65a1f7e136df07eecf39cbdad7c693d7ec82999809e30f6898089fc30a4ddf2dc815cd4ad9deaea764fe53beb116f0e3af3645a2021cb20c96bcf6a1ab4fa76ad96965fe5631d07d59f08f26304a811ec63bdc6a24b8587acdb8730ba6cdb297ea5084be20922613f45a60856cac8faa7674a56289974fd96fc82e700c10a18cb31312077d2e91d0992a286c300ae46ab1f49e3ab360a297d519dc0bdc81a9549276d188438ae01188d85baaa19fe3080334531c2ee1c389cbd7a9704fa51db096c9de2e4d709ecc7e13d22384437d89ba7da10c9b651cd30f78cf5761749135ace03ce5bea2e37f42fbc4e456df2e095a4906d26c51379a00a91894167999946813f3f00a5ded4c2a327e76a1d696013d30de3fec7adb82874348a107fe09a090e337470493dd4a9b51d911a8dead98272f7bdf200c460ecd0acbece6dcc0c1fa52fcfdc6631f58be6ad5c645aef96a1ac6d51bc5af6d37913b58e6393d3da3076d40644c7f46cdd302e9dc6917bda7d78e4b202f3b42b0e4e85cf5cbdfeb2153fb8c507f0ba2aafcf50114e96d942594013a71732775369a685214a65ebca0aeb502f932d36be3cb00b5d170f151e7b191283a35f2fde301da397e1c61bd3c0f9263ce4dc49fa631237f9852859bb4fab6b1160db4d60bc78b33fa7c9d5d7eed5a7fc888381882a435551f7f32b4cb079310a0711415b36d20ab46e5e4cc5c60a36154f9f6de1c1fb20dc57a6fced51a050ba407f002663a13549473456f5a0f6b35c3cd422fc99d9c90eff5abd94c9bf946134760bb11da8bfa03f9826299a18be64b4e79a76154662be5561598918966edbdb19583d52e66a5cc42d51722464089fcf86b73a279d7886fdcaeae486dd7c97a76527dd352e4cb8eeeb9bea939639e301abefb48f622c5ad2ea66831ab8176345393ca84c11198d0f4b344cbc6f481566d217438e2a7070db896738772ca70fc85afc29f823766ce8784f235c1879c74ebe0287b4d5e4175bb21fbee303bce1c7ae9bf2ca2e90ff7c8f7a6d459f506da881771e143348b89d4f439b139214ad890ae32feeb5faa711cc19090f539fba86979578ef6a63f08a4500ed09762abb7e25e4d963be0a8b9152e181d09983269600711eb6342ac23d57ad849da6965f26d45e6de4b4837e9f19d85a647dd697341f9ff4eabf1e15dc27f7e8130dd0921ba872db3ab564f3ac80323cd916e8c2322d3b65fb241ab17f64209fb7f6713115fee8a970a27e5424cdff211dd927c92d5ff70a3d8df9608671494c51f946b4452dc5a3721c1d453c3b286a7ce2c606c5c3fcd78d99bd522fb9d2e98c08fe64001ef8c0cd416e294e1b6d82da28397e00d495ba613d38b6a037ba1113e5fa2930e43668c3961f5313af9d21583d7256eda6d3e5bf8394977606b6d9a5ec3995a376bcd25d3b968f53405ea9d3789728c7edba3b6c67ab7081e2204960ed264b6741125855d1fefd58c3f2b82ed5a36605cb5caa8e1ec2644c6e5f1d51ebc530aa8a76c0a83147108e1daa5a66c07e39e10eaefa8c02e0c0d67406744ee4c890ee6415865a030a8ca0c372082919c98fb2d4bc2e7ad96f0ffb85474649c9e48b0a4fcf7c5b8922752ab69e7b71fb4200f45fb5142a9d93f718727d2c8061817c5edb7cc030330ecb25c43599908c9606662e36f36550965eb5b8606122eb50d53c697885f29281e5fa2e82650f8247fe60e905c7e22f09a475f9f1f3d6b6839f4cd880a03a821adf5ee694429ad68599763cea6b7682ec16ef7702363c191b162335e4c6f5ec573280e60a3f86808c7e11c6789901a3dba78852c620a13d64766b5200f94b87bebd729b22bb01cb0773cf78c65827a87671189e4148b7a56a57504eb50b756d836ee5d24bcc50f149b4a051fb4fff36aab414b14d83cfe8e35386902a645857c0c9cfafaf3cab56f2088ec3cac28068f9f0c78274554e8db738c9e39f984608278c08f2b96503edf8868113e6eb2ab003b2d6b7a354066340da1556a0a98befc0895a117244618acc6b627241056c08192b61ddc03a8973a10d393ca3c3a09266223703f06e4a69a0f761a06332deac633317eb6c33ec6cfaf85760662340006af2b6906dce3048889988f2a0d0481fa8b2e86bbf3fbc024438aeccbffa9aaa5a5668583cef9f41e74427d3efdb4645e43f3a7759f6e1b42dd05b20851e3078e0dd31783174a6ac46072e2556f008e4bc20a8761e0d18a94e0535da44e3e2ed5c4e02ec8517e05c3e6b8551ee2e9303012bf9211bd97c0693047db1706595afb47d696f7ce282837ac48fc3e7508eda70e885e50602d8b54da0bd6bbc4bbcbb7efa4dc5beafcac4e47fc43795fd7c210333452d6755a87afc9e8e8378f06722e70c5b9f13e225885616b9ec0956ae7364d11d5bd758af96d5f324a16507b44f77a35a7e8f39e61a619f546570adbc172c8b4682c47588b525a4e4d9cd875094733bee572cfa764550f3445e7f7922bc1e617fbbe231fe01a357e1d447d424bab8fffb110b7aa4f17e3522067f6d61689b7e6d3634bd4026a716037b52af03670419d550b6ef11276965debab800b09413ed8fb0dffb1381e7e2a709841cef4ea4f89e4a32d551fc6012d623e6155811af6ad8c3602c7bed5ca0faf81072e0984a61d658a6a46b9f31468f65e0b26dde98aad66ae832f1c57d337cda6faba63b0f33454cac90743b67b333ec0fcf60da1ec15da9b404d166945fcd9967d24097270a6d95d9d8d7865924f462b5fc9a58e3a5204fc5ff2fdead608254644a8f57ad51267b164ebfb714c07c6625d8d7178aab25f0bcd773cc0989094bfe726738d815732bb6a9dd2b6ccaf1353ac83941b4a2a442ee89286e0ed38b6b8a8ab6d800b04183e33148d3138cf39ebf045be0540e0160162e1e3c4208f410a10be3655e2ea6db2cb9a4d7a9de5c12273c32e9670db233b6cfe657cf0722bfbbfcdefe1b7bce6020a454db1900f26371c947ed11499e072e0442c6c171957e58b94718b1cbbed88646",
                    "addresses": [
                         {
                              "@last_seen": "2018-06-28",
                              "@valid_since": "2010-12-03",
                              "city": "Chennai",
                              "country": "IN",
                              "display": "Chennai, India"
                         },
                         {
                              "@last_seen": "2018-06-28",
                              "@type": "work",
                              "@valid_since": "2015-09-30",
                              "city": "Kumbakonam",
                              "country": "IN",
                              "display": "Kumbakonam, India"
                         }
                    ],
                    "gender": {
                         "@valid_since": "2011-12-05",
                         "content": "male",
                         "display": "Male"
                    },
                    "images": [
                         {
                              "@valid_since": "2011-12-05",
                              "display": "http://graph.facebook.com/1186474769/picture?type=large",
                              "thumbnail_token": "AE2861B242686E6ACBCD539D133B8AE59A9AE962DB1FA5AA7AF08DAAD76B0DFE1F64838CD9CDB2322ADF85744B699B543C4E5FE3AC5A925CC78A78485D1B1861F699",
                              "url": "http://graph.facebook.com/1186474769/picture?type=large"
                         },
                         {
                              "@valid_since": "2016-01-17",
                              "display": "https://s-media-cache-ak0.pinimg.com/avatars/shrinivaasanka_1392636070_140.jpg",
                              "thumbnail_token": "AE2861B20B7D6E22CA814E9059348AAB9C99E565D51CA7AE27F1CCF2813454AE0530DAD8D9DCAD302ACB85625B6E8A56301D5AF4BF5C841BCD927073511B186BF39AC63006E11FBB5344F8B1D7E0B6B7AD9EBF71FCF012DD7E",
                              "url": "https://s-media-cache-ak0.pinimg.com/avatars/shrinivaasanka_1392636070_140.jpg"
                         },
                         {
                              "@last_seen": "2018-06-28",
                              "@valid_since": "2018-06-28",
                              "display": "https://media.licdn.com/dms/image/C5103AQElIOVKZ6nowg/profile-displayphoto-shrink_200_200/0?e=1535587200&v=beta&t=KGXPR6F4RKV3CymWr3LeTWUcV3de2Z7r2q2uAXaHZzk",
                              "thumbnail_token": "AE2861B20B7D6E22D4C9479C5C7387EF9C9CE823D35EABEA73B2CFB4863058AE4E7CF680C78DE8100FEF9B583B4BA97E6F1D5CF5B9128708CC9F784005054530B6D99C6148A128E5131BFBA8CFF5F9BDB5A8E97CF99A12DD7A9948B1D92730DCE7C5B74B5A526211CCC892B90151753EF5024DCEF082F55F1D7CD48C24C2D3BC4B16AE791B158B4A2F1489127F24C416775DD40F4560CE582B87BC16D23EB38D8D8373FBD7",
                              "url": "https://media.licdn.com/dms/image/C5103AQElIOVKZ6nowg/profile-displayphoto-shrink_200_200/0?e=1535587200&v=beta&t=KGXPR6F4RKV3CymWr3LeTWUcV3de2Z7r2q2uAXaHZzk"
                         },
                         {
                              "@valid_since": "2014-03-29",
                              "display": "http://lh4.googleusercontent.com/-lsiOU7rL21o/AAAAAAAAAAI/AAAAAAAAAF0/JajVx47Doq4/photo.jpg",
                              "thumbnail_token": "AE2861B242686E61D1980D9252328CEA9A8DF568C252A9AB63BAD2EFC13E56A4047ED9C69FF28E662CE6C5201B32A365183272C39F7CB63BEAD6506D2169601884E8B14601FE0AEB0D22AEEF90C3FFA2EAD8AB24A6B14FC320C61FA8D869688DE9C5B2455F54",
                              "url": "http://lh4.googleusercontent.com/-lsiOU7rL21o/AAAAAAAAAAI/AAAAAAAAAF0/JajVx47Doq4/photo.jpg"
                         },
                         {
                              "@last_seen": "2017-02-02",
                              "@valid_since": "2017-02-02",
                              "display": "http://pbs.twimg.com/profile_images/823093144023494656/uh0w69z8.jpg",
                              "thumbnail_token": "AE2861B242686E7DDBDF0D814A3486E1D19BE9609F41B4AA71B6D0FEB03454A84C36C69ACE8FE8616799C625402DD0176D4A07B4EB0BD80FCBC9661A59521977AFD9972655A229EE5A47EFE393B3",
                              "url": "http://pbs.twimg.com/profile_images/823093144023494656/uh0w69z8.jpg"
                         }
                    ],
                    "names": [
                         {
                              "@last_seen": "2018-06-28",
                              "@valid_since": "2014-01-01",
                              "display": "Srinivasan Kannan",
                              "first": "Srinivasan",
                              "last": "Kannan"
                         },
                         {
                              "@valid_since": "2000-01-01",
                              "display": "Shrinivas Kannan",
                              "first": "Shrinivas",
                              "last": "Kannan"
                         },
                         {
                              "@valid_since": "2011-12-05",
                              "display": "Shrinivaasan Ka",
                              "first": "Shrinivaasan",
                              "last": "Ka"
                         }
                    ],
                    "relationships": [
                         {
                              "@subtype": "Follower",
                              "@type": "other",
                              "@valid_since": "2012-07-13",
                              "names": [
                                   {
                                        "@valid_since": "2012-07-13",
                                        "display": "Vinod Kumar Devi",
                                        "first": "Vinod",
                                        "last": "Devi",
                                        "middle": "Kumar"
                                   }
                              ]
                         },
                         {
                              "@subtype": "Follower",
                              "@type": "other",
                              "@valid_since": "2012-07-13",
                              "names": [
                                   {
                                        "@valid_since": "2012-07-13",
                                        "display": "Prakash Chandrasekaran",
                                        "first": "Prakash",
                                        "last": "Chandrasekaran"
                                   }
                              ]
                         },
                         {
                              "@subtype": "Follower",
                              "@type": "other",
                              "@valid_since": "2012-07-13",
                              "names": [
                                   {
                                        "@valid_since": "2012-07-13",
                                        "display": "Pranabendu Misra",
                                        "first": "Pranabendu",
                                        "last": "Misra"
                                   }
                              ]
                         },
                         {
                              "@subtype": "Follower",
                              "@type": "other",
                              "@valid_since": "2012-07-13",
                              "names": [
                                   {
                                        "@valid_since": "2012-07-13",
                                        "display": "Ram Janakiraman",
                                        "first": "Ram",
                                        "last": "Janakiraman"
                                   }
                              ]
                         },
                         {
                              "@subtype": "Follower",
                              "@type": "other",
                              "@valid_since": "2012-07-13",
                              "names": [
                                   {
                                        "@valid_since": "2012-07-13",
                                        "display": "Jose Mathew",
                                        "first": "Jose",
                                        "last": "Mathew"
                                   }
                              ]
                         },
                         {
                              "@subtype": "Follower",
                              "@type": "other",
                              "@valid_since": "2012-07-13",
                              "names": [
                                   {
                                        "@valid_since": "2012-07-13",
                                        "display": "Shubho Sengupta",
                                        "first": "Shubho",
                                        "last": "Sengupta"
                                   }
                              ]
                         }
                    ],
                    "user_ids": [
                         {
                              "@last_seen": "2018-06-28",
                              "@valid_since": "2010-07-08",
                              "content": "5611688@linkedin",
                              "display": "5611688@linkedin"
                         },
                         {
                              "@valid_since": "2013-02-16",
                              "content": "51784765@N08@flickr",
                              "display": "51784765@N08@flickr"
                         },
                         {
                              "@last_seen": "2017-02-02",
                              "@valid_since": "2011-06-28",
                              "content": "14233931@twitter",
                              "display": "14233931@twitter"
                         },
                         {
                              "@valid_since": "2011-12-05",
                              "content": "1186474769@facebook",
                              "display": "1186474769@facebook"
                         },
                         {
                              "@valid_since": "2013-01-18",
                              "content": "103402979170580834945@google",
                              "display": "103402979170580834945@google"
                         },
                         {
                              "@last_seen": "2018-06-28",
                              "@valid_since": "2010-07-08",
                              "content": "1/a67/608@linkedin",
                              "display": "1/a67/608@linkedin"
                         },
                         {
                              "@last_seen": "2018-06-28",
                              "@valid_since": "2010-07-08",
                              "content": "#608a671@linkedin",
                              "display": "#608a671@linkedin"
                         }
                    ],
                    "usernames": [
                         {
                              "@last_seen": "2017-02-02",
                              "@valid_since": "2011-06-28",
                              "content": "ka_shrinivaasan",
                              "display": "ka_shrinivaasan"
                         },
                         {
                              "@valid_since": "2014-01-01",
                              "content": "shrinivaasan.ka",
                              "display": "shrinivaasan.ka"
                         }
                    ]
               },
               {
                    "@match": 0.14,
                    "@search_pointer": "c9868984e0b1b797f1fbe54759556cc9bae2f8bd01185e89e0ee42693558e6e216133b01d164ef6fd2dee14f587d589a222d2d8baf9efc1023f3e007220676c05e234e08880e1a145efe4c8e897c95ac576d53e690e80e2db408e911279e1be901785bb27498db97d196ab5a9fd458eacf24159bcf2e48797f63a9aa71c010b49e4fd668e9a6d00b847e066ad3144aa7d1a0a2866344791d52d016ac42fa158b88af484110c17831181be01666631c5f41793a358d59a2fbc696cb76cf3c570fec5df60d65b3bd28268f6a13c8cc9d4be67af7b81530d39474cf677eb825c43670fb61858f4d14814f02ed0410975da2149ba9c1fb454c0c1fc2f294e28d0a75d44c140305691e24373733d8d1996efe87fa906462caf9e96c6c79b4235af365d163ca41bdbf2cdb3e4eec0e34b44f3d51a144df3050921077b170a87891572ec9cf81f7b2b87a8d067c77a28107a103b35fde970c1313da0d0dd06477295e1e3ed4080d7b3fc1539cafd7709ca08a09f321274aeec716fec704d54947715d214982b9618d2be1fd0e5b5374a98fa468b6203603fc746d200577da6506afae25935f60c4a8d69dfc5424aea194f5c8b34f689e4673d106496d604305512df48843ee5b1fc9ef69d0a4ac0ee8b384bb9b42bcc128f7a4146ab89be311a0e05fda4358e3bd8a7775613dd487bb5c4cef108548e2a8c69f269ca2d7203e1903defb",
                    "gender": {
                         "@valid_since": "2014-02-11",
                         "content": "male",
                         "display": "Male"
                    },
                    "images": [
                         {
                              "@valid_since": "2014-11-11",
                              "display": "http://lh4.googleusercontent.com/-MF3QH4taY5o/AAAAAAAAAAI/AAAAAAAAALM/3RoFlmy6I98/photo.jpg",
                              "thumbnail_token": "AE2861B242686E61D1980D9252328CEA9A8DF568C252A9AB63BAD2EFC13E56A4047EF8F3C5EC93652ACBAE241B32A365183272C39F7CB63BEAD6506D2169601884E8B14C7CFE73D80832BAB6DEB1D9EAE6D8AB24A6B14FC320C61FA8D869688DE9C5B2455F54",
                              "url": "http://lh4.googleusercontent.com/-MF3QH4taY5o/AAAAAAAAAAI/AAAAAAAAALM/3RoFlmy6I98/photo.jpg"
                         }
                    ],
                    "names": [
                         {
                              "@valid_since": "2014-02-11",
                              "display": "Shrinivas Kannan",
                              "first": "Shrinivas",
                              "last": "Kannan"
                         },
                         {
                              "@valid_since": "2014-11-11",
                              "display": "Srinivasan Kannan",
                              "first": "Srinivasan",
                              "last": "Kannan"
                         }
                    ],
                    "user_ids": [
                         {
                              "@valid_since": "2014-11-11",
                              "content": "111994949685611811308@google",
                              "display": "111994949685611811308@google"
                         }
                    ]
               },
               {
                    "@match": 0.0,
                    "@search_pointer": "280511eebd39ebc276997bdf0ac5c3a2ae1db3dfb33042652c91a8972c6f34a861a6eae7359193d235714cb28b174ea81f01d3b234f72ce6a4d4bfc10088b6417e4df3e4256b15c5927865cb5dfa949aeb586825199eed8073958d8609225a87c8d96d91638cd1f58299e268a8353ffbc0f6535639d6de9c84c0f0acaafc1ca706f4ae38840572c993b32a429ff27633026a0fa687d2027660c3bda1aef482c40c92b649cb18c42865a9c5f2dc97e65d58675caedc8c4bf9692247fb41eccfe17428d7fe2e1dc48fb751c68d1430d6923b21ee37cef9a7540932a2c6c0d5497e9c80b0ca76e9030a36cc85686cbe411e54b4661a8da9297d8262a5d411bdddebcfab2245ba383c2c6b74862b004a23bf811868a25e88aa39125577b017fe82e3d1fb5e372bd0ad539f4704b3b239dd2d46015970b7a7b415306a140b8bbd957ada960ab1724c0b8f83f058bc8109b9006ed588d2f5c3e24e1c04475ccc44f99d6451564ce4ca44ac1b0460ea10f8c485f89aa8526be61e7b115341974f135fed54b1a9f00085efdd0852e070d17f3d1fab669a73e8706535b21d9778eea17a6bfa385153f430772aa6ad8cb768c655b81cd504c6a2e4cb9a48914e2d0ffede0c02bda7d840f7460b306b963db8b65f263736af703e7893fcb37d3e36fb9c64d57d2c9fd5022da0c2ab0007a9aefccaed0b4c0c6cd5c368d30d677c20b17025f5743204cd3872e6f26646d252f7104e09a28e309ee0be0b170159459fde2e68992306c66489bec4f1711ef69e5a0f2c8eac70e638b6dfabacafd339b278cca3230c6f990e3278644e9de1834e1ab46c9b3c76b972e920b22d05e1d8c512623eb140bef653dcbf16ea869e89d35e6b666c49ce00ea65f8e0d0753f1302c0ac2a742981af5d4dd24f6abb5751c2ed145e478d1f56b196a1aa117fcfd5ae71dab3ab1f826e17df2e8496ddf9466ae061ac469cd902c8ab73856dc50855488069ccd126d4888382b49fd3c196beee9c51ba26d8fd232379378509691874c009908be753ba2a3a63806e6423827271941d9538734e4666c55f7e361913c961df6f9440d46760b417add6e34b508c0b637feecb1ec07695b854529835618d23721062335dcf602f3a2952d08821cd424313911f55372c4c9ff819640e168c2f5731a3c055861f2f65edb3077402a0685689fc19",
                    "addresses": [
                         {
                              "@last_seen": "2019-02-05",
                              "@valid_since": "2016-02-02",
                              "city": "Bhopal",
                              "country": "IN",
                              "display": "Bhopal, India"
                         }
                    ],
                    "gender": {
                         "content": "male",
                         "display": "Male"
                    },
                    "names": [
                         {
                              "@last_seen": "2019-02-05",
                              "@valid_since": "2016-02-02",
                              "display": "Shrinivas Kannan",
                              "first": "Shrinivas",
                              "last": "Kannan"
                         }
                    ],
                    "origin_countries": [
                         {
                              "country": "IN",
                              "display": "India"
                         }
                    ],
                    "user_ids": [
                         {
                              "@last_seen": "2019-02-05",
                              "@valid_since": "2016-02-02",
                              "content": "b8/9b/b5b@linkedin",
                              "display": "b8/9b/b5b@linkedin"
                         },
                         {
                              "@last_seen": "2019-02-05",
                              "@valid_since": "2016-02-02",
                              "content": "418245047@linkedin",
                              "display": "418245047@linkedin"
                         },
                         {
                              "@last_seen": "2019-02-05",
                              "@valid_since": "2016-02-02",
                              "content": "#b5b09bb8@linkedin",
                              "display": "#b5b09bb8@linkedin"
                         }
                    ]
               },
               {
                    "@match": 0.0,
                    "@search_pointer": "",
                    "addresses": [
                         {
                              "@valid_since": "2008-01-01",
                              "city": "Memphis",
                              "country": "US",
                              "display": "7742 Deer Trail Lane, Memphis, Tennessee",
                              "house": "7742",
                              "state": "TN",
                              "street": "Deer Trail Lane",
                              "zip_code": "38133"
                         },
                         {
                              "@valid_since": "2010-03-29",
                              "city": "Fort Lee",
                              "country": "US",
                              "display": "533 Walnut Street, Fort Lee, New Jersey",
                              "house": "533",
                              "state": "NJ",
                              "street": "Walnut Street",
                              "zip_code": "07024"
                         },
                         {
                              "@last_seen": "2017-06-18",
                              "@valid_since": "2008-03-28",
                              "city": "Champaign",
                              "country": "US",
                              "display": "1617 Cornell Drive, Champaign, Illinois",
                              "house": "1617",
                              "state": "IL",
                              "street": "Cornell Drive",
                              "zip_code": "61821"
                         },
                         {
                              "@type": "old",
                              "@valid_since": "2007-10-20",
                              "city": "Urbana",
                              "country": "US",
                              "display": "Urbana, Illinois",
                              "state": "IL"
                         },
                         {
                              "@valid_since": "2004-09-01",
                              "city": "Champaign",
                              "country": "US",
                              "display": "3304 Cypress Creek Road, Champaign, Illinois",
                              "house": "3304",
                              "state": "IL",
                              "street": "Cypress Creek Road",
                              "zip_code": "61822"
                         },
                         {
                              "@last_seen": "2018-12-23",
                              "@type": "work",
                              "@valid_since": "2015-09-30",
                              "country": "US",
                              "display": "California, United States",
                              "state": "CA"
                         },
                         {
                              "@valid_since": "2008-03-28",
                              "city": "Bloomington",
                              "country": "US",
                              "display": "1007 Arlene Court, Bloomington, Illinois",
                              "house": "1007",
                              "state": "IL",
                              "street": "Arlene Court",
                              "zip_code": "61701"
                         },
                         {
                              "@valid_since": "2008-01-01",
                              "city": "Bloomington",
                              "country": "US",
                              "display": "3103 Wilshire Court, Bloomington, Illinois",
                              "house": "3103",
                              "state": "IL",
                              "street": "Wilshire Court",
                              "zip_code": "61704"
                         },
                         {
                              "@type": "work",
                              "city": "Champaign",
                              "country": "US",
                              "display": "1206 S 6th Street, Champaign, Illinois",
                              "house": "1206",
                              "state": "IL",
                              "street": "S 6Th Street",
                              "zip_code": "61820"
                         },
                         {
                              "@last_seen": "2018-12-23",
                              "@valid_since": "2013-01-17",
                              "city": "Chennai",
                              "country": "IN",
                              "display": "Chennai, India"
                         },
                         {
                              "@last_seen": "2018-12-23",
                              "@type": "work",
                              "@valid_since": "2015-09-30",
                              "city": "Bangalore",
                              "country": "IN",
                              "display": "Bangalore, India"
                         },
                         {
                              "@last_seen": "2018-12-23",
                              "@type": "work",
                              "@valid_since": "2015-09-30",
                              "city": "Bern",
                              "country": "CH",
                              "display": "Bern, Switzerland"
                         }
                    ],
                    "dob": {
                         "date_range": {
                              "end": "1950-06-30",
                              "start": "1950-06-01"
                         },
                         "display": "69 years old"
                    },
                    "gender": {
                         "@valid_since": "2010-03-29",
                         "content": "male",
                         "display": "Male"
                    },
                    "images": [
                         {
                              "@valid_since": "2014-05-24",
                              "display": "http://graph.facebook.com/100000309703756/picture?type=large",
                              "thumbnail_token": "AE2861B242686E6ACBCD539D133B8AE59A9AE962DB1FA5AA7AF08DABDF6D09F918638C82C68EEC6468858778176997563C4C47FBAE58CA16C28B7649464C5230A194C53304E778",
                              "url": "http://graph.facebook.com/100000309703756/picture?type=large"
                         },
                         {
                              "@last_seen": "2018-12-23",
                              "@valid_since": "2018-12-23",
                              "display": "https://media.licdn.com/dms/image/C5603AQET3ZEkWt0j0g/profile-displayphoto-shrink_200_200/0?e=1551312000&v=beta&t=2y6AzYk3kEBHUjtSey_RlC3dsilgCpv0w8hYvCZtF9I",
                              "thumbnail_token": "AE2861B20B7D6E22D4C9479C5C7387EF9C9CE823D35EABEA73B2CFB4863058AE4E7CF680C08DE8100FEFA3222E5889732D4359B2B9128708CC9F784005054530B6D99C6148A128E5131BFBA8CFF5F9BDB5A8E97CF99A12DD7A9948B1D92730DCE1C1B1425F506211CCC892B90151753EF50234F09E93DD30307BED8230B9C5AF5212B9330822B35E4913AC487726B53C361F91461F4CF94310BBA055F03EB38D8D8373FBD7",
                              "url": "https://media.licdn.com/dms/image/C5603AQET3ZEkWt0j0g/profile-displayphoto-shrink_200_200/0?e=1551312000&v=beta&t=2y6AzYk3kEBHUjtSey_RlC3dsilgCpv0w8hYvCZtF9I"
                         },
                         {
                              "@valid_since": "2012-11-19",
                              "display": "http://avatars.zenfs.com/users/1DJGkdA6uAAECQWEo8AceAQ==.large.png",
                              "thumbnail_token": "AE2861B242686E6CCFCD57944F2EC5FC9A96E07E9E52A9A838AACFFE9D2E16F86F19F2DE92FCED241FEBB252254AA74B613250E79F6CCA478D95705E074D0F29ABCED66442B824B75240E0E994",
                              "url": "http://avatars.zenfs.com/users/1DJGkdA6uAAECQWEo8AceAQ==.large.png"
                         }
                    ],
                    "languages": [
                         {
                              "@inferred": true,
                              "display": "en",
                              "language": "en"
                         }
                    ],
                    "names": [
                         {
                              "@last_seen": "2018-12-23",
                              "@valid_since": "2008-01-01",
                              "display": "Srinivas Kannan",
                              "first": "Srinivas",
                              "last": "Kannan"
                         },
                         {
                              "@last_seen": "2017-06-18",
                              "@valid_since": "2000-01-01",
                              "display": "Srinivasan Kannan",
                              "first": "Srinivasan",
                              "last": "Kannan",
                              "prefix": "Mr"
                         },
                         {
                              "@valid_since": "2010-03-29",
                              "display": "Kannan Srinivasan",
                              "first": "Kannan",
                              "last": "Srinivasan"
                         }
                    ],
                    "origin_countries": [
                         {
                              "country": "IN",
                              "display": "India"
                         }
                    ],
                    "phones": [
                         {
                              "@valid_since": "2009-09-13",
                              "country_code": 1,
                              "display": "309-661-0108",
                              "display_international": "+1 309-661-0108",
                              "number": 3096610108
                         },
                         {
                              "@valid_since": "2009-09-13",
                              "country_code": 1,
                              "display": "217-355-2281",
                              "display_international": "+1 217-355-2281",
                              "number": 2173552281
                         },
                         {
                              "@type": "work_phone",
                              "country_code": 1,
                              "display": "217-333-2330",
                              "display_international": "+1 217-333-2330",
                              "number": 2173332330
                         },
                         {
                              "@type": "work_phone",
                              "country_code": 1,
                              "display": "217-333-7953",
                              "display_international": "+1 217-333-7953",
                              "number": 2173337953
                         }
                    ],
                    "user_ids": [
                         {
                              "@last_seen": "2018-12-23",
                              "@valid_since": "2011-03-20",
                              "content": "8157776@linkedin",
                              "display": "8157776@linkedin"
                         },
                         {
                              "@last_seen": "2018-12-23",
                              "@valid_since": "2011-03-20",
                              "content": "2/894/b28@linkedin",
                              "display": "2/894/b28@linkedin"
                         },
                         {
                              "@valid_since": "2014-05-24",
                              "content": "100000309703756@facebook",
                              "display": "100000309703756@facebook"
                         },
                         {
                              "@last_seen": "2018-12-23",
                              "@valid_since": "2011-03-20",
                              "content": "#b288942@linkedin",
                              "display": "#b288942@linkedin"
                         }
                    ],
                    "usernames": [
                         {
                              "@valid_since": "2014-05-24",
                              "content": "srinivas.kannan.7",
                              "display": "srinivas.kannan.7"
                         }
                    ]
               },
               {
                    "@match": 0.0,
                    "@search_pointer": "1c91fbc3bba92276eb722e9364d820548cb98531a34ca7713b45f47543e2468e08041eb2063db1d860a7ca532ba691689f675ce829c39b57626510777f56700d86058478fb6975dfbe7eeabe4f7ffc09b5bd72c97d16f5670de96de6e521dd90ed724b94d8f516b4732d28c2fa16c6987ecdba694d27d1a0d2a6136724469f96455f3b911208a9e53d1c93071bc8dc32a4b8280b99620593f7fdf47b1d4d28c9a85771962d63fcf5014f0b44d1f2d4a428527a6065761fce1d40cf46455c6f5e4e58eafe101c2ca8e566ad09e3921296b051e847ac5fa36ca655dd7f2769375faaf8f9d3b2447b359a2a4b5b63f1d58bba5c817c108fccbd3b70ac707de2d5c312613f450093186e54e91da3a9470e9657af1b6e9e3194b237ecb4ff002a4aef728971e856c4d30cc7b428ec64ee86e99c3c56202cca6349134cc02190a60983919065652a3632ab5ce3883b040fa003a9ef58b22874df6cb1937a8f78497d10f678d9ac3b834983a2b64ada74d53f3a362c453964527190c46b9eec9770fdc5d096d4eb3d3668512c5e7bc1bf0e9bc5c50c7bbce4e9c77931b7ee361dba4c2fc7a591701658adb61ab222b2b691306833ad5bb17154b3a6d710fda9eb2c360a8f7ad8c31f7d5383bbfb9b77ef42f419493454f423ffebb1a827a5be52c69b10",
                    "gender": {
                         "@valid_since": "2014-01-01",
                         "content": "male",
                         "display": "Male"
                    },
                    "images": [
                         {
                              "@valid_since": "2011-07-01",
                              "display": "http://graph.facebook.com/100001627092130/picture?type=large",
                              "thumbnail_token": "AE2861B242686E6ACBCD539D133B8AE59A9AE962DB1FA5AA7AF08DABDF6D09F81D618285CF8FEA626E858778176997563C4C47FBAE58CA16C28B7649464C5230A194C33909E270",
                              "url": "http://graph.facebook.com/100001627092130/picture?type=large"
                         }
                    ],
                    "names": [
                         {
                              "@valid_since": "2011-07-01",
                              "display": "Shrinivas Kannan",
                              "first": "Shrinivas",
                              "last": "Kannan"
                         }
                    ],
                    "user_ids": [
                         {
                              "@valid_since": "2011-07-01",
                              "content": "100001627092130@facebook",
                              "display": "100001627092130@facebook"
                         }
                    ],
                    "usernames": [
                         {
                              "@valid_since": "2014-01-01",
                              "content": "shrinivas.kannan",
                              "display": "shrinivas.kannan"
                         }
                    ]
               },
               {
                    "@match": 0.0,
                    "@search_pointer": "83952f39a46f725b8570b3bf53695246ed9795026b8d93a98d064a41ca23acf8ca545aef39b9834634cf04ca094683651e910d285f77620dca2dcddb90bbc3e4dfe456af5c7df7d6de47cd7cc88b86976670fc31a349f2b10085c9bf6b376d3f57978b98b1cc6f1b9f19c42ca093887358ded0e94111cc03f49fbce35f1153513cc5dde46ad626e05e4e390181ddf24f1faae34c23553b70ce8db7f85f5f34fc2f90132ef96eaba5bd6d3da614690e9983ca2861adf94950d20cbaffee2e04ed15f7ccfd264187f78ac2da3f81f7eb9ab836ab26a3221b168f8dd99715df76003acc146d003f0b852dced78b04efb41f58cb062fcbe9a77ed5cfe7b8e96a1d58bd58de10fdea359e85614fa176a869501126e6aed178d9c5ecb17eb17f70fb2a6e8ba4736aac4428e2a6e0de9788c4175673999878a247d2864ea562e20dba0eecb80fafc3d4151a7de96599ad1a153e96b2ff5b7e0522afeda5245de489bd5bfb80687527884090efb538ff2c5c4c727098e330a415ce885bb6de46e9f69c68ed6e23bc59bcfd218056877ec38eb215db7e4a535fc9c4fcbbb0b5d6da78fad4d37cc11753499bc90068bf2a32e4f19477b4a4278abd72e5bbbde2169b98557a310600be3345a2c5c0aaf12547a3269df413d05eab0c92d9c8f28bb614202e33f996c3de7c8a81b0578bf78e79577aa5bbfa34d690251222168b862e60f175cc",
                    "gender": {
                         "@valid_since": "2011-10-28",
                         "content": "male",
                         "display": "Male"
                    },
                    "images": [
                         {
                              "@valid_since": "2011-10-28",
                              "display": "http://graph.facebook.com/100000180565088/picture?type=large",
                              "thumbnail_token": "AE2861B242686E6ACBCD539D133B8AE59A9AE962DB1FA5AA7AF08DABDF6D09F91A6B8580C088EB6966858778176997563C4C47FBAE58CA16C28B7649464C5230A194C53304E778",
                              "url": "http://graph.facebook.com/100000180565088/picture?type=large"
                         }
                    ],
                    "names": [
                         {
                              "@valid_since": "2011-10-28",
                              "display": "Shrinivas Kannan",
                              "first": "Shrinivas",
                              "last": "Kannan"
                         }
                    ],
                    "user_ids": [
                         {
                              "@valid_since": "2011-10-28",
                              "content": "100000180565088@facebook",
                              "display": "100000180565088@facebook"
                         }
                    ]
               },
               {
                    "@match": 0.0,
                    "@search_pointer": "",
                    "addresses": [
                         {
                              "@valid_since": "2008-11-05",
                              "city": "Atlanta",
                              "country": "US",
                              "display": "Atlanta, Georgia",
                              "state": "GA"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@valid_since": "2011-01-15",
                              "city": "Burbank",
                              "country": "US",
                              "display": "Burbank, California",
                              "state": "CA"
                         },
                         {
                              "@type": "work",
                              "@valid_since": "2010-12-09",
                              "city": "Oklahoma City",
                              "country": "US",
                              "display": "Oklahoma City, Oklahoma",
                              "state": "OK"
                         },
                         {
                              "@type": "work",
                              "@valid_since": "2015-08-12",
                              "country": "US",
                              "display": "Washington, United States",
                              "state": "WA"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@type": "work",
                              "@valid_since": "2011-01-15",
                              "city": "Milpitas",
                              "country": "US",
                              "display": "Milpitas, California",
                              "state": "CA"
                         },
                         {
                              "@type": "work",
                              "@valid_since": "2015-08-12",
                              "city": "Houston",
                              "country": "US",
                              "display": "Houston, Texas",
                              "state": "TX"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@valid_since": "2011-01-15",
                              "apartment": "17",
                              "city": "Sunnyvale",
                              "country": "US",
                              "display": "180-17 Locksunart Way, Sunnyvale, California",
                              "house": "180",
                              "state": "CA",
                              "street": "Locksunart Way",
                              "zip_code": "94087"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@type": "work",
                              "@valid_since": "2012-07-12",
                              "city": "Farmington",
                              "country": "US",
                              "display": "Farmington, Michigan",
                              "state": "MI",
                              "zip_code": "48335"
                         },
                         {
                              "@type": "work",
                              "@valid_since": "2015-08-12",
                              "city": "Bangalore",
                              "country": "IN",
                              "display": "Bangalore, India"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@type": "work",
                              "@valid_since": "2015-08-12",
                              "city": "Chennai",
                              "country": "IN",
                              "display": "Chennai, India"
                         }
                    ],
                    "gender": {
                         "@valid_since": "2008-11-05",
                         "content": "male",
                         "display": "Male"
                    },
                    "images": [
                         {
                              "@last_seen": "2018-06-27",
                              "@valid_since": "2017-08-01",
                              "display": "https://media.licdn.com/mpr/mpr/shrinknp_400_400/p/1/000/0ff/22f/063ef70.jpg",
                              "thumbnail_token": "AE2861B20B7D6E22D4C9479C5C7387EF9C9CE823D35EABEA7AAFCEB4822D4BE6583BC7DC98D6B521019EC7212B29D21476031CB3F10DC74A8CC9774A4F1A133FEA99C63354B777BA491EA6BC81E3E3BABACAEE79",
                              "url": "https://media.licdn.com/mpr/mpr/shrinknp_400_400/p/1/000/0ff/22f/063ef70.jpg"
                         },
                         {
                              "@last_seen": "2017-03-04",
                              "@valid_since": "2016-01-09",
                              "display": "https://media.licdn.com/mpr/mpr/shrinknp_200_200/p/1/000/0ff/22f/063ef70.jpg",
                              "thumbnail_token": "AE2861B20B7D6E22D4C9479C5C7387EF9C9CE823D35EABEA7AAFCEB4822D4BE6583BC7DC98D6B5210198C7212B2FD21476031CB3F10DC74A8CC9774A4F1A133FEA99C63354B777BA491EA6BC81E3E3BABACAEE79",
                              "url": "https://media.licdn.com/mpr/mpr/shrinknp_200_200/p/1/000/0ff/22f/063ef70.jpg"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@valid_since": "2019-02-10",
                              "display": "https://media.licdn.com/dms/image/C4E03AQE1hxPgPttP8w/profile-displayphoto-shrink_200_200/0?e=1554940800&v=beta&t=rGUfCJItgEreM3IPoLmkuLDRaHT1RnvzCy18oDXtocY",
                              "thumbnail_token": "AE2861B20B7D6E22D4C9479C5C7387EF9C9CE823D35EABEA73B2CFB4863058AE4E7CF681B38DE8100FEFC6790C4D85742D0763BAA9128708CC9F784005054530B6D99C6148A128E5131BFBA8CFF5F9BDB5A8E97CF99A12DD7A9948B1D92730DCE1C4BB475D586211CCC892B90151753EF50274CEFDB4E423123CE1820094DDF66F11B3063A1BAA513E25BE694F70A4223655A507462DE04412BB890FE03EB38D8D8373FBD7",
                              "url": "https://media.licdn.com/dms/image/C4E03AQE1hxPgPttP8w/profile-displayphoto-shrink_200_200/0?e=1554940800&v=beta&t=rGUfCJItgEreM3IPoLmkuLDRaHT1RnvzCy18oDXtocY"
                         },
                         {
                              "@valid_since": "2012-12-02",
                              "display": "http://socialprofiles.zenfs.com/images/6162366953f48e32ea78c291ed00c755_192.jpg",
                              "thumbnail_token": "AE2861B242686E7ED6CF4A94512D99E99991EA68C31FBCA079B9CFB58C3254E6423ED4D293CEF4676F9CC522422BDB116A1507BABB0EC51FC2CE294F5211103CA199C06306E475D5564DE4F5CDF7F7F5BA84B228F4F014DB7885",
                              "url": "http://socialprofiles.zenfs.com/images/6162366953f48e32ea78c291ed00c755_192.jpg"
                         }
                    ],
                    "names": [
                         {
                              "@valid_since": "2000-01-01",
                              "display": "Srinivasan Kappalur Kannan",
                              "first": "Srinivasan",
                              "last": "Kannan",
                              "middle": "Kappalur"
                         },
                         {
                              "@valid_since": "2008-11-05",
                              "display": "Srinivasan K K.k.",
                              "first": "Srinivasan",
                              "last": "K.K.",
                              "middle": "K"
                         },
                         {
                              "@last_seen": "2018-06-27",
                              "@valid_since": "2010-12-09",
                              "display": "Srinivasan Vk",
                              "first": "Srinivasan",
                              "last": "Vk"
                         }
                    ],
                    "user_ids": [
                         {
                              "@last_seen": "2017-03-04",
                              "@valid_since": "2010-12-09",
                              "content": "7731475@linkedin",
                              "display": "7731475@linkedin"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@valid_since": "2011-01-15",
                              "content": "5/a12/335@linkedin",
                              "display": "5/a12/335@linkedin"
                         },
                         {
                              "@last_seen": "2017-03-04",
                              "@valid_since": "2010-12-09",
                              "content": "2/70a/297@linkedin",
                              "display": "2/70a/297@linkedin"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@valid_since": "2011-01-15",
                              "content": "17442905@linkedin",
                              "display": "17442905@linkedin"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@valid_since": "2011-01-15",
                              "content": "#335a125@linkedin",
                              "display": "#335a125@linkedin"
                         },
                         {
                              "@last_seen": "2017-03-04",
                              "@valid_since": "2010-12-09",
                              "content": "#29770a2@linkedin",
                              "display": "#29770a2@linkedin"
                         }
                    ],
                    "usernames": [
                         {
                              "@last_seen": "2018-06-27",
                              "@valid_since": "2015-08-12",
                              "content": "srinivasanvk",
                              "display": "srinivasanvk"
                         }
                    ]
               },
               {
                    "@match": 0.0,
                    "@search_pointer": "9709d33a40b728d97461bcf681e57e9382be027d6f3017816362a6714d885d2643733207a9efcfdebc465ac0349be4bae71679c8f3f57a26a07e345f3b18de14fa890488e70cf5ff1b765d1c7e9fa21998baf32003c040133fbecbf4dd4a888f70c5089c0cd37a62964d499f197a0a38c885d0e78836a4cc4756b18351a1d75291a6a3ea20a8d51d3ca9d43ef8bc495923022f33b872fa75b94001c2930296915a29886bdfc1f723f27a43b74b846b42cea1ec0cb25368effe3659cea192e49f9add8ec8edc69c9b824a288679b61a59ecea02d240007ef2837f9bef78bba3bcff0a89373775dc1b37d2d3bd2c85fb340a602b9c5ff19765ea4545dd212aa58480f181752373825cc7c12d925ba59ef649aa543352f1a6b0b8c2f553ad6fef085b3c8f91e4184bae87922f42461f72e33c268f4e011b719a69b9510d9382f05d6fa7c071997c3b75de9852324601d7805bc0ea9c9874729621f88519b918c65591cbbd89a7e7024f3bdf1e3d648b2dd9f1a35d7d9357f174f3d33657a0193a8793e6e6750229473bca1d258a5d1937a02edb53dffb726c688bcac0d2514535b1e795e174d5e79bf8efda4d405d63eb037ec2f15175bc703c4019b641010aa7ae727288cb314ae23ee3f7b08f0b61da7ba1b9a609e04a0b24be429a16b97b1dd34451d6844f07bc97212b14cfe9a02f53330486d463ea7f40ba2d95718f72c839afe66f3a53d3b93ee332f161437c7c395791904eb56bd225ea45676bd9e050406a82ca8c801abccb7ebfbcc76a3b0d8cbaa5dccc1dfb26a29f193f807ae73b17fa0574bf85c42a2f40647fdee83048ee35d000232a124538c310016b18a016584fadbcad158e56400faddef621966b90d1b87c65d8d52cecb7b9dd49534b6cba35251a11721595df452896809ae061e00c7d030c461eea34a5749081e4f051112698d33d4b4bf494e3cfb5b6f196ee749cfc3eae18c8ea14542be47d5dc452e8176a2149af8572476a2154fc1bc439cb57aea7baab0ae63bbe4604a126faa42752ac6e724175424b13b49dbdac91ff5dcd0c07839c55afe2778fc3dea5852da0cb5bc8ddedeeadea8670e94a4379f1c6ebfa9c8bf291af90045aceb0a4371ddbf0c5a6cc56ddd7ff0c05435c7c720a84a2be8006da1ac818ed2d898e0c787e09fce928236827d5d93326fbe94777146b7c93c4c3eb6a3f36741a315b7bd275919d1912c25ffc7658df2e12c8693b27e19e408e3d101ccce8a3651954397e78074fa29bbde57edead582cc3ea2a9a70c8cde3696017a9d2f2af786fb5aad75baddffe879ca5525a90ea4833ce2242082bd5f55cafbf5068c99b45deba9e73177c072e14aa6c0ba786dbdde7c9a6849ac816bd3109e64418252658d665af0961c2b9f39b3348974288e31090c870cbb95576e28613153037693fd154aa68b35d7a0177aa7065c94512b053e3203d64247c684b1d44d190bbeb2a0dfbba398b19cb5ffafb09ff6b977750fcb3a86ff5f9f31207ac46990a861ad213a459c6c3cf5030cb34f7e5dfd98498370a30872f87e7119430e78a6e19c84c84862f7f2b927152ae104e0e066e2c77a4431d7561d6569dfee820dc96f3135d2a2f1793231d31b4b8c29a3e0d12f7e628ddea2807139d0f71cc10024ef29b8f79933454cf684b80adf449164364b1ece680bbd716143298ed9b0ca230bb959cfa3ef3bf520353d2850843aaaef2b0736304905a44c7d12ee142208171ca1193f0758fcebe5d5e5cedf2ae917c6a1ec7537146ef1ec17e882490a37649d1f3f88fdb62a8a09f187d7174debec1895ac119f5026a1886bab5a1cdbce40b0cbf0467d28887b712afbbc868d9a84b767e20e5c84b3adbacac91dfc0a0af4fa04b7d2c3d9c4a21bdfb1b6efddcea8b369891199847cf72fe50dedf2c0def38a15c7eb6c7e0e74baa5cd2e9f90e70900d6c6b3540ff902cb561fc4864687ffa15457c8e95e3a667f6d499167629010289738c878cf0d96aab5c0750ab0acbe571bc002d8aa5a33a63758681b44513acef0afcf3be9b11c186512abb1e8aa5f1a7cc9fdc43131c1f98ebb6cb6617014b6b3cb24bbca09594897897320f759006aacef6213971f72d2cc257a4f2c9657df8c826674dc6cc557613ede2e32e47d2d6bbdd87b962267edb62a957de5d0eee7732a2fef120f6fd9e6c43ab52861d8b1096ec903d597788336f0ff63325d6891dcc2e32b275878c49cf76d60688a98ad5456a44a0f0965a72705641e6251b5248d79ff83a6e1d25a620d275d447776a717f6043b8c1d50d12dff3331493451a62265a677810736e3ba15bbfbe5c90bd7b7b34a28470a61d564577f0fd0a8e0b69f5a1cccee4d5d6a43e5a48c1006f965cbd5680cc10f7230a78476f2b5a164c1ca0cefacc0d6352933c0f7c95745bc5e4838f29a1fe48a0e835cab19b59df9778754ebad860938021e1aee59bdb72f6169edb9c1ae6c39d21b520ced934ab5fc2a3bdbe597b0fba561c3c7bdf99a06c9e917f92010fdbee08ce2eba2d3640c48d9e66e4317257f0f94da5dde4c2379f77e33fe6a87465b8f6b6904e4a8a7f0b9c9db82c090a3d2d46a2abdd129692b6319f579dab43262eb22ddb37349b6c625d0232137adabd2c06fc0e837a8863d96617cba27c6cfee071a5664facfae6a32c64e7c220362387d4a187613359398bd9b374c6a0a3b9c3fea52058a17730ed18a1b2a4dc6ead1c274927107332133427bf2d6bad8292e4741cffb524ab4fe92a25aaa8dd10dc985e6241291f665c9111f410a9c984d4682fae49b0a998ee827b048be3cee0de9c71f9fac6af806e1767f7180e146c4d059dbd6a14993beca9e24937924abd042a989e3870d219072b423e0d4f0c42302a47aa9771e7afed1870952b44ae42013052ef0138f89b3308b158618e07d5dd5caf511b8c497b617053addc42528b0e95a8e2310023ed30888d85bab027d77ec34e0e73d40a3fb879d403b0973c123efdbba9f41c114b5755093f8d5c84c6baaceebf9d0ec0da88b9a5b8bf623e48ac05b2ea019708c1da8b6f8a373b16b2e6d447e04c2ca5c234b734d8525367235fd0aa440774968759a194b0d41bd46330c441e0c7e46bb52cf96eb11e63e3b6bb653858a62e8ebdf6ab198c9a1af972ca4534b5f9505923e6624efdcd6840973db14cc4da775e3074536c13efc781f99e68a238989119fd60401a05e1f87b502ba947f8ea8930799a0ea8f300b9a95eb5b174b8d7da20b2f047a74edab928e86045e14264fbace1a8c5e1a3ff5d83ee70a8f2f9508a1d963b9044975472da5e6b9072277a0cbd8dcd37ffeeb8243fd370d7889eb5fbdf5d0783aa2cef7d720973fb32c000d380f582af309f26e4c51c4d3d6e0974a53f6a88927f4c734ad0e2f6775faaf29756c50297663cd781a93b3c968cd3b237359072740f3ba3a5da8f0896d12c951ab2c863e73f864fa968a3076fc0178363361adafe044965a5ae529c68af5437600ff97741459054c2482b6e884c5228d7eb995d91282b2473ff9c8cbed2d07227543e12717fffc24d4538a5c6dec09cef39de8bf7369c4d4ad05bb6d643ee83a7a23222b634a76fd5ca214ebbd618c7c3f11b04a17e6b660d40025f44f68db7c01ddfc763f37ec6410b6164229a594d82bdc0a920ff44565547dc49f758764ccb3b5a69f38532ae37937672722302",
                    "addresses": [
                         {
                              "@valid_since": "2009-09-13",
                              "city": "Cupertino",
                              "country": "US",
                              "display": "20990 Valley Green Drive, Cupertino, California",
                              "house": "20990",
                              "state": "CA",
                              "street": "Valley Green Drive",
                              "zip_code": "95014"
                         },
                         {
                              "@valid_since": "2008-01-01",
                              "apartment": "74",
                              "city": "Cupertino",
                              "country": "US",
                              "display": "7375-74 Rollingdell Drive, Cupertino, California",
                              "house": "7375",
                              "state": "CA",
                              "street": "Rollingdell Drive",
                              "zip_code": "95014"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@valid_since": "2014-01-01",
                              "city": "Fremont",
                              "country": "US",
                              "display": "46855 Shale Common, Fremont, California",
                              "house": "46855",
                              "state": "CA",
                              "street": "Shale Common",
                              "zip_code": "94539"
                         },
                         {
                              "@valid_since": "2010-11-20",
                              "city": "San Francisco",
                              "country": "US",
                              "display": "San Francisco, California",
                              "state": "CA"
                         },
                         {
                              "city": "Fremont",
                              "country": "US",
                              "display": "4875 Mowry Avenue, Fremont, California",
                              "house": "4875",
                              "state": "CA",
                              "street": "Mowry Avenue",
                              "zip_code": "94538"
                         },
                         {
                              "@last_seen": "2017-06-15",
                              "@valid_since": "2007-05-28",
                              "apartment": "7AE",
                              "city": "Cleveland",
                              "country": "US",
                              "display": "1701-7AE E 12th Street, Cleveland, Ohio",
                              "house": "1701",
                              "state": "OH",
                              "street": "E 12Th Street",
                              "zip_code": "44114"
                         },
                         {
                              "apartment": "247",
                              "city": "Beaverton",
                              "country": "US",
                              "display": "2442-247 Nw Schmidt Way, Beaverton, Oregon",
                              "house": "2442",
                              "state": "OR",
                              "street": "NW Schmidt Way",
                              "zip_code": "97006"
                         },
                         {
                              "@last_seen": "2017-06-18",
                              "@valid_since": "2009-09-13",
                              "city": "Cleveland",
                              "country": "US",
                              "display": "1700 E 13th Street, Cleveland, Ohio",
                              "house": "1700",
                              "state": "OH",
                              "street": "E 13Th Street",
                              "zip_code": "44114"
                         },
                         {
                              "@last_seen": "2017-04-06",
                              "@valid_since": "2017-04-06",
                              "country": "IN",
                              "display": "India"
                         }
                    ],
                    "gender": {
                         "@valid_since": "2007-05-28",
                         "content": "male",
                         "display": "Male"
                    },
                    "images": [
                         {
                              "@last_seen": "2017-09-20",
                              "@valid_since": "2010-06-06",
                              "display": "http://graph.facebook.com/596453924/picture?type=large",
                              "thumbnail_token": "AE2861B242686E6ACBCD539D133B8AE59A9AE962DB1FA5AA7AF089A2D9690CFA1261819A86D4B8252BD8922E00649241641F52F0B958D11ED09075115311196AF5",
                              "url": "http://graph.facebook.com/596453924/picture?type=large"
                         },
                         {
                              "@valid_since": "2013-09-15",
                              "display": "http://lh4.googleusercontent.com/-yk5juzgLFEs/AAAAAAAAAAI/AAAAAAAADVo/XtnyuLytZ4U/photo.jpg",
                              "thumbnail_token": "AE2861B242686E61D1980D9252328CEA9A8DF568C252A9AB63BAD2EFC13E56A4047ECCDEC3D7AE2B39E6B1540732A365183272C39F7CB63BEAD6506D2169601884E8B4565EFE18FE090DA397DEF3CAE78BD8AB24A6B14FC320C61FA8D869688DE9C5B2455F54",
                              "url": "http://lh4.googleusercontent.com/-yk5juzgLFEs/AAAAAAAAAAI/AAAAAAAADVo/XtnyuLytZ4U/photo.jpg"
                         },
                         {
                              "@valid_since": "2012-10-01",
                              "display": "http://avatars.zenfs.com/users/1FyN1wmHcAAECAIJHXIlwQYAA.large.png",
                              "thumbnail_token": "AE2861B242686E6CCFCD57944F2EC5FC9A96E07E9E52A9A838AACFFE9D2E16F86D2AFB8481D093321FEBB2523554A86C013A5FF58F64B63B8D95705E074D0F29ABCED66442B824B75240E0E994",
                              "url": "http://avatars.zenfs.com/users/1FyN1wmHcAAECAIJHXIlwQYAA.large.png"
                         }
                    ],
                    "languages": [
                         {
                              "@inferred": true,
                              "display": "en_US",
                              "language": "en",
                              "region": "US"
                         }
                    ],
                    "names": [
                         {
                              "@last_seen": "2019-02-10",
                              "@valid_since": "2007-05-28",
                              "display": "Kannan Srinivasan",
                              "first": "Kannan",
                              "last": "Srinivasan"
                         },
                         {
                              "@valid_since": "2008-01-01",
                              "display": "Srinivasan Kannan",
                              "first": "Srinivasan",
                              "last": "Kannan",
                              "prefix": "Ms"
                         }
                    ],
                    "origin_countries": [
                         {
                              "country": "IN",
                              "display": "India"
                         }
                    ],
                    "phones": [
                         {
                              "@valid_since": "2009-09-13",
                              "country_code": 1,
                              "display": "216-861-9949",
                              "display_international": "+1 216-861-9949",
                              "number": 2168619949
                         },
                         {
                              "@valid_since": "2008-01-01",
                              "country_code": 1,
                              "display": "408-446-1014",
                              "display_international": "+1 408-446-1014",
                              "number": 4084461014
                         }
                    ],
                    "relationships": [
                         {
                              "@type": "other",
                              "@valid_since": "2010-04-30",
                              "names": [
                                   {
                                        "@valid_since": "2010-04-30",
                                        "display": "Biranchi Kar (biranchik)",
                                        "first": "Biranchi",
                                        "last": "Kar"
                                   }
                              ]
                         },
                         {
                              "@subtype": "Follower",
                              "@type": "other",
                              "@valid_since": "2012-07-01",
                              "names": [
                                   {
                                        "@valid_since": "2012-07-01",
                                        "display": "Peter Prakash",
                                        "first": "Peter",
                                        "last": "Prakash"
                                   }
                              ]
                         }
                    ],
                    "user_ids": [
                         {
                              "@last_seen": "2017-09-20",
                              "@valid_since": "2010-06-06",
                              "content": "596453924@facebook",
                              "display": "596453924@facebook"
                         },
                         {
                              "@valid_since": "2012-10-18",
                              "content": "49951573@N00@flickr",
                              "display": "49951573@N00@flickr"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@valid_since": "2010-11-20",
                              "content": "1892723@linkedin",
                              "display": "1892723@linkedin"
                         },
                         {
                              "@valid_since": "2012-10-08",
                              "content": "100370837718409462074@google",
                              "display": "100370837718409462074@google"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@valid_since": "2010-11-20",
                              "content": "0/773/3ab@linkedin",
                              "display": "0/773/3ab@linkedin"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@valid_since": "2010-11-20",
                              "content": "#3ab773@linkedin",
                              "display": "#3ab773@linkedin"
                         }
                    ],
                    "usernames": [
                         {
                              "@valid_since": "2011-06-24",
                              "content": "kannan.sri",
                              "display": "kannan.sri"
                         },
                         {
                              "@valid_since": "2010-04-30",
                              "content": "sricann",
                              "display": "sricann"
                         }
                    ]
               },
               {
                    "@match": 0.0,
                    "@search_pointer": "f006505a18d61c65c6a892fc12098501dab259a58b0828b0ed6b3f1e333b8b41d7ae56fe9a771336fef365ab6716ef9ebf574138f3c1d850ada4c6c3bee97a31619e6a04bd4f4957b282a93196624e8325f2b76bb6f5cbfa3dc181ce39369353a8aef4fca491be6c6b3424f8459ce3bf56722a43d2a1f5cb5829d26047ac91008038325ed684f684dff2d81e1489a11b254d43b3884293e09841b239be6c4357c7e8802345498352b53e924653b20dbf96001359f0e1c6c969796765316c93edd7beb5e6c1bcd169f77dd83de836b14ff9385b50426cff06f677c6891a01d296f6e047a6b285be9a1b5aeea12092e380b19730bc7a28af9afbcca66de35ad623f88896cab4b709ac4c2342beb23bd0981906c30a0261405ccc30f19df3f0c2e12d9a6787168d2fef8685eae455886fae883810e7bc9bd5d8a60bb6fe8dd1210ccd5cbb9d2c9740a693449c65db6e04d919bca10f41bc4b889d5b1603aa2e8e71639aa41ed7f0138dcc6d950d3b68c3fda5a1cd541b18ce8c03e1e4fd6eb2a6c36c1bcee55b822141d48d5fa8ef5f4133c25bb9be3c625f9d755adcf834641922da5aa13f7194de52633a6a27b7b8818c73795c64d2fdbccfaf8aef96c4adc3e9bce72f02916703f7d1e48a4828423b92d6bfd4195f24a6f7e223c3426a2e9577afb494f59caa71b487fa6d8aa3188b304c6f8b8b9c8d84bc6d163cc25c61092101db6a66b5cf2527256399d9bc4f54f7007d45d7d9d5694975578659fda29eba8b12d09cc5e0a133e96aa62fa383b76f3b2dd77310c19071aecb7bd9357f19421decd1694a15f1a273910bce172464325e07794ed2795c4b77da8035ea317349356511f006f2f1e8671a98324a44e8b6aa4420facb2979b489b16cd4dbbaaf0bed0113d072464e45b146adb72007aa0fcbd3d3822b017be4a69010ee717ea4c62327db90fd5f75fb92f5461bf2111b78eee0d98dfda458c777b7e5b9ceba07aa1398a4b7a856484cbbf432ba85b6874b6ee24962a94e5eb9b0c58ab11ec7feffd97f5c9402f5d1bb936d0e1990e72e0781c174cf8c6562085398cbb0c1f036113f12047630249ffe66f24e5ae37561b1edeaf4624528d28c4de032cc6687ac6937a6453326b63e221ed5bed05e8b67e6cf83549205b491ec5b5d04960dea56fb7445c0300643ac593648c89339dea3c0f1a614c797c94ea3857aac28e1b2dad3482779f6f303a39d67bb5a8d25a663d12de0eda0ec4d9d407c9aac54a497dd7755036d524c28faae0fe8bdc548ec89f822ee86e615d2600f6d4c4cf2d14d1ac32078fd7f7f1cf724e3cc17afa6418fdfa1f9f38083988014aa48427df2c053fc680baee761bcff7bdea3607fccb265e94d599b8d11167f9a4222c9d897c0f39ddcc80bfc2638e63d23abeada63901d971b83202a01cd9276c46a1a12cfa561690fbef6c1c456893c955e688200acc4ccc9547544621e8e7eee97206b83d00e13be9c2aa174474d4f12c5d2a14ab787cbebd9b7adbbeae5130afd01fa907745d3855cd1bcf2c430e8c2af724c9c4ed06c92a8ca65b2812a7371883686688d532511c4b75e4d512f5b62012878c632872e8901a9d3bf07a28ec61e0441f853b2a8f39bbd013c8acb9744806d86467fe2f455390113616c800d1cdd41163976fec55582364f0975faee4d71165bbea559176149072063233d469ccb826ece647ecc71500efd275f7ea5cf2b854eff9b456b36d731da37d65d0f9db4e693292eb0d2e369a8e673888d417b80dc986126b1d5a9fc8cde31a498c75d39b1d3de294c473ac5db8afcd7c56253dc4274ef3b5980a4594d2d2c06892da7eb63bd68ab96559153b7d095f08747f38deace7682ae4b65763fed003ff4c847df0af20fadc32ae56e2d0fe4d2a162edbc4a2b6d5792043c58f0388224b1e589a7eeb6a12bf716d4a513816d4c08610b7fd74bda4a43a0e2ac05d722a1202aa43d3a606cdc909e6885fff3f5579ca7d4eeebe93672e79f899a27b2a5f75d8f8cbf2b6ee4a7eb2de5ce105b36c89d4a60a2bd205fa16d5329cb9c958845de4d26edc6b41e77a46d9298b41cab49b7d812af4671680b5363f25b07b40b7b561cdc027b285789ee42e965163a1cbd560b12758a151149635de0e4268f6154b11a4a3817501a757d0a98567bdc00a2db5a7f037c43e841b610a990fb13aae958b87e81019a7b54e884a05c31cd2671288fba306f217cdf30311626041b35a1c074b65cb5062af1252744d06f8f6ca81a7ae68472d71a0ecf61f1ca2025ae7626f22426732282384ea37a1e0b559f0be4a0718686d5d864f447cde335aa30ccc2d0aa0a759978bf288e01c82a316320d42f2ecb0a7a574d8dc4f8ec4463d133f12ff9d0fab5ab16ac2cb7e78a063817533e44a053f21ec27980f5a7eb681454171fdea00cf6c2003efa4d1702946cd6bf5fe8d3ff3804f1bf6e126a04f6521c4f4302c78ed4ce119dfbc1bae01ecf0040d7aae9a0f4f9b9b6cf01b909be4562ab605c3cf13003cbb610685156ef9f21f1b6c7e81ff64f809f9e84a6e8cecf1c7c7f5013747f5800b480925525bd1a7404d5a5a456bb98f64a1ad46f958187415fa055380abe92ccb9b735fb6def8bc50320bbdb5eab4cd9ba1331c1b2fd5b427470fa5b787f0d19d5f942cb5b1aaabfe2c5cc72893e5c4dec2c376e1203da551c0edb5fad0d57d58eb96bae3791b50f80ed91991014e73e29387aa0a1985f0e628e65dc3abc89b4e03171d90171af52dc3b8fcf7c19b14376a23682fc6986a926a78c645875d3c334ef07b68ce1561244ded87fb876990082b9fb5ff4cdcbf152dba21bcf1e9b80190984eb6595e13c5ccaa328eb847bbe67ddfad20dac0022d4ddca179c8bfbbff63d",
                    "addresses": [
                         {
                              "@last_seen": "2018-11-25",
                              "@valid_since": "2013-01-19",
                              "city": "Ahmedabad",
                              "country": "IN",
                              "display": "Ahmedabad, India"
                         },
                         {
                              "@last_seen": "2018-11-25",
                              "@valid_since": "2014-05-15",
                              "city": "Mumbai",
                              "country": "IN",
                              "display": "Mumbai, India"
                         }
                    ],
                    "dob": {
                         "@last_seen": "2017-10-17",
                         "@valid_since": "2017-10-17",
                         "date_range": {
                              "end": "1984-08-28",
                              "start": "1984-08-28"
                         },
                         "display": "35 years old"
                    },
                    "gender": {
                         "@valid_since": "2010-10-19",
                         "content": "male",
                         "display": "Male"
                    },
                    "images": [
                         {
                              "@last_seen": "2018-07-28",
                              "@valid_since": "2009-07-16",
                              "display": "http://graph.facebook.com/745165086/picture?type=large",
                              "thumbnail_token": "AE2861B242686E6ACBCD539D133B8AE59A9AE962DB1FA5AA7AF08BAFDA6C0FFC1B6B839A86D4B8252BD8922E00649241641F52F0B958D11ED09075115311196AF5",
                              "url": "http://graph.facebook.com/745165086/picture?type=large"
                         }
                    ],
                    "languages": [
                         {
                              "display": "en_US",
                              "language": "en",
                              "region": "US"
                         }
                    ],
                    "names": [
                         {
                              "@last_seen": "2018-11-25",
                              "@valid_since": "2009-07-16",
                              "display": "Srinivasan Kannan",
                              "first": "Srinivasan",
                              "last": "Kannan"
                         }
                    ],
                    "origin_countries": [
                         {
                              "country": "IN",
                              "display": "India"
                         }
                    ],
                    "relationships": [
                         {
                              "@type": "other",
                              "@valid_since": "2009-07-16",
                              "names": [
                                   {
                                        "@valid_since": "2009-07-16",
                                        "display": "Aanjaney Nath",
                                        "first": "Aanjaney",
                                        "last": "Nath"
                                   }
                              ]
                         },
                         {
                              "@type": "other",
                              "@valid_since": "2009-07-16",
                              "names": [
                                   {
                                        "@valid_since": "2009-07-16",
                                        "display": "Rishabh Jain",
                                        "first": "Rishabh",
                                        "last": "Jain"
                                   }
                              ]
                         }
                    ],
                    "user_ids": [
                         {
                              "@last_seen": "2018-07-28",
                              "@valid_since": "2009-07-16",
                              "content": "745165086@facebook",
                              "display": "745165086@facebook"
                         },
                         {
                              "@last_seen": "2018-11-25",
                              "@valid_since": "2013-01-19",
                              "content": "53204000@linkedin",
                              "display": "53204000@linkedin"
                         },
                         {
                              "@last_seen": "2018-11-25",
                              "@valid_since": "2013-01-19",
                              "content": "15/999/428@linkedin",
                              "display": "15/999/428@linkedin"
                         },
                         {
                              "@last_seen": "2018-11-25",
                              "@valid_since": "2013-01-19",
                              "content": "#42899915@linkedin",
                              "display": "#42899915@linkedin"
                         }
                    ],
                    "usernames": [
                         {
                              "@valid_since": "2014-01-01",
                              "content": "srinivasan.kannan.100",
                              "display": "srinivasan.kannan.100"
                         }
                    ]
               },
               {
                    "@match": 0.0,
                    "@search_pointer": "f9082fe53ebb40a6dd0cf2b7af12d997b50fa27caa56b380dd194f9cd17c77f10a75ca57b96ad9b98fbe8aa45ee28ac10b5885ee3804cace61ec8c3575138e4e680b05a22c2939b6910f715d66cd32e0858938103fac9546a6b7d349d6171c160aaa64066adb3fd41f3c68da2b4057416af626042c2796da08c460e3a13141b69df4b6a2d12971b9dfd118542b326123cb4b8fdaf42d0d7f3e0ff08514d10a5a421a5ff35a2c116bb914814abb3aced71e4273a36db6c46cbfaf5dfef4df3bdb8b90b6898a4b1cc8081fb50788398325b6135f3d75733bdd333d2137e50d80bd8a48da1761c2067329dff6f8ea0e0fe69841730883116b8cff528f099c77a5374682eaf383361c1e8a66816a3b5f26dee5f10e0e8eb226065e007edc995826afacdc5ed33db78fbc46fbf8288a814105be2953a9e0040cf408ec42da52d09262d2ac1d6595e07b842622c374b60e0c70c67ddab76b38d102fbac1d4a76fefc7704c43a8a040eae0559b48f9b4bcfeb35ab6e1df32b22c84b7b384b29a265b065ec087bc3466a56822ed51c98725fb3df20440ff23ec6e1b8e50764941bfe3d6cd8bd4518be97be8d47d526f54256bdbdbc48257888507acc0311078c78b78e247e334a81dc1240a9124528ce00dc8d17d6aef6266bcb61b3ed19009c003c3126f24b742990cfd2fefa34053227eafaf7bed153bbe5d1a0f86ff18633be2fd37e11dd2268e28cf4fbd3aaa015a2dc1279d5d8f86d7978e5d940fb2c072fbb641fb553c5572575d5c3c3ddba5bbce1b9ef07c04f25052d616299ec76c5492fb77ba011af36bdfa2be2c18c354aae6b9d2f1f04ab81d14feafb507bb31975739af32a8d8d986ff1e2a22e051558f2b365023bbce21dfe3df9741ae3993346cc955d22347224b4785f5e18f2229d47a66bfaccf8311952d4a1227e881c2050b8f4f9b4ed17fa2b20a02fb48ee558d50861cde8d9f46c599f403a67c6ddd9479608fa88e53ddb7c78074e8f45800b1a54e7fadeb6f7404fc1d422824f6c45535a203d0b20c9128142343a412ede30a34889032bc09f8277fbc4c7fbc02e3878f903993154ea4bce1e7e3f011ebd47724c1dd5a441ca655c3657aa22705c064d91cd1732656467e684a610b8b871b8b89ebf558b006c7e3d9f0c1e1d57e0a8708ce92311df6f41498611b3637aeead1605edbc699b78ef839bd6037e77df7dcbe350e87c56cb8009041e1a5f3d7cf0b910165d5f47abcf0e1ce51ff2c8b0d2cb69b02b25144b9be85743fd83de081afade961ccf94a42616cd594e86a9502696b16f931f77d8d865b702c79173b11f61778d276a36dbc3c2aacc3a787fc396b0c7a861b774cbb4521b1b4f24b2a9932a9c594674b25f13d1d3262c9c1a3e10a357b8d1b6cffb892fd648e72655182613d734574b872caeabb7fab276da217fb8f3059a41d77464d062b421b49808b5ca951051837d85dbf625c3cf851de47bca1450f361085c4a71cf819697f41ec4976ddce7cf788067d484e64f561fc707cd73c5f63ae9b8d8e393c3ecfbce743ed7f99cfc017845d8d8668254ca517fc38e653f1c76cdefcb49a3522b97e1f986eeb7bc1177d5062e35cd50ca089beba620e880e495b652d91a258caa8a41d9bbdfad7a4044bdced112fd2cd411ae42722bade2dd6cfcc9d369b3cbb835fd762786f3e7b7b80c233c3ce976aacf8e781404dfa7a9ef1de56e1f50b7568e1c408f5a92d0ef70464cba74c9a4ffea670cf478bfc90a1b4877bcd924244a8238828846b0a685261b1bb1e502dc05846ac8ae2dbf5af3ec5be5cc6899afb0bf4a31f53926fed1bd4e9a03907dbbcef37fe08478e5034d1e58023f13f825d4c0e5c0fd5f0a8df9b4f8a54db86f6041a56cdbcdb0837c2284c692ac6716e2f996f13f95c9c89dd55bd66033920ae871f5bace38b5d641e36037a22cda505baf5a0c065a3d00fea2bb9c6693de056553277831a1c2db7f8048a0f313bc8f513b9efa8fa45ca8d4b918017d59920ac75b230d3117975433c640fe26882db3f199d83801a27773e36ef1065507d13e07dee776022a847df3d42e4cfd2d32da78d97ee6b9ea329507b2639690e3109b98b1cd750f3dbdf115f925ad6ef032ebd27864ae9921462ab68b25603c9fe182cfd556068bd2156cbe00e3bd0c51f13cc1127e9ed8c59f19d68caafb7f1cc48ca3c77aab108060b3f733a9b57348d008571b5f172c394284b0530ad58187ebe1c3ed596bba69aadc679eb70474fccd0a2d55ab9d04c0d12518760eaf4dea471dbc20455af6be1e85d3b825320c8a20d58218c6f3ecff71f9f9e081ff1491314ec3d748a3462579472c668ec7db80489146e24ab457a7ed1fcf226dcc233b21473f0563a210efc785f55b875605758b19db45c55cf832c6942f1376175a870a4de32956b093bde5b613f1bdce5e9317076e6f85ac88cf827a79256025f07c005d66858ce3bebdb20b2a9895ab202827e292a03b192bad5c9cabb90f03f5c4e4e301e3eb540d2fe76789c605eaa3114565ddd0376c93a4f8f988a9fafc973bb9c704b6532f6a451973c3684674ec74e4f4967c3cc4cad8aa103b40e214af461ecc23575a617518f0351be06739aac821739fd82f2c1ce7ab2019e4ad91865beade95ae3a8ee07eeacc32035eaacbbbb79a6f61f72ef15d440468876a38cb5d2f49d46d227ddcee8b0efd82bb41356411a3a84415248055466933656543f10279f7c1319cc0b3e73b378c73288989b50aaf9e0ef3d629a6652846ea56e3a41d7a99119ef8b0471fb3bd8d40278ed173569d0ea07b575e4703812e8c3aecefcc81c5669406d28a176051b790c7fa3f9e7aa23f28e5f02830c8bf4dc755fd73e4f64907d9670b50b35ea41c2e85f8dcb0600ed0044fbf35e2f1318f640cc2a891c1dc0636c4522f109e96d0f3ec2191d3ec7b09b82634cced812bfa8afd4c21976ed2480abfa6bdc94fb20d6a51a50166a826899e7324b6d18570d47abcd7f767ce84f20270263f7b048e0910689f837eef085de832e6ffd6c2f06c4fe4a16e2f6dfbe0e3468ac21f89511915452771a3f67b0c9097d15d3db2683653ae5085573e86cf8f0d2bb87531c00c52004233a1ab57f7e3dbabb887e8114ea7a91b01e3157b1facf1f8959618d81f53974b8c4fd31aa3c41eebe3ac4d72bdf7ea58f7ffbf0a8a5f1fe56c49e8788923c24c07c985cf90db733c2a826ae5bea0",
                    "addresses": [
                         {
                              "@last_seen": "2018-11-28",
                              "@valid_since": "2013-01-17",
                              "city": "Bangalore",
                              "country": "IN",
                              "display": "Bangalore, India"
                         },
                         {
                              "@last_seen": "2018-11-28",
                              "@valid_since": "2014-01-01",
                              "city": "Singapore",
                              "country": "SG",
                              "display": "Singapore, Singapore"
                         }
                    ],
                    "dob": {
                         "@last_seen": "2017-09-23",
                         "@valid_since": "2017-09-23",
                         "date_range": {
                              "end": "1978-12-31",
                              "start": "1978-01-01"
                         },
                         "display": "41 years old"
                    },
                    "gender": {
                         "@valid_since": "2010-10-19",
                         "content": "male",
                         "display": "Male"
                    },
                    "images": [
                         {
                              "@last_seen": "2017-10-05",
                              "@valid_since": "2010-07-14",
                              "display": "http://graph.facebook.com/1109157976/picture?type=large",
                              "thumbnail_token": "AE2861B242686E6ACBCD539D133B8AE59A9AE962DB1FA5AA7AF08DAADF6408FC1C6A8283D9CDB2322ADF85744B699B543C4E5FE3AC5A925CC78A78485D1B1861F699",
                              "url": "http://graph.facebook.com/1109157976/picture?type=large"
                         },
                         {
                              "@last_seen": "2018-07-23",
                              "@valid_since": "2018-07-23",
                              "display": "https://media.licdn.com/dms/image/C5603AQGG83_815pSvQ/profile-displayphoto-shrink_200_200/0?e=1538006400&v=beta&t=wm-B2pcQZgmqRLL_TZxoudwW9drp1-AtM-Z4LoPP0ME",
                              "thumbnail_token": "AE2861B20B7D6E22D4C9479C5C7387EF9C9CE823D35EABEA73B2CFB4863058AE4E7CF680C08DE8100FEDB0294742DA156C0360F48F128708CC9F784005054530B6D99C6148A128E5131BFBA8CFF5F9BDB5A8E97CF99A12DD7A9948B1D92730DCE7C8B2435B546211CCC892B90151753EF50271E4859095193819DCA01F80C2896A1E88102F1FAA790D20E6456931C761015BAB532D21C36F1A9FD621FC3EB38D8D8373FBD7",
                              "url": "https://media.licdn.com/dms/image/C5603AQGG83_815pSvQ/profile-displayphoto-shrink_200_200/0?e=1538006400&v=beta&t=wm-B2pcQZgmqRLL_TZxoudwW9drp1-AtM-Z4LoPP0ME"
                         }
                    ],
                    "languages": [
                         {
                              "display": "en_US",
                              "language": "en",
                              "region": "US"
                         }
                    ],
                    "names": [
                         {
                              "@valid_since": "2010-07-14",
                              "display": "Srinivasan Kannan",
                              "first": "Srinivasan",
                              "last": "Kannan"
                         },
                         {
                              "@valid_since": "2016-07-23",
                              "display": "Srinivas Kannan",
                              "first": "Srinivas",
                              "last": "Kannan"
                         }
                    ],
                    "origin_countries": [
                         {
                              "country": "IN",
                              "display": "India"
                         }
                    ],
                    "user_ids": [
                         {
                              "@last_seen": "2018-11-28",
                              "@valid_since": "2012-10-13",
                              "content": "36389196@linkedin",
                              "display": "36389196@linkedin"
                         },
                         {
                              "@last_seen": "2017-10-05",
                              "@valid_since": "2010-07-14",
                              "content": "1109157976@facebook",
                              "display": "1109157976@facebook"
                         },
                         {
                              "@last_seen": "2018-11-28",
                              "@valid_since": "2012-10-13",
                              "content": "10/22a/690@linkedin",
                              "display": "10/22a/690@linkedin"
                         },
                         {
                              "@last_seen": "2018-11-28",
                              "@valid_since": "2012-10-13",
                              "content": "#69022a10@linkedin",
                              "display": "#69022a10@linkedin"
                         }
                    ],
                    "usernames": [
                         {
                              "@valid_since": "2014-01-01",
                              "content": "srinivasan.kannan.395",
                              "display": "srinivasan.kannan.395"
                         }
                    ]
               },
               {
                    "@match": 0.0,
                    "@search_pointer": "054fd437e4f9bc9db7270c821b4f9d7f8edc99cf8a8dc964221213b8f95fab5801ee0a02708f0b5b1aecee05c199a4600a1c2ed1685301182499f01bd9af32f59f27550f534d3a52f94ebfd0fef1f0cd3be133ff84624e500ce605faf41b5cf44b7f14bc62b9c6083167643e3b6f22f08388a2e463979b3188958563191b284dc68cffc6e45a6daa8bd83fc4ecc0aab153dc02617440fbdfe8a23bb332743ad4bcecfc822688631dd6239b5760411f447dad86fc807d39d474ca1301f01add94c0e2c342680cfa76855ed05d597dac3794d543171d88c59f9fee61b1c1d48491614932d8814af224c902c00a55c68c59b92b58238082ef0005306ec67de72ae93368e824fc6e4e4d39d863a80d14b53c5a63d2572f798347e914815be0d4c65e74b6384e36a30219286d52f9bc0d6b3867e868f4ff5c9866f91d64bde86bde6a6688e94fecc9d39f14a0ff2f7db4d8b22bd2866c9d55da46f30f39cd25c3d27f7d83b0d4e830abb44b293fcb88b1ab5249441e2bd0ee01d8a9324c5e40b2b9280e40653b3c48a2678cd62f89c28b86ea69d23e9e89874f804317dbfd47f66e13d70ae5b402bc8f9c12689e7575f0e2e1b73f4fa3ccb4b8a690a8b543c6f9025c5e914ca4326b7f109ad7334eceb673df1f4936f5edea63382f39866f8f48191f0f3adf0f76781b7ba534bde5b3cf4162a0f6501f4fd11644b4021a128744def3b3d4db23645aabf24a68e04c9f60cb5bd51f083fae79852bbade81e26ae0c274d4a6f4f48e195078e90e80d4f6ac12232dcde08996136633dce1215bf071eae2379fb0bf6075c56dff175535a65977d2af0c6383f4b881eef0da1996444526a33506561a6aa5c6f363664649916e9e34e424ed647eb290130d4ab8ae2477f8c5dd88078dff75d11f81add2f801a4c508dd35c59b6f8ba9ed734e85e84490966d4220f861c7b323220414202b0ddea29f77ebcf5364f68eafe40aa53a29e28d3d9c808e60c23fc0a307d735326746a5089ccf723925f0cab1cd279f8639327a7a96515440457e0d7d68e750f72ffcdecf5437cb7fb5e4b30d18aed5d70cc45f87baf1e53841f7a2cf35016a1c525d9874bbc87cdb7df9159cbcda22d55673dac4595b58f82cb2662e9cbcde2d1b7e8638805fc9db7b610eeca67513a52dfbb362fa668d9c22c4d81ae9909da3187e51af60a3c0e4500791b7179fdaf9ba0b234f42fa4e10a1bcbf69cb72742aa4f52d0a67594196e8227807246a031608dcabce73e9b5e498b7c998b6ee5e9e7d4e93d5d3f545083b03100b33ca5c07f2378867aec53e5d5044eac50ed5d2d94b0bfe93d02bee66ef4af93eb4ca216d5b53492da2428d45be7de1a87942e2618660e4dba39e6c5a87fb0e1326d2a07e9cd8fcd98fc7ca19a1d3d2c2c3f40e3129dd4c67d19c6cecf258e08d5d45a0264c915fff0b4a51532d344e7cddbacbd889fcfed746141ccc0747c5749a49e87923adf7103e506728339a35396174c96c3561ec268f7b4da9d1262b37cf563f41f739ec28371ad6c2363f5ea229c87596c5df6e631b151c5f8265246e1fb924f09b3e12622ea139ffdd30f808314ba3f799ea8a708d3a12b6ac49490a52367a5a0028542ebf66016d15b77be35d50a510b423e127047c61e69c637648c6fc08b75a62ba9e5aacdd436f781252b7c82b0b806ca066c00cd3bd3cf0aec87cfa07b814fa7606324b0a98b09cd1017d2c8321ccc077b6481a5905fc1d546f1f9d5a0ca4ca14503eb4d8f84c8030cf32a5d1d81bb7882e92eb4b4b7c265dc4534f62562582613e36fe87bc0d5fd91d2b0412e035c6c53a42315f9be14244b3850e807702f8a8a4e26bdea1b2e57979992f129137175782570cd9009f8d5b464a955cacb116687dee79a08c9cea88cb370963e8215c8397631e37f103d4927cdd34a123ec4465eeab42108327a4c04cb56276f86b6682d8664f1ebfa602f25bfb8fe528a1787c7b2c381c2f2f39eea8105a3517e6fb547f05ad1e0de43ce8960751fcc68ef55e384e72764f689f3766a2a193236f895b2ef8391cf5cb81785c67c73dd71242a8801d717448fa7d19f60a9a1343d392946f7291c4bdb896e6c21e7caa00fd7f5bab99cd0acd3a569a84c54bbbd9d8335302a60c3713d6c73e5809243651c0e6b167ac179d49d67301393b0731109d90cf75192d33fc91aa2a52095bfe88cfda2c00fd220f5efb6ba945c352a7e649d4d691a094ceabdfcb46a2462e00e7068fe9e3147cb0037e2167ee53661c354f99355a54acea8a684ee778300c849e43f9907f3cd4e14fcb4758f7d3cb0bc0b32f845e995d9f21f180302749905bbb432a5306dbbf3bdd44a5859f980c81158aad0d2308babefc1e634e42b35fd669a03969f4b90444242ccfde3afa14bad9b7d162e67d9ee15ed40a727e4fbc87b826657edc09a713745c0e0b2eb9dedbaa244c9796677eb9ab622944eb1a5744282a8ec65ed5a7f24c6cc8fa1ca964ac0e4941558407c112701cd46132cfa9c5b12f214ab832719925220e016a97be79580dc4a1596447c63c22aa710e7222d5b4ceee38c7f1b821533a8170834760d1ad18aff80c415f57919280cb2dde500ab773810abc4a2dcad10de2282400301008cfb3355de937d37d948a253cc02b92c49a7a56d2a9ecc99c6a42221befd2e9eaed15c3f3d5f5bb58e940d2249c48da4f65ddb78f5eb2c5018b05d60f4415814711e4423223999f978312aba722e706caa7cb234338bbd28f0fbfba7edd1766be042a711ae5b10e79a74a0b595a5bb349bf359e4ac57338d333ce5c9da6239d94ac85e0a9cfb6190cc52db5aaec2b0d33c0814fa8d4f95a1a11a7b66fe228deb32cb9cce61e5130b1ef07604de4447ed41503b1c4",
                    "addresses": [
                         {
                              "@last_seen": "2016-12-31",
                              "@valid_since": "2016-10-20",
                              "city": "Chandler",
                              "country": "US",
                              "display": "Chandler, Arizona",
                              "state": "AZ"
                         },
                         {
                              "@valid_since": "2014-01-01",
                              "country": "US",
                              "display": "Minnesota, United States",
                              "state": "MN"
                         },
                         {
                              "city": "Demarest",
                              "country": "US",
                              "display": "142 Anderson Avenue, Demarest, New Jersey",
                              "house": "142",
                              "state": "NJ",
                              "street": "Anderson Avenue",
                              "zip_code": "07627"
                         },
                         {
                              "@valid_since": "2010-12-22",
                              "city": "Albany",
                              "country": "US",
                              "display": "Albany, New York",
                              "state": "NY"
                         },
                         {
                              "@valid_since": "2000-01-01",
                              "country": "US",
                              "display": "Utah, United States",
                              "state": "UT"
                         }
                    ],
                    "gender": {
                         "@valid_since": "2014-01-01",
                         "content": "male",
                         "display": "Male"
                    },
                    "images": [
                         {
                              "@valid_since": "2010-06-25",
                              "display": "http://graph.facebook.com/562401682/picture?type=large",
                              "thumbnail_token": "AE2861B242686E6ACBCD539D133B8AE59A9AE962DB1FA5AA7AF089ADDD6909F81D6B879A86D4B8252BD8922E00649241641F52F0B958D11ED09075115311196AF5",
                              "url": "http://graph.facebook.com/562401682/picture?type=large"
                         }
                    ],
                    "names": [
                         {
                              "@last_seen": "2016-12-31",
                              "@valid_since": "2010-06-24",
                              "display": "Srinivasan Kannan",
                              "first": "Srinivasan",
                              "last": "Kannan"
                         }
                    ],
                    "phones": [
                         {
                              "country_code": 1,
                              "display": "201-461-5000",
                              "display_international": "+1 201-461-5000",
                              "number": 2014615000
                         }
                    ],
                    "user_ids": [
                         {
                              "@valid_since": "2010-06-25",
                              "content": "562401682@facebook",
                              "display": "562401682@facebook"
                         },
                         {
                              "@last_seen": "2016-12-31",
                              "@valid_since": "2010-06-24",
                              "content": "3/582/973@linkedin",
                              "display": "3/582/973@linkedin"
                         },
                         {
                              "@last_seen": "2016-12-31",
                              "@valid_since": "2010-06-24",
                              "content": "10372839@linkedin",
                              "display": "10372839@linkedin"
                         },
                         {
                              "@last_seen": "2016-12-31",
                              "@valid_since": "2010-06-24",
                              "content": "#9735823@linkedin",
                              "display": "#9735823@linkedin"
                         }
                    ],
                    "usernames": [
                         {
                              "@valid_since": "2014-01-01",
                              "content": "srinivasan.kannan.52",
                              "display": "srinivasan.kannan.52"
                         }
                    ]
               },
               {
                    "@match": 0.0,
                    "@search_pointer": "6715f0477f675992ddc4d31f3602228d2e38e83f5d235c0a35bfb962cbb04464f5ae61f027d4760465806d33db812a8875253a19ef7b3c36a177ba0f10688a3e82dd032c23a50fd12321ce01e32a612dd3883d942d21db99aef4eb0f16fd22d3c7ea7c8d2831103ee73e83467d2cdf0650eb7539064d8809fd316d2c16a336463f95463775ec8e2738020254cb831066d4ee758bbdd52b444de4bb85fafce8e68ace05f762d7abcb3f1ae79f289cd8fd5dd9b3cf5028855bf079766d60801f4c931d05e0dd240b6aeb20d961fd19baaf83fac5eb28992b01f7ff26aa9ab81344397f1aacdd7e87afc12c37e6f267dd4353b20cefbdfce74a3ecc420ba26070c071b8d47428520b0eb2e5a4fafacd25c52758140aa0521ef5979c2a437212d21af86acd6680252b110cd2df35626c28c108143c370f360f60e36abc675808db75e7a33d5279b1a013f311314be09d9286ee43605035901cabd0925af0f4da17ef532c202e6c270e99c2f2337cfadb1ec3",
                    "addresses": [
                         {
                              "@valid_since": "2017-07-07",
                              "country": "IN",
                              "display": "India"
                         }
                    ],
                    "gender": {
                         "content": "male",
                         "display": "Male"
                    },
                    "names": [
                         {
                              "@valid_since": "2017-07-07",
                              "display": "Shrinivas Kannan",
                              "first": "Shrinivas",
                              "last": "Kannan"
                         }
                    ],
                    "origin_countries": [
                         {
                              "country": "IN",
                              "display": "India"
                         }
                    ]
               },
               {
                    "@match": 0.0,
                    "@search_pointer": "",
                    "addresses": [
                         {
                              "@last_seen": "2019-02-09",
                              "@type": "work",
                              "@valid_since": "2014-01-01",
                              "city": "Ambattur",
                              "country": "IN",
                              "display": "Ambattur, India"
                         },
                         {
                              "@last_seen": "2019-02-09",
                              "@type": "work",
                              "@valid_since": "2011-01-28",
                              "city": "Chennai",
                              "country": "IN",
                              "display": "Chennai, India"
                         },
                         {
                              "@valid_since": "2013-01-17",
                              "city": "Ghaziabad",
                              "country": "IN",
                              "display": "Ghaziabad, India"
                         }
                    ],
                    "gender": {
                         "@valid_since": "2010-09-21",
                         "content": "male",
                         "display": "Male"
                    },
                    "images": [
                         {
                              "@valid_since": "2010-07-14",
                              "display": "http://graph.facebook.com/100000496523308/picture?type=large",
                              "thumbnail_token": "AE2861B242686E6ACBCD539D133B8AE59A9AE962DB1FA5AA7AF08DABDF6D09F91F6A8380C48EE86166858778176997563C4C47FBAE58CA16C28B7649464C5230A194C33909E270",
                              "url": "http://graph.facebook.com/100000496523308/picture?type=large"
                         },
                         {
                              "@last_seen": "2019-04-29",
                              "@valid_since": "2019-04-29",
                              "display": "https://media.licdn.com/dms/image/C4E03AQFQBdOLD0o0Dg/profile-displayphoto-shrink_800_800/0?e=1562198400&v=beta&t=UTSlO2DR4eupXvKMx3342H2ANRTUsSFQSFuaJZnLSxw",
                              "thumbnail_token": "AE2861B20B7D6E22D4C9479C5C7387EF9C9CE823D35EABEA73B2CFB4863058AE4E7CF681B38DE8100FECA6531052AE60691C03C6B9128708CC9F784005054530B6D99C6148A128E5131BFBA8CFF5F9BDB5A8E37CF99A18DD7A9948B1D92730DCE2C2B34A55546211CCC892B90151753EF50253DDFBBEE85B1F1AB2A20781C8B36D0CA4796444ED55483691734F14851F067EB5380274C55A2483B514CE3EB38D8D8373FBD7",
                              "url": "https://media.licdn.com/dms/image/C4E03AQFQBdOLD0o0Dg/profile-displayphoto-shrink_800_800/0?e=1562198400&v=beta&t=UTSlO2DR4eupXvKMx3342H2ANRTUsSFQSFuaJZnLSxw"
                         },
                         {
                              "@valid_since": "2016-02-03",
                              "display": "https://media.licdn.com/mpr/mpr/shrinknp_200_200/AAEAAQAAAAAAAAS3AAAAJDFmOTAxMzA0LTE3YWItNDIyZi04NjcxLWRiZjAxZjYwYTI4Nw.jpg",
                              "thumbnail_token": "AE2861B20B7D6E22D4C9479C5C7387EF9C9CE823D35EABEA7AAFCEB4822D4BE6583BC7DC98D6B5210198C7212B2FD214763272C79F7CA63BE2B8506D2169600AF6E8B141709B04CC0A3B829ADFCAEA92EEBB8F09FA9C77A43EF83CC7C54068D9E0BEE810152C057383E4C59A1C7F7E41F66652C09C9CD0473138E1E11682F9A11B74E9",
                              "url": "https://media.licdn.com/mpr/mpr/shrinknp_200_200/AAEAAQAAAAAAAAS3AAAAJDFmOTAxMzA0LTE3YWItNDIyZi04NjcxLWRiZjAxZjYwYTI4Nw.jpg"
                         }
                    ],
                    "languages": [
                         {
                              "display": "en_US",
                              "language": "en",
                              "region": "US"
                         }
                    ],
                    "names": [
                         {
                              "@valid_since": "2011-01-28",
                              "display": "Srinivasan Kannan",
                              "first": "Srinivasan",
                              "last": "Kannan"
                         },
                         {
                              "@last_seen": "2019-04-29",
                              "@valid_since": "2010-07-14",
                              "display": "Kannan Srinivasan",
                              "first": "Kannan",
                              "last": "Srinivasan"
                         }
                    ],
                    "origin_countries": [
                         {
                              "country": "IN",
                              "display": "India"
                         }
                    ],
                    "user_ids": [
                         {
                              "@valid_since": "2011-01-28",
                              "content": "6/676/828@linkedin",
                              "display": "6/676/828@linkedin"
                         },
                         {
                              "@valid_since": "2011-01-28",
                              "content": "19565600@linkedin",
                              "display": "19565600@linkedin"
                         },
                         {
                              "@valid_since": "2010-07-14",
                              "content": "100000496523308@facebook",
                              "display": "100000496523308@facebook"
                         },
                         {
                              "@valid_since": "2011-01-28",
                              "content": "#8286766@linkedin",
                              "display": "#8286766@linkedin"
                         }
                    ],
                    "usernames": [
                         {
                              "@last_seen": "2019-04-29",
                              "@valid_since": "2013-01-17",
                              "content": "srini1968",
                              "display": "srini1968"
                         },
                         {
                              "@valid_since": "2014-01-01",
                              "content": "kannan.srinivasan.718",
                              "display": "kannan.srinivasan.718"
                         }
                    ]
               },
               {
                    "@match": 0.0,
                    "@search_pointer": "f3c48753bc47e55e697e5ce63aca6885db60ed8a82d8553c581f25b0fe1792db34f9f8d7bd3449d78fe305a872592cfe844553a9a17db4bd40afd93d189ebc1bd5f29d06fecf4800fd49eddf7c0aaa57e00f6b0fe56c853438f3612d0c56407977e89c6f89fd56d9a922935faa6168a9bfb93935e2fef6e1c2341958a6415afcc6d7d1f5002e407b601e00ee82d80064ee269b23f7077c5be7ad3b3b5ee054868f34fe8b0d47db7763dfa891ab4b4fa21ca1a808fc6fed392100de7a56f24e02881f7ab724d8e76600da6518a3cc444a328f61b3b7aded3b8fad6c6a80cd4117b32bafa68b2a881ad7c57a623d2fee97949416813f9d7e9c2be6397fa9a6e96835569ed6c63d3acd0d9a7d9cfcc294c531021ee45df5ac01ec8292e2e88c7c362c5e469cee4fab81882d869fc40c906f667585bc2fbbd7056c28f1487bd193d346cde233e7d58e131b5f0bfd019ea917dce680f18ed6cfe499b717bd6f0c430f8019c05617892dc76c25a9da47b2bb25b0abf18d237cce963be1c4b614704cd4ba05ac879f81ebc71ba399046d7af55f3bfe88efbf50f6c67939b87bc9414c1072303d0d70d5f916bd84aafc015ec8917335b75e19872852fc6da2313e1b9fb73c7554a41ef87cacd339a2b7cbb3384f9ee275f25adc209c69a7fec147bdb6f645615595a761ee2bdfa0871df1b6a2b4912c8d9b0e1d8bb6e54f610df7509440a2a19bf195b9acab85593a72b1ef041d1908c6f6942837ce9bd43771b6931ab5687f43b7844a7ff4438bed402e66608fa3a123ae6d5d31c486331928dbd6a49700ddf9ec1b29a8c615d395655e833fe81ac3d0d8826fe986526550840608fcc96fd4789b00b0a3dc3f07d463c63440bb6f11bb43c69ba5126deb77e96501db37aea53b47ef6fb12bf1058aa0895a618d8859ad36490e13ab7998c32a3389e1cadfa73fd763f7deaf676438f361c685fca8659f6fd678e6b34427fdcc87ab4bc269a9ca14f06f78066a2442e37b5b66f3d7be8057ffc4bfa09f7639055f79fae56a7e7c3ef4a353f39f31283d983f9ff44fd6ed7660aa384d9c9ba3e79c57a115f8a49092a76f70ed3418db03b6d0ee70c84b1bd654ce8e462837d1c79f9fccebb73124ce1c220a0a98421a00370117dd73f022b3846dd8aec4f40f31ceea6578c0c939280ed5a488326ec723873e1148dc16e749c666af5b9df3926890a2444c2f29e0b8b0d42b17e5e5ddef44c973fdd5da826684ab31de316ee921a5d7c79b525d79e9c9c13ccaf02a85407bc2bca97cefcff6a998d40292457c74e5a45be4bd25267cf79fefc8ccc0d21440c43e854c2a627002cacd963b5ba44b1461ed8419486d29bf6d1c07ea602e2807a683a89b78c09efd693399f28ba5a1ed166c40d155b284d6ad7c19fde92ff7070ccc81cd427b6b184fcede66a661541106cfceccc9747dc9329dc519790d54a33381d8667fa6e27fe347e895907d10c4d14ce36943de7ce8647e815f631b3d24b0b46dd0c22f33836446d2de7230501c22d75bcca15c47efcb4fb7850b7821562125d471df5db3cc245ed5391cb9314fbd7e786feef32a6b8c48aae701262e036ce134afa7f6d2f2d376efecab2d8900c6d475ff54ee20cd04ce8ff639c5400e412cf0f62152b040a88235b2296985d2807e8d5b61b6b7a9540b0e3c76bbde7593d916b1cf2f1415318291d9811fe5e31d2852245137e3c9e8e98ec5c2c28086efb7eeea23f997672d3cc7b570588f7d948f720673934393796dca73bea8ebb13afdf536d6b9f5cb59e3b61e2727ccb43dfc13620505f9cf6d0dffc3ee8c2012acc0c8772c4809ce102ec11323e7099a0bb1c81237610538d6d30115171a12d6b5ee1cdcd31d74e05923ce04542e22021dbf01b37396a8f03f06facdd376e467b65f683ca723e301908c43e4e7408a25fc0abc7533e31497cb48737de09d37964dc3ed846358191811dd539b407e70c9389981c6be09ea916512ce7eeff30700a37608a55b0e77ddc8b5278e19638928636dbe976a9e4d8f1f3ed16abcdf44c714b1c814f3a8ac0ddd69191b2524f09eeb8a391dcda1a328c202113b9849d636cb2cc7b55e219fb7e959444a1c8fff06c9dd6d0762d36cae148ea1aa4b211e73bf334ad1292df732151d3dc27a3683fb2b2cf0193fa204dfc2266fff136e497fa4123270a7c43ccc6d810df2b9e2572c2e597053e7df562442c9ee82a79618fd1f655426dec1f1fa6bcb4b7109555cd605e62bc5f91383335dee741f214d9101fa5782a9923a42a80809789f8bfdead27a9e7109bf9f82f116e6f8eadf48bcc195047a03d8885c3514522e54bd43b861353d16a82d1b70ba9303d7cf46088009e3b2ba79d775fb0f893c2671781b193de963c6e5e2de56aa566fa0ea5a026bb182b75e890a09b610017b8886d90edc60db05c9450a38522df1ad1ee9ab594290dbdcadb647a929470d11db5904b14a4a1a39f5d405d0fdc8390f4e7f6714f9d0e55131888a020c814820323ee6ae8f8876fe7d8792fbba6bc3baa249a38f8aa4bf89a69f6303c7359f41eab35b55473ecd1c0794663217fea17341175dfc1cb6db5d12579f7b35ab153173e9436e021051ee5a1c0c93a26cef53976c796782f111676831b0c25a8d63f4274d9b5bcf86f1f8ff5cebcfd7b3cad1c3bd92d2a229bd7b3580ee7ae3802362e9b31f6bc9f3c8ae99948aaa297031867b83c1cdfc99177e216a583326bbd72430a225320ba761b43efa66a2d343bc3df0afe01bf75083e6f51b041ea86f9c928cca3d8e19d4d280a1a7bbba0ac5fcf9eb83a4bb87058b35c2f8cb8c65941591aa2f5936c3da7df62c27591f954bdfeca8ad181e96e52c6bbfa8cd6ef4c2ee4ae19fd14665e8ebc57585ad52232ec471af233a1788e1131461e390db1d6547e079a15f587f3c7b8d139eb7e4b8425c79c4c6d00fdcc9d025d3f17f3ee50f1eee0379d31a8fe3923fc6dca7dc6a78b3b11b76db270cc31ee008df792f0a57af417d1e26dea73fdae50bfa80b097f69e81628f2ce6318d53baa159090f57e51f5c773013dcfbc7956909a7a3a268fdf3d1e64bb828ae49e423a92d18f59a60fe4042392fde86445f9acaf1f8628036c9f5a2d1a0e5adc77894b3c1d66abbae3fcf2a2d42cf9018a0751606047cd6ff1243a8f66183c3f6508de5b45927a329873c6d6536d8453b0fbf00f4f7a13bc5155863a8e6eb29bf661172f1cc9ae057472883dfac3dfe802b1d3f252b5b7a6176713af9eb3a8e4067b078e8bbe6e197a96cd7439f62551086630c89d2210da7df0f155ee3cde5f3da0e9524715ca35533fe2c0fac53e524e6da7e7399e202b12d52bf8b5faba15fb5a7a214da62f48725f6d75298cef24bd1018be5b01cc79146c05160136999e39f3589262a1d6f341b6c46c01ad04eea7d74774cb85641f5abe65946076a5c7f99b550c5be673cdc89add2ac773b531da288cb965a009301f1fd83b29254093c95a13cd3c06c9c1f002ea9777eefa202b9b0f26176028d9d2fbdb096f05b2fb1c1136920cde15e59275df4c24b0cb5cf0a8c8bca4ff0a7f1f448ef579f59229c5518ed8ccefb34ba6dcf3710351f2460ca4c01dec541dead2d3ea6ae99229ad2aabfcf3b7c4086303aab13bcbbe0d7431b7041",
                    "addresses": [
                         {
                              "@last_seen": "2017-09-04",
                              "@valid_since": "2007-07-10",
                              "city": "Cupertino",
                              "country": "US",
                              "display": "20995 Pepper Tree Lane, Cupertino, California",
                              "house": "20995",
                              "state": "CA",
                              "street": "Pepper Tree Lane",
                              "zip_code": "95014"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@type": "work",
                              "@valid_since": "2009-08-27",
                              "city": "Santa Clara",
                              "country": "US",
                              "display": "Santa Clara, California",
                              "state": "CA"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@type": "work",
                              "@valid_since": "2014-01-01",
                              "country": "US",
                              "display": "Ohio, United States",
                              "state": "OH"
                         }
                    ],
                    "gender": {
                         "@valid_since": "2007-07-10",
                         "content": "male",
                         "display": "Male"
                    },
                    "images": [
                         {
                              "@last_seen": "2019-02-10",
                              "@valid_since": "2019-02-10",
                              "display": "https://media.licdn.com/dms/image/C5603AQE_Hatbyhd_Xg/profile-displayphoto-shrink_200_200/0?e=1555545600&v=beta&t=uYyk9QMKD7ldoA72xgc0925vTiHHaiGtmO2WPseEHgU",
                              "thumbnail_token": "AE2861B20B7D6E22D4C9479C5C7387EF9C9CE823D35EABEA73B2CFB4863058AE4E7CF680C08DE8100FEFA8591569805D31176CDAB9128708CC9F784005054530B6D99C6148A128E5131BFBA8CFF5F9BDB5A8E97CF99A12DD7A9948B1D92730DCE1C5B74758566211CCC892B90151753EF50273D0D1B99E381603C2F01E95FF841173A42D3440E62F4F018B4853099725075B8B314542DF732F8AAE0BEC3EB38D8D8373FBD7",
                              "url": "https://media.licdn.com/dms/image/C5603AQE_Hatbyhd_Xg/profile-displayphoto-shrink_200_200/0?e=1555545600&v=beta&t=uYyk9QMKD7ldoA72xgc0925vTiHHaiGtmO2WPseEHgU"
                         }
                    ],
                    "names": [
                         {
                              "@valid_since": "2010-03-29",
                              "display": "Kannan Srinivasan",
                              "first": "Kannan",
                              "last": "Srinivasan"
                         },
                         {
                              "@last_seen": "2017-09-04",
                              "@valid_since": "2007-07-10",
                              "display": "Srinivasa Kannan",
                              "first": "Srinivasa",
                              "last": "Kannan"
                         },
                         {
                              "display": "Kannan Srinivasa",
                              "first": "Kannan",
                              "last": "Srinivasa"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@valid_since": "2009-08-27",
                              "display": "Srinivasan Kannan",
                              "first": "Srinivasan",
                              "last": "Kannan"
                         }
                    ],
                    "user_ids": [
                         {
                              "@last_seen": "2019-02-10",
                              "@valid_since": "2012-09-29",
                              "content": "39951687@linkedin",
                              "display": "39951687@linkedin"
                         },
                         {
                              "@valid_since": "2012-10-22",
                              "content": "28933167@N08@flickr",
                              "display": "28933167@N08@flickr"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@valid_since": "2012-09-29",
                              "content": "11/468/233@linkedin",
                              "display": "11/468/233@linkedin"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@valid_since": "2012-09-29",
                              "content": "#23346811@linkedin",
                              "display": "#23346811@linkedin"
                         }
                    ],
                    "usernames": [
                         {
                              "@valid_since": "2012-10-22",
                              "content": "srisan80",
                              "display": "srisan80"
                         }
                    ]
               },
               {
                    "@match": 0.0,
                    "@search_pointer": "7ab8b95795394d1f382e6dbedcacb462966a578ca105c101a7b67cfe9acdbdfef8a11692cc913e3095f17dc56bc8f6da60e7efd63516fe03493d9c702217441976fed68c956e56cb32a7b9dd2e92730d943d6a5b18794cecd90631127939025bc86200484509639d2448a07865f3ac1c054883461f4638cbc5f558a9258a4cc83eebb2686adc350439cc585b3f53e5e7a604384aa898a18d3af7dcedaf4c19cd59845194ea04d97b898106b10919eaeea3a0ad9a32f4188338eb9e6235b7222fa46b0a39370a5e1b06475a21c6866325d11def9e3f1a6cb2c940fe4a89139e1c20d7716abfac9e2a147138307f8de15422c442e694bbf5d7af7742c81742a0c133bb7a2c72b30d7f4aad8565e283e3388b8da04c5b4cf6e189999b9b243ca2bd7129ffb7aeb8b5c94182a82d1f70065d5ac17df7cf7240443926d588673d246f3ed7802cde8d0291211627feef4a1fff3fc425c594b3d23e195bafda442a50244e3450743530e066adfbee8adaf8ea9ef005dd5f612a3a6f246d326362c5b79cf24813bd81fa7f77aac7fd0868e5d333ec9e7a7f4fc1aaa4471ec50242244dc3954a704ba34d879d60822db7fd367a3a1cc8e20b21cab581d8936d1d09d5b3a3d5da45d4dd5c77695880f98eb10a36e5b09dea916e779877ced4b0b5c5e79ed42ed86f7fb64e3afe3f58780b0cfc0aedc3411de6df5d548eb7c36ff573e9ea2ee1bd010e72e8a81db6809f80f83c7ad057790e9be5b8fb44298e02d3f8b7b8b13113a91330a1c2b71bb60a11268c14c53b48eea26221037cda94a884bf196b0748446e2dc31ba0053db4ad8465483a0c78e31a62851d3aa18a05f8fc4f7ff31470426aeaf97e177f61a691703b6a4215",
                    "addresses": [
                         {
                              "@valid_since": "2009-09-14",
                              "city": "Gibsonia",
                              "country": "US",
                              "display": "1056 Old Orchard Drive, Gibsonia, Pennsylvania",
                              "house": "1056",
                              "state": "PA",
                              "street": "Old Orchard Drive",
                              "zip_code": "15044"
                         }
                    ],
                    "languages": [
                         {
                              "@inferred": true,
                              "display": "en",
                              "language": "en"
                         }
                    ],
                    "names": [
                         {
                              "@valid_since": "2009-09-14",
                              "display": "Srinivasan Kannan",
                              "first": "Srinivasan",
                              "last": "Kannan"
                         }
                    ],
                    "origin_countries": [
                         {
                              "country": "IN",
                              "display": "India"
                         }
                    ],
                    "phones": [
                         {
                              "@valid_since": "2009-09-14",
                              "country_code": 1,
                              "display": "724-625-2822",
                              "display_international": "+1 724-625-2822",
                              "number": 7246252822
                         }
                    ]
               },
               {
                    "@match": 0.0,
                    "@search_pointer": "08db3e36d4133ac73b5c54438d47e6a59fadf45b879871509a47dab0447c0ee5862eeb1a06ef04c1763863863de68ae2e4f2df0f223924af9eab6107e200e79b2a70b6be379fdbdb9075fa870b3b675b169585a745cfd2d5fbb2f5bb25e4c7a2292a1c9a0aba5c5c31e77b602cddf634fbf5cc3059b0c6d6c2c8637e439d967e67c12852b93c59e9cb42ddd04243f79895969955ab6125b74dc9e2b6f04186c09c6ff62552698a00044cee4b2ba1de7e5e7301b771dcae4146c40a494b19da0dcecc3b032cb6ce987f91f537d2c5e900085b8abb27e898cc0fa55da491c7b33d01030adf9cf7862ba3660a317797cff6ad4c82df407cff94a5f0bae4b777a2b045fec4b6ee8dc0228799d7ed4bb3902f513607d8a3990dd3111290b89753b7f0cf255dc9041d186d112b05c9b32dd5a8e0077707c664c76f1a6bcdfff5f8fc8e2642a0eae6204a1d75f1f702b16300ec2d20fd2941a179a01f063bac49070578",
                    "addresses": [
                         {
                              "@type": "old",
                              "@valid_since": "2009-08-27",
                              "city": "Sunnyvale",
                              "country": "US",
                              "display": "Sunnyvale, California",
                              "state": "CA"
                         }
                    ],
                    "names": [
                         {
                              "@valid_since": "2009-08-27",
                              "display": "Srinivasan Kannan",
                              "first": "Srinivasan",
                              "last": "Kannan"
                         }
                    ]
               },
               {
                    "@match": 0.0,
                    "@search_pointer": "7d3b22f03729f2766b8ceab4798d49559b6b9395c7a5cd0121b85ee8c990519c6d0d8a4f828b4a3447d07efee747fb0f7f95d42041ce258017398c06ae0d5d5f3115a42a4754d8acc600f9f63aebd2cb5137543b6462cd04850657e3e0dbc6197034737396f612736be5bc5ff70878a0e5fc63a53c02612a0b6b7a46d2b77a6da15bee60b07329d215152fd93a22dc20fda09d084c36f8a425e309303057f9775c47f07d6e1e32ef0c1b3bcc6390df6ae4c69bb047a235ac3be06f2648c29cc4953ef76d2e1bb141e666a67f11a362d07a76d002ce2d4a17594df62323ba415eda2ac43faa8965aa1f03f487b0f4357df9c24e96d119f8346c2b4377dd2b886e72281c966f9fe3e42b6322e4bfbe8d93112f27f95dc16f35e64374650f4ebcdedbbafefdf8e5f495b2fee3d7f56750afe4fec0b91e058f9f1217c5d109944f6378694d69aa9ef90a96e931c36da3ea26489fc8f03a63094ad17c40b3a73249ec8d26cd51dccb45c0cedc4e9112e0715a87bbd9f23ea5086a32a6faa5acc73367b43f96e48ff8b009735755bad8f12f1449d41a02b69d9b23b91466a8efb15e6c904860d066b4f6c74acf26a8247b379e",
                    "addresses": [
                         {
                              "@valid_since": "2010-03-29",
                              "city": "Spring",
                              "country": "US",
                              "display": "17 E Amberglow Circle, Spring, Texas",
                              "house": "17",
                              "state": "TX",
                              "street": "E Amberglow Circle",
                              "zip_code": "77381"
                         }
                    ],
                    "gender": {
                         "@valid_since": "2010-03-29",
                         "content": "male",
                         "display": "Male"
                    },
                    "names": [
                         {
                              "@valid_since": "2010-03-29",
                              "display": "Kannan Srinivasan",
                              "first": "Kannan",
                              "last": "Srinivasan"
                         }
                    ]
               },
               {
                    "@match": 0,
                    "@search_pointer": "638b143149dfd139f2a713888830df5599b5c197d9bf223a75e69277b871518a4e9de57b119d5ddc175e46e7baf3198715bbc181c6a4b80f2ce85eed712b9b51d82d9ed4f1900a5df159d141ab799afe9ec356b82c8cceb8d541140419c57b3dd45afba18514a669106dcd1b1e265209a387f76b9bee433edcaf1c5c10f5b8a16b8083d5860919f3d9445a0eeafb89e27b16c51e82ccea251d98b444d2c67b02ae11d6da37d9b83a319044f007ffa4d8b9a3ba57f29ef6e2da11354b143e64d972054ea6ff147971c07031298c0710235bbae21d1ebd63af9ac665fd2beec1c16ad53ff473344af1da7340728956929bf019bb516979779edd14e42d809be780f5f394c51f7602bbb78732e50dc06cbd1de55c9674e8becef80e83a7b6ff24af2996b27eb8ffa24dc6d20a944cfecc78637e808f822eb683fdca50a8185c65145baeeb1c80abdc17e3fe5c13af0ff96cfc4c2bd0b6ca85f861bef3f8fe10a17ea6c0df22216d0389dc2cd5a76c9f0aead925c1148aed3419fc49c7675c30c3fecff1a209400a9779b15d48d8d4a13eae303f28bc3d85fcd1d035f702b632056f365a291a98988762a3378e4ba82918e00928044a9dfc9e6fc9d21e7e3d5da3f2675128cbb4c7e74d38648a43daf179c42180ead3c3881013d481ef4ac21b89a3efc362174ad93bcb73866995265464ab2e00a4a77bce6663b88892b428bb6a3b96eb181cfff72a394ea7d8eec8c1681effe66f57b4c19f2cb9c247033192e06409113dc4923c8134497c7a2193d116215c9c138598e43c5036c615bc18e546fe",
                    "gender": {
                         "@valid_since": "2012-09-23",
                         "content": "male",
                         "display": "Male"
                    },
                    "images": [
                         {
                              "@valid_since": "2014-09-09",
                              "display": "http://lh4.googleusercontent.com/-D6XgaQbcJKQ/AAAAAAAAAAI/AAAAAAAAAAA/kt6gUGPfS1E/photo.jpg",
                              "thumbnail_token": "AE2861B242686E61D1980D9252328CEA9A8DF568C252A9AB63BAD2EFC13E56A4047EF183AEDABA003CC9BD5A2532A365183272C39F7CB63BEAD6506D2169601884E8B14170FE2BFE5113839CF7E1C3E29BD8AB24A6B14FC320C61FA8D869688DE9C5B2455F54",
                              "url": "http://lh4.googleusercontent.com/-D6XgaQbcJKQ/AAAAAAAAAAI/AAAAAAAAAAA/kt6gUGPfS1E/photo.jpg"
                         }
                    ],
                    "names": [
                         {
                              "@valid_since": "2013-02-04",
                              "display": "Srinivasan Vk",
                              "first": "Srinivasan",
                              "last": "Vk"
                         }
                    ],
                    "relationships": [
                         {
                              "@subtype": "Follower",
                              "@type": "other",
                              "@valid_since": "2012-09-23",
                              "names": [
                                   {
                                        "@valid_since": "2012-09-23",
                                        "display": "Siva Sivaramakrishnan",
                                        "first": "Siva",
                                        "last": "Sivaramakrishnan"
                                   }
                              ]
                         }
                    ],
                    "user_ids": [
                         {
                              "@valid_since": "2013-02-04",
                              "content": "108021571527487428426@google",
                              "display": "108021571527487428426@google"
                         }
                    ]
               }
          ],
          "query": {
               "emails": [
                    {
                         "@type": "personal",
                         "address": "shrinivas.kannan@gmail.com",
                         "address_md5": "a9e46cba401df1afdd7e1b5eba5b21a1",
                         "display": "shrinivas.kannan@gmail.com"
                    }
               ],
               "names": [
                    {
                         "display": "Srinivasan Kannan",
                         "first": "Srinivasan",
                         "last": "Kannan"
                    }
               ]
          }
     },
     {
          "@available_sources": 108,
          "@http_status_code": 200,
          "@persons_count": 1,
          "@search_id": "1909110838073304227941230824618469706",
          "@visible_sources": 15,
          "available_data": {
               "premium": {
                    "addresses": 2,
                    "educations": 5,
                    "emails": 6,
                    "genders": 1,
                    "images": 5,
                    "jobs": 24,
                    "names": 3,
                    "relationships": 6,
                    "social_profiles": 6,
                    "user_ids": 7,
                    "usernames": 2
               }
          },
          "person": {
               "@id": "4e63d78a-751f-4e89-b325-ada7d8cf534a",
               "@match": 1.0,
               "@search_pointer": "",
               "addresses": [
                    {
                         "@last_seen": "2018-06-28",
                         "@valid_since": "2010-12-03",
                         "city": "Chennai",
                         "country": "IN",
                         "display": "Chennai, India"
                    },
                    {
                         "@last_seen": "2018-06-28",
                         "@type": "work",
                         "@valid_since": "2015-09-30",
                         "city": "Kumbakonam",
                         "country": "IN",
                         "display": "Kumbakonam, India"
                    }
               ],
               "emails": [
                    {
                         "@email_provider": true,
                         "@last_seen": "2018-12-15",
                         "@type": "personal",
                         "@valid_since": "2012-07-22",
                         "address": "full.email.available@business.subscription",
                         "address_md5": "af96cf33e2024e7328bbc7675f771b1e",
                         "display": "full.email.available@business.subscription"
                    },
                    {
                         "@email_provider": true,
                         "@type": "personal",
                         "@valid_since": "2011-12-05",
                         "address": "full.email.available@business.subscription",
                         "address_md5": "a9e46cba401df1afdd7e1b5eba5b21a1",
                         "display": "full.email.available@business.subscription"
                    },
                    {
                         "@email_provider": true,
                         "@type": "personal",
                         "@valid_since": "2010-07-08",
                         "address": "full.email.available@business.subscription",
                         "address_md5": "5a35e71a9e313cd83fc1b36e8a921f51",
                         "display": "full.email.available@business.subscription"
                    },
                    {
                         "@email_provider": false,
                         "@last_seen": "2018-12-15",
                         "@valid_since": "2012-12-27",
                         "address": "full.email.available@business.subscription",
                         "address_md5": "6764275e5425999d910c4ac9976b1438",
                         "display": "full.email.available@business.subscription"
                    },
                    {
                         "@email_provider": true,
                         "@type": "personal",
                         "@valid_since": "2013-01-18",
                         "address": "full.email.available@business.subscription",
                         "address_md5": "e8c9ea39bf6e7cf1d0b75eaf19bb5760",
                         "display": "full.email.available@business.subscription"
                    },
                    {
                         "@email_provider": false,
                         "@type": "work",
                         "@valid_since": "2012-12-19",
                         "address": "full.email.available@business.subscription",
                         "address_md5": "0ba5c26ba75e2c48b4f08dc8e7b5d890",
                         "display": "full.email.available@business.subscription"
                    }
               ],
               "gender": {
                    "@valid_since": "2011-12-05",
                    "content": "male",
                    "display": "Male"
               },
               "images": [
                    {
                         "@valid_since": "2011-12-05",
                         "display": "http://graph.facebook.com/1186474769/picture?type=large",
                         "thumbnail_token": "AE2861B242686E6ACBCD539D133B8AE59A9AE962DB1FA5AA7AF08DAAD76B0DFE1F64838CD9CDB2322ADF85744B699B543C4E5FE3AC5A925CC78A78485D1B1861F699",
                         "url": "http://graph.facebook.com/1186474769/picture?type=large"
                    },
                    {
                         "@valid_since": "2016-01-17",
                         "display": "https://s-media-cache-ak0.pinimg.com/avatars/shrinivaasanka_1392636070_140.jpg",
                         "thumbnail_token": "AE2861B20B7D6E22CA814E9059348AAB9C99E565D51CA7AE27F1CCF2813454AE0530DAD8D9DCAD302ACB85625B6E8A56301D5AF4BF5C841BCD927073511B186BF39AC63006E11FBB5344F8B1D7E0B6B7AD9EBF71FCF012DD7E",
                         "url": "https://s-media-cache-ak0.pinimg.com/avatars/shrinivaasanka_1392636070_140.jpg"
                    },
                    {
                         "@last_seen": "2018-06-28",
                         "@valid_since": "2018-06-28",
                         "display": "https://media.licdn.com/dms/image/C5103AQElIOVKZ6nowg/profile-displayphoto-shrink_200_200/0?e=1535587200&v=beta&t=KGXPR6F4RKV3CymWr3LeTWUcV3de2Z7r2q2uAXaHZzk",
                         "thumbnail_token": "AE2861B20B7D6E22D4C9479C5C7387EF9C9CE823D35EABEA73B2CFB4863058AE4E7CF680C78DE8100FEF9B583B4BA97E6F1D5CF5B9128708CC9F784005054530B6D99C6148A128E5131BFBA8CFF5F9BDB5A8E97CF99A12DD7A9948B1D92730DCE7C5B74B5A526211CCC892B90151753EF5024DCEF082F55F1D7CD48C24C2D3BC4B16AE791B158B4A2F1489127F24C416775DD40F4560CE582B87BC16D23EB38D8D8373FBD7",
                         "url": "https://media.licdn.com/dms/image/C5103AQElIOVKZ6nowg/profile-displayphoto-shrink_200_200/0?e=1535587200&v=beta&t=KGXPR6F4RKV3CymWr3LeTWUcV3de2Z7r2q2uAXaHZzk"
                    },
                    {
                         "@last_seen": "2017-02-02",
                         "@valid_since": "2017-02-02",
                         "display": "http://pbs.twimg.com/profile_images/823093144023494656/uh0w69z8.jpg",
                         "thumbnail_token": "AE2861B242686E7DDBDF0D814A3486E1D19BE9609F41B4AA71B6D0FEB03454A84C36C69ACE8FE8616799C625402DD0176D4A07B4EB0BD80FCBC9661A59521977AFD9972655A229EE5A47EFE393B3",
                         "url": "http://pbs.twimg.com/profile_images/823093144023494656/uh0w69z8.jpg"
                    },
                    {
                         "@valid_since": "2014-03-29",
                         "display": "http://lh4.googleusercontent.com/-lsiOU7rL21o/AAAAAAAAAAI/AAAAAAAAAF0/JajVx47Doq4/photo.jpg",
                         "thumbnail_token": "AE2861B242686E61D1980D9252328CEA9A8DF568C252A9AB63BAD2EFC13E56A4047ED9C69FF28E662CE6C5201B32A365183272C39F7CB63BEAD6506D2169601884E8B14601FE0AEB0D22AEEF90C3FFA2EAD8AB24A6B14FC320C61FA8D869688DE9C5B2455F54",
                         "url": "http://lh4.googleusercontent.com/-lsiOU7rL21o/AAAAAAAAAAI/AAAAAAAAAF0/JajVx47Doq4/photo.jpg"
                    }
               ],
               "names": [
                    {
                         "@valid_since": "2000-01-01",
                         "display": "Shrinivas Kannan",
                         "first": "Shrinivas",
                         "last": "Kannan"
                    },
                    {
                         "@last_seen": "2018-06-28",
                         "@valid_since": "2014-01-01",
                         "display": "Srinivasan Kannan",
                         "first": "Srinivasan",
                         "last": "Kannan"
                    },
                    {
                         "@valid_since": "2011-12-05",
                         "display": "Shrinivaasan Ka",
                         "first": "Shrinivaasan",
                         "last": "Ka"
                    }
               ],
               "relationships": [
                    {
                         "@subtype": "Follower",
                         "@type": "other",
                         "@valid_since": "2012-07-13",
                         "names": [
                              {
                                   "@valid_since": "2012-07-13",
                                   "display": "Vinod Kumar Devi",
                                   "first": "Vinod",
                                   "last": "Devi",
                                   "middle": "Kumar"
                              }
                         ]
                    },
                    {
                         "@subtype": "Follower",
                         "@type": "other",
                         "@valid_since": "2012-07-13",
                         "names": [
                              {
                                   "@valid_since": "2012-07-13",
                                   "display": "Prakash Chandrasekaran",
                                   "first": "Prakash",
                                   "last": "Chandrasekaran"
                              }
                         ]
                    },
                    {
                         "@subtype": "Follower",
                         "@type": "other",
                         "@valid_since": "2012-07-13",
                         "names": [
                              {
                                   "@valid_since": "2012-07-13",
                                   "display": "Pranabendu Misra",
                                   "first": "Pranabendu",
                                   "last": "Misra"
                              }
                         ]
                    },
                    {
                         "@subtype": "Follower",
                         "@type": "other",
                         "@valid_since": "2012-07-13",
                         "names": [
                              {
                                   "@valid_since": "2012-07-13",
                                   "display": "Ram Janakiraman",
                                   "first": "Ram",
                                   "last": "Janakiraman"
                              }
                         ]
                    },
                    {
                         "@subtype": "Follower",
                         "@type": "other",
                         "@valid_since": "2012-07-13",
                         "names": [
                              {
                                   "@valid_since": "2012-07-13",
                                   "display": "Jose Mathew",
                                   "first": "Jose",
                                   "last": "Mathew"
                              }
                         ]
                    },
                    {
                         "@subtype": "Follower",
                         "@type": "other",
                         "@valid_since": "2012-07-13",
                         "names": [
                              {
                                   "@valid_since": "2012-07-13",
                                   "display": "Shubho Sengupta",
                                   "first": "Shubho",
                                   "last": "Sengupta"
                              }
                         ]
                    }
               ],
               "urls": [
                    {
                         "@category": "professional_and_business",
                         "@domain": "linkedin.com",
                         "@name": "LinkedIn",
                         "@source_id": "3226b889ddb5e951c00e509d2f677d39",
                         "display": "https://www.linkedin.com/in/srinivasan-kannan-608a671",
                         "url": "https://www.linkedin.com/in/srinivasan-kannan-608a671"
                    },
                    {
                         "@category": "personal_profiles",
                         "@domain": "facebook.com",
                         "@name": "Facebook",
                         "@source_id": "304265879bd07c9f1ba793284967b272",
                         "display": "http://facebook.com/people/_/1186474769",
                         "url": "http://facebook.com/people/_/1186474769"
                    },
                    {
                         "@category": "personal_profiles",
                         "@domain": "twitter.com",
                         "@name": "Twitter",
                         "@source_id": "ba371ee483f15414764f0b6797df4b60",
                         "display": "http://www.twitter.com/ka_shrinivaasan",
                         "url": "http://www.twitter.com/ka_shrinivaasan"
                    },
                    {
                         "@category": "personal_profiles",
                         "@domain": "pinterest.com",
                         "@name": "Pinterest",
                         "@source_id": "c405e60965da03eb4ce5a2965a77f127",
                         "display": "http://pinterest.com/shrinivaasanka/",
                         "url": "http://pinterest.com/shrinivaasanka/"
                    },
                    {
                         "@category": "personal_profiles",
                         "@domain": "flickr.com",
                         "@name": "Flickr",
                         "@source_id": "63eefc3611d18b58921a5ccb51c2d500",
                         "display": "http://www.flickr.com/people/51784765@N08/",
                         "url": "http://www.flickr.com/people/51784765@N08/"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "openhub.net",
                         "@name": "openhub.net",
                         "@source_id": "7f0c0fa64f272b316c76abaf6b787b8d",
                         "display": "https://www.openhub.net/accounts/ka_shrinivaasan",
                         "url": "https://www.openhub.net/accounts/ka_shrinivaasan"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "media.readthedocs.org",
                         "@name": "media.readthedocs.org",
                         "@source_id": "a187301de5216b550db21bb3d073b7ba",
                         "display": "https://media.readthedocs.org/pdf/neuronrain-documentation/latest/neuronrain-documentation.pdf",
                         "url": "https://media.readthedocs.org/pdf/neuronrain-documentation/latest/neuronrain-documentation.pdf"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "5d99cf42-a-62cb3a1a-s-sites.googlegroups.com",
                         "@name": "5d99cf42-a-62cb3a1a-s-sites.googlegroups.com",
                         "@source_id": "27bc4419dd77f547f973c57389952486",
                         "display": "https://5d99cf42-a-62cb3a1a-s-sites.googlegroups.com/site/kuja27/CV_of_SrinivasanKannan_alias_KaShrinivaasan_alias_ShrinivasKannan.pdf?attachauth=ANoY7cot5zOBoNPJEw-kl3cAhmRiJbeqB43D41dU6ld7NKo06FbHyeR5eGjpXANAfuyVhFc0Cfp6g6vcdpYwfxGCjqUXBK79Py5v2jcQyH1g7gigtpMSH2kV7EoysjqsAmg5_R0bPXbrfzmzMosUDlufh8PGynZO3IaV5uLr-eqoLs_2zGk3pXgxzju_ucU8rTDlFN8xtvNyGMI4tMcYKlHdadi41idbXK2JrmSteqZ5NubGv8iI5pxm_mg-_rQFi0Qn_F7gr_EUSW53mh835atEu_lFZwa-og%3D%3D&attredirects=0",
                         "url": "https://5d99cf42-a-62cb3a1a-s-sites.googlegroups.com/site/kuja27/CV_of_SrinivasanKannan_alias_KaShrinivaasan_alias_ShrinivasKannan.pdf?attachauth=ANoY7cot5zOBoNPJEw-kl3cAhmRiJbeqB43D41dU6ld7NKo06FbHyeR5eGjpXANAfuyVhFc0Cfp6g6vcdpYwfxGCjqUXBK79Py5v2jcQyH1g7gigtpMSH2kV7EoysjqsAmg5_R0bPXbrfzmzMosUDlufh8PGynZO3IaV5uLr-eqoLs_2zGk3pXgxzju_ucU8rTDlFN8xtvNyGMI4tMcYKlHdadi41idbXK2JrmSteqZ5NubGv8iI5pxm_mg-_rQFi0Qn_F7gr_EUSW53mh835atEu_lFZwa-og%3D%3D&attredirects=0"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "media.readthedocs.org",
                         "@name": "media.readthedocs.org",
                         "@source_id": "ba7becc544f19f6579529dce3617e415",
                         "display": "https://media.readthedocs.org/pdf/neuronrain-documentation/latest/neuronrain-documentation.pdf",
                         "url": "https://media.readthedocs.org/pdf/neuronrain-documentation/latest/neuronrain-documentation.pdf"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "media.readthedocs.org",
                         "@name": "media.readthedocs.org",
                         "@source_id": "8474c14ec15ec65092689cef292773e7",
                         "display": "https://media.readthedocs.org/pdf/neuronrain-documentation/latest/neuronrain-documentation.pdf",
                         "url": "https://media.readthedocs.org/pdf/neuronrain-documentation/latest/neuronrain-documentation.pdf"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "5d99cf42-a-62cb3a1a-s-sites.googlegroups.com",
                         "@name": "5d99cf42-a-62cb3a1a-s-sites.googlegroups.com",
                         "@source_id": "bb9ab15cc8c31a651dc8d169f3cb770b",
                         "display": "https://5d99cf42-a-62cb3a1a-s-sites.googlegroups.com/site/kuja27/CV_of_SrinivasanKannan_alias_KaShrinivaasan_alias_ShrinivasKannan.pdf?attachauth=ANoY7cot5zOBoNPJEw-kl3cAhmRiJbeqB43D41dU6ld7NKo06FbHyeR5eGjpXANAfuyVhFc0Cfp6g6vcdpYwfxGCjqUXBK79Py5v2jcQyH1g7gigtpMSH2kV7EoysjqsAmg5_R0bPXbrfzmzMosUDlufh8PGynZO3IaV5uLr-eqoLs_2zGk3pXgxzju_ucU8rTDlFN8xtvNyGMI4tMcYKlHdadi41idbXK2JrmSteqZ5NubGv8iI5pxm_mg-_rQFi0Qn_F7gr_EUSW53mh835atEu_lFZwa-og%3D%3D&attredirects=0",
                         "url": "https://5d99cf42-a-62cb3a1a-s-sites.googlegroups.com/site/kuja27/CV_of_SrinivasanKannan_alias_KaShrinivaasan_alias_ShrinivasKannan.pdf?attachauth=ANoY7cot5zOBoNPJEw-kl3cAhmRiJbeqB43D41dU6ld7NKo06FbHyeR5eGjpXANAfuyVhFc0Cfp6g6vcdpYwfxGCjqUXBK79Py5v2jcQyH1g7gigtpMSH2kV7EoysjqsAmg5_R0bPXbrfzmzMosUDlufh8PGynZO3IaV5uLr-eqoLs_2zGk3pXgxzju_ucU8rTDlFN8xtvNyGMI4tMcYKlHdadi41idbXK2JrmSteqZ5NubGv8iI5pxm_mg-_rQFi0Qn_F7gr_EUSW53mh835atEu_lFZwa-og%3D%3D&attredirects=0"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "openhub.net",
                         "@name": "openhub.net",
                         "@source_id": "9bdcae1054557a34a719bcb4ad9aef83",
                         "display": "https://www.openhub.net/accounts/ka_shrinivaasan",
                         "url": "https://www.openhub.net/accounts/ka_shrinivaasan"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "openhub.net",
                         "@name": "openhub.net",
                         "@source_id": "1b11ac4c32332032b2519b0c8891b727",
                         "display": "https://www.openhub.net/accounts/ka_shrinivaasan",
                         "url": "https://www.openhub.net/accounts/ka_shrinivaasan"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "media.readthedocs.org",
                         "@name": "media.readthedocs.org",
                         "@source_id": "5b9c377a5214db6b93f47938dd2b370c",
                         "display": "https://media.readthedocs.org/pdf/neuronrain-documentation/latest/neuronrain-documentation.pdf",
                         "url": "https://media.readthedocs.org/pdf/neuronrain-documentation/latest/neuronrain-documentation.pdf"
                    },
                    {
                         "@category": "personal_profiles",
                         "@domain": "sites.google.com",
                         "@last_seen": "2018-06-28",
                         "@valid_since": "2014-01-01",
                         "display": "https://sites.google.com/site/kuja27/",
                         "url": "https://sites.google.com/site/kuja27/"
                    },
                    {
                         "@category": "personal_profiles",
                         "@domain": "sourceforge.net",
                         "@last_seen": "2018-06-28",
                         "@valid_since": "2015-09-30",
                         "display": "http://sourceforge.net/users/ka_shrinivaasan",
                         "url": "http://sourceforge.net/users/ka_shrinivaasan"
                    },
                    {
                         "@category": "personal_profiles",
                         "@domain": "facebook.com",
                         "@valid_since": "2014-01-01",
                         "display": "http://www.facebook.com/shrinivaasan.ka",
                         "url": "http://www.facebook.com/shrinivaasan.ka"
                    }
               ],
               "user_ids": [
                    {
                         "@last_seen": "2018-06-28",
                         "@valid_since": "2010-07-08",
                         "content": "5611688@linkedin",
                         "display": "5611688@linkedin"
                    },
                    {
                         "@valid_since": "2013-02-16",
                         "content": "51784765@N08@flickr",
                         "display": "51784765@N08@flickr"
                    },
                    {
                         "@last_seen": "2017-02-02",
                         "@valid_since": "2011-06-28",
                         "content": "14233931@twitter",
                         "display": "14233931@twitter"
                    },
                    {
                         "@valid_since": "2011-12-05",
                         "content": "1186474769@facebook",
                         "display": "1186474769@facebook"
                    },
                    {
                         "@valid_since": "2013-01-18",
                         "content": "103402979170580834945@google",
                         "display": "103402979170580834945@google"
                    },
                    {
                         "@last_seen": "2018-06-28",
                         "@valid_since": "2010-07-08",
                         "content": "1/a67/608@linkedin",
                         "display": "1/a67/608@linkedin"
                    },
                    {
                         "@last_seen": "2018-06-28",
                         "@valid_since": "2010-07-08",
                         "content": "#608a671@linkedin",
                         "display": "#608a671@linkedin"
                    }
               ],
               "usernames": [
                    {
                         "@valid_since": "2011-12-05",
                         "content": "shrinivaasan.ka",
                         "display": "shrinivaasan.ka"
                    },
                    {
                         "@last_seen": "2017-02-02",
                         "@valid_since": "2011-06-28",
                         "content": "ka_shrinivaasan",
                         "display": "ka_shrinivaasan"
                    }
               ]
          },
          "query": {
               "emails": [
                    {
                         "address": "kashrinivaasan@live.com",
                         "address_md5": "6764275e5425999d910c4ac9976b1438",
                         "display": "kashrinivaasan@live.com"
                    }
               ],
               "names": [
                    {
                         "display": "Srinivasan Kannan",
                         "first": "Srinivasan",
                         "last": "Kannan"
                    }
               ]
          }
     }
]
[
     {
          "@available_sources": 108,
          "@http_status_code": 200,
          "@persons_count": 1,
          "@search_id": "1909110837557399604094477464130613465",
          "@visible_sources": 15,
          "available_data": {
               "premium": {
                    "addresses": 2,
                    "educations": 5,
                    "emails": 6,
                    "genders": 1,
                    "images": 5,
                    "jobs": 24,
                    "names": 3,
                    "relationships": 6,
                    "social_profiles": 6,
                    "user_ids": 7,
                    "usernames": 2
               }
          },
          "person": {
               "@id": "16986908-d9c4-4a03-b6d3-d3e5bc578905",
               "@match": 1.0,
               "@search_pointer": "",
               "addresses": [
                    {
                         "@last_seen": "2018-06-28",
                         "@valid_since": "2010-12-03",
                         "city": "Chennai",
                         "country": "IN",
                         "display": "Chennai, India"
                    },
                    {
                         "@last_seen": "2018-06-28",
                         "@type": "work",
                         "@valid_since": "2015-09-30",
                         "city": "Kumbakonam",
                         "country": "IN",
                         "display": "Kumbakonam, India"
                    }
               ],
               "emails": [
                    {
                         "@email_provider": true,
                         "@last_seen": "2018-12-15",
                         "@type": "personal",
                         "@valid_since": "2012-07-22",
                         "address": "full.email.available@business.subscription",
                         "address_md5": "af96cf33e2024e7328bbc7675f771b1e",
                         "display": "full.email.available@business.subscription"
                    },
                    {
                         "@email_provider": true,
                         "@type": "personal",
                         "@valid_since": "2011-12-05",
                         "address": "full.email.available@business.subscription",
                         "address_md5": "a9e46cba401df1afdd7e1b5eba5b21a1",
                         "display": "full.email.available@business.subscription"
                    },
                    {
                         "@email_provider": true,
                         "@type": "personal",
                         "@valid_since": "2010-07-08",
                         "address": "full.email.available@business.subscription",
                         "address_md5": "5a35e71a9e313cd83fc1b36e8a921f51",
                         "display": "full.email.available@business.subscription"
                    },
                    {
                         "@email_provider": false,
                         "@last_seen": "2018-12-15",
                         "@valid_since": "2012-12-27",
                         "address": "full.email.available@business.subscription",
                         "address_md5": "6764275e5425999d910c4ac9976b1438",
                         "display": "full.email.available@business.subscription"
                    },
                    {
                         "@email_provider": true,
                         "@type": "personal",
                         "@valid_since": "2013-01-18",
                         "address": "full.email.available@business.subscription",
                         "address_md5": "e8c9ea39bf6e7cf1d0b75eaf19bb5760",
                         "display": "full.email.available@business.subscription"
                    },
                    {
                         "@email_provider": false,
                         "@type": "work",
                         "@valid_since": "2012-12-19",
                         "address": "full.email.available@business.subscription",
                         "address_md5": "0ba5c26ba75e2c48b4f08dc8e7b5d890",
                         "display": "full.email.available@business.subscription"
                    }
               ],
               "gender": {
                    "@valid_since": "2011-12-05",
                    "content": "male",
                    "display": "Male"
               },
               "images": [
                    {
                         "@valid_since": "2011-12-05",
                         "display": "http://graph.facebook.com/1186474769/picture?type=large",
                         "thumbnail_token": "AE2861B242686E6ACBCD539D133B8AE59A9AE962DB1FA5AA7AF08DAAD76B0DFE1F64838CD9CDB2322ADF85744B699B543C4E5FE3AC5A925CC78A78485D1B1861F699",
                         "url": "http://graph.facebook.com/1186474769/picture?type=large"
                    },
                    {
                         "@valid_since": "2016-01-17",
                         "display": "https://s-media-cache-ak0.pinimg.com/avatars/shrinivaasanka_1392636070_140.jpg",
                         "thumbnail_token": "AE2861B20B7D6E22CA814E9059348AAB9C99E565D51CA7AE27F1CCF2813454AE0530DAD8D9DCAD302ACB85625B6E8A56301D5AF4BF5C841BCD927073511B186BF39AC63006E11FBB5344F8B1D7E0B6B7AD9EBF71FCF012DD7E",
                         "url": "https://s-media-cache-ak0.pinimg.com/avatars/shrinivaasanka_1392636070_140.jpg"
                    },
                    {
                         "@last_seen": "2018-06-28",
                         "@valid_since": "2018-06-28",
                         "display": "https://media.licdn.com/dms/image/C5103AQElIOVKZ6nowg/profile-displayphoto-shrink_200_200/0?e=1535587200&v=beta&t=KGXPR6F4RKV3CymWr3LeTWUcV3de2Z7r2q2uAXaHZzk",
                         "thumbnail_token": "AE2861B20B7D6E22D4C9479C5C7387EF9C9CE823D35EABEA73B2CFB4863058AE4E7CF680C78DE8100FEF9B583B4BA97E6F1D5CF5B9128708CC9F784005054530B6D99C6148A128E5131BFBA8CFF5F9BDB5A8E97CF99A12DD7A9948B1D92730DCE7C5B74B5A526211CCC892B90151753EF5024DCEF082F55F1D7CD48C24C2D3BC4B16AE791B158B4A2F1489127F24C416775DD40F4560CE582B87BC16D23EB38D8D8373FBD7",
                         "url": "https://media.licdn.com/dms/image/C5103AQElIOVKZ6nowg/profile-displayphoto-shrink_200_200/0?e=1535587200&v=beta&t=KGXPR6F4RKV3CymWr3LeTWUcV3de2Z7r2q2uAXaHZzk"
                    },
                    {
                         "@last_seen": "2017-02-02",
                         "@valid_since": "2017-02-02",
                         "display": "http://pbs.twimg.com/profile_images/823093144023494656/uh0w69z8.jpg",
                         "thumbnail_token": "AE2861B242686E7DDBDF0D814A3486E1D19BE9609F41B4AA71B6D0FEB03454A84C36C69ACE8FE8616799C625402DD0176D4A07B4EB0BD80FCBC9661A59521977AFD9972655A229EE5A47EFE393B3",
                         "url": "http://pbs.twimg.com/profile_images/823093144023494656/uh0w69z8.jpg"
                    },
                    {
                         "@valid_since": "2014-03-29",
                         "display": "http://lh4.googleusercontent.com/-lsiOU7rL21o/AAAAAAAAAAI/AAAAAAAAAF0/JajVx47Doq4/photo.jpg",
                         "thumbnail_token": "AE2861B242686E61D1980D9252328CEA9A8DF568C252A9AB63BAD2EFC13E56A4047ED9C69FF28E662CE6C5201B32A365183272C39F7CB63BEAD6506D2169601884E8B14601FE0AEB0D22AEEF90C3FFA2EAD8AB24A6B14FC320C61FA8D869688DE9C5B2455F54",
                         "url": "http://lh4.googleusercontent.com/-lsiOU7rL21o/AAAAAAAAAAI/AAAAAAAAAF0/JajVx47Doq4/photo.jpg"
                    }
               ],
               "names": [
                    {
                         "@valid_since": "2000-01-01",
                         "display": "Shrinivas Kannan",
                         "first": "Shrinivas",
                         "last": "Kannan"
                    },
                    {
                         "@last_seen": "2018-06-28",
                         "@valid_since": "2014-01-01",
                         "display": "Srinivasan Kannan",
                         "first": "Srinivasan",
                         "last": "Kannan"
                    },
                    {
                         "@valid_since": "2011-12-05",
                         "display": "Shrinivaasan Ka",
                         "first": "Shrinivaasan",
                         "last": "Ka"
                    }
               ],
               "relationships": [
                    {
                         "@subtype": "Follower",
                         "@type": "other",
                         "@valid_since": "2012-07-13",
                         "names": [
                              {
                                   "@valid_since": "2012-07-13",
                                   "display": "Vinod Kumar Devi",
                                   "first": "Vinod",
                                   "last": "Devi",
                                   "middle": "Kumar"
                              }
                         ]
                    },
                    {
                         "@subtype": "Follower",
                         "@type": "other",
                         "@valid_since": "2012-07-13",
                         "names": [
                              {
                                   "@valid_since": "2012-07-13",
                                   "display": "Prakash Chandrasekaran",
                                   "first": "Prakash",
                                   "last": "Chandrasekaran"
                              }
                         ]
                    },
                    {
                         "@subtype": "Follower",
                         "@type": "other",
                         "@valid_since": "2012-07-13",
                         "names": [
                              {
                                   "@valid_since": "2012-07-13",
                                   "display": "Pranabendu Misra",
                                   "first": "Pranabendu",
                                   "last": "Misra"
                              }
                         ]
                    },
                    {
                         "@subtype": "Follower",
                         "@type": "other",
                         "@valid_since": "2012-07-13",
                         "names": [
                              {
                                   "@valid_since": "2012-07-13",
                                   "display": "Ram Janakiraman",
                                   "first": "Ram",
                                   "last": "Janakiraman"
                              }
                         ]
                    },
                    {
                         "@subtype": "Follower",
                         "@type": "other",
                         "@valid_since": "2012-07-13",
                         "names": [
                              {
                                   "@valid_since": "2012-07-13",
                                   "display": "Jose Mathew",
                                   "first": "Jose",
                                   "last": "Mathew"
                              }
                         ]
                    },
                    {
                         "@subtype": "Follower",
                         "@type": "other",
                         "@valid_since": "2012-07-13",
                         "names": [
                              {
                                   "@valid_since": "2012-07-13",
                                   "display": "Shubho Sengupta",
                                   "first": "Shubho",
                                   "last": "Sengupta"
                              }
                         ]
                    }
               ],
               "urls": [
                    {
                         "@category": "professional_and_business",
                         "@domain": "linkedin.com",
                         "@name": "LinkedIn",
                         "@source_id": "3226b889ddb5e951c00e509d2f677d39",
                         "display": "https://www.linkedin.com/in/srinivasan-kannan-608a671",
                         "url": "https://www.linkedin.com/in/srinivasan-kannan-608a671"
                    },
                    {
                         "@category": "personal_profiles",
                         "@domain": "facebook.com",
                         "@name": "Facebook",
                         "@source_id": "304265879bd07c9f1ba793284967b272",
                         "display": "http://facebook.com/people/_/1186474769",
                         "url": "http://facebook.com/people/_/1186474769"
                    },
                    {
                         "@category": "personal_profiles",
                         "@domain": "twitter.com",
                         "@name": "Twitter",
                         "@source_id": "ba371ee483f15414764f0b6797df4b60",
                         "display": "http://www.twitter.com/ka_shrinivaasan",
                         "url": "http://www.twitter.com/ka_shrinivaasan"
                    },
                    {
                         "@category": "personal_profiles",
                         "@domain": "pinterest.com",
                         "@name": "Pinterest",
                         "@source_id": "c405e60965da03eb4ce5a2965a77f127",
                         "display": "http://pinterest.com/shrinivaasanka/",
                         "url": "http://pinterest.com/shrinivaasanka/"
                    },
                    {
                         "@category": "personal_profiles",
                         "@domain": "flickr.com",
                         "@name": "Flickr",
                         "@source_id": "63eefc3611d18b58921a5ccb51c2d500",
                         "display": "http://www.flickr.com/people/51784765@N08/",
                         "url": "http://www.flickr.com/people/51784765@N08/"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "media.readthedocs.org",
                         "@name": "media.readthedocs.org",
                         "@source_id": "8474c14ec15ec65092689cef292773e7",
                         "display": "https://media.readthedocs.org/pdf/neuronrain-documentation/latest/neuronrain-documentation.pdf",
                         "url": "https://media.readthedocs.org/pdf/neuronrain-documentation/latest/neuronrain-documentation.pdf"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "openhub.net",
                         "@name": "openhub.net",
                         "@source_id": "7f0c0fa64f272b316c76abaf6b787b8d",
                         "display": "https://www.openhub.net/accounts/ka_shrinivaasan",
                         "url": "https://www.openhub.net/accounts/ka_shrinivaasan"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "5d99cf42-a-62cb3a1a-s-sites.googlegroups.com",
                         "@name": "5d99cf42-a-62cb3a1a-s-sites.googlegroups.com",
                         "@source_id": "27bc4419dd77f547f973c57389952486",
                         "display": "https://5d99cf42-a-62cb3a1a-s-sites.googlegroups.com/site/kuja27/CV_of_SrinivasanKannan_alias_KaShrinivaasan_alias_ShrinivasKannan.pdf?attachauth=ANoY7cot5zOBoNPJEw-kl3cAhmRiJbeqB43D41dU6ld7NKo06FbHyeR5eGjpXANAfuyVhFc0Cfp6g6vcdpYwfxGCjqUXBK79Py5v2jcQyH1g7gigtpMSH2kV7EoysjqsAmg5_R0bPXbrfzmzMosUDlufh8PGynZO3IaV5uLr-eqoLs_2zGk3pXgxzju_ucU8rTDlFN8xtvNyGMI4tMcYKlHdadi41idbXK2JrmSteqZ5NubGv8iI5pxm_mg-_rQFi0Qn_F7gr_EUSW53mh835atEu_lFZwa-og%3D%3D&attredirects=0",
                         "url": "https://5d99cf42-a-62cb3a1a-s-sites.googlegroups.com/site/kuja27/CV_of_SrinivasanKannan_alias_KaShrinivaasan_alias_ShrinivasKannan.pdf?attachauth=ANoY7cot5zOBoNPJEw-kl3cAhmRiJbeqB43D41dU6ld7NKo06FbHyeR5eGjpXANAfuyVhFc0Cfp6g6vcdpYwfxGCjqUXBK79Py5v2jcQyH1g7gigtpMSH2kV7EoysjqsAmg5_R0bPXbrfzmzMosUDlufh8PGynZO3IaV5uLr-eqoLs_2zGk3pXgxzju_ucU8rTDlFN8xtvNyGMI4tMcYKlHdadi41idbXK2JrmSteqZ5NubGv8iI5pxm_mg-_rQFi0Qn_F7gr_EUSW53mh835atEu_lFZwa-og%3D%3D&attredirects=0"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "media.readthedocs.org",
                         "@name": "media.readthedocs.org",
                         "@source_id": "ba7becc544f19f6579529dce3617e415",
                         "display": "https://media.readthedocs.org/pdf/neuronrain-documentation/latest/neuronrain-documentation.pdf",
                         "url": "https://media.readthedocs.org/pdf/neuronrain-documentation/latest/neuronrain-documentation.pdf"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "media.readthedocs.org",
                         "@name": "media.readthedocs.org",
                         "@source_id": "a187301de5216b550db21bb3d073b7ba",
                         "display": "https://media.readthedocs.org/pdf/neuronrain-documentation/latest/neuronrain-documentation.pdf",
                         "url": "https://media.readthedocs.org/pdf/neuronrain-documentation/latest/neuronrain-documentation.pdf"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "5d99cf42-a-62cb3a1a-s-sites.googlegroups.com",
                         "@name": "5d99cf42-a-62cb3a1a-s-sites.googlegroups.com",
                         "@source_id": "bb9ab15cc8c31a651dc8d169f3cb770b",
                         "display": "https://5d99cf42-a-62cb3a1a-s-sites.googlegroups.com/site/kuja27/CV_of_SrinivasanKannan_alias_KaShrinivaasan_alias_ShrinivasKannan.pdf?attachauth=ANoY7cot5zOBoNPJEw-kl3cAhmRiJbeqB43D41dU6ld7NKo06FbHyeR5eGjpXANAfuyVhFc0Cfp6g6vcdpYwfxGCjqUXBK79Py5v2jcQyH1g7gigtpMSH2kV7EoysjqsAmg5_R0bPXbrfzmzMosUDlufh8PGynZO3IaV5uLr-eqoLs_2zGk3pXgxzju_ucU8rTDlFN8xtvNyGMI4tMcYKlHdadi41idbXK2JrmSteqZ5NubGv8iI5pxm_mg-_rQFi0Qn_F7gr_EUSW53mh835atEu_lFZwa-og%3D%3D&attredirects=0",
                         "url": "https://5d99cf42-a-62cb3a1a-s-sites.googlegroups.com/site/kuja27/CV_of_SrinivasanKannan_alias_KaShrinivaasan_alias_ShrinivasKannan.pdf?attachauth=ANoY7cot5zOBoNPJEw-kl3cAhmRiJbeqB43D41dU6ld7NKo06FbHyeR5eGjpXANAfuyVhFc0Cfp6g6vcdpYwfxGCjqUXBK79Py5v2jcQyH1g7gigtpMSH2kV7EoysjqsAmg5_R0bPXbrfzmzMosUDlufh8PGynZO3IaV5uLr-eqoLs_2zGk3pXgxzju_ucU8rTDlFN8xtvNyGMI4tMcYKlHdadi41idbXK2JrmSteqZ5NubGv8iI5pxm_mg-_rQFi0Qn_F7gr_EUSW53mh835atEu_lFZwa-og%3D%3D&attredirects=0"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "openhub.net",
                         "@name": "openhub.net",
                         "@source_id": "9bdcae1054557a34a719bcb4ad9aef83",
                         "display": "https://www.openhub.net/accounts/ka_shrinivaasan",
                         "url": "https://www.openhub.net/accounts/ka_shrinivaasan"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "openhub.net",
                         "@name": "openhub.net",
                         "@source_id": "1b11ac4c32332032b2519b0c8891b727",
                         "display": "https://www.openhub.net/accounts/ka_shrinivaasan",
                         "url": "https://www.openhub.net/accounts/ka_shrinivaasan"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "media.readthedocs.org",
                         "@name": "media.readthedocs.org",
                         "@source_id": "5b9c377a5214db6b93f47938dd2b370c",
                         "display": "https://media.readthedocs.org/pdf/neuronrain-documentation/latest/neuronrain-documentation.pdf",
                         "url": "https://media.readthedocs.org/pdf/neuronrain-documentation/latest/neuronrain-documentation.pdf"
                    },
                    {
                         "@category": "personal_profiles",
                         "@domain": "sites.google.com",
                         "@last_seen": "2018-06-28",
                         "@valid_since": "2014-01-01",
                         "display": "https://sites.google.com/site/kuja27/",
                         "url": "https://sites.google.com/site/kuja27/"
                    },
                    {
                         "@category": "personal_profiles",
                         "@domain": "sourceforge.net",
                         "@last_seen": "2018-06-28",
                         "@valid_since": "2015-09-30",
                         "display": "http://sourceforge.net/users/ka_shrinivaasan",
                         "url": "http://sourceforge.net/users/ka_shrinivaasan"
                    },
                    {
                         "@category": "personal_profiles",
                         "@domain": "facebook.com",
                         "@valid_since": "2014-01-01",
                         "display": "http://www.facebook.com/shrinivaasan.ka",
                         "url": "http://www.facebook.com/shrinivaasan.ka"
                    }
               ],
               "user_ids": [
                    {
                         "@last_seen": "2018-06-28",
                         "@valid_since": "2010-07-08",
                         "content": "5611688@linkedin",
                         "display": "5611688@linkedin"
                    },
                    {
                         "@valid_since": "2013-02-16",
                         "content": "51784765@N08@flickr",
                         "display": "51784765@N08@flickr"
                    },
                    {
                         "@last_seen": "2017-02-02",
                         "@valid_since": "2011-06-28",
                         "content": "14233931@twitter",
                         "display": "14233931@twitter"
                    },
                    {
                         "@valid_since": "2011-12-05",
                         "content": "1186474769@facebook",
                         "display": "1186474769@facebook"
                    },
                    {
                         "@valid_since": "2013-01-18",
                         "content": "103402979170580834945@google",
                         "display": "103402979170580834945@google"
                    },
                    {
                         "@last_seen": "2018-06-28",
                         "@valid_since": "2010-07-08",
                         "content": "1/a67/608@linkedin",
                         "display": "1/a67/608@linkedin"
                    },
                    {
                         "@last_seen": "2018-06-28",
                         "@valid_since": "2010-07-08",
                         "content": "#608a671@linkedin",
                         "display": "#608a671@linkedin"
                    }
               ],
               "usernames": [
                    {
                         "@valid_since": "2011-12-05",
                         "content": "shrinivaasan.ka",
                         "display": "shrinivaasan.ka"
                    },
                    {
                         "@last_seen": "2017-02-02",
                         "@valid_since": "2011-06-28",
                         "content": "ka_shrinivaasan",
                         "display": "ka_shrinivaasan"
                    }
               ]
          },
          "query": {
               "emails": [
                    {
                         "@type": "personal",
                         "address": "ka.shrinivaasan@gmail.com",
                         "address_md5": "af96cf33e2024e7328bbc7675f771b1e",
                         "display": "ka.shrinivaasan@gmail.com"
                    }
               ],
               "names": [
                    {
                         "display": "Srinivasan Kannan",
                         "first": "Srinivasan",
                         "last": "Kannan"
                    }
               ]
          }
     },
     {
          "@available_sources": 151,
          "@http_status_code": 200,
          "@persons_count": 18,
          "@search_id": "1909110838012194018513888886462560180",
          "available_data": {
               "premium": {
                    "addresses": 53,
                    "dobs": 3,
                    "educations": 29,
                    "genders": 16,
                    "images": 27,
                    "jobs": 116,
                    "landline_phones": 8,
                    "languages": 6,
                    "mobile_phones": 11,
                    "names": 31,
                    "origin_countries": 8,
                    "phones": 19,
                    "relationships": 11,
                    "social_profiles": 32,
                    "user_ids": 50,
                    "usernames": 13
               }
          },
          "possible_persons": [
               {
                    "@match": 0.14,
                    "@search_pointer": "5b1a46e4d43365daa0c35bee85eb02f35709b962da6a41b978f6698275c9b5d11ed283a09170252912cb782a233e157f38218ff0f14023ce6702b3fc3a9b41644d27f348b79f0ac60bc55e48788310242fcac7bf2b65b04a4d5a0ed7eb863a85d2a855cebad852741973d36a395194303fde9fdff9a6681e81e1abc3838d0dab199e2c3c101d9e7418faaad1ebcd188c0ec1be85fe015a2609d4589f5f5639770c48ba7a7c7dc2bb284dc404c9cc4ebd2cea5aa0d8ee741ceca1ced917bf1b9eed90dbc2775e8cf7636dbdc0df29f3956cce8e622d1525b851b5a780312b2d60966f42b00acaa5740e51602c492cb13601e19471eee8abdb5d1b422cf06284a2a745cdaaf063887ff70212bb9a4ed3ad17db433e18d42fcdc39123b9e2d027b1a53d91d92bb71ffe670ae554858bc12f8e76a7f8ab3500c65ffac85771173b4791a6c6c744a71bcdc003e97bbb67731c3661a7abae6fb28e9b2fb50d699163afa9ddfde76830d21bfd8451b37490a5a3f80ac64922eb322472f6260af4f28d0d31989eaeca71b5fa7b23de200430efb80dbe4e9b99d73d25d75bbec2376c9f0ea985e789d1d69654c5ee75983dba00e12604ba18c367a6467bedcf00ba4c04288d44d42c570d2f60841270783e2abf8cfff31ca00861beb0743890daa73ab3bb4691fae4ed7ed96eba4a9f17c0ff8e74ec537094f93a425076392b27c58e54692f797b685e9cae414005e842300c5d0b3e5f5488a9f058069a13ee86a9b2cd8e3ddf0d3f7ed7b2a3c1068723e8116dc838775b83d14ea38ec9c02884f58c819e5639b082a70b7a7c5b8914cecd9fd7a2748e71e6a9bcc437e7d7cff6e0e1d778e0bd58764049ea018483a5579ed4540c5ab1c9ff7f4d9ab55dd7aa38238d0e0e3631c5d82f7db8b6b9315167f8e77f53d897930ff3401f872835aa424292c9964871430e198bf5db372b7f3eaa01eac614483275bc0ee8672f966e711d61de7d75598fa53129ff41cebf4b4ce421a9746f50da235216aad49090135f731bf017167665d94a312824a413012a34220c03e4adc4ca1b01db6e9987b2797f49c57589f1a28f58ae8a56ef58a39505db7520623c015413def4716f9593cc808e210ace4c4d262ebb169ddc3507335f03b042bcb499bfa2eb049610fc128300bff9bc912f64d8cd13c2469d523f30893dfcecef94811a3ee833384d7b5b021d48322499a852d4e67a2c8cbb1769724d44cde3c2305c268893c94f6f246ac02955159340ded7286e4cfe4e05f5c741ebc7b4d75ed1276c5055b4c0dfae2236be5a19c0acef25d7fa5672a10bf151881eb773525e10be4bcdd3b1f885e6a19ec6bd7e2ecf202a2c6f6529ed7a4accc2f184f65e4830401edb3d7459fc787ccbd12ffdd43015b1652e5ffeac27e84c125b36c88d094bff4205ded132887ca990c94fd25eb40d2a5758bca95e6c24916d4f9879fc95fac96b7840b838a2c97a072a4fed4c9ebe17e5ba112abb9d20ac92b3f2da0b2cc82483f7121efdba1da83c6ccc149d11c88b7205ed95ff7e9f94eeeccf3bedc88c9429ea9723d5ed97eebc5a28acf3b1475e4532798b9047bf4dc18e6b2641f6a056830e9daf0846bea3b526804c81be09bd7d9534729a0c6818fa54d4143ff6dab1800e4987b6473d19ae0c527623d07501e3693aadf93a9f936e19830d1663e05a58cc6eab18f5dbc42a59f7baa201a17d177674218148dfbf9ff7ae42aa1a77b752462c1a64bdfc75dc4ea3af616d76fca425345d2e81756fdd07c7095893d5b6e6d69faa79af1da03cabcd0e20ef6a29fb1b9ce66a1831b541e4181cf671d87361942a20b7360d9b866edc128742f10f520b41b86c983553f7cacdfc4e3e83e888d6fb3779523b64ad1d4038288bdbba0c9830b202398a50b84605cd7b3ec4b1005747d90fe82aafde651869d7d42b6f738a43afccf36b65fbc0cb371e93f88a99d191823a9246af4cf6c03763723f54fa793ff9a41e7411c5e416672fa65a1f7e136df07eecf39cbdad7c693d7ec82999809e30f6898089fc30a4ddf2dc815cd4ad9deaea764fe53beb116f0e3af3645a2021cb20c96bcf6a1ab4fa76ad96965fe5631d07d59f08f26304a811ec63bdc6a24b8587acdb8730ba6cdb297ea5084be20922613f45a60856cac8faa7674a56289974fd96fc82e700c10a18cb31312077d2e91d0992a286c300ae46ab1f49e3ab360a297d519dc0bdc81a9549276d188438ae01188d85baaa19fe3080334531c2ee1c389cbd7a9704fa51db096c9de2e4d709ecc7e13d22384437d89ba7da10c9b651cd30f78cf5761749135ace03ce5bea2e37f42fbc4e456df2e095a4906d26c51379a00a91894167999946813f3f00a5ded4c2a327e76a1d696013d30de3fec7adb82874348a107fe09a090e337470493dd4a9b51d911a8dead98272f7bdf200c460ecd0acbece6dcc0c1fa52fcfdc6631f58be6ad5c645aef96a1ac6d51bc5af6d37913b58e6393d3da3076d40644c7f46cdd302e9dc6917bda7d78e4b202f3b42b0e4e85cf5cbdfeb2153fb8c507f0ba2aafcf50114e96d942594013a71732775369a685214a65ebca0aeb502f932d36be3cb00b5d170f151e7b191283a35f2fde301da397e1c61bd3c0f9263ce4dc49fa631237f9852859bb4fab6b1160db4d60bc78b33fa7c9d5d7eed5a7fc888381882a435551f7f32b4cb079310a0711415b36d20ab46e5e4cc5c60a36154f9f6de1c1fb20dc57a6fced51a050ba407f002663a13549473456f5a0f6b35c3cd422fc99d9c90eff5abd94c9bf946134760bb11da8bfa03f9826299a18be64b4e79a76154662be5561598918966edbdb19583d52e66a5cc42d51722464089fcf86b73a279d7886fdcaeae486dd7c97a76527dd352e4cb8eeeb9bea939639e301abefb48f622c5ad2ea66831ab8176345393ca84c11198d0f4b344cbc6f481566d217438e2a7070db896738772ca70fc85afc29f823766ce8784f235c1879c74ebe0287b4d5e4175bb21fbee303bce1c7ae9bf2ca2e90ff7c8f7a6d459f506da881771e143348b89d4f439b139214ad890ae32feeb5faa711cc19090f539fba86979578ef6a63f08a4500ed09762abb7e25e4d963be0a8b9152e181d09983269600711eb6342ac23d57ad849da6965f26d45e6de4b4837e9f19d85a647dd697341f9ff4eabf1e15dc27f7e8130dd0921ba872db3ab564f3ac80323cd916e8c2322d3b65fb241ab17f64209fb7f6713115fee8a970a27e5424cdff211dd927c92d5ff70a3d8df9608671494c51f946b4452dc5a3721c1d453c3b286a7ce2c606c5c3fcd78d99bd522fb9d2e98c08fe64001ef8c0cd416e294e1b6d82da28397e00d495ba613d38b6a037ba1113e5fa2930e43668c3961f5313af9d21583d7256eda6d3e5bf8394977606b6d9a5ec3995a376bcd25d3b968f53405ea9d3789728c7edba3b6c67ab7081e2204960ed264b6741125855d1fefd58c3f2b82ed5a36605cb5caa8e1ec2644c6e5f1d51ebc530aa8a76c0a83147108e1daa5a66c07e39e10eaefa8c02e0c0d67406744ee4c890ee6415865a030a8ca0c372082919c98fb2d4bc2e7ad96f0ffb85474649c9e48b0a4fcf7c5b8922752ab69e7b71fb4200f45fb5142a9d93f718727d2c8061817c5edb7cc030330ecb25c43599908c9606662e36f36550965eb5b8606122eb50d53c697885f29281e5fa2e82650f8247fe60e905c7e22f09a475f9f1f3d6b6839f4cd880a03a821adf5ee694429ad68599763cea6b7682ec16ef7702363c191b162335e4c6f5ec573280e60a3f86808c7e11c6789901a3dba78852c620a13d64766b5200f94b87bebd729b22bb01cb0773cf78c65827a87671189e4148b7a56a57504eb50b756d836ee5d24bcc50f149b4a051fb4fff36aab414b14d83cfe8e35386902a645857c0c9cfafaf3cab56f2088ec3cac28068f9f0c78274554e8db738c9e39f984608278c08f2b96503edf8868113e6eb2ab003b2d6b7a354066340da1556a0a98befc0895a117244618acc6b627241056c08192b61ddc03a8973a10d393ca3c3a09266223703f06e4a69a0f761a06332deac633317eb6c33ec6cfaf85760662340006af2b6906dce3048889988f2a0d0481fa8b2e86bbf3fbc024438aeccbffa9aaa5a5668583cef9f41e74427d3efdb4645e43f3a7759f6e1b42dd05b20851e3078e0dd31783174a6ac46072e2556f008e4bc20a8761e0d18a94e0535da44e3e2ed5c4e02ec8517e05c3e6b8551ee2e9303012bf9211bd97c0693047db1706595afb47d696f7ce282837ac48fc3e7508eda70e885e50602d8b54da0bd6bbc4bbcbb7efa4dc5beafcac4e47fc43795fd7c210333452d6755a87afc9e8e8378f06722e70c5b9f13e225885616b9ec0956ae7364d11d5bd758af96d5f324a16507b44f77a35a7e8f39e61a619f546570adbc172c8b4682c47588b525a4e4d9cd875094733bee572cfa764550f3445e7f7922bc1e617fbbe231fe01a357e1d447d424bab8fffb110b7aa4f17e3522067f6d61689b7e6d3634bd4026a716037b52af03670419d550b6ef11276965debab800b09413ed8fb0dffb1381e7e2a709841cef4ea4f89e4a32d551fc6012d623e6155811af6ad8c3602c7bed5ca0faf81072e0984a61d658a6a46b9f31468f65e0b26dde98aad66ae832f1c57d337cda6faba63b0f33454cac90743b67b333ec0fcf60da1ec15da9b404d166945fcd9967d24097270a6d95d9d8d7865924f462b5fc9a58e3a5204fc5ff2fdead608254644a8f57ad51267b164ebfb714c07c6625d8d7178aab25f0bcd773cc0989094bfe726738d815732bb6a9dd2b6ccaf1353ac83941b4a2a442ee89286e0ed38b6b8a8ab6d800b04183e33148d3138cf39ebf045be0540e0160162e1e3c4208f410a10be3655e2ea6db2cb9a4d7a9de5c12273c32e9670db233b6cfe657cf0722bfbbfcdefe1b7bce6020a454db1900f26371c947ed11499e072e0442c6c171957e58b94718b1cbbed88646",
                    "addresses": [
                         {
                              "@last_seen": "2018-06-28",
                              "@valid_since": "2010-12-03",
                              "city": "Chennai",
                              "country": "IN",
                              "display": "Chennai, India"
                         },
                         {
                              "@last_seen": "2018-06-28",
                              "@type": "work",
                              "@valid_since": "2015-09-30",
                              "city": "Kumbakonam",
                              "country": "IN",
                              "display": "Kumbakonam, India"
                         }
                    ],
                    "gender": {
                         "@valid_since": "2011-12-05",
                         "content": "male",
                         "display": "Male"
                    },
                    "images": [
                         {
                              "@valid_since": "2011-12-05",
                              "display": "http://graph.facebook.com/1186474769/picture?type=large",
                              "thumbnail_token": "AE2861B242686E6ACBCD539D133B8AE59A9AE962DB1FA5AA7AF08DAAD76B0DFE1F64838CD9CDB2322ADF85744B699B543C4E5FE3AC5A925CC78A78485D1B1861F699",
                              "url": "http://graph.facebook.com/1186474769/picture?type=large"
                         },
                         {
                              "@valid_since": "2016-01-17",
                              "display": "https://s-media-cache-ak0.pinimg.com/avatars/shrinivaasanka_1392636070_140.jpg",
                              "thumbnail_token": "AE2861B20B7D6E22CA814E9059348AAB9C99E565D51CA7AE27F1CCF2813454AE0530DAD8D9DCAD302ACB85625B6E8A56301D5AF4BF5C841BCD927073511B186BF39AC63006E11FBB5344F8B1D7E0B6B7AD9EBF71FCF012DD7E",
                              "url": "https://s-media-cache-ak0.pinimg.com/avatars/shrinivaasanka_1392636070_140.jpg"
                         },
                         {
                              "@last_seen": "2018-06-28",
                              "@valid_since": "2018-06-28",
                              "display": "https://media.licdn.com/dms/image/C5103AQElIOVKZ6nowg/profile-displayphoto-shrink_200_200/0?e=1535587200&v=beta&t=KGXPR6F4RKV3CymWr3LeTWUcV3de2Z7r2q2uAXaHZzk",
                              "thumbnail_token": "AE2861B20B7D6E22D4C9479C5C7387EF9C9CE823D35EABEA73B2CFB4863058AE4E7CF680C78DE8100FEF9B583B4BA97E6F1D5CF5B9128708CC9F784005054530B6D99C6148A128E5131BFBA8CFF5F9BDB5A8E97CF99A12DD7A9948B1D92730DCE7C5B74B5A526211CCC892B90151753EF5024DCEF082F55F1D7CD48C24C2D3BC4B16AE791B158B4A2F1489127F24C416775DD40F4560CE582B87BC16D23EB38D8D8373FBD7",
                              "url": "https://media.licdn.com/dms/image/C5103AQElIOVKZ6nowg/profile-displayphoto-shrink_200_200/0?e=1535587200&v=beta&t=KGXPR6F4RKV3CymWr3LeTWUcV3de2Z7r2q2uAXaHZzk"
                         },
                         {
                              "@valid_since": "2014-03-29",
                              "display": "http://lh4.googleusercontent.com/-lsiOU7rL21o/AAAAAAAAAAI/AAAAAAAAAF0/JajVx47Doq4/photo.jpg",
                              "thumbnail_token": "AE2861B242686E61D1980D9252328CEA9A8DF568C252A9AB63BAD2EFC13E56A4047ED9C69FF28E662CE6C5201B32A365183272C39F7CB63BEAD6506D2169601884E8B14601FE0AEB0D22AEEF90C3FFA2EAD8AB24A6B14FC320C61FA8D869688DE9C5B2455F54",
                              "url": "http://lh4.googleusercontent.com/-lsiOU7rL21o/AAAAAAAAAAI/AAAAAAAAAF0/JajVx47Doq4/photo.jpg"
                         },
                         {
                              "@last_seen": "2017-02-02",
                              "@valid_since": "2017-02-02",
                              "display": "http://pbs.twimg.com/profile_images/823093144023494656/uh0w69z8.jpg",
                              "thumbnail_token": "AE2861B242686E7DDBDF0D814A3486E1D19BE9609F41B4AA71B6D0FEB03454A84C36C69ACE8FE8616799C625402DD0176D4A07B4EB0BD80FCBC9661A59521977AFD9972655A229EE5A47EFE393B3",
                              "url": "http://pbs.twimg.com/profile_images/823093144023494656/uh0w69z8.jpg"
                         }
                    ],
                    "names": [
                         {
                              "@last_seen": "2018-06-28",
                              "@valid_since": "2014-01-01",
                              "display": "Srinivasan Kannan",
                              "first": "Srinivasan",
                              "last": "Kannan"
                         },
                         {
                              "@valid_since": "2000-01-01",
                              "display": "Shrinivas Kannan",
                              "first": "Shrinivas",
                              "last": "Kannan"
                         },
                         {
                              "@valid_since": "2011-12-05",
                              "display": "Shrinivaasan Ka",
                              "first": "Shrinivaasan",
                              "last": "Ka"
                         }
                    ],
                    "relationships": [
                         {
                              "@subtype": "Follower",
                              "@type": "other",
                              "@valid_since": "2012-07-13",
                              "names": [
                                   {
                                        "@valid_since": "2012-07-13",
                                        "display": "Vinod Kumar Devi",
                                        "first": "Vinod",
                                        "last": "Devi",
                                        "middle": "Kumar"
                                   }
                              ]
                         },
                         {
                              "@subtype": "Follower",
                              "@type": "other",
                              "@valid_since": "2012-07-13",
                              "names": [
                                   {
                                        "@valid_since": "2012-07-13",
                                        "display": "Prakash Chandrasekaran",
                                        "first": "Prakash",
                                        "last": "Chandrasekaran"
                                   }
                              ]
                         },
                         {
                              "@subtype": "Follower",
                              "@type": "other",
                              "@valid_since": "2012-07-13",
                              "names": [
                                   {
                                        "@valid_since": "2012-07-13",
                                        "display": "Pranabendu Misra",
                                        "first": "Pranabendu",
                                        "last": "Misra"
                                   }
                              ]
                         },
                         {
                              "@subtype": "Follower",
                              "@type": "other",
                              "@valid_since": "2012-07-13",
                              "names": [
                                   {
                                        "@valid_since": "2012-07-13",
                                        "display": "Ram Janakiraman",
                                        "first": "Ram",
                                        "last": "Janakiraman"
                                   }
                              ]
                         },
                         {
                              "@subtype": "Follower",
                              "@type": "other",
                              "@valid_since": "2012-07-13",
                              "names": [
                                   {
                                        "@valid_since": "2012-07-13",
                                        "display": "Jose Mathew",
                                        "first": "Jose",
                                        "last": "Mathew"
                                   }
                              ]
                         },
                         {
                              "@subtype": "Follower",
                              "@type": "other",
                              "@valid_since": "2012-07-13",
                              "names": [
                                   {
                                        "@valid_since": "2012-07-13",
                                        "display": "Shubho Sengupta",
                                        "first": "Shubho",
                                        "last": "Sengupta"
                                   }
                              ]
                         }
                    ],
                    "user_ids": [
                         {
                              "@last_seen": "2018-06-28",
                              "@valid_since": "2010-07-08",
                              "content": "5611688@linkedin",
                              "display": "5611688@linkedin"
                         },
                         {
                              "@valid_since": "2013-02-16",
                              "content": "51784765@N08@flickr",
                              "display": "51784765@N08@flickr"
                         },
                         {
                              "@last_seen": "2017-02-02",
                              "@valid_since": "2011-06-28",
                              "content": "14233931@twitter",
                              "display": "14233931@twitter"
                         },
                         {
                              "@valid_since": "2011-12-05",
                              "content": "1186474769@facebook",
                              "display": "1186474769@facebook"
                         },
                         {
                              "@valid_since": "2013-01-18",
                              "content": "103402979170580834945@google",
                              "display": "103402979170580834945@google"
                         },
                         {
                              "@last_seen": "2018-06-28",
                              "@valid_since": "2010-07-08",
                              "content": "1/a67/608@linkedin",
                              "display": "1/a67/608@linkedin"
                         },
                         {
                              "@last_seen": "2018-06-28",
                              "@valid_since": "2010-07-08",
                              "content": "#608a671@linkedin",
                              "display": "#608a671@linkedin"
                         }
                    ],
                    "usernames": [
                         {
                              "@last_seen": "2017-02-02",
                              "@valid_since": "2011-06-28",
                              "content": "ka_shrinivaasan",
                              "display": "ka_shrinivaasan"
                         },
                         {
                              "@valid_since": "2014-01-01",
                              "content": "shrinivaasan.ka",
                              "display": "shrinivaasan.ka"
                         }
                    ]
               },
               {
                    "@match": 0.14,
                    "@search_pointer": "c9868984e0b1b797f1fbe54759556cc9bae2f8bd01185e89e0ee42693558e6e216133b01d164ef6fd2dee14f587d589a222d2d8baf9efc1023f3e007220676c05e234e08880e1a145efe4c8e897c95ac576d53e690e80e2db408e911279e1be901785bb27498db97d196ab5a9fd458eacf24159bcf2e48797f63a9aa71c010b49e4fd668e9a6d00b847e066ad3144aa7d1a0a2866344791d52d016ac42fa158b88af484110c17831181be01666631c5f41793a358d59a2fbc696cb76cf3c570fec5df60d65b3bd28268f6a13c8cc9d4be67af7b81530d39474cf677eb825c43670fb61858f4d14814f02ed0410975da2149ba9c1fb454c0c1fc2f294e28d0a75d44c140305691e24373733d8d1996efe87fa906462caf9e96c6c79b4235af365d163ca41bdbf2cdb3e4eec0e34b44f3d51a144df3050921077b170a87891572ec9cf81f7b2b87a8d067c77a28107a103b35fde970c1313da0d0dd06477295e1e3ed4080d7b3fc1539cafd7709ca08a09f321274aeec716fec704d54947715d214982b9618d2be1fd0e5b5374a98fa468b6203603fc746d200577da6506afae25935f60c4a8d69dfc5424aea194f5c8b34f689e4673d106496d604305512df48843ee5b1fc9ef69d0a4ac0ee8b384bb9b42bcc128f7a4146ab89be311a0e05fda4358e3bd8a7775613dd487bb5c4cef108548e2a8c69f269ca2d7203e1903defb",
                    "gender": {
                         "@valid_since": "2014-02-11",
                         "content": "male",
                         "display": "Male"
                    },
                    "images": [
                         {
                              "@valid_since": "2014-11-11",
                              "display": "http://lh4.googleusercontent.com/-MF3QH4taY5o/AAAAAAAAAAI/AAAAAAAAALM/3RoFlmy6I98/photo.jpg",
                              "thumbnail_token": "AE2861B242686E61D1980D9252328CEA9A8DF568C252A9AB63BAD2EFC13E56A4047EF8F3C5EC93652ACBAE241B32A365183272C39F7CB63BEAD6506D2169601884E8B14C7CFE73D80832BAB6DEB1D9EAE6D8AB24A6B14FC320C61FA8D869688DE9C5B2455F54",
                              "url": "http://lh4.googleusercontent.com/-MF3QH4taY5o/AAAAAAAAAAI/AAAAAAAAALM/3RoFlmy6I98/photo.jpg"
                         }
                    ],
                    "names": [
                         {
                              "@valid_since": "2014-02-11",
                              "display": "Shrinivas Kannan",
                              "first": "Shrinivas",
                              "last": "Kannan"
                         },
                         {
                              "@valid_since": "2014-11-11",
                              "display": "Srinivasan Kannan",
                              "first": "Srinivasan",
                              "last": "Kannan"
                         }
                    ],
                    "user_ids": [
                         {
                              "@valid_since": "2014-11-11",
                              "content": "111994949685611811308@google",
                              "display": "111994949685611811308@google"
                         }
                    ]
               },
               {
                    "@match": 0.0,
                    "@search_pointer": "280511eebd39ebc276997bdf0ac5c3a2ae1db3dfb33042652c91a8972c6f34a861a6eae7359193d235714cb28b174ea81f01d3b234f72ce6a4d4bfc10088b6417e4df3e4256b15c5927865cb5dfa949aeb586825199eed8073958d8609225a87c8d96d91638cd1f58299e268a8353ffbc0f6535639d6de9c84c0f0acaafc1ca706f4ae38840572c993b32a429ff27633026a0fa687d2027660c3bda1aef482c40c92b649cb18c42865a9c5f2dc97e65d58675caedc8c4bf9692247fb41eccfe17428d7fe2e1dc48fb751c68d1430d6923b21ee37cef9a7540932a2c6c0d5497e9c80b0ca76e9030a36cc85686cbe411e54b4661a8da9297d8262a5d411bdddebcfab2245ba383c2c6b74862b004a23bf811868a25e88aa39125577b017fe82e3d1fb5e372bd0ad539f4704b3b239dd2d46015970b7a7b415306a140b8bbd957ada960ab1724c0b8f83f058bc8109b9006ed588d2f5c3e24e1c04475ccc44f99d6451564ce4ca44ac1b0460ea10f8c485f89aa8526be61e7b115341974f135fed54b1a9f00085efdd0852e070d17f3d1fab669a73e8706535b21d9778eea17a6bfa385153f430772aa6ad8cb768c655b81cd504c6a2e4cb9a48914e2d0ffede0c02bda7d840f7460b306b963db8b65f263736af703e7893fcb37d3e36fb9c64d57d2c9fd5022da0c2ab0007a9aefccaed0b4c0c6cd5c368d30d677c20b17025f5743204cd3872e6f26646d252f7104e09a28e309ee0be0b170159459fde2e68992306c66489bec4f1711ef69e5a0f2c8eac70e638b6dfabacafd339b278cca3230c6f990e3278644e9de1834e1ab46c9b3c76b972e920b22d05e1d8c512623eb140bef653dcbf16ea869e89d35e6b666c49ce00ea65f8e0d0753f1302c0ac2a742981af5d4dd24f6abb5751c2ed145e478d1f56b196a1aa117fcfd5ae71dab3ab1f826e17df2e8496ddf9466ae061ac469cd902c8ab73856dc50855488069ccd126d4888382b49fd3c196beee9c51ba26d8fd232379378509691874c009908be753ba2a3a63806e6423827271941d9538734e4666c55f7e361913c961df6f9440d46760b417add6e34b508c0b637feecb1ec07695b854529835618d23721062335dcf602f3a2952d08821cd424313911f55372c4c9ff819640e168c2f5731a3c055861f2f65edb3077402a0685689fc19",
                    "addresses": [
                         {
                              "@last_seen": "2019-02-05",
                              "@valid_since": "2016-02-02",
                              "city": "Bhopal",
                              "country": "IN",
                              "display": "Bhopal, India"
                         }
                    ],
                    "gender": {
                         "content": "male",
                         "display": "Male"
                    },
                    "names": [
                         {
                              "@last_seen": "2019-02-05",
                              "@valid_since": "2016-02-02",
                              "display": "Shrinivas Kannan",
                              "first": "Shrinivas",
                              "last": "Kannan"
                         }
                    ],
                    "origin_countries": [
                         {
                              "country": "IN",
                              "display": "India"
                         }
                    ],
                    "user_ids": [
                         {
                              "@last_seen": "2019-02-05",
                              "@valid_since": "2016-02-02",
                              "content": "b8/9b/b5b@linkedin",
                              "display": "b8/9b/b5b@linkedin"
                         },
                         {
                              "@last_seen": "2019-02-05",
                              "@valid_since": "2016-02-02",
                              "content": "418245047@linkedin",
                              "display": "418245047@linkedin"
                         },
                         {
                              "@last_seen": "2019-02-05",
                              "@valid_since": "2016-02-02",
                              "content": "#b5b09bb8@linkedin",
                              "display": "#b5b09bb8@linkedin"
                         }
                    ]
               },
               {
                    "@match": 0.0,
                    "@search_pointer": "",
                    "addresses": [
                         {
                              "@valid_since": "2008-01-01",
                              "city": "Memphis",
                              "country": "US",
                              "display": "7742 Deer Trail Lane, Memphis, Tennessee",
                              "house": "7742",
                              "state": "TN",
                              "street": "Deer Trail Lane",
                              "zip_code": "38133"
                         },
                         {
                              "@valid_since": "2010-03-29",
                              "city": "Fort Lee",
                              "country": "US",
                              "display": "533 Walnut Street, Fort Lee, New Jersey",
                              "house": "533",
                              "state": "NJ",
                              "street": "Walnut Street",
                              "zip_code": "07024"
                         },
                         {
                              "@last_seen": "2017-06-18",
                              "@valid_since": "2008-03-28",
                              "city": "Champaign",
                              "country": "US",
                              "display": "1617 Cornell Drive, Champaign, Illinois",
                              "house": "1617",
                              "state": "IL",
                              "street": "Cornell Drive",
                              "zip_code": "61821"
                         },
                         {
                              "@type": "old",
                              "@valid_since": "2007-10-20",
                              "city": "Urbana",
                              "country": "US",
                              "display": "Urbana, Illinois",
                              "state": "IL"
                         },
                         {
                              "@valid_since": "2004-09-01",
                              "city": "Champaign",
                              "country": "US",
                              "display": "3304 Cypress Creek Road, Champaign, Illinois",
                              "house": "3304",
                              "state": "IL",
                              "street": "Cypress Creek Road",
                              "zip_code": "61822"
                         },
                         {
                              "@last_seen": "2018-12-23",
                              "@type": "work",
                              "@valid_since": "2015-09-30",
                              "country": "US",
                              "display": "California, United States",
                              "state": "CA"
                         },
                         {
                              "@valid_since": "2008-03-28",
                              "city": "Bloomington",
                              "country": "US",
                              "display": "1007 Arlene Court, Bloomington, Illinois",
                              "house": "1007",
                              "state": "IL",
                              "street": "Arlene Court",
                              "zip_code": "61701"
                         },
                         {
                              "@valid_since": "2008-01-01",
                              "city": "Bloomington",
                              "country": "US",
                              "display": "3103 Wilshire Court, Bloomington, Illinois",
                              "house": "3103",
                              "state": "IL",
                              "street": "Wilshire Court",
                              "zip_code": "61704"
                         },
                         {
                              "@type": "work",
                              "city": "Champaign",
                              "country": "US",
                              "display": "1206 S 6th Street, Champaign, Illinois",
                              "house": "1206",
                              "state": "IL",
                              "street": "S 6Th Street",
                              "zip_code": "61820"
                         },
                         {
                              "@last_seen": "2018-12-23",
                              "@valid_since": "2013-01-17",
                              "city": "Chennai",
                              "country": "IN",
                              "display": "Chennai, India"
                         },
                         {
                              "@last_seen": "2018-12-23",
                              "@type": "work",
                              "@valid_since": "2015-09-30",
                              "city": "Bangalore",
                              "country": "IN",
                              "display": "Bangalore, India"
                         },
                         {
                              "@last_seen": "2018-12-23",
                              "@type": "work",
                              "@valid_since": "2015-09-30",
                              "city": "Bern",
                              "country": "CH",
                              "display": "Bern, Switzerland"
                         }
                    ],
                    "dob": {
                         "date_range": {
                              "end": "1950-06-30",
                              "start": "1950-06-01"
                         },
                         "display": "69 years old"
                    },
                    "gender": {
                         "@valid_since": "2010-03-29",
                         "content": "male",
                         "display": "Male"
                    },
                    "images": [
                         {
                              "@valid_since": "2014-05-24",
                              "display": "http://graph.facebook.com/100000309703756/picture?type=large",
                              "thumbnail_token": "AE2861B242686E6ACBCD539D133B8AE59A9AE962DB1FA5AA7AF08DABDF6D09F918638C82C68EEC6468858778176997563C4C47FBAE58CA16C28B7649464C5230A194C53304E778",
                              "url": "http://graph.facebook.com/100000309703756/picture?type=large"
                         },
                         {
                              "@last_seen": "2018-12-23",
                              "@valid_since": "2018-12-23",
                              "display": "https://media.licdn.com/dms/image/C5603AQET3ZEkWt0j0g/profile-displayphoto-shrink_200_200/0?e=1551312000&v=beta&t=2y6AzYk3kEBHUjtSey_RlC3dsilgCpv0w8hYvCZtF9I",
                              "thumbnail_token": "AE2861B20B7D6E22D4C9479C5C7387EF9C9CE823D35EABEA73B2CFB4863058AE4E7CF680C08DE8100FEFA3222E5889732D4359B2B9128708CC9F784005054530B6D99C6148A128E5131BFBA8CFF5F9BDB5A8E97CF99A12DD7A9948B1D92730DCE1C1B1425F506211CCC892B90151753EF50234F09E93DD30307BED8230B9C5AF5212B9330822B35E4913AC487726B53C361F91461F4CF94310BBA055F03EB38D8D8373FBD7",
                              "url": "https://media.licdn.com/dms/image/C5603AQET3ZEkWt0j0g/profile-displayphoto-shrink_200_200/0?e=1551312000&v=beta&t=2y6AzYk3kEBHUjtSey_RlC3dsilgCpv0w8hYvCZtF9I"
                         },
                         {
                              "@valid_since": "2012-11-19",
                              "display": "http://avatars.zenfs.com/users/1DJGkdA6uAAECQWEo8AceAQ==.large.png",
                              "thumbnail_token": "AE2861B242686E6CCFCD57944F2EC5FC9A96E07E9E52A9A838AACFFE9D2E16F86F19F2DE92FCED241FEBB252254AA74B613250E79F6CCA478D95705E074D0F29ABCED66442B824B75240E0E994",
                              "url": "http://avatars.zenfs.com/users/1DJGkdA6uAAECQWEo8AceAQ==.large.png"
                         }
                    ],
                    "languages": [
                         {
                              "@inferred": true,
                              "display": "en",
                              "language": "en"
                         }
                    ],
                    "names": [
                         {
                              "@last_seen": "2018-12-23",
                              "@valid_since": "2008-01-01",
                              "display": "Srinivas Kannan",
                              "first": "Srinivas",
                              "last": "Kannan"
                         },
                         {
                              "@last_seen": "2017-06-18",
                              "@valid_since": "2000-01-01",
                              "display": "Srinivasan Kannan",
                              "first": "Srinivasan",
                              "last": "Kannan",
                              "prefix": "Mr"
                         },
                         {
                              "@valid_since": "2010-03-29",
                              "display": "Kannan Srinivasan",
                              "first": "Kannan",
                              "last": "Srinivasan"
                         }
                    ],
                    "origin_countries": [
                         {
                              "country": "IN",
                              "display": "India"
                         }
                    ],
                    "phones": [
                         {
                              "@valid_since": "2009-09-13",
                              "country_code": 1,
                              "display": "309-661-0108",
                              "display_international": "+1 309-661-0108",
                              "number": 3096610108
                         },
                         {
                              "@valid_since": "2009-09-13",
                              "country_code": 1,
                              "display": "217-355-2281",
                              "display_international": "+1 217-355-2281",
                              "number": 2173552281
                         },
                         {
                              "@type": "work_phone",
                              "country_code": 1,
                              "display": "217-333-2330",
                              "display_international": "+1 217-333-2330",
                              "number": 2173332330
                         },
                         {
                              "@type": "work_phone",
                              "country_code": 1,
                              "display": "217-333-7953",
                              "display_international": "+1 217-333-7953",
                              "number": 2173337953
                         }
                    ],
                    "user_ids": [
                         {
                              "@last_seen": "2018-12-23",
                              "@valid_since": "2011-03-20",
                              "content": "8157776@linkedin",
                              "display": "8157776@linkedin"
                         },
                         {
                              "@last_seen": "2018-12-23",
                              "@valid_since": "2011-03-20",
                              "content": "2/894/b28@linkedin",
                              "display": "2/894/b28@linkedin"
                         },
                         {
                              "@valid_since": "2014-05-24",
                              "content": "100000309703756@facebook",
                              "display": "100000309703756@facebook"
                         },
                         {
                              "@last_seen": "2018-12-23",
                              "@valid_since": "2011-03-20",
                              "content": "#b288942@linkedin",
                              "display": "#b288942@linkedin"
                         }
                    ],
                    "usernames": [
                         {
                              "@valid_since": "2014-05-24",
                              "content": "srinivas.kannan.7",
                              "display": "srinivas.kannan.7"
                         }
                    ]
               },
               {
                    "@match": 0.0,
                    "@search_pointer": "1c91fbc3bba92276eb722e9364d820548cb98531a34ca7713b45f47543e2468e08041eb2063db1d860a7ca532ba691689f675ce829c39b57626510777f56700d86058478fb6975dfbe7eeabe4f7ffc09b5bd72c97d16f5670de96de6e521dd90ed724b94d8f516b4732d28c2fa16c6987ecdba694d27d1a0d2a6136724469f96455f3b911208a9e53d1c93071bc8dc32a4b8280b99620593f7fdf47b1d4d28c9a85771962d63fcf5014f0b44d1f2d4a428527a6065761fce1d40cf46455c6f5e4e58eafe101c2ca8e566ad09e3921296b051e847ac5fa36ca655dd7f2769375faaf8f9d3b2447b359a2a4b5b63f1d58bba5c817c108fccbd3b70ac707de2d5c312613f450093186e54e91da3a9470e9657af1b6e9e3194b237ecb4ff002a4aef728971e856c4d30cc7b428ec64ee86e99c3c56202cca6349134cc02190a60983919065652a3632ab5ce3883b040fa003a9ef58b22874df6cb1937a8f78497d10f678d9ac3b834983a2b64ada74d53f3a362c453964527190c46b9eec9770fdc5d096d4eb3d3668512c5e7bc1bf0e9bc5c50c7bbce4e9c77931b7ee361dba4c2fc7a591701658adb61ab222b2b691306833ad5bb17154b3a6d710fda9eb2c360a8f7ad8c31f7d5383bbfb9b77ef42f419493454f423ffebb1a827a5be52c69b10",
                    "gender": {
                         "@valid_since": "2014-01-01",
                         "content": "male",
                         "display": "Male"
                    },
                    "images": [
                         {
                              "@valid_since": "2011-07-01",
                              "display": "http://graph.facebook.com/100001627092130/picture?type=large",
                              "thumbnail_token": "AE2861B242686E6ACBCD539D133B8AE59A9AE962DB1FA5AA7AF08DABDF6D09F81D618285CF8FEA626E858778176997563C4C47FBAE58CA16C28B7649464C5230A194C33909E270",
                              "url": "http://graph.facebook.com/100001627092130/picture?type=large"
                         }
                    ],
                    "names": [
                         {
                              "@valid_since": "2011-07-01",
                              "display": "Shrinivas Kannan",
                              "first": "Shrinivas",
                              "last": "Kannan"
                         }
                    ],
                    "user_ids": [
                         {
                              "@valid_since": "2011-07-01",
                              "content": "100001627092130@facebook",
                              "display": "100001627092130@facebook"
                         }
                    ],
                    "usernames": [
                         {
                              "@valid_since": "2014-01-01",
                              "content": "shrinivas.kannan",
                              "display": "shrinivas.kannan"
                         }
                    ]
               },
               {
                    "@match": 0.0,
                    "@search_pointer": "83952f39a46f725b8570b3bf53695246ed9795026b8d93a98d064a41ca23acf8ca545aef39b9834634cf04ca094683651e910d285f77620dca2dcddb90bbc3e4dfe456af5c7df7d6de47cd7cc88b86976670fc31a349f2b10085c9bf6b376d3f57978b98b1cc6f1b9f19c42ca093887358ded0e94111cc03f49fbce35f1153513cc5dde46ad626e05e4e390181ddf24f1faae34c23553b70ce8db7f85f5f34fc2f90132ef96eaba5bd6d3da614690e9983ca2861adf94950d20cbaffee2e04ed15f7ccfd264187f78ac2da3f81f7eb9ab836ab26a3221b168f8dd99715df76003acc146d003f0b852dced78b04efb41f58cb062fcbe9a77ed5cfe7b8e96a1d58bd58de10fdea359e85614fa176a869501126e6aed178d9c5ecb17eb17f70fb2a6e8ba4736aac4428e2a6e0de9788c4175673999878a247d2864ea562e20dba0eecb80fafc3d4151a7de96599ad1a153e96b2ff5b7e0522afeda5245de489bd5bfb80687527884090efb538ff2c5c4c727098e330a415ce885bb6de46e9f69c68ed6e23bc59bcfd218056877ec38eb215db7e4a535fc9c4fcbbb0b5d6da78fad4d37cc11753499bc90068bf2a32e4f19477b4a4278abd72e5bbbde2169b98557a310600be3345a2c5c0aaf12547a3269df413d05eab0c92d9c8f28bb614202e33f996c3de7c8a81b0578bf78e79577aa5bbfa34d690251222168b862e60f175cc",
                    "gender": {
                         "@valid_since": "2011-10-28",
                         "content": "male",
                         "display": "Male"
                    },
                    "images": [
                         {
                              "@valid_since": "2011-10-28",
                              "display": "http://graph.facebook.com/100000180565088/picture?type=large",
                              "thumbnail_token": "AE2861B242686E6ACBCD539D133B8AE59A9AE962DB1FA5AA7AF08DABDF6D09F91A6B8580C088EB6966858778176997563C4C47FBAE58CA16C28B7649464C5230A194C53304E778",
                              "url": "http://graph.facebook.com/100000180565088/picture?type=large"
                         }
                    ],
                    "names": [
                         {
                              "@valid_since": "2011-10-28",
                              "display": "Shrinivas Kannan",
                              "first": "Shrinivas",
                              "last": "Kannan"
                         }
                    ],
                    "user_ids": [
                         {
                              "@valid_since": "2011-10-28",
                              "content": "100000180565088@facebook",
                              "display": "100000180565088@facebook"
                         }
                    ]
               },
               {
                    "@match": 0.0,
                    "@search_pointer": "",
                    "addresses": [
                         {
                              "@valid_since": "2008-11-05",
                              "city": "Atlanta",
                              "country": "US",
                              "display": "Atlanta, Georgia",
                              "state": "GA"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@valid_since": "2011-01-15",
                              "city": "Burbank",
                              "country": "US",
                              "display": "Burbank, California",
                              "state": "CA"
                         },
                         {
                              "@type": "work",
                              "@valid_since": "2010-12-09",
                              "city": "Oklahoma City",
                              "country": "US",
                              "display": "Oklahoma City, Oklahoma",
                              "state": "OK"
                         },
                         {
                              "@type": "work",
                              "@valid_since": "2015-08-12",
                              "country": "US",
                              "display": "Washington, United States",
                              "state": "WA"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@type": "work",
                              "@valid_since": "2011-01-15",
                              "city": "Milpitas",
                              "country": "US",
                              "display": "Milpitas, California",
                              "state": "CA"
                         },
                         {
                              "@type": "work",
                              "@valid_since": "2015-08-12",
                              "city": "Houston",
                              "country": "US",
                              "display": "Houston, Texas",
                              "state": "TX"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@valid_since": "2011-01-15",
                              "apartment": "17",
                              "city": "Sunnyvale",
                              "country": "US",
                              "display": "180-17 Locksunart Way, Sunnyvale, California",
                              "house": "180",
                              "state": "CA",
                              "street": "Locksunart Way",
                              "zip_code": "94087"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@type": "work",
                              "@valid_since": "2012-07-12",
                              "city": "Farmington",
                              "country": "US",
                              "display": "Farmington, Michigan",
                              "state": "MI",
                              "zip_code": "48335"
                         },
                         {
                              "@type": "work",
                              "@valid_since": "2015-08-12",
                              "city": "Bangalore",
                              "country": "IN",
                              "display": "Bangalore, India"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@type": "work",
                              "@valid_since": "2015-08-12",
                              "city": "Chennai",
                              "country": "IN",
                              "display": "Chennai, India"
                         }
                    ],
                    "gender": {
                         "@valid_since": "2008-11-05",
                         "content": "male",
                         "display": "Male"
                    },
                    "images": [
                         {
                              "@last_seen": "2018-06-27",
                              "@valid_since": "2017-08-01",
                              "display": "https://media.licdn.com/mpr/mpr/shrinknp_400_400/p/1/000/0ff/22f/063ef70.jpg",
                              "thumbnail_token": "AE2861B20B7D6E22D4C9479C5C7387EF9C9CE823D35EABEA7AAFCEB4822D4BE6583BC7DC98D6B521019EC7212B29D21476031CB3F10DC74A8CC9774A4F1A133FEA99C63354B777BA491EA6BC81E3E3BABACAEE79",
                              "url": "https://media.licdn.com/mpr/mpr/shrinknp_400_400/p/1/000/0ff/22f/063ef70.jpg"
                         },
                         {
                              "@last_seen": "2017-03-04",
                              "@valid_since": "2016-01-09",
                              "display": "https://media.licdn.com/mpr/mpr/shrinknp_200_200/p/1/000/0ff/22f/063ef70.jpg",
                              "thumbnail_token": "AE2861B20B7D6E22D4C9479C5C7387EF9C9CE823D35EABEA7AAFCEB4822D4BE6583BC7DC98D6B5210198C7212B2FD21476031CB3F10DC74A8CC9774A4F1A133FEA99C63354B777BA491EA6BC81E3E3BABACAEE79",
                              "url": "https://media.licdn.com/mpr/mpr/shrinknp_200_200/p/1/000/0ff/22f/063ef70.jpg"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@valid_since": "2019-02-10",
                              "display": "https://media.licdn.com/dms/image/C4E03AQE1hxPgPttP8w/profile-displayphoto-shrink_200_200/0?e=1554940800&v=beta&t=rGUfCJItgEreM3IPoLmkuLDRaHT1RnvzCy18oDXtocY",
                              "thumbnail_token": "AE2861B20B7D6E22D4C9479C5C7387EF9C9CE823D35EABEA73B2CFB4863058AE4E7CF681B38DE8100FEFC6790C4D85742D0763BAA9128708CC9F784005054530B6D99C6148A128E5131BFBA8CFF5F9BDB5A8E97CF99A12DD7A9948B1D92730DCE1C4BB475D586211CCC892B90151753EF50274CEFDB4E423123CE1820094DDF66F11B3063A1BAA513E25BE694F70A4223655A507462DE04412BB890FE03EB38D8D8373FBD7",
                              "url": "https://media.licdn.com/dms/image/C4E03AQE1hxPgPttP8w/profile-displayphoto-shrink_200_200/0?e=1554940800&v=beta&t=rGUfCJItgEreM3IPoLmkuLDRaHT1RnvzCy18oDXtocY"
                         },
                         {
                              "@valid_since": "2012-12-02",
                              "display": "http://socialprofiles.zenfs.com/images/6162366953f48e32ea78c291ed00c755_192.jpg",
                              "thumbnail_token": "AE2861B242686E7ED6CF4A94512D99E99991EA68C31FBCA079B9CFB58C3254E6423ED4D293CEF4676F9CC522422BDB116A1507BABB0EC51FC2CE294F5211103CA199C06306E475D5564DE4F5CDF7F7F5BA84B228F4F014DB7885",
                              "url": "http://socialprofiles.zenfs.com/images/6162366953f48e32ea78c291ed00c755_192.jpg"
                         }
                    ],
                    "names": [
                         {
                              "@valid_since": "2000-01-01",
                              "display": "Srinivasan Kappalur Kannan",
                              "first": "Srinivasan",
                              "last": "Kannan",
                              "middle": "Kappalur"
                         },
                         {
                              "@valid_since": "2008-11-05",
                              "display": "Srinivasan K K.k.",
                              "first": "Srinivasan",
                              "last": "K.K.",
                              "middle": "K"
                         },
                         {
                              "@last_seen": "2018-06-27",
                              "@valid_since": "2010-12-09",
                              "display": "Srinivasan Vk",
                              "first": "Srinivasan",
                              "last": "Vk"
                         }
                    ],
                    "user_ids": [
                         {
                              "@last_seen": "2017-03-04",
                              "@valid_since": "2010-12-09",
                              "content": "7731475@linkedin",
                              "display": "7731475@linkedin"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@valid_since": "2011-01-15",
                              "content": "5/a12/335@linkedin",
                              "display": "5/a12/335@linkedin"
                         },
                         {
                              "@last_seen": "2017-03-04",
                              "@valid_since": "2010-12-09",
                              "content": "2/70a/297@linkedin",
                              "display": "2/70a/297@linkedin"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@valid_since": "2011-01-15",
                              "content": "17442905@linkedin",
                              "display": "17442905@linkedin"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@valid_since": "2011-01-15",
                              "content": "#335a125@linkedin",
                              "display": "#335a125@linkedin"
                         },
                         {
                              "@last_seen": "2017-03-04",
                              "@valid_since": "2010-12-09",
                              "content": "#29770a2@linkedin",
                              "display": "#29770a2@linkedin"
                         }
                    ],
                    "usernames": [
                         {
                              "@last_seen": "2018-06-27",
                              "@valid_since": "2015-08-12",
                              "content": "srinivasanvk",
                              "display": "srinivasanvk"
                         }
                    ]
               },
               {
                    "@match": 0.0,
                    "@search_pointer": "9709d33a40b728d97461bcf681e57e9382be027d6f3017816362a6714d885d2643733207a9efcfdebc465ac0349be4bae71679c8f3f57a26a07e345f3b18de14fa890488e70cf5ff1b765d1c7e9fa21998baf32003c040133fbecbf4dd4a888f70c5089c0cd37a62964d499f197a0a38c885d0e78836a4cc4756b18351a1d75291a6a3ea20a8d51d3ca9d43ef8bc495923022f33b872fa75b94001c2930296915a29886bdfc1f723f27a43b74b846b42cea1ec0cb25368effe3659cea192e49f9add8ec8edc69c9b824a288679b61a59ecea02d240007ef2837f9bef78bba3bcff0a89373775dc1b37d2d3bd2c85fb340a602b9c5ff19765ea4545dd212aa58480f181752373825cc7c12d925ba59ef649aa543352f1a6b0b8c2f553ad6fef085b3c8f91e4184bae87922f42461f72e33c268f4e011b719a69b9510d9382f05d6fa7c071997c3b75de9852324601d7805bc0ea9c9874729621f88519b918c65591cbbd89a7e7024f3bdf1e3d648b2dd9f1a35d7d9357f174f3d33657a0193a8793e6e6750229473bca1d258a5d1937a02edb53dffb726c688bcac0d2514535b1e795e174d5e79bf8efda4d405d63eb037ec2f15175bc703c4019b641010aa7ae727288cb314ae23ee3f7b08f0b61da7ba1b9a609e04a0b24be429a16b97b1dd34451d6844f07bc97212b14cfe9a02f53330486d463ea7f40ba2d95718f72c839afe66f3a53d3b93ee332f161437c7c395791904eb56bd225ea45676bd9e050406a82ca8c801abccb7ebfbcc76a3b0d8cbaa5dccc1dfb26a29f193f807ae73b17fa0574bf85c42a2f40647fdee83048ee35d000232a124538c310016b18a016584fadbcad158e56400faddef621966b90d1b87c65d8d52cecb7b9dd49534b6cba35251a11721595df452896809ae061e00c7d030c461eea34a5749081e4f051112698d33d4b4bf494e3cfb5b6f196ee749cfc3eae18c8ea14542be47d5dc452e8176a2149af8572476a2154fc1bc439cb57aea7baab0ae63bbe4604a126faa42752ac6e724175424b13b49dbdac91ff5dcd0c07839c55afe2778fc3dea5852da0cb5bc8ddedeeadea8670e94a4379f1c6ebfa9c8bf291af90045aceb0a4371ddbf0c5a6cc56ddd7ff0c05435c7c720a84a2be8006da1ac818ed2d898e0c787e09fce928236827d5d93326fbe94777146b7c93c4c3eb6a3f36741a315b7bd275919d1912c25ffc7658df2e12c8693b27e19e408e3d101ccce8a3651954397e78074fa29bbde57edead582cc3ea2a9a70c8cde3696017a9d2f2af786fb5aad75baddffe879ca5525a90ea4833ce2242082bd5f55cafbf5068c99b45deba9e73177c072e14aa6c0ba786dbdde7c9a6849ac816bd3109e64418252658d665af0961c2b9f39b3348974288e31090c870cbb95576e28613153037693fd154aa68b35d7a0177aa7065c94512b053e3203d64247c684b1d44d190bbeb2a0dfbba398b19cb5ffafb09ff6b977750fcb3a86ff5f9f31207ac46990a861ad213a459c6c3cf5030cb34f7e5dfd98498370a30872f87e7119430e78a6e19c84c84862f7f2b927152ae104e0e066e2c77a4431d7561d6569dfee820dc96f3135d2a2f1793231d31b4b8c29a3e0d12f7e628ddea2807139d0f71cc10024ef29b8f79933454cf684b80adf449164364b1ece680bbd716143298ed9b0ca230bb959cfa3ef3bf520353d2850843aaaef2b0736304905a44c7d12ee142208171ca1193f0758fcebe5d5e5cedf2ae917c6a1ec7537146ef1ec17e882490a37649d1f3f88fdb62a8a09f187d7174debec1895ac119f5026a1886bab5a1cdbce40b0cbf0467d28887b712afbbc868d9a84b767e20e5c84b3adbacac91dfc0a0af4fa04b7d2c3d9c4a21bdfb1b6efddcea8b369891199847cf72fe50dedf2c0def38a15c7eb6c7e0e74baa5cd2e9f90e70900d6c6b3540ff902cb561fc4864687ffa15457c8e95e3a667f6d499167629010289738c878cf0d96aab5c0750ab0acbe571bc002d8aa5a33a63758681b44513acef0afcf3be9b11c186512abb1e8aa5f1a7cc9fdc43131c1f98ebb6cb6617014b6b3cb24bbca09594897897320f759006aacef6213971f72d2cc257a4f2c9657df8c826674dc6cc557613ede2e32e47d2d6bbdd87b962267edb62a957de5d0eee7732a2fef120f6fd9e6c43ab52861d8b1096ec903d597788336f0ff63325d6891dcc2e32b275878c49cf76d60688a98ad5456a44a0f0965a72705641e6251b5248d79ff83a6e1d25a620d275d447776a717f6043b8c1d50d12dff3331493451a62265a677810736e3ba15bbfbe5c90bd7b7b34a28470a61d564577f0fd0a8e0b69f5a1cccee4d5d6a43e5a48c1006f965cbd5680cc10f7230a78476f2b5a164c1ca0cefacc0d6352933c0f7c95745bc5e4838f29a1fe48a0e835cab19b59df9778754ebad860938021e1aee59bdb72f6169edb9c1ae6c39d21b520ced934ab5fc2a3bdbe597b0fba561c3c7bdf99a06c9e917f92010fdbee08ce2eba2d3640c48d9e66e4317257f0f94da5dde4c2379f77e33fe6a87465b8f6b6904e4a8a7f0b9c9db82c090a3d2d46a2abdd129692b6319f579dab43262eb22ddb37349b6c625d0232137adabd2c06fc0e837a8863d96617cba27c6cfee071a5664facfae6a32c64e7c220362387d4a187613359398bd9b374c6a0a3b9c3fea52058a17730ed18a1b2a4dc6ead1c274927107332133427bf2d6bad8292e4741cffb524ab4fe92a25aaa8dd10dc985e6241291f665c9111f410a9c984d4682fae49b0a998ee827b048be3cee0de9c71f9fac6af806e1767f7180e146c4d059dbd6a14993beca9e24937924abd042a989e3870d219072b423e0d4f0c42302a47aa9771e7afed1870952b44ae42013052ef0138f89b3308b158618e07d5dd5caf511b8c497b617053addc42528b0e95a8e2310023ed30888d85bab027d77ec34e0e73d40a3fb879d403b0973c123efdbba9f41c114b5755093f8d5c84c6baaceebf9d0ec0da88b9a5b8bf623e48ac05b2ea019708c1da8b6f8a373b16b2e6d447e04c2ca5c234b734d8525367235fd0aa440774968759a194b0d41bd46330c441e0c7e46bb52cf96eb11e63e3b6bb653858a62e8ebdf6ab198c9a1af972ca4534b5f9505923e6624efdcd6840973db14cc4da775e3074536c13efc781f99e68a238989119fd60401a05e1f87b502ba947f8ea8930799a0ea8f300b9a95eb5b174b8d7da20b2f047a74edab928e86045e14264fbace1a8c5e1a3ff5d83ee70a8f2f9508a1d963b9044975472da5e6b9072277a0cbd8dcd37ffeeb8243fd370d7889eb5fbdf5d0783aa2cef7d720973fb32c000d380f582af309f26e4c51c4d3d6e0974a53f6a88927f4c734ad0e2f6775faaf29756c50297663cd781a93b3c968cd3b237359072740f3ba3a5da8f0896d12c951ab2c863e73f864fa968a3076fc0178363361adafe044965a5ae529c68af5437600ff97741459054c2482b6e884c5228d7eb995d91282b2473ff9c8cbed2d07227543e12717fffc24d4538a5c6dec09cef39de8bf7369c4d4ad05bb6d643ee83a7a23222b634a76fd5ca214ebbd618c7c3f11b04a17e6b660d40025f44f68db7c01ddfc763f37ec6410b6164229a594d82bdc0a920ff44565547dc49f758764ccb3b5a69f38532ae37937672722302",
                    "addresses": [
                         {
                              "@valid_since": "2009-09-13",
                              "city": "Cupertino",
                              "country": "US",
                              "display": "20990 Valley Green Drive, Cupertino, California",
                              "house": "20990",
                              "state": "CA",
                              "street": "Valley Green Drive",
                              "zip_code": "95014"
                         },
                         {
                              "@valid_since": "2008-01-01",
                              "apartment": "74",
                              "city": "Cupertino",
                              "country": "US",
                              "display": "7375-74 Rollingdell Drive, Cupertino, California",
                              "house": "7375",
                              "state": "CA",
                              "street": "Rollingdell Drive",
                              "zip_code": "95014"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@valid_since": "2014-01-01",
                              "city": "Fremont",
                              "country": "US",
                              "display": "46855 Shale Common, Fremont, California",
                              "house": "46855",
                              "state": "CA",
                              "street": "Shale Common",
                              "zip_code": "94539"
                         },
                         {
                              "@valid_since": "2010-11-20",
                              "city": "San Francisco",
                              "country": "US",
                              "display": "San Francisco, California",
                              "state": "CA"
                         },
                         {
                              "city": "Fremont",
                              "country": "US",
                              "display": "4875 Mowry Avenue, Fremont, California",
                              "house": "4875",
                              "state": "CA",
                              "street": "Mowry Avenue",
                              "zip_code": "94538"
                         },
                         {
                              "@last_seen": "2017-06-15",
                              "@valid_since": "2007-05-28",
                              "apartment": "7AE",
                              "city": "Cleveland",
                              "country": "US",
                              "display": "1701-7AE E 12th Street, Cleveland, Ohio",
                              "house": "1701",
                              "state": "OH",
                              "street": "E 12Th Street",
                              "zip_code": "44114"
                         },
                         {
                              "apartment": "247",
                              "city": "Beaverton",
                              "country": "US",
                              "display": "2442-247 Nw Schmidt Way, Beaverton, Oregon",
                              "house": "2442",
                              "state": "OR",
                              "street": "NW Schmidt Way",
                              "zip_code": "97006"
                         },
                         {
                              "@last_seen": "2017-06-18",
                              "@valid_since": "2009-09-13",
                              "city": "Cleveland",
                              "country": "US",
                              "display": "1700 E 13th Street, Cleveland, Ohio",
                              "house": "1700",
                              "state": "OH",
                              "street": "E 13Th Street",
                              "zip_code": "44114"
                         },
                         {
                              "@last_seen": "2017-04-06",
                              "@valid_since": "2017-04-06",
                              "country": "IN",
                              "display": "India"
                         }
                    ],
                    "gender": {
                         "@valid_since": "2007-05-28",
                         "content": "male",
                         "display": "Male"
                    },
                    "images": [
                         {
                              "@last_seen": "2017-09-20",
                              "@valid_since": "2010-06-06",
                              "display": "http://graph.facebook.com/596453924/picture?type=large",
                              "thumbnail_token": "AE2861B242686E6ACBCD539D133B8AE59A9AE962DB1FA5AA7AF089A2D9690CFA1261819A86D4B8252BD8922E00649241641F52F0B958D11ED09075115311196AF5",
                              "url": "http://graph.facebook.com/596453924/picture?type=large"
                         },
                         {
                              "@valid_since": "2013-09-15",
                              "display": "http://lh4.googleusercontent.com/-yk5juzgLFEs/AAAAAAAAAAI/AAAAAAAADVo/XtnyuLytZ4U/photo.jpg",
                              "thumbnail_token": "AE2861B242686E61D1980D9252328CEA9A8DF568C252A9AB63BAD2EFC13E56A4047ECCDEC3D7AE2B39E6B1540732A365183272C39F7CB63BEAD6506D2169601884E8B4565EFE18FE090DA397DEF3CAE78BD8AB24A6B14FC320C61FA8D869688DE9C5B2455F54",
                              "url": "http://lh4.googleusercontent.com/-yk5juzgLFEs/AAAAAAAAAAI/AAAAAAAADVo/XtnyuLytZ4U/photo.jpg"
                         },
                         {
                              "@valid_since": "2012-10-01",
                              "display": "http://avatars.zenfs.com/users/1FyN1wmHcAAECAIJHXIlwQYAA.large.png",
                              "thumbnail_token": "AE2861B242686E6CCFCD57944F2EC5FC9A96E07E9E52A9A838AACFFE9D2E16F86D2AFB8481D093321FEBB2523554A86C013A5FF58F64B63B8D95705E074D0F29ABCED66442B824B75240E0E994",
                              "url": "http://avatars.zenfs.com/users/1FyN1wmHcAAECAIJHXIlwQYAA.large.png"
                         }
                    ],
                    "languages": [
                         {
                              "@inferred": true,
                              "display": "en_US",
                              "language": "en",
                              "region": "US"
                         }
                    ],
                    "names": [
                         {
                              "@last_seen": "2019-02-10",
                              "@valid_since": "2007-05-28",
                              "display": "Kannan Srinivasan",
                              "first": "Kannan",
                              "last": "Srinivasan"
                         },
                         {
                              "@valid_since": "2008-01-01",
                              "display": "Srinivasan Kannan",
                              "first": "Srinivasan",
                              "last": "Kannan",
                              "prefix": "Ms"
                         }
                    ],
                    "origin_countries": [
                         {
                              "country": "IN",
                              "display": "India"
                         }
                    ],
                    "phones": [
                         {
                              "@valid_since": "2009-09-13",
                              "country_code": 1,
                              "display": "216-861-9949",
                              "display_international": "+1 216-861-9949",
                              "number": 2168619949
                         },
                         {
                              "@valid_since": "2008-01-01",
                              "country_code": 1,
                              "display": "408-446-1014",
                              "display_international": "+1 408-446-1014",
                              "number": 4084461014
                         }
                    ],
                    "relationships": [
                         {
                              "@type": "other",
                              "@valid_since": "2010-04-30",
                              "names": [
                                   {
                                        "@valid_since": "2010-04-30",
                                        "display": "Biranchi Kar (biranchik)",
                                        "first": "Biranchi",
                                        "last": "Kar"
                                   }
                              ]
                         },
                         {
                              "@subtype": "Follower",
                              "@type": "other",
                              "@valid_since": "2012-07-01",
                              "names": [
                                   {
                                        "@valid_since": "2012-07-01",
                                        "display": "Peter Prakash",
                                        "first": "Peter",
                                        "last": "Prakash"
                                   }
                              ]
                         }
                    ],
                    "user_ids": [
                         {
                              "@last_seen": "2017-09-20",
                              "@valid_since": "2010-06-06",
                              "content": "596453924@facebook",
                              "display": "596453924@facebook"
                         },
                         {
                              "@valid_since": "2012-10-18",
                              "content": "49951573@N00@flickr",
                              "display": "49951573@N00@flickr"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@valid_since": "2010-11-20",
                              "content": "1892723@linkedin",
                              "display": "1892723@linkedin"
                         },
                         {
                              "@valid_since": "2012-10-08",
                              "content": "100370837718409462074@google",
                              "display": "100370837718409462074@google"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@valid_since": "2010-11-20",
                              "content": "0/773/3ab@linkedin",
                              "display": "0/773/3ab@linkedin"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@valid_since": "2010-11-20",
                              "content": "#3ab773@linkedin",
                              "display": "#3ab773@linkedin"
                         }
                    ],
                    "usernames": [
                         {
                              "@valid_since": "2011-06-24",
                              "content": "kannan.sri",
                              "display": "kannan.sri"
                         },
                         {
                              "@valid_since": "2010-04-30",
                              "content": "sricann",
                              "display": "sricann"
                         }
                    ]
               },
               {
                    "@match": 0.0,
                    "@search_pointer": "f006505a18d61c65c6a892fc12098501dab259a58b0828b0ed6b3f1e333b8b41d7ae56fe9a771336fef365ab6716ef9ebf574138f3c1d850ada4c6c3bee97a31619e6a04bd4f4957b282a93196624e8325f2b76bb6f5cbfa3dc181ce39369353a8aef4fca491be6c6b3424f8459ce3bf56722a43d2a1f5cb5829d26047ac91008038325ed684f684dff2d81e1489a11b254d43b3884293e09841b239be6c4357c7e8802345498352b53e924653b20dbf96001359f0e1c6c969796765316c93edd7beb5e6c1bcd169f77dd83de836b14ff9385b50426cff06f677c6891a01d296f6e047a6b285be9a1b5aeea12092e380b19730bc7a28af9afbcca66de35ad623f88896cab4b709ac4c2342beb23bd0981906c30a0261405ccc30f19df3f0c2e12d9a6787168d2fef8685eae455886fae883810e7bc9bd5d8a60bb6fe8dd1210ccd5cbb9d2c9740a693449c65db6e04d919bca10f41bc4b889d5b1603aa2e8e71639aa41ed7f0138dcc6d950d3b68c3fda5a1cd541b18ce8c03e1e4fd6eb2a6c36c1bcee55b822141d48d5fa8ef5f4133c25bb9be3c625f9d755adcf834641922da5aa13f7194de52633a6a27b7b8818c73795c64d2fdbccfaf8aef96c4adc3e9bce72f02916703f7d1e48a4828423b92d6bfd4195f24a6f7e223c3426a2e9577afb494f59caa71b487fa6d8aa3188b304c6f8b8b9c8d84bc6d163cc25c61092101db6a66b5cf2527256399d9bc4f54f7007d45d7d9d5694975578659fda29eba8b12d09cc5e0a133e96aa62fa383b76f3b2dd77310c19071aecb7bd9357f19421decd1694a15f1a273910bce172464325e07794ed2795c4b77da8035ea317349356511f006f2f1e8671a98324a44e8b6aa4420facb2979b489b16cd4dbbaaf0bed0113d072464e45b146adb72007aa0fcbd3d3822b017be4a69010ee717ea4c62327db90fd5f75fb92f5461bf2111b78eee0d98dfda458c777b7e5b9ceba07aa1398a4b7a856484cbbf432ba85b6874b6ee24962a94e5eb9b0c58ab11ec7feffd97f5c9402f5d1bb936d0e1990e72e0781c174cf8c6562085398cbb0c1f036113f12047630249ffe66f24e5ae37561b1edeaf4624528d28c4de032cc6687ac6937a6453326b63e221ed5bed05e8b67e6cf83549205b491ec5b5d04960dea56fb7445c0300643ac593648c89339dea3c0f1a614c797c94ea3857aac28e1b2dad3482779f6f303a39d67bb5a8d25a663d12de0eda0ec4d9d407c9aac54a497dd7755036d524c28faae0fe8bdc548ec89f822ee86e615d2600f6d4c4cf2d14d1ac32078fd7f7f1cf724e3cc17afa6418fdfa1f9f38083988014aa48427df2c053fc680baee761bcff7bdea3607fccb265e94d599b8d11167f9a4222c9d897c0f39ddcc80bfc2638e63d23abeada63901d971b83202a01cd9276c46a1a12cfa561690fbef6c1c456893c955e688200acc4ccc9547544621e8e7eee97206b83d00e13be9c2aa174474d4f12c5d2a14ab787cbebd9b7adbbeae5130afd01fa907745d3855cd1bcf2c430e8c2af724c9c4ed06c92a8ca65b2812a7371883686688d532511c4b75e4d512f5b62012878c632872e8901a9d3bf07a28ec61e0441f853b2a8f39bbd013c8acb9744806d86467fe2f455390113616c800d1cdd41163976fec55582364f0975faee4d71165bbea559176149072063233d469ccb826ece647ecc71500efd275f7ea5cf2b854eff9b456b36d731da37d65d0f9db4e693292eb0d2e369a8e673888d417b80dc986126b1d5a9fc8cde31a498c75d39b1d3de294c473ac5db8afcd7c56253dc4274ef3b5980a4594d2d2c06892da7eb63bd68ab96559153b7d095f08747f38deace7682ae4b65763fed003ff4c847df0af20fadc32ae56e2d0fe4d2a162edbc4a2b6d5792043c58f0388224b1e589a7eeb6a12bf716d4a513816d4c08610b7fd74bda4a43a0e2ac05d722a1202aa43d3a606cdc909e6885fff3f5579ca7d4eeebe93672e79f899a27b2a5f75d8f8cbf2b6ee4a7eb2de5ce105b36c89d4a60a2bd205fa16d5329cb9c958845de4d26edc6b41e77a46d9298b41cab49b7d812af4671680b5363f25b07b40b7b561cdc027b285789ee42e965163a1cbd560b12758a151149635de0e4268f6154b11a4a3817501a757d0a98567bdc00a2db5a7f037c43e841b610a990fb13aae958b87e81019a7b54e884a05c31cd2671288fba306f217cdf30311626041b35a1c074b65cb5062af1252744d06f8f6ca81a7ae68472d71a0ecf61f1ca2025ae7626f22426732282384ea37a1e0b559f0be4a0718686d5d864f447cde335aa30ccc2d0aa0a759978bf288e01c82a316320d42f2ecb0a7a574d8dc4f8ec4463d133f12ff9d0fab5ab16ac2cb7e78a063817533e44a053f21ec27980f5a7eb681454171fdea00cf6c2003efa4d1702946cd6bf5fe8d3ff3804f1bf6e126a04f6521c4f4302c78ed4ce119dfbc1bae01ecf0040d7aae9a0f4f9b9b6cf01b909be4562ab605c3cf13003cbb610685156ef9f21f1b6c7e81ff64f809f9e84a6e8cecf1c7c7f5013747f5800b480925525bd1a7404d5a5a456bb98f64a1ad46f958187415fa055380abe92ccb9b735fb6def8bc50320bbdb5eab4cd9ba1331c1b2fd5b427470fa5b787f0d19d5f942cb5b1aaabfe2c5cc72893e5c4dec2c376e1203da551c0edb5fad0d57d58eb96bae3791b50f80ed91991014e73e29387aa0a1985f0e628e65dc3abc89b4e03171d90171af52dc3b8fcf7c19b14376a23682fc6986a926a78c645875d3c334ef07b68ce1561244ded87fb876990082b9fb5ff4cdcbf152dba21bcf1e9b80190984eb6595e13c5ccaa328eb847bbe67ddfad20dac0022d4ddca179c8bfbbff63d",
                    "addresses": [
                         {
                              "@last_seen": "2018-11-25",
                              "@valid_since": "2013-01-19",
                              "city": "Ahmedabad",
                              "country": "IN",
                              "display": "Ahmedabad, India"
                         },
                         {
                              "@last_seen": "2018-11-25",
                              "@valid_since": "2014-05-15",
                              "city": "Mumbai",
                              "country": "IN",
                              "display": "Mumbai, India"
                         }
                    ],
                    "dob": {
                         "@last_seen": "2017-10-17",
                         "@valid_since": "2017-10-17",
                         "date_range": {
                              "end": "1984-08-28",
                              "start": "1984-08-28"
                         },
                         "display": "35 years old"
                    },
                    "gender": {
                         "@valid_since": "2010-10-19",
                         "content": "male",
                         "display": "Male"
                    },
                    "images": [
                         {
                              "@last_seen": "2018-07-28",
                              "@valid_since": "2009-07-16",
                              "display": "http://graph.facebook.com/745165086/picture?type=large",
                              "thumbnail_token": "AE2861B242686E6ACBCD539D133B8AE59A9AE962DB1FA5AA7AF08BAFDA6C0FFC1B6B839A86D4B8252BD8922E00649241641F52F0B958D11ED09075115311196AF5",
                              "url": "http://graph.facebook.com/745165086/picture?type=large"
                         }
                    ],
                    "languages": [
                         {
                              "display": "en_US",
                              "language": "en",
                              "region": "US"
                         }
                    ],
                    "names": [
                         {
                              "@last_seen": "2018-11-25",
                              "@valid_since": "2009-07-16",
                              "display": "Srinivasan Kannan",
                              "first": "Srinivasan",
                              "last": "Kannan"
                         }
                    ],
                    "origin_countries": [
                         {
                              "country": "IN",
                              "display": "India"
                         }
                    ],
                    "relationships": [
                         {
                              "@type": "other",
                              "@valid_since": "2009-07-16",
                              "names": [
                                   {
                                        "@valid_since": "2009-07-16",
                                        "display": "Aanjaney Nath",
                                        "first": "Aanjaney",
                                        "last": "Nath"
                                   }
                              ]
                         },
                         {
                              "@type": "other",
                              "@valid_since": "2009-07-16",
                              "names": [
                                   {
                                        "@valid_since": "2009-07-16",
                                        "display": "Rishabh Jain",
                                        "first": "Rishabh",
                                        "last": "Jain"
                                   }
                              ]
                         }
                    ],
                    "user_ids": [
                         {
                              "@last_seen": "2018-07-28",
                              "@valid_since": "2009-07-16",
                              "content": "745165086@facebook",
                              "display": "745165086@facebook"
                         },
                         {
                              "@last_seen": "2018-11-25",
                              "@valid_since": "2013-01-19",
                              "content": "53204000@linkedin",
                              "display": "53204000@linkedin"
                         },
                         {
                              "@last_seen": "2018-11-25",
                              "@valid_since": "2013-01-19",
                              "content": "15/999/428@linkedin",
                              "display": "15/999/428@linkedin"
                         },
                         {
                              "@last_seen": "2018-11-25",
                              "@valid_since": "2013-01-19",
                              "content": "#42899915@linkedin",
                              "display": "#42899915@linkedin"
                         }
                    ],
                    "usernames": [
                         {
                              "@valid_since": "2014-01-01",
                              "content": "srinivasan.kannan.100",
                              "display": "srinivasan.kannan.100"
                         }
                    ]
               },
               {
                    "@match": 0.0,
                    "@search_pointer": "f9082fe53ebb40a6dd0cf2b7af12d997b50fa27caa56b380dd194f9cd17c77f10a75ca57b96ad9b98fbe8aa45ee28ac10b5885ee3804cace61ec8c3575138e4e680b05a22c2939b6910f715d66cd32e0858938103fac9546a6b7d349d6171c160aaa64066adb3fd41f3c68da2b4057416af626042c2796da08c460e3a13141b69df4b6a2d12971b9dfd118542b326123cb4b8fdaf42d0d7f3e0ff08514d10a5a421a5ff35a2c116bb914814abb3aced71e4273a36db6c46cbfaf5dfef4df3bdb8b90b6898a4b1cc8081fb50788398325b6135f3d75733bdd333d2137e50d80bd8a48da1761c2067329dff6f8ea0e0fe69841730883116b8cff528f099c77a5374682eaf383361c1e8a66816a3b5f26dee5f10e0e8eb226065e007edc995826afacdc5ed33db78fbc46fbf8288a814105be2953a9e0040cf408ec42da52d09262d2ac1d6595e07b842622c374b60e0c70c67ddab76b38d102fbac1d4a76fefc7704c43a8a040eae0559b48f9b4bcfeb35ab6e1df32b22c84b7b384b29a265b065ec087bc3466a56822ed51c98725fb3df20440ff23ec6e1b8e50764941bfe3d6cd8bd4518be97be8d47d526f54256bdbdbc48257888507acc0311078c78b78e247e334a81dc1240a9124528ce00dc8d17d6aef6266bcb61b3ed19009c003c3126f24b742990cfd2fefa34053227eafaf7bed153bbe5d1a0f86ff18633be2fd37e11dd2268e28cf4fbd3aaa015a2dc1279d5d8f86d7978e5d940fb2c072fbb641fb553c5572575d5c3c3ddba5bbce1b9ef07c04f25052d616299ec76c5492fb77ba011af36bdfa2be2c18c354aae6b9d2f1f04ab81d14feafb507bb31975739af32a8d8d986ff1e2a22e051558f2b365023bbce21dfe3df9741ae3993346cc955d22347224b4785f5e18f2229d47a66bfaccf8311952d4a1227e881c2050b8f4f9b4ed17fa2b20a02fb48ee558d50861cde8d9f46c599f403a67c6ddd9479608fa88e53ddb7c78074e8f45800b1a54e7fadeb6f7404fc1d422824f6c45535a203d0b20c9128142343a412ede30a34889032bc09f8277fbc4c7fbc02e3878f903993154ea4bce1e7e3f011ebd47724c1dd5a441ca655c3657aa22705c064d91cd1732656467e684a610b8b871b8b89ebf558b006c7e3d9f0c1e1d57e0a8708ce92311df6f41498611b3637aeead1605edbc699b78ef839bd6037e77df7dcbe350e87c56cb8009041e1a5f3d7cf0b910165d5f47abcf0e1ce51ff2c8b0d2cb69b02b25144b9be85743fd83de081afade961ccf94a42616cd594e86a9502696b16f931f77d8d865b702c79173b11f61778d276a36dbc3c2aacc3a787fc396b0c7a861b774cbb4521b1b4f24b2a9932a9c594674b25f13d1d3262c9c1a3e10a357b8d1b6cffb892fd648e72655182613d734574b872caeabb7fab276da217fb8f3059a41d77464d062b421b49808b5ca951051837d85dbf625c3cf851de47bca1450f361085c4a71cf819697f41ec4976ddce7cf788067d484e64f561fc707cd73c5f63ae9b8d8e393c3ecfbce743ed7f99cfc017845d8d8668254ca517fc38e653f1c76cdefcb49a3522b97e1f986eeb7bc1177d5062e35cd50ca089beba620e880e495b652d91a258caa8a41d9bbdfad7a4044bdced112fd2cd411ae42722bade2dd6cfcc9d369b3cbb835fd762786f3e7b7b80c233c3ce976aacf8e781404dfa7a9ef1de56e1f50b7568e1c408f5a92d0ef70464cba74c9a4ffea670cf478bfc90a1b4877bcd924244a8238828846b0a685261b1bb1e502dc05846ac8ae2dbf5af3ec5be5cc6899afb0bf4a31f53926fed1bd4e9a03907dbbcef37fe08478e5034d1e58023f13f825d4c0e5c0fd5f0a8df9b4f8a54db86f6041a56cdbcdb0837c2284c692ac6716e2f996f13f95c9c89dd55bd66033920ae871f5bace38b5d641e36037a22cda505baf5a0c065a3d00fea2bb9c6693de056553277831a1c2db7f8048a0f313bc8f513b9efa8fa45ca8d4b918017d59920ac75b230d3117975433c640fe26882db3f199d83801a27773e36ef1065507d13e07dee776022a847df3d42e4cfd2d32da78d97ee6b9ea329507b2639690e3109b98b1cd750f3dbdf115f925ad6ef032ebd27864ae9921462ab68b25603c9fe182cfd556068bd2156cbe00e3bd0c51f13cc1127e9ed8c59f19d68caafb7f1cc48ca3c77aab108060b3f733a9b57348d008571b5f172c394284b0530ad58187ebe1c3ed596bba69aadc679eb70474fccd0a2d55ab9d04c0d12518760eaf4dea471dbc20455af6be1e85d3b825320c8a20d58218c6f3ecff71f9f9e081ff1491314ec3d748a3462579472c668ec7db80489146e24ab457a7ed1fcf226dcc233b21473f0563a210efc785f55b875605758b19db45c55cf832c6942f1376175a870a4de32956b093bde5b613f1bdce5e9317076e6f85ac88cf827a79256025f07c005d66858ce3bebdb20b2a9895ab202827e292a03b192bad5c9cabb90f03f5c4e4e301e3eb540d2fe76789c605eaa3114565ddd0376c93a4f8f988a9fafc973bb9c704b6532f6a451973c3684674ec74e4f4967c3cc4cad8aa103b40e214af461ecc23575a617518f0351be06739aac821739fd82f2c1ce7ab2019e4ad91865beade95ae3a8ee07eeacc32035eaacbbbb79a6f61f72ef15d440468876a38cb5d2f49d46d227ddcee8b0efd82bb41356411a3a84415248055466933656543f10279f7c1319cc0b3e73b378c73288989b50aaf9e0ef3d629a6652846ea56e3a41d7a99119ef8b0471fb3bd8d40278ed173569d0ea07b575e4703812e8c3aecefcc81c5669406d28a176051b790c7fa3f9e7aa23f28e5f02830c8bf4dc755fd73e4f64907d9670b50b35ea41c2e85f8dcb0600ed0044fbf35e2f1318f640cc2a891c1dc0636c4522f109e96d0f3ec2191d3ec7b09b82634cced812bfa8afd4c21976ed2480abfa6bdc94fb20d6a51a50166a826899e7324b6d18570d47abcd7f767ce84f20270263f7b048e0910689f837eef085de832e6ffd6c2f06c4fe4a16e2f6dfbe0e3468ac21f89511915452771a3f67b0c9097d15d3db2683653ae5085573e86cf8f0d2bb87531c00c52004233a1ab57f7e3dbabb887e8114ea7a91b01e3157b1facf1f8959618d81f53974b8c4fd31aa3c41eebe3ac4d72bdf7ea58f7ffbf0a8a5f1fe56c49e8788923c24c07c985cf90db733c2a826ae5bea0",
                    "addresses": [
                         {
                              "@last_seen": "2018-11-28",
                              "@valid_since": "2013-01-17",
                              "city": "Bangalore",
                              "country": "IN",
                              "display": "Bangalore, India"
                         },
                         {
                              "@last_seen": "2018-11-28",
                              "@valid_since": "2014-01-01",
                              "city": "Singapore",
                              "country": "SG",
                              "display": "Singapore, Singapore"
                         }
                    ],
                    "dob": {
                         "@last_seen": "2017-09-23",
                         "@valid_since": "2017-09-23",
                         "date_range": {
                              "end": "1978-12-31",
                              "start": "1978-01-01"
                         },
                         "display": "41 years old"
                    },
                    "gender": {
                         "@valid_since": "2010-10-19",
                         "content": "male",
                         "display": "Male"
                    },
                    "images": [
                         {
                              "@last_seen": "2017-10-05",
                              "@valid_since": "2010-07-14",
                              "display": "http://graph.facebook.com/1109157976/picture?type=large",
                              "thumbnail_token": "AE2861B242686E6ACBCD539D133B8AE59A9AE962DB1FA5AA7AF08DAADF6408FC1C6A8283D9CDB2322ADF85744B699B543C4E5FE3AC5A925CC78A78485D1B1861F699",
                              "url": "http://graph.facebook.com/1109157976/picture?type=large"
                         },
                         {
                              "@last_seen": "2018-07-23",
                              "@valid_since": "2018-07-23",
                              "display": "https://media.licdn.com/dms/image/C5603AQGG83_815pSvQ/profile-displayphoto-shrink_200_200/0?e=1538006400&v=beta&t=wm-B2pcQZgmqRLL_TZxoudwW9drp1-AtM-Z4LoPP0ME",
                              "thumbnail_token": "AE2861B20B7D6E22D4C9479C5C7387EF9C9CE823D35EABEA73B2CFB4863058AE4E7CF680C08DE8100FEDB0294742DA156C0360F48F128708CC9F784005054530B6D99C6148A128E5131BFBA8CFF5F9BDB5A8E97CF99A12DD7A9948B1D92730DCE7C8B2435B546211CCC892B90151753EF50271E4859095193819DCA01F80C2896A1E88102F1FAA790D20E6456931C761015BAB532D21C36F1A9FD621FC3EB38D8D8373FBD7",
                              "url": "https://media.licdn.com/dms/image/C5603AQGG83_815pSvQ/profile-displayphoto-shrink_200_200/0?e=1538006400&v=beta&t=wm-B2pcQZgmqRLL_TZxoudwW9drp1-AtM-Z4LoPP0ME"
                         }
                    ],
                    "languages": [
                         {
                              "display": "en_US",
                              "language": "en",
                              "region": "US"
                         }
                    ],
                    "names": [
                         {
                              "@valid_since": "2010-07-14",
                              "display": "Srinivasan Kannan",
                              "first": "Srinivasan",
                              "last": "Kannan"
                         },
                         {
                              "@valid_since": "2016-07-23",
                              "display": "Srinivas Kannan",
                              "first": "Srinivas",
                              "last": "Kannan"
                         }
                    ],
                    "origin_countries": [
                         {
                              "country": "IN",
                              "display": "India"
                         }
                    ],
                    "user_ids": [
                         {
                              "@last_seen": "2018-11-28",
                              "@valid_since": "2012-10-13",
                              "content": "36389196@linkedin",
                              "display": "36389196@linkedin"
                         },
                         {
                              "@last_seen": "2017-10-05",
                              "@valid_since": "2010-07-14",
                              "content": "1109157976@facebook",
                              "display": "1109157976@facebook"
                         },
                         {
                              "@last_seen": "2018-11-28",
                              "@valid_since": "2012-10-13",
                              "content": "10/22a/690@linkedin",
                              "display": "10/22a/690@linkedin"
                         },
                         {
                              "@last_seen": "2018-11-28",
                              "@valid_since": "2012-10-13",
                              "content": "#69022a10@linkedin",
                              "display": "#69022a10@linkedin"
                         }
                    ],
                    "usernames": [
                         {
                              "@valid_since": "2014-01-01",
                              "content": "srinivasan.kannan.395",
                              "display": "srinivasan.kannan.395"
                         }
                    ]
               },
               {
                    "@match": 0.0,
                    "@search_pointer": "054fd437e4f9bc9db7270c821b4f9d7f8edc99cf8a8dc964221213b8f95fab5801ee0a02708f0b5b1aecee05c199a4600a1c2ed1685301182499f01bd9af32f59f27550f534d3a52f94ebfd0fef1f0cd3be133ff84624e500ce605faf41b5cf44b7f14bc62b9c6083167643e3b6f22f08388a2e463979b3188958563191b284dc68cffc6e45a6daa8bd83fc4ecc0aab153dc02617440fbdfe8a23bb332743ad4bcecfc822688631dd6239b5760411f447dad86fc807d39d474ca1301f01add94c0e2c342680cfa76855ed05d597dac3794d543171d88c59f9fee61b1c1d48491614932d8814af224c902c00a55c68c59b92b58238082ef0005306ec67de72ae93368e824fc6e4e4d39d863a80d14b53c5a63d2572f798347e914815be0d4c65e74b6384e36a30219286d52f9bc0d6b3867e868f4ff5c9866f91d64bde86bde6a6688e94fecc9d39f14a0ff2f7db4d8b22bd2866c9d55da46f30f39cd25c3d27f7d83b0d4e830abb44b293fcb88b1ab5249441e2bd0ee01d8a9324c5e40b2b9280e40653b3c48a2678cd62f89c28b86ea69d23e9e89874f804317dbfd47f66e13d70ae5b402bc8f9c12689e7575f0e2e1b73f4fa3ccb4b8a690a8b543c6f9025c5e914ca4326b7f109ad7334eceb673df1f4936f5edea63382f39866f8f48191f0f3adf0f76781b7ba534bde5b3cf4162a0f6501f4fd11644b4021a128744def3b3d4db23645aabf24a68e04c9f60cb5bd51f083fae79852bbade81e26ae0c274d4a6f4f48e195078e90e80d4f6ac12232dcde08996136633dce1215bf071eae2379fb0bf6075c56dff175535a65977d2af0c6383f4b881eef0da1996444526a33506561a6aa5c6f363664649916e9e34e424ed647eb290130d4ab8ae2477f8c5dd88078dff75d11f81add2f801a4c508dd35c59b6f8ba9ed734e85e84490966d4220f861c7b323220414202b0ddea29f77ebcf5364f68eafe40aa53a29e28d3d9c808e60c23fc0a307d735326746a5089ccf723925f0cab1cd279f8639327a7a96515440457e0d7d68e750f72ffcdecf5437cb7fb5e4b30d18aed5d70cc45f87baf1e53841f7a2cf35016a1c525d9874bbc87cdb7df9159cbcda22d55673dac4595b58f82cb2662e9cbcde2d1b7e8638805fc9db7b610eeca67513a52dfbb362fa668d9c22c4d81ae9909da3187e51af60a3c0e4500791b7179fdaf9ba0b234f42fa4e10a1bcbf69cb72742aa4f52d0a67594196e8227807246a031608dcabce73e9b5e498b7c998b6ee5e9e7d4e93d5d3f545083b03100b33ca5c07f2378867aec53e5d5044eac50ed5d2d94b0bfe93d02bee66ef4af93eb4ca216d5b53492da2428d45be7de1a87942e2618660e4dba39e6c5a87fb0e1326d2a07e9cd8fcd98fc7ca19a1d3d2c2c3f40e3129dd4c67d19c6cecf258e08d5d45a0264c915fff0b4a51532d344e7cddbacbd889fcfed746141ccc0747c5749a49e87923adf7103e506728339a35396174c96c3561ec268f7b4da9d1262b37cf563f41f739ec28371ad6c2363f5ea229c87596c5df6e631b151c5f8265246e1fb924f09b3e12622ea139ffdd30f808314ba3f799ea8a708d3a12b6ac49490a52367a5a0028542ebf66016d15b77be35d50a510b423e127047c61e69c637648c6fc08b75a62ba9e5aacdd436f781252b7c82b0b806ca066c00cd3bd3cf0aec87cfa07b814fa7606324b0a98b09cd1017d2c8321ccc077b6481a5905fc1d546f1f9d5a0ca4ca14503eb4d8f84c8030cf32a5d1d81bb7882e92eb4b4b7c265dc4534f62562582613e36fe87bc0d5fd91d2b0412e035c6c53a42315f9be14244b3850e807702f8a8a4e26bdea1b2e57979992f129137175782570cd9009f8d5b464a955cacb116687dee79a08c9cea88cb370963e8215c8397631e37f103d4927cdd34a123ec4465eeab42108327a4c04cb56276f86b6682d8664f1ebfa602f25bfb8fe528a1787c7b2c381c2f2f39eea8105a3517e6fb547f05ad1e0de43ce8960751fcc68ef55e384e72764f689f3766a2a193236f895b2ef8391cf5cb81785c67c73dd71242a8801d717448fa7d19f60a9a1343d392946f7291c4bdb896e6c21e7caa00fd7f5bab99cd0acd3a569a84c54bbbd9d8335302a60c3713d6c73e5809243651c0e6b167ac179d49d67301393b0731109d90cf75192d33fc91aa2a52095bfe88cfda2c00fd220f5efb6ba945c352a7e649d4d691a094ceabdfcb46a2462e00e7068fe9e3147cb0037e2167ee53661c354f99355a54acea8a684ee778300c849e43f9907f3cd4e14fcb4758f7d3cb0bc0b32f845e995d9f21f180302749905bbb432a5306dbbf3bdd44a5859f980c81158aad0d2308babefc1e634e42b35fd669a03969f4b90444242ccfde3afa14bad9b7d162e67d9ee15ed40a727e4fbc87b826657edc09a713745c0e0b2eb9dedbaa244c9796677eb9ab622944eb1a5744282a8ec65ed5a7f24c6cc8fa1ca964ac0e4941558407c112701cd46132cfa9c5b12f214ab832719925220e016a97be79580dc4a1596447c63c22aa710e7222d5b4ceee38c7f1b821533a8170834760d1ad18aff80c415f57919280cb2dde500ab773810abc4a2dcad10de2282400301008cfb3355de937d37d948a253cc02b92c49a7a56d2a9ecc99c6a42221befd2e9eaed15c3f3d5f5bb58e940d2249c48da4f65ddb78f5eb2c5018b05d60f4415814711e4423223999f978312aba722e706caa7cb234338bbd28f0fbfba7edd1766be042a711ae5b10e79a74a0b595a5bb349bf359e4ac57338d333ce5c9da6239d94ac85e0a9cfb6190cc52db5aaec2b0d33c0814fa8d4f95a1a11a7b66fe228deb32cb9cce61e5130b1ef07604de4447ed41503b1c4",
                    "addresses": [
                         {
                              "@last_seen": "2016-12-31",
                              "@valid_since": "2016-10-20",
                              "city": "Chandler",
                              "country": "US",
                              "display": "Chandler, Arizona",
                              "state": "AZ"
                         },
                         {
                              "@valid_since": "2014-01-01",
                              "country": "US",
                              "display": "Minnesota, United States",
                              "state": "MN"
                         },
                         {
                              "city": "Demarest",
                              "country": "US",
                              "display": "142 Anderson Avenue, Demarest, New Jersey",
                              "house": "142",
                              "state": "NJ",
                              "street": "Anderson Avenue",
                              "zip_code": "07627"
                         },
                         {
                              "@valid_since": "2010-12-22",
                              "city": "Albany",
                              "country": "US",
                              "display": "Albany, New York",
                              "state": "NY"
                         },
                         {
                              "@valid_since": "2000-01-01",
                              "country": "US",
                              "display": "Utah, United States",
                              "state": "UT"
                         }
                    ],
                    "gender": {
                         "@valid_since": "2014-01-01",
                         "content": "male",
                         "display": "Male"
                    },
                    "images": [
                         {
                              "@valid_since": "2010-06-25",
                              "display": "http://graph.facebook.com/562401682/picture?type=large",
                              "thumbnail_token": "AE2861B242686E6ACBCD539D133B8AE59A9AE962DB1FA5AA7AF089ADDD6909F81D6B879A86D4B8252BD8922E00649241641F52F0B958D11ED09075115311196AF5",
                              "url": "http://graph.facebook.com/562401682/picture?type=large"
                         }
                    ],
                    "names": [
                         {
                              "@last_seen": "2016-12-31",
                              "@valid_since": "2010-06-24",
                              "display": "Srinivasan Kannan",
                              "first": "Srinivasan",
                              "last": "Kannan"
                         }
                    ],
                    "phones": [
                         {
                              "country_code": 1,
                              "display": "201-461-5000",
                              "display_international": "+1 201-461-5000",
                              "number": 2014615000
                         }
                    ],
                    "user_ids": [
                         {
                              "@valid_since": "2010-06-25",
                              "content": "562401682@facebook",
                              "display": "562401682@facebook"
                         },
                         {
                              "@last_seen": "2016-12-31",
                              "@valid_since": "2010-06-24",
                              "content": "3/582/973@linkedin",
                              "display": "3/582/973@linkedin"
                         },
                         {
                              "@last_seen": "2016-12-31",
                              "@valid_since": "2010-06-24",
                              "content": "10372839@linkedin",
                              "display": "10372839@linkedin"
                         },
                         {
                              "@last_seen": "2016-12-31",
                              "@valid_since": "2010-06-24",
                              "content": "#9735823@linkedin",
                              "display": "#9735823@linkedin"
                         }
                    ],
                    "usernames": [
                         {
                              "@valid_since": "2014-01-01",
                              "content": "srinivasan.kannan.52",
                              "display": "srinivasan.kannan.52"
                         }
                    ]
               },
               {
                    "@match": 0.0,
                    "@search_pointer": "6715f0477f675992ddc4d31f3602228d2e38e83f5d235c0a35bfb962cbb04464f5ae61f027d4760465806d33db812a8875253a19ef7b3c36a177ba0f10688a3e82dd032c23a50fd12321ce01e32a612dd3883d942d21db99aef4eb0f16fd22d3c7ea7c8d2831103ee73e83467d2cdf0650eb7539064d8809fd316d2c16a336463f95463775ec8e2738020254cb831066d4ee758bbdd52b444de4bb85fafce8e68ace05f762d7abcb3f1ae79f289cd8fd5dd9b3cf5028855bf079766d60801f4c931d05e0dd240b6aeb20d961fd19baaf83fac5eb28992b01f7ff26aa9ab81344397f1aacdd7e87afc12c37e6f267dd4353b20cefbdfce74a3ecc420ba26070c071b8d47428520b0eb2e5a4fafacd25c52758140aa0521ef5979c2a437212d21af86acd6680252b110cd2df35626c28c108143c370f360f60e36abc675808db75e7a33d5279b1a013f311314be09d9286ee43605035901cabd0925af0f4da17ef532c202e6c270e99c2f2337cfadb1ec3",
                    "addresses": [
                         {
                              "@valid_since": "2017-07-07",
                              "country": "IN",
                              "display": "India"
                         }
                    ],
                    "gender": {
                         "content": "male",
                         "display": "Male"
                    },
                    "names": [
                         {
                              "@valid_since": "2017-07-07",
                              "display": "Shrinivas Kannan",
                              "first": "Shrinivas",
                              "last": "Kannan"
                         }
                    ],
                    "origin_countries": [
                         {
                              "country": "IN",
                              "display": "India"
                         }
                    ]
               },
               {
                    "@match": 0.0,
                    "@search_pointer": "",
                    "addresses": [
                         {
                              "@last_seen": "2019-02-09",
                              "@type": "work",
                              "@valid_since": "2014-01-01",
                              "city": "Ambattur",
                              "country": "IN",
                              "display": "Ambattur, India"
                         },
                         {
                              "@last_seen": "2019-02-09",
                              "@type": "work",
                              "@valid_since": "2011-01-28",
                              "city": "Chennai",
                              "country": "IN",
                              "display": "Chennai, India"
                         },
                         {
                              "@valid_since": "2013-01-17",
                              "city": "Ghaziabad",
                              "country": "IN",
                              "display": "Ghaziabad, India"
                         }
                    ],
                    "gender": {
                         "@valid_since": "2010-09-21",
                         "content": "male",
                         "display": "Male"
                    },
                    "images": [
                         {
                              "@valid_since": "2010-07-14",
                              "display": "http://graph.facebook.com/100000496523308/picture?type=large",
                              "thumbnail_token": "AE2861B242686E6ACBCD539D133B8AE59A9AE962DB1FA5AA7AF08DABDF6D09F91F6A8380C48EE86166858778176997563C4C47FBAE58CA16C28B7649464C5230A194C33909E270",
                              "url": "http://graph.facebook.com/100000496523308/picture?type=large"
                         },
                         {
                              "@last_seen": "2019-04-29",
                              "@valid_since": "2019-04-29",
                              "display": "https://media.licdn.com/dms/image/C4E03AQFQBdOLD0o0Dg/profile-displayphoto-shrink_800_800/0?e=1562198400&v=beta&t=UTSlO2DR4eupXvKMx3342H2ANRTUsSFQSFuaJZnLSxw",
                              "thumbnail_token": "AE2861B20B7D6E22D4C9479C5C7387EF9C9CE823D35EABEA73B2CFB4863058AE4E7CF681B38DE8100FECA6531052AE60691C03C6B9128708CC9F784005054530B6D99C6148A128E5131BFBA8CFF5F9BDB5A8E37CF99A18DD7A9948B1D92730DCE2C2B34A55546211CCC892B90151753EF50253DDFBBEE85B1F1AB2A20781C8B36D0CA4796444ED55483691734F14851F067EB5380274C55A2483B514CE3EB38D8D8373FBD7",
                              "url": "https://media.licdn.com/dms/image/C4E03AQFQBdOLD0o0Dg/profile-displayphoto-shrink_800_800/0?e=1562198400&v=beta&t=UTSlO2DR4eupXvKMx3342H2ANRTUsSFQSFuaJZnLSxw"
                         },
                         {
                              "@valid_since": "2016-02-03",
                              "display": "https://media.licdn.com/mpr/mpr/shrinknp_200_200/AAEAAQAAAAAAAAS3AAAAJDFmOTAxMzA0LTE3YWItNDIyZi04NjcxLWRiZjAxZjYwYTI4Nw.jpg",
                              "thumbnail_token": "AE2861B20B7D6E22D4C9479C5C7387EF9C9CE823D35EABEA7AAFCEB4822D4BE6583BC7DC98D6B5210198C7212B2FD214763272C79F7CA63BE2B8506D2169600AF6E8B141709B04CC0A3B829ADFCAEA92EEBB8F09FA9C77A43EF83CC7C54068D9E0BEE810152C057383E4C59A1C7F7E41F66652C09C9CD0473138E1E11682F9A11B74E9",
                              "url": "https://media.licdn.com/mpr/mpr/shrinknp_200_200/AAEAAQAAAAAAAAS3AAAAJDFmOTAxMzA0LTE3YWItNDIyZi04NjcxLWRiZjAxZjYwYTI4Nw.jpg"
                         }
                    ],
                    "languages": [
                         {
                              "display": "en_US",
                              "language": "en",
                              "region": "US"
                         }
                    ],
                    "names": [
                         {
                              "@valid_since": "2011-01-28",
                              "display": "Srinivasan Kannan",
                              "first": "Srinivasan",
                              "last": "Kannan"
                         },
                         {
                              "@last_seen": "2019-04-29",
                              "@valid_since": "2010-07-14",
                              "display": "Kannan Srinivasan",
                              "first": "Kannan",
                              "last": "Srinivasan"
                         }
                    ],
                    "origin_countries": [
                         {
                              "country": "IN",
                              "display": "India"
                         }
                    ],
                    "user_ids": [
                         {
                              "@valid_since": "2011-01-28",
                              "content": "6/676/828@linkedin",
                              "display": "6/676/828@linkedin"
                         },
                         {
                              "@valid_since": "2011-01-28",
                              "content": "19565600@linkedin",
                              "display": "19565600@linkedin"
                         },
                         {
                              "@valid_since": "2010-07-14",
                              "content": "100000496523308@facebook",
                              "display": "100000496523308@facebook"
                         },
                         {
                              "@valid_since": "2011-01-28",
                              "content": "#8286766@linkedin",
                              "display": "#8286766@linkedin"
                         }
                    ],
                    "usernames": [
                         {
                              "@last_seen": "2019-04-29",
                              "@valid_since": "2013-01-17",
                              "content": "srini1968",
                              "display": "srini1968"
                         },
                         {
                              "@valid_since": "2014-01-01",
                              "content": "kannan.srinivasan.718",
                              "display": "kannan.srinivasan.718"
                         }
                    ]
               },
               {
                    "@match": 0.0,
                    "@search_pointer": "f3c48753bc47e55e697e5ce63aca6885db60ed8a82d8553c581f25b0fe1792db34f9f8d7bd3449d78fe305a872592cfe844553a9a17db4bd40afd93d189ebc1bd5f29d06fecf4800fd49eddf7c0aaa57e00f6b0fe56c853438f3612d0c56407977e89c6f89fd56d9a922935faa6168a9bfb93935e2fef6e1c2341958a6415afcc6d7d1f5002e407b601e00ee82d80064ee269b23f7077c5be7ad3b3b5ee054868f34fe8b0d47db7763dfa891ab4b4fa21ca1a808fc6fed392100de7a56f24e02881f7ab724d8e76600da6518a3cc444a328f61b3b7aded3b8fad6c6a80cd4117b32bafa68b2a881ad7c57a623d2fee97949416813f9d7e9c2be6397fa9a6e96835569ed6c63d3acd0d9a7d9cfcc294c531021ee45df5ac01ec8292e2e88c7c362c5e469cee4fab81882d869fc40c906f667585bc2fbbd7056c28f1487bd193d346cde233e7d58e131b5f0bfd019ea917dce680f18ed6cfe499b717bd6f0c430f8019c05617892dc76c25a9da47b2bb25b0abf18d237cce963be1c4b614704cd4ba05ac879f81ebc71ba399046d7af55f3bfe88efbf50f6c67939b87bc9414c1072303d0d70d5f916bd84aafc015ec8917335b75e19872852fc6da2313e1b9fb73c7554a41ef87cacd339a2b7cbb3384f9ee275f25adc209c69a7fec147bdb6f645615595a761ee2bdfa0871df1b6a2b4912c8d9b0e1d8bb6e54f610df7509440a2a19bf195b9acab85593a72b1ef041d1908c6f6942837ce9bd43771b6931ab5687f43b7844a7ff4438bed402e66608fa3a123ae6d5d31c486331928dbd6a49700ddf9ec1b29a8c615d395655e833fe81ac3d0d8826fe986526550840608fcc96fd4789b00b0a3dc3f07d463c63440bb6f11bb43c69ba5126deb77e96501db37aea53b47ef6fb12bf1058aa0895a618d8859ad36490e13ab7998c32a3389e1cadfa73fd763f7deaf676438f361c685fca8659f6fd678e6b34427fdcc87ab4bc269a9ca14f06f78066a2442e37b5b66f3d7be8057ffc4bfa09f7639055f79fae56a7e7c3ef4a353f39f31283d983f9ff44fd6ed7660aa384d9c9ba3e79c57a115f8a49092a76f70ed3418db03b6d0ee70c84b1bd654ce8e462837d1c79f9fccebb73124ce1c220a0a98421a00370117dd73f022b3846dd8aec4f40f31ceea6578c0c939280ed5a488326ec723873e1148dc16e749c666af5b9df3926890a2444c2f29e0b8b0d42b17e5e5ddef44c973fdd5da826684ab31de316ee921a5d7c79b525d79e9c9c13ccaf02a85407bc2bca97cefcff6a998d40292457c74e5a45be4bd25267cf79fefc8ccc0d21440c43e854c2a627002cacd963b5ba44b1461ed8419486d29bf6d1c07ea602e2807a683a89b78c09efd693399f28ba5a1ed166c40d155b284d6ad7c19fde92ff7070ccc81cd427b6b184fcede66a661541106cfceccc9747dc9329dc519790d54a33381d8667fa6e27fe347e895907d10c4d14ce36943de7ce8647e815f631b3d24b0b46dd0c22f33836446d2de7230501c22d75bcca15c47efcb4fb7850b7821562125d471df5db3cc245ed5391cb9314fbd7e786feef32a6b8c48aae701262e036ce134afa7f6d2f2d376efecab2d8900c6d475ff54ee20cd04ce8ff639c5400e412cf0f62152b040a88235b2296985d2807e8d5b61b6b7a9540b0e3c76bbde7593d916b1cf2f1415318291d9811fe5e31d2852245137e3c9e8e98ec5c2c28086efb7eeea23f997672d3cc7b570588f7d948f720673934393796dca73bea8ebb13afdf536d6b9f5cb59e3b61e2727ccb43dfc13620505f9cf6d0dffc3ee8c2012acc0c8772c4809ce102ec11323e7099a0bb1c81237610538d6d30115171a12d6b5ee1cdcd31d74e05923ce04542e22021dbf01b37396a8f03f06facdd376e467b65f683ca723e301908c43e4e7408a25fc0abc7533e31497cb48737de09d37964dc3ed846358191811dd539b407e70c9389981c6be09ea916512ce7eeff30700a37608a55b0e77ddc8b5278e19638928636dbe976a9e4d8f1f3ed16abcdf44c714b1c814f3a8ac0ddd69191b2524f09eeb8a391dcda1a328c202113b9849d636cb2cc7b55e219fb7e959444a1c8fff06c9dd6d0762d36cae148ea1aa4b211e73bf334ad1292df732151d3dc27a3683fb2b2cf0193fa204dfc2266fff136e497fa4123270a7c43ccc6d810df2b9e2572c2e597053e7df562442c9ee82a79618fd1f655426dec1f1fa6bcb4b7109555cd605e62bc5f91383335dee741f214d9101fa5782a9923a42a80809789f8bfdead27a9e7109bf9f82f116e6f8eadf48bcc195047a03d8885c3514522e54bd43b861353d16a82d1b70ba9303d7cf46088009e3b2ba79d775fb0f893c2671781b193de963c6e5e2de56aa566fa0ea5a026bb182b75e890a09b610017b8886d90edc60db05c9450a38522df1ad1ee9ab594290dbdcadb647a929470d11db5904b14a4a1a39f5d405d0fdc8390f4e7f6714f9d0e55131888a020c814820323ee6ae8f8876fe7d8792fbba6bc3baa249a38f8aa4bf89a69f6303c7359f41eab35b55473ecd1c0794663217fea17341175dfc1cb6db5d12579f7b35ab153173e9436e021051ee5a1c0c93a26cef53976c796782f111676831b0c25a8d63f4274d9b5bcf86f1f8ff5cebcfd7b3cad1c3bd92d2a229bd7b3580ee7ae3802362e9b31f6bc9f3c8ae99948aaa297031867b83c1cdfc99177e216a583326bbd72430a225320ba761b43efa66a2d343bc3df0afe01bf75083e6f51b041ea86f9c928cca3d8e19d4d280a1a7bbba0ac5fcf9eb83a4bb87058b35c2f8cb8c65941591aa2f5936c3da7df62c27591f954bdfeca8ad181e96e52c6bbfa8cd6ef4c2ee4ae19fd14665e8ebc57585ad52232ec471af233a1788e1131461e390db1d6547e079a15f587f3c7b8d139eb7e4b8425c79c4c6d00fdcc9d025d3f17f3ee50f1eee0379d31a8fe3923fc6dca7dc6a78b3b11b76db270cc31ee008df792f0a57af417d1e26dea73fdae50bfa80b097f69e81628f2ce6318d53baa159090f57e51f5c773013dcfbc7956909a7a3a268fdf3d1e64bb828ae49e423a92d18f59a60fe4042392fde86445f9acaf1f8628036c9f5a2d1a0e5adc77894b3c1d66abbae3fcf2a2d42cf9018a0751606047cd6ff1243a8f66183c3f6508de5b45927a329873c6d6536d8453b0fbf00f4f7a13bc5155863a8e6eb29bf661172f1cc9ae057472883dfac3dfe802b1d3f252b5b7a6176713af9eb3a8e4067b078e8bbe6e197a96cd7439f62551086630c89d2210da7df0f155ee3cde5f3da0e9524715ca35533fe2c0fac53e524e6da7e7399e202b12d52bf8b5faba15fb5a7a214da62f48725f6d75298cef24bd1018be5b01cc79146c05160136999e39f3589262a1d6f341b6c46c01ad04eea7d74774cb85641f5abe65946076a5c7f99b550c5be673cdc89add2ac773b531da288cb965a009301f1fd83b29254093c95a13cd3c06c9c1f002ea9777eefa202b9b0f26176028d9d2fbdb096f05b2fb1c1136920cde15e59275df4c24b0cb5cf0a8c8bca4ff0a7f1f448ef579f59229c5518ed8ccefb34ba6dcf3710351f2460ca4c01dec541dead2d3ea6ae99229ad2aabfcf3b7c4086303aab13bcbbe0d7431b7041",
                    "addresses": [
                         {
                              "@last_seen": "2017-09-04",
                              "@valid_since": "2007-07-10",
                              "city": "Cupertino",
                              "country": "US",
                              "display": "20995 Pepper Tree Lane, Cupertino, California",
                              "house": "20995",
                              "state": "CA",
                              "street": "Pepper Tree Lane",
                              "zip_code": "95014"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@type": "work",
                              "@valid_since": "2009-08-27",
                              "city": "Santa Clara",
                              "country": "US",
                              "display": "Santa Clara, California",
                              "state": "CA"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@type": "work",
                              "@valid_since": "2014-01-01",
                              "country": "US",
                              "display": "Ohio, United States",
                              "state": "OH"
                         }
                    ],
                    "gender": {
                         "@valid_since": "2007-07-10",
                         "content": "male",
                         "display": "Male"
                    },
                    "images": [
                         {
                              "@last_seen": "2019-02-10",
                              "@valid_since": "2019-02-10",
                              "display": "https://media.licdn.com/dms/image/C5603AQE_Hatbyhd_Xg/profile-displayphoto-shrink_200_200/0?e=1555545600&v=beta&t=uYyk9QMKD7ldoA72xgc0925vTiHHaiGtmO2WPseEHgU",
                              "thumbnail_token": "AE2861B20B7D6E22D4C9479C5C7387EF9C9CE823D35EABEA73B2CFB4863058AE4E7CF680C08DE8100FEFA8591569805D31176CDAB9128708CC9F784005054530B6D99C6148A128E5131BFBA8CFF5F9BDB5A8E97CF99A12DD7A9948B1D92730DCE1C5B74758566211CCC892B90151753EF50273D0D1B99E381603C2F01E95FF841173A42D3440E62F4F018B4853099725075B8B314542DF732F8AAE0BEC3EB38D8D8373FBD7",
                              "url": "https://media.licdn.com/dms/image/C5603AQE_Hatbyhd_Xg/profile-displayphoto-shrink_200_200/0?e=1555545600&v=beta&t=uYyk9QMKD7ldoA72xgc0925vTiHHaiGtmO2WPseEHgU"
                         }
                    ],
                    "names": [
                         {
                              "@valid_since": "2010-03-29",
                              "display": "Kannan Srinivasan",
                              "first": "Kannan",
                              "last": "Srinivasan"
                         },
                         {
                              "@last_seen": "2017-09-04",
                              "@valid_since": "2007-07-10",
                              "display": "Srinivasa Kannan",
                              "first": "Srinivasa",
                              "last": "Kannan"
                         },
                         {
                              "display": "Kannan Srinivasa",
                              "first": "Kannan",
                              "last": "Srinivasa"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@valid_since": "2009-08-27",
                              "display": "Srinivasan Kannan",
                              "first": "Srinivasan",
                              "last": "Kannan"
                         }
                    ],
                    "user_ids": [
                         {
                              "@last_seen": "2019-02-10",
                              "@valid_since": "2012-09-29",
                              "content": "39951687@linkedin",
                              "display": "39951687@linkedin"
                         },
                         {
                              "@valid_since": "2012-10-22",
                              "content": "28933167@N08@flickr",
                              "display": "28933167@N08@flickr"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@valid_since": "2012-09-29",
                              "content": "11/468/233@linkedin",
                              "display": "11/468/233@linkedin"
                         },
                         {
                              "@last_seen": "2019-02-10",
                              "@valid_since": "2012-09-29",
                              "content": "#23346811@linkedin",
                              "display": "#23346811@linkedin"
                         }
                    ],
                    "usernames": [
                         {
                              "@valid_since": "2012-10-22",
                              "content": "srisan80",
                              "display": "srisan80"
                         }
                    ]
               },
               {
                    "@match": 0.0,
                    "@search_pointer": "7ab8b95795394d1f382e6dbedcacb462966a578ca105c101a7b67cfe9acdbdfef8a11692cc913e3095f17dc56bc8f6da60e7efd63516fe03493d9c702217441976fed68c956e56cb32a7b9dd2e92730d943d6a5b18794cecd90631127939025bc86200484509639d2448a07865f3ac1c054883461f4638cbc5f558a9258a4cc83eebb2686adc350439cc585b3f53e5e7a604384aa898a18d3af7dcedaf4c19cd59845194ea04d97b898106b10919eaeea3a0ad9a32f4188338eb9e6235b7222fa46b0a39370a5e1b06475a21c6866325d11def9e3f1a6cb2c940fe4a89139e1c20d7716abfac9e2a147138307f8de15422c442e694bbf5d7af7742c81742a0c133bb7a2c72b30d7f4aad8565e283e3388b8da04c5b4cf6e189999b9b243ca2bd7129ffb7aeb8b5c94182a82d1f70065d5ac17df7cf7240443926d588673d246f3ed7802cde8d0291211627feef4a1fff3fc425c594b3d23e195bafda442a50244e3450743530e066adfbee8adaf8ea9ef005dd5f612a3a6f246d326362c5b79cf24813bd81fa7f77aac7fd0868e5d333ec9e7a7f4fc1aaa4471ec50242244dc3954a704ba34d879d60822db7fd367a3a1cc8e20b21cab581d8936d1d09d5b3a3d5da45d4dd5c77695880f98eb10a36e5b09dea916e779877ced4b0b5c5e79ed42ed86f7fb64e3afe3f58780b0cfc0aedc3411de6df5d548eb7c36ff573e9ea2ee1bd010e72e8a81db6809f80f83c7ad057790e9be5b8fb44298e02d3f8b7b8b13113a91330a1c2b71bb60a11268c14c53b48eea26221037cda94a884bf196b0748446e2dc31ba0053db4ad8465483a0c78e31a62851d3aa18a05f8fc4f7ff31470426aeaf97e177f61a691703b6a4215",
                    "addresses": [
                         {
                              "@valid_since": "2009-09-14",
                              "city": "Gibsonia",
                              "country": "US",
                              "display": "1056 Old Orchard Drive, Gibsonia, Pennsylvania",
                              "house": "1056",
                              "state": "PA",
                              "street": "Old Orchard Drive",
                              "zip_code": "15044"
                         }
                    ],
                    "languages": [
                         {
                              "@inferred": true,
                              "display": "en",
                              "language": "en"
                         }
                    ],
                    "names": [
                         {
                              "@valid_since": "2009-09-14",
                              "display": "Srinivasan Kannan",
                              "first": "Srinivasan",
                              "last": "Kannan"
                         }
                    ],
                    "origin_countries": [
                         {
                              "country": "IN",
                              "display": "India"
                         }
                    ],
                    "phones": [
                         {
                              "@valid_since": "2009-09-14",
                              "country_code": 1,
                              "display": "724-625-2822",
                              "display_international": "+1 724-625-2822",
                              "number": 7246252822
                         }
                    ]
               },
               {
                    "@match": 0.0,
                    "@search_pointer": "08db3e36d4133ac73b5c54438d47e6a59fadf45b879871509a47dab0447c0ee5862eeb1a06ef04c1763863863de68ae2e4f2df0f223924af9eab6107e200e79b2a70b6be379fdbdb9075fa870b3b675b169585a745cfd2d5fbb2f5bb25e4c7a2292a1c9a0aba5c5c31e77b602cddf634fbf5cc3059b0c6d6c2c8637e439d967e67c12852b93c59e9cb42ddd04243f79895969955ab6125b74dc9e2b6f04186c09c6ff62552698a00044cee4b2ba1de7e5e7301b771dcae4146c40a494b19da0dcecc3b032cb6ce987f91f537d2c5e900085b8abb27e898cc0fa55da491c7b33d01030adf9cf7862ba3660a317797cff6ad4c82df407cff94a5f0bae4b777a2b045fec4b6ee8dc0228799d7ed4bb3902f513607d8a3990dd3111290b89753b7f0cf255dc9041d186d112b05c9b32dd5a8e0077707c664c76f1a6bcdfff5f8fc8e2642a0eae6204a1d75f1f702b16300ec2d20fd2941a179a01f063bac49070578",
                    "addresses": [
                         {
                              "@type": "old",
                              "@valid_since": "2009-08-27",
                              "city": "Sunnyvale",
                              "country": "US",
                              "display": "Sunnyvale, California",
                              "state": "CA"
                         }
                    ],
                    "names": [
                         {
                              "@valid_since": "2009-08-27",
                              "display": "Srinivasan Kannan",
                              "first": "Srinivasan",
                              "last": "Kannan"
                         }
                    ]
               },
               {
                    "@match": 0.0,
                    "@search_pointer": "7d3b22f03729f2766b8ceab4798d49559b6b9395c7a5cd0121b85ee8c990519c6d0d8a4f828b4a3447d07efee747fb0f7f95d42041ce258017398c06ae0d5d5f3115a42a4754d8acc600f9f63aebd2cb5137543b6462cd04850657e3e0dbc6197034737396f612736be5bc5ff70878a0e5fc63a53c02612a0b6b7a46d2b77a6da15bee60b07329d215152fd93a22dc20fda09d084c36f8a425e309303057f9775c47f07d6e1e32ef0c1b3bcc6390df6ae4c69bb047a235ac3be06f2648c29cc4953ef76d2e1bb141e666a67f11a362d07a76d002ce2d4a17594df62323ba415eda2ac43faa8965aa1f03f487b0f4357df9c24e96d119f8346c2b4377dd2b886e72281c966f9fe3e42b6322e4bfbe8d93112f27f95dc16f35e64374650f4ebcdedbbafefdf8e5f495b2fee3d7f56750afe4fec0b91e058f9f1217c5d109944f6378694d69aa9ef90a96e931c36da3ea26489fc8f03a63094ad17c40b3a73249ec8d26cd51dccb45c0cedc4e9112e0715a87bbd9f23ea5086a32a6faa5acc73367b43f96e48ff8b009735755bad8f12f1449d41a02b69d9b23b91466a8efb15e6c904860d066b4f6c74acf26a8247b379e",
                    "addresses": [
                         {
                              "@valid_since": "2010-03-29",
                              "city": "Spring",
                              "country": "US",
                              "display": "17 E Amberglow Circle, Spring, Texas",
                              "house": "17",
                              "state": "TX",
                              "street": "E Amberglow Circle",
                              "zip_code": "77381"
                         }
                    ],
                    "gender": {
                         "@valid_since": "2010-03-29",
                         "content": "male",
                         "display": "Male"
                    },
                    "names": [
                         {
                              "@valid_since": "2010-03-29",
                              "display": "Kannan Srinivasan",
                              "first": "Kannan",
                              "last": "Srinivasan"
                         }
                    ]
               },
               {
                    "@match": 0,
                    "@search_pointer": "638b143149dfd139f2a713888830df5599b5c197d9bf223a75e69277b871518a4e9de57b119d5ddc175e46e7baf3198715bbc181c6a4b80f2ce85eed712b9b51d82d9ed4f1900a5df159d141ab799afe9ec356b82c8cceb8d541140419c57b3dd45afba18514a669106dcd1b1e265209a387f76b9bee433edcaf1c5c10f5b8a16b8083d5860919f3d9445a0eeafb89e27b16c51e82ccea251d98b444d2c67b02ae11d6da37d9b83a319044f007ffa4d8b9a3ba57f29ef6e2da11354b143e64d972054ea6ff147971c07031298c0710235bbae21d1ebd63af9ac665fd2beec1c16ad53ff473344af1da7340728956929bf019bb516979779edd14e42d809be780f5f394c51f7602bbb78732e50dc06cbd1de55c9674e8becef80e83a7b6ff24af2996b27eb8ffa24dc6d20a944cfecc78637e808f822eb683fdca50a8185c65145baeeb1c80abdc17e3fe5c13af0ff96cfc4c2bd0b6ca85f861bef3f8fe10a17ea6c0df22216d0389dc2cd5a76c9f0aead925c1148aed3419fc49c7675c30c3fecff1a209400a9779b15d48d8d4a13eae303f28bc3d85fcd1d035f702b632056f365a291a98988762a3378e4ba82918e00928044a9dfc9e6fc9d21e7e3d5da3f2675128cbb4c7e74d38648a43daf179c42180ead3c3881013d481ef4ac21b89a3efc362174ad93bcb73866995265464ab2e00a4a77bce6663b88892b428bb6a3b96eb181cfff72a394ea7d8eec8c1681effe66f57b4c19f2cb9c247033192e06409113dc4923c8134497c7a2193d116215c9c138598e43c5036c615bc18e546fe",
                    "gender": {
                         "@valid_since": "2012-09-23",
                         "content": "male",
                         "display": "Male"
                    },
                    "images": [
                         {
                              "@valid_since": "2014-09-09",
                              "display": "http://lh4.googleusercontent.com/-D6XgaQbcJKQ/AAAAAAAAAAI/AAAAAAAAAAA/kt6gUGPfS1E/photo.jpg",
                              "thumbnail_token": "AE2861B242686E61D1980D9252328CEA9A8DF568C252A9AB63BAD2EFC13E56A4047EF183AEDABA003CC9BD5A2532A365183272C39F7CB63BEAD6506D2169601884E8B14170FE2BFE5113839CF7E1C3E29BD8AB24A6B14FC320C61FA8D869688DE9C5B2455F54",
                              "url": "http://lh4.googleusercontent.com/-D6XgaQbcJKQ/AAAAAAAAAAI/AAAAAAAAAAA/kt6gUGPfS1E/photo.jpg"
                         }
                    ],
                    "names": [
                         {
                              "@valid_since": "2013-02-04",
                              "display": "Srinivasan Vk",
                              "first": "Srinivasan",
                              "last": "Vk"
                         }
                    ],
                    "relationships": [
                         {
                              "@subtype": "Follower",
                              "@type": "other",
                              "@valid_since": "2012-09-23",
                              "names": [
                                   {
                                        "@valid_since": "2012-09-23",
                                        "display": "Siva Sivaramakrishnan",
                                        "first": "Siva",
                                        "last": "Sivaramakrishnan"
                                   }
                              ]
                         }
                    ],
                    "user_ids": [
                         {
                              "@valid_since": "2013-02-04",
                              "content": "108021571527487428426@google",
                              "display": "108021571527487428426@google"
                         }
                    ]
               }
          ],
          "query": {
               "emails": [
                    {
                         "@type": "personal",
                         "address": "shrinivas.kannan@gmail.com",
                         "address_md5": "a9e46cba401df1afdd7e1b5eba5b21a1",
                         "display": "shrinivas.kannan@gmail.com"
                    }
               ],
               "names": [
                    {
                         "display": "Srinivasan Kannan",
                         "first": "Srinivasan",
                         "last": "Kannan"
                    }
               ]
          }
     },
     {
          "@available_sources": 108,
          "@http_status_code": 200,
          "@persons_count": 1,
          "@search_id": "1909110838073304227941230824618469706",
          "@visible_sources": 15,
          "available_data": {
               "premium": {
                    "addresses": 2,
                    "educations": 5,
                    "emails": 6,
                    "genders": 1,
                    "images": 5,
                    "jobs": 24,
                    "names": 3,
                    "relationships": 6,
                    "social_profiles": 6,
                    "user_ids": 7,
                    "usernames": 2
               }
          },
          "person": {
               "@id": "4e63d78a-751f-4e89-b325-ada7d8cf534a",
               "@match": 1.0,
               "@search_pointer": "",
               "addresses": [
                    {
                         "@last_seen": "2018-06-28",
                         "@valid_since": "2010-12-03",
                         "city": "Chennai",
                         "country": "IN",
                         "display": "Chennai, India"
                    },
                    {
                         "@last_seen": "2018-06-28",
                         "@type": "work",
                         "@valid_since": "2015-09-30",
                         "city": "Kumbakonam",
                         "country": "IN",
                         "display": "Kumbakonam, India"
                    }
               ],
               "emails": [
                    {
                         "@email_provider": true,
                         "@last_seen": "2018-12-15",
                         "@type": "personal",
                         "@valid_since": "2012-07-22",
                         "address": "full.email.available@business.subscription",
                         "address_md5": "af96cf33e2024e7328bbc7675f771b1e",
                         "display": "full.email.available@business.subscription"
                    },
                    {
                         "@email_provider": true,
                         "@type": "personal",
                         "@valid_since": "2011-12-05",
                         "address": "full.email.available@business.subscription",
                         "address_md5": "a9e46cba401df1afdd7e1b5eba5b21a1",
                         "display": "full.email.available@business.subscription"
                    },
                    {
                         "@email_provider": true,
                         "@type": "personal",
                         "@valid_since": "2010-07-08",
                         "address": "full.email.available@business.subscription",
                         "address_md5": "5a35e71a9e313cd83fc1b36e8a921f51",
                         "display": "full.email.available@business.subscription"
                    },
                    {
                         "@email_provider": false,
                         "@last_seen": "2018-12-15",
                         "@valid_since": "2012-12-27",
                         "address": "full.email.available@business.subscription",
                         "address_md5": "6764275e5425999d910c4ac9976b1438",
                         "display": "full.email.available@business.subscription"
                    },
                    {
                         "@email_provider": true,
                         "@type": "personal",
                         "@valid_since": "2013-01-18",
                         "address": "full.email.available@business.subscription",
                         "address_md5": "e8c9ea39bf6e7cf1d0b75eaf19bb5760",
                         "display": "full.email.available@business.subscription"
                    },
                    {
                         "@email_provider": false,
                         "@type": "work",
                         "@valid_since": "2012-12-19",
                         "address": "full.email.available@business.subscription",
                         "address_md5": "0ba5c26ba75e2c48b4f08dc8e7b5d890",
                         "display": "full.email.available@business.subscription"
                    }
               ],
               "gender": {
                    "@valid_since": "2011-12-05",
                    "content": "male",
                    "display": "Male"
               },
               "images": [
                    {
                         "@valid_since": "2011-12-05",
                         "display": "http://graph.facebook.com/1186474769/picture?type=large",
                         "thumbnail_token": "AE2861B242686E6ACBCD539D133B8AE59A9AE962DB1FA5AA7AF08DAAD76B0DFE1F64838CD9CDB2322ADF85744B699B543C4E5FE3AC5A925CC78A78485D1B1861F699",
                         "url": "http://graph.facebook.com/1186474769/picture?type=large"
                    },
                    {
                         "@valid_since": "2016-01-17",
                         "display": "https://s-media-cache-ak0.pinimg.com/avatars/shrinivaasanka_1392636070_140.jpg",
                         "thumbnail_token": "AE2861B20B7D6E22CA814E9059348AAB9C99E565D51CA7AE27F1CCF2813454AE0530DAD8D9DCAD302ACB85625B6E8A56301D5AF4BF5C841BCD927073511B186BF39AC63006E11FBB5344F8B1D7E0B6B7AD9EBF71FCF012DD7E",
                         "url": "https://s-media-cache-ak0.pinimg.com/avatars/shrinivaasanka_1392636070_140.jpg"
                    },
                    {
                         "@last_seen": "2018-06-28",
                         "@valid_since": "2018-06-28",
                         "display": "https://media.licdn.com/dms/image/C5103AQElIOVKZ6nowg/profile-displayphoto-shrink_200_200/0?e=1535587200&v=beta&t=KGXPR6F4RKV3CymWr3LeTWUcV3de2Z7r2q2uAXaHZzk",
                         "thumbnail_token": "AE2861B20B7D6E22D4C9479C5C7387EF9C9CE823D35EABEA73B2CFB4863058AE4E7CF680C78DE8100FEF9B583B4BA97E6F1D5CF5B9128708CC9F784005054530B6D99C6148A128E5131BFBA8CFF5F9BDB5A8E97CF99A12DD7A9948B1D92730DCE7C5B74B5A526211CCC892B90151753EF5024DCEF082F55F1D7CD48C24C2D3BC4B16AE791B158B4A2F1489127F24C416775DD40F4560CE582B87BC16D23EB38D8D8373FBD7",
                         "url": "https://media.licdn.com/dms/image/C5103AQElIOVKZ6nowg/profile-displayphoto-shrink_200_200/0?e=1535587200&v=beta&t=KGXPR6F4RKV3CymWr3LeTWUcV3de2Z7r2q2uAXaHZzk"
                    },
                    {
                         "@last_seen": "2017-02-02",
                         "@valid_since": "2017-02-02",
                         "display": "http://pbs.twimg.com/profile_images/823093144023494656/uh0w69z8.jpg",
                         "thumbnail_token": "AE2861B242686E7DDBDF0D814A3486E1D19BE9609F41B4AA71B6D0FEB03454A84C36C69ACE8FE8616799C625402DD0176D4A07B4EB0BD80FCBC9661A59521977AFD9972655A229EE5A47EFE393B3",
                         "url": "http://pbs.twimg.com/profile_images/823093144023494656/uh0w69z8.jpg"
                    },
                    {
                         "@valid_since": "2014-03-29",
                         "display": "http://lh4.googleusercontent.com/-lsiOU7rL21o/AAAAAAAAAAI/AAAAAAAAAF0/JajVx47Doq4/photo.jpg",
                         "thumbnail_token": "AE2861B242686E61D1980D9252328CEA9A8DF568C252A9AB63BAD2EFC13E56A4047ED9C69FF28E662CE6C5201B32A365183272C39F7CB63BEAD6506D2169601884E8B14601FE0AEB0D22AEEF90C3FFA2EAD8AB24A6B14FC320C61FA8D869688DE9C5B2455F54",
                         "url": "http://lh4.googleusercontent.com/-lsiOU7rL21o/AAAAAAAAAAI/AAAAAAAAAF0/JajVx47Doq4/photo.jpg"
                    }
               ],
               "names": [
                    {
                         "@valid_since": "2000-01-01",
                         "display": "Shrinivas Kannan",
                         "first": "Shrinivas",
                         "last": "Kannan"
                    },
                    {
                         "@last_seen": "2018-06-28",
                         "@valid_since": "2014-01-01",
                         "display": "Srinivasan Kannan",
                         "first": "Srinivasan",
                         "last": "Kannan"
                    },
                    {
                         "@valid_since": "2011-12-05",
                         "display": "Shrinivaasan Ka",
                         "first": "Shrinivaasan",
                         "last": "Ka"
                    }
               ],
               "relationships": [
                    {
                         "@subtype": "Follower",
                         "@type": "other",
                         "@valid_since": "2012-07-13",
                         "names": [
                              {
                                   "@valid_since": "2012-07-13",
                                   "display": "Vinod Kumar Devi",
                                   "first": "Vinod",
                                   "last": "Devi",
                                   "middle": "Kumar"
                              }
                         ]
                    },
                    {
                         "@subtype": "Follower",
                         "@type": "other",
                         "@valid_since": "2012-07-13",
                         "names": [
                              {
                                   "@valid_since": "2012-07-13",
                                   "display": "Prakash Chandrasekaran",
                                   "first": "Prakash",
                                   "last": "Chandrasekaran"
                              }
                         ]
                    },
                    {
                         "@subtype": "Follower",
                         "@type": "other",
                         "@valid_since": "2012-07-13",
                         "names": [
                              {
                                   "@valid_since": "2012-07-13",
                                   "display": "Pranabendu Misra",
                                   "first": "Pranabendu",
                                   "last": "Misra"
                              }
                         ]
                    },
                    {
                         "@subtype": "Follower",
                         "@type": "other",
                         "@valid_since": "2012-07-13",
                         "names": [
                              {
                                   "@valid_since": "2012-07-13",
                                   "display": "Ram Janakiraman",
                                   "first": "Ram",
                                   "last": "Janakiraman"
                              }
                         ]
                    },
                    {
                         "@subtype": "Follower",
                         "@type": "other",
                         "@valid_since": "2012-07-13",
                         "names": [
                              {
                                   "@valid_since": "2012-07-13",
                                   "display": "Jose Mathew",
                                   "first": "Jose",
                                   "last": "Mathew"
                              }
                         ]
                    },
                    {
                         "@subtype": "Follower",
                         "@type": "other",
                         "@valid_since": "2012-07-13",
                         "names": [
                              {
                                   "@valid_since": "2012-07-13",
                                   "display": "Shubho Sengupta",
                                   "first": "Shubho",
                                   "last": "Sengupta"
                              }
                         ]
                    }
               ],
               "urls": [
                    {
                         "@category": "professional_and_business",
                         "@domain": "linkedin.com",
                         "@name": "LinkedIn",
                         "@source_id": "3226b889ddb5e951c00e509d2f677d39",
                         "display": "https://www.linkedin.com/in/srinivasan-kannan-608a671",
                         "url": "https://www.linkedin.com/in/srinivasan-kannan-608a671"
                    },
                    {
                         "@category": "personal_profiles",
                         "@domain": "facebook.com",
                         "@name": "Facebook",
                         "@source_id": "304265879bd07c9f1ba793284967b272",
                         "display": "http://facebook.com/people/_/1186474769",
                         "url": "http://facebook.com/people/_/1186474769"
                    },
                    {
                         "@category": "personal_profiles",
                         "@domain": "twitter.com",
                         "@name": "Twitter",
                         "@source_id": "ba371ee483f15414764f0b6797df4b60",
                         "display": "http://www.twitter.com/ka_shrinivaasan",
                         "url": "http://www.twitter.com/ka_shrinivaasan"
                    },
                    {
                         "@category": "personal_profiles",
                         "@domain": "pinterest.com",
                         "@name": "Pinterest",
                         "@source_id": "c405e60965da03eb4ce5a2965a77f127",
                         "display": "http://pinterest.com/shrinivaasanka/",
                         "url": "http://pinterest.com/shrinivaasanka/"
                    },
                    {
                         "@category": "personal_profiles",
                         "@domain": "flickr.com",
                         "@name": "Flickr",
                         "@source_id": "63eefc3611d18b58921a5ccb51c2d500",
                         "display": "http://www.flickr.com/people/51784765@N08/",
                         "url": "http://www.flickr.com/people/51784765@N08/"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "openhub.net",
                         "@name": "openhub.net",
                         "@source_id": "7f0c0fa64f272b316c76abaf6b787b8d",
                         "display": "https://www.openhub.net/accounts/ka_shrinivaasan",
                         "url": "https://www.openhub.net/accounts/ka_shrinivaasan"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "media.readthedocs.org",
                         "@name": "media.readthedocs.org",
                         "@source_id": "a187301de5216b550db21bb3d073b7ba",
                         "display": "https://media.readthedocs.org/pdf/neuronrain-documentation/latest/neuronrain-documentation.pdf",
                         "url": "https://media.readthedocs.org/pdf/neuronrain-documentation/latest/neuronrain-documentation.pdf"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "5d99cf42-a-62cb3a1a-s-sites.googlegroups.com",
                         "@name": "5d99cf42-a-62cb3a1a-s-sites.googlegroups.com",
                         "@source_id": "27bc4419dd77f547f973c57389952486",
                         "display": "https://5d99cf42-a-62cb3a1a-s-sites.googlegroups.com/site/kuja27/CV_of_SrinivasanKannan_alias_KaShrinivaasan_alias_ShrinivasKannan.pdf?attachauth=ANoY7cot5zOBoNPJEw-kl3cAhmRiJbeqB43D41dU6ld7NKo06FbHyeR5eGjpXANAfuyVhFc0Cfp6g6vcdpYwfxGCjqUXBK79Py5v2jcQyH1g7gigtpMSH2kV7EoysjqsAmg5_R0bPXbrfzmzMosUDlufh8PGynZO3IaV5uLr-eqoLs_2zGk3pXgxzju_ucU8rTDlFN8xtvNyGMI4tMcYKlHdadi41idbXK2JrmSteqZ5NubGv8iI5pxm_mg-_rQFi0Qn_F7gr_EUSW53mh835atEu_lFZwa-og%3D%3D&attredirects=0",
                         "url": "https://5d99cf42-a-62cb3a1a-s-sites.googlegroups.com/site/kuja27/CV_of_SrinivasanKannan_alias_KaShrinivaasan_alias_ShrinivasKannan.pdf?attachauth=ANoY7cot5zOBoNPJEw-kl3cAhmRiJbeqB43D41dU6ld7NKo06FbHyeR5eGjpXANAfuyVhFc0Cfp6g6vcdpYwfxGCjqUXBK79Py5v2jcQyH1g7gigtpMSH2kV7EoysjqsAmg5_R0bPXbrfzmzMosUDlufh8PGynZO3IaV5uLr-eqoLs_2zGk3pXgxzju_ucU8rTDlFN8xtvNyGMI4tMcYKlHdadi41idbXK2JrmSteqZ5NubGv8iI5pxm_mg-_rQFi0Qn_F7gr_EUSW53mh835atEu_lFZwa-og%3D%3D&attredirects=0"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "media.readthedocs.org",
                         "@name": "media.readthedocs.org",
                         "@source_id": "ba7becc544f19f6579529dce3617e415",
                         "display": "https://media.readthedocs.org/pdf/neuronrain-documentation/latest/neuronrain-documentation.pdf",
                         "url": "https://media.readthedocs.org/pdf/neuronrain-documentation/latest/neuronrain-documentation.pdf"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "media.readthedocs.org",
                         "@name": "media.readthedocs.org",
                         "@source_id": "8474c14ec15ec65092689cef292773e7",
                         "display": "https://media.readthedocs.org/pdf/neuronrain-documentation/latest/neuronrain-documentation.pdf",
                         "url": "https://media.readthedocs.org/pdf/neuronrain-documentation/latest/neuronrain-documentation.pdf"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "5d99cf42-a-62cb3a1a-s-sites.googlegroups.com",
                         "@name": "5d99cf42-a-62cb3a1a-s-sites.googlegroups.com",
                         "@source_id": "bb9ab15cc8c31a651dc8d169f3cb770b",
                         "display": "https://5d99cf42-a-62cb3a1a-s-sites.googlegroups.com/site/kuja27/CV_of_SrinivasanKannan_alias_KaShrinivaasan_alias_ShrinivasKannan.pdf?attachauth=ANoY7cot5zOBoNPJEw-kl3cAhmRiJbeqB43D41dU6ld7NKo06FbHyeR5eGjpXANAfuyVhFc0Cfp6g6vcdpYwfxGCjqUXBK79Py5v2jcQyH1g7gigtpMSH2kV7EoysjqsAmg5_R0bPXbrfzmzMosUDlufh8PGynZO3IaV5uLr-eqoLs_2zGk3pXgxzju_ucU8rTDlFN8xtvNyGMI4tMcYKlHdadi41idbXK2JrmSteqZ5NubGv8iI5pxm_mg-_rQFi0Qn_F7gr_EUSW53mh835atEu_lFZwa-og%3D%3D&attredirects=0",
                         "url": "https://5d99cf42-a-62cb3a1a-s-sites.googlegroups.com/site/kuja27/CV_of_SrinivasanKannan_alias_KaShrinivaasan_alias_ShrinivasKannan.pdf?attachauth=ANoY7cot5zOBoNPJEw-kl3cAhmRiJbeqB43D41dU6ld7NKo06FbHyeR5eGjpXANAfuyVhFc0Cfp6g6vcdpYwfxGCjqUXBK79Py5v2jcQyH1g7gigtpMSH2kV7EoysjqsAmg5_R0bPXbrfzmzMosUDlufh8PGynZO3IaV5uLr-eqoLs_2zGk3pXgxzju_ucU8rTDlFN8xtvNyGMI4tMcYKlHdadi41idbXK2JrmSteqZ5NubGv8iI5pxm_mg-_rQFi0Qn_F7gr_EUSW53mh835atEu_lFZwa-og%3D%3D&attredirects=0"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "openhub.net",
                         "@name": "openhub.net",
                         "@source_id": "9bdcae1054557a34a719bcb4ad9aef83",
                         "display": "https://www.openhub.net/accounts/ka_shrinivaasan",
                         "url": "https://www.openhub.net/accounts/ka_shrinivaasan"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "openhub.net",
                         "@name": "openhub.net",
                         "@source_id": "1b11ac4c32332032b2519b0c8891b727",
                         "display": "https://www.openhub.net/accounts/ka_shrinivaasan",
                         "url": "https://www.openhub.net/accounts/ka_shrinivaasan"
                    },
                    {
                         "@category": "web_pages",
                         "@domain": "media.readthedocs.org",
                         "@name": "media.readthedocs.org",
                         "@source_id": "5b9c377a5214db6b93f47938dd2b370c",
                         "display": "https://media.readthedocs.org/pdf/neuronrain-documentation/latest/neuronrain-documentation.pdf",
                         "url": "https://media.readthedocs.org/pdf/neuronrain-documentation/latest/neuronrain-documentation.pdf"
                    },
                    {
                         "@category": "personal_profiles",
                         "@domain": "sites.google.com",
                         "@last_seen": "2018-06-28",
                         "@valid_since": "2014-01-01",
                         "display": "https://sites.google.com/site/kuja27/",
                         "url": "https://sites.google.com/site/kuja27/"
                    },
                    {
                         "@category": "personal_profiles",
                         "@domain": "sourceforge.net",
                         "@last_seen": "2018-06-28",
                         "@valid_since": "2015-09-30",
                         "display": "http://sourceforge.net/users/ka_shrinivaasan",
                         "url": "http://sourceforge.net/users/ka_shrinivaasan"
                    },
                    {
                         "@category": "personal_profiles",
                         "@domain": "facebook.com",
                         "@valid_since": "2014-01-01",
                         "display": "http://www.facebook.com/shrinivaasan.ka",
                         "url": "http://www.facebook.com/shrinivaasan.ka"
                    }
               ],
               "user_ids": [
                    {
                         "@last_seen": "2018-06-28",
                         "@valid_since": "2010-07-08",
                         "content": "5611688@linkedin",
                         "display": "5611688@linkedin"
                    },
                    {
                         "@valid_since": "2013-02-16",
                         "content": "51784765@N08@flickr",
                         "display": "51784765@N08@flickr"
                    },
                    {
                         "@last_seen": "2017-02-02",
                         "@valid_since": "2011-06-28",
                         "content": "14233931@twitter",
                         "display": "14233931@twitter"
                    },
                    {
                         "@valid_since": "2011-12-05",
                         "content": "1186474769@facebook",
                         "display": "1186474769@facebook"
                    },
                    {
                         "@valid_since": "2013-01-18",
                         "content": "103402979170580834945@google",
                         "display": "103402979170580834945@google"
                    },
                    {
                         "@last_seen": "2018-06-28",
                         "@valid_since": "2010-07-08",
                         "content": "1/a67/608@linkedin",
                         "display": "1/a67/608@linkedin"
                    },
                    {
                         "@last_seen": "2018-06-28",
                         "@valid_since": "2010-07-08",
                         "content": "#608a671@linkedin",
                         "display": "#608a671@linkedin"
                    }
               ],
               "usernames": [
                    {
                         "@valid_since": "2011-12-05",
                         "content": "shrinivaasan.ka",
                         "display": "shrinivaasan.ka"
                    },
                    {
                         "@last_seen": "2017-02-02",
                         "@valid_since": "2011-06-28",
                         "content": "ka_shrinivaasan",
                         "display": "ka_shrinivaasan"
                    }
               ]
          },
          "query": {
               "emails": [
                    {
                         "address": "kashrinivaasan@live.com",
                         "address_md5": "6764275e5425999d910c4ac9976b1438",
                         "display": "kashrinivaasan@live.com"
                    }
               ],
               "names": [
                    {
                         "display": "Srinivasan Kannan",
                         "first": "Srinivasan",
                         "last": "Kannan"
                    }
               ]
          }
     }
]
=============================================================================
HumanName Parser - parsed name (wrong): <HumanName : [
	title: '' 
	first: 'Kannan' 
	middle: '' 
	last: 'Srinivasan' 
	suffix: ''
	nickname: ''
]>
nametokenized =  ['Kannan', 'Srinivasan']
contexttokenized =  ['14/09/2019', '', "'[apache-modules] SEGV in ap_set_string_slot (apache 2.0.47)' - MARC", '', '[prev in list] [next in list] [prev in thread] [next in thread]', '', 'List:', 'Subject:', 'From:', 'Date:', '', 'apache-modules', '[apache-modules] SEGV in ap_set_string_slot (apache 2.0.47)', 'Kannan Srinivasan <Kannan.Srinivasan () Sun ! COM>', '2003-09-04 5:51:57', '', '[Download RAW message or body]', 'Hi all,', '', 'I am developing a C++ module. I am using ap_set_string_slot to populate', 'server config structure. But I am getting a crash as below:', 't@1 (l@1) terminated by signal SEGV (no mapping at the fault address)', '0x00033998: ap_set_string_slot+0x000c: st', '%o2, [%o1 + %o3]', '(.../share/forte_dev,v6.2/SUNWspro/bin//../WS6U2/bin/sparcv9/dbx)', 'where', 'current thread: t@1', '=>[1] ap_set_string_slot(0x0, 0x0, 0xc9e88, 0x0, 0x0, 0xfec8265c), at', '0x33998', '[2] invoke_cmd(0xfde7c890, 0xffbefa68, 0x0, 0xb37f8, 0x79a70,', '0xc6519), at 0x329f8', '[3] ap_walk_config_sub(0x0, 0xffbefa68, 0xc62f8, 0x118, 0x118,', '0x93d10), at 0x33710', '[4] ap_walk_config(0xb37d8, 0xffbefa68, 0xc62f8, 0xc8380, 0x55,', '0xb2e78), at 0x337b4', '[5] virtualhost_section(0xffbefa68, 0x94378, 0xc8370, 0x43f58, 0x0,', '0xfe39aa98), at 0x44008', '[6] invoke_cmd(0x5a39c, 0xffbefa68, 0x94378, 0xb2e98, 0x79a70,', '0xff0000), at 0x329f8', '[7] ap_walk_config_sub(0x0, 0xffbefa68, 0x94268, 0xfe137ec8,', '0xff31eb94, 0xfec31fb0), at 0x33710', '[8] ap_walk_config(0xb2e78, 0xffbefa68, 0x94268, 0x6e538, 0xffffffff,', '0xffffffff), at 0x337b4', '[9] ap_process_config_tree(0x93ca0, 0x95810, 0x79a70, 0xa5b20, 0x0,', '0x0), at 0x342a8', '[10] main(0x93ca0, 0x79a70, 0xffbefbc8, 0x7085c, 0x0, 0x0), at 0x369dc', 'My code snippet is as below:', '---------------------static command_rec config_lbplugin_cmds[] = {', '{"config-file", NULL,', '(void*)APR_OFFSETOF(APACHELBPLUGIN_SERVER_CONFIG, CONFIG_FILE_PATH),', 'OR_ALL, TAKE1, "the lb.xml file"},', '{"locale", NULL,', '(void*)APR_OFFSETOF(APACHELBPLUGIN_SERVER_CONFIG, LOCALE), OR_ALL,', 'TAKE1, "the locale"},', '{NULL,NULL, NULL, 0, cmd_how(0), NULL }', '};', 'I initialise the cmd_func fields set to NULL above, inside', 'register_hooks function as below. (This is a hack since it was refusing', 'to compile under Forte 6.2 C++ compiler probably due to missing support', 'of designated initializers).', '/* Register Hooks */', 'static void apachelbplugin_register_hooks(apr_pool_t *p)', '{', 'config_lbplugin_cmds[0].func.take1 = ap_set_string_slot;', 'config_lbplugin_cmds[1].func.take1 = ap_set_string_slot;', 'https://marc.info/?l=apache-modules&m=106265471724340&w=2', '', '1/2', '', '', '14/09/2019', '', "'[apache-modules] SEGV in ap_set_string_slot (apache 2.0.47)' - MARC", '', 'ap_hook_post_config(apachelbplugin_init, NULL, NULL,', 'APR_HOOK_FIRST);', 'ap_hook_translate_name(apachelbplugin_name_trans, NULL, NULL,', 'APR_HOOK_MIDDLE);', 'ap_hook_handler(apachelbplugin_handle_req, NULL, NULL,', 'APR_HOOK_LAST);', '}', 'Appreciate any help in this regard', '', 'thanks', 'K.Srinivasan', '--', '', '-------------------------------------------------------------I want to know how God created universe, rest are just details', '- Albert Einstein', 'Ptolemy created a universe that existed for 1000 years;', 'Copernicus created a universe that existed for 400 years;', 'Now Einstein has created a universe;', "I don't know how long this will live", '- G.Bernard Shaw', '---------------------------------------------------------------', '', '--------------------------------------------------------------------To unsubscribe, e-mail: apache-modules-unsubscribe@covalent.net', 'For additional commands, e-mail: apache-modules-help@covalent.net', '[prev in list] [next in list] [prev in thread] [next in thread]', 'Configure | About | News | Add a list | Sponsored by KoreLogic', '', 'https://marc.info/?l=apache-modules&m=106265471724340&w=2', '', '2/2', '', '']
NeuronRain Human Name Parsing by Context - nameparser(): name substring -  Kannan  - found in context =  Kannan Srinivasan <Kannan.Srinivasan () Sun ! COM>
NeuronRain Human Name Parsing by Context - nameparser(): second_name : Kannan
NeuronRain Human Name Parsing by Context - nameparser(): first_name : Srinivasan
=============================================================================
HumanName Parser - parsed name (wrong): <HumanName : [
	title: '' 
	first: 'Kannan' 
	middle: '' 
	last: 'Srinivasan' 
	suffix: ''
	nickname: ''
]>
nametokenized =  ['Kannan', 'Srinivasan']
contexttokenized =  ['14/09/2019', '', "'[apache-modules] SEGV in ap_set_string_slot (apache 2.0.47)' - MARC", '', '[prev in list] [next in list] [prev in thread] [next in thread]', '', 'List:', 'Subject:', 'From:', 'Date:', '', 'apache-modules', '[apache-modules] SEGV in ap_set_string_slot (apache 2.0.47)', 'Kannan Srinivasan <Kannan.Srinivasan () Sun ! COM>', '2003-09-04 5:51:57', '', '[Download RAW message or body]', 'Hi all,', '', 'I am developing a C++ module. I am using ap_set_string_slot to populate', 'server config structure. But I am getting a crash as below:', 't@1 (l@1) terminated by signal SEGV (no mapping at the fault address)', '0x00033998: ap_set_string_slot+0x000c: st', '%o2, [%o1 + %o3]', '(.../share/forte_dev,v6.2/SUNWspro/bin//../WS6U2/bin/sparcv9/dbx)', 'where', 'current thread: t@1', '=>[1] ap_set_string_slot(0x0, 0x0, 0xc9e88, 0x0, 0x0, 0xfec8265c), at', '0x33998', '[2] invoke_cmd(0xfde7c890, 0xffbefa68, 0x0, 0xb37f8, 0x79a70,', '0xc6519), at 0x329f8', '[3] ap_walk_config_sub(0x0, 0xffbefa68, 0xc62f8, 0x118, 0x118,', '0x93d10), at 0x33710', '[4] ap_walk_config(0xb37d8, 0xffbefa68, 0xc62f8, 0xc8380, 0x55,', '0xb2e78), at 0x337b4', '[5] virtualhost_section(0xffbefa68, 0x94378, 0xc8370, 0x43f58, 0x0,', '0xfe39aa98), at 0x44008', '[6] invoke_cmd(0x5a39c, 0xffbefa68, 0x94378, 0xb2e98, 0x79a70,', '0xff0000), at 0x329f8', '[7] ap_walk_config_sub(0x0, 0xffbefa68, 0x94268, 0xfe137ec8,', '0xff31eb94, 0xfec31fb0), at 0x33710', '[8] ap_walk_config(0xb2e78, 0xffbefa68, 0x94268, 0x6e538, 0xffffffff,', '0xffffffff), at 0x337b4', '[9] ap_process_config_tree(0x93ca0, 0x95810, 0x79a70, 0xa5b20, 0x0,', '0x0), at 0x342a8', '[10] main(0x93ca0, 0x79a70, 0xffbefbc8, 0x7085c, 0x0, 0x0), at 0x369dc', 'My code snippet is as below:', '---------------------static command_rec config_lbplugin_cmds[] = {', '{"config-file", NULL,', '(void*)APR_OFFSETOF(APACHELBPLUGIN_SERVER_CONFIG, CONFIG_FILE_PATH),', 'OR_ALL, TAKE1, "the lb.xml file"},', '{"locale", NULL,', '(void*)APR_OFFSETOF(APACHELBPLUGIN_SERVER_CONFIG, LOCALE), OR_ALL,', 'TAKE1, "the locale"},', '{NULL,NULL, NULL, 0, cmd_how(0), NULL }', '};', 'I initialise the cmd_func fields set to NULL above, inside', 'register_hooks function as below. (This is a hack since it was refusing', 'to compile under Forte 6.2 C++ compiler probably due to missing support', 'of designated initializers).', '/* Register Hooks */', 'static void apachelbplugin_register_hooks(apr_pool_t *p)', '{', 'config_lbplugin_cmds[0].func.take1 = ap_set_string_slot;', 'config_lbplugin_cmds[1].func.take1 = ap_set_string_slot;', 'https://marc.info/?l=apache-modules&m=106265471724340&w=2', '', '1/2', '', '', '14/09/2019', '', "'[apache-modules] SEGV in ap_set_string_slot (apache 2.0.47)' - MARC", '', 'ap_hook_post_config(apachelbplugin_init, NULL, NULL,', 'APR_HOOK_FIRST);', 'ap_hook_translate_name(apachelbplugin_name_trans, NULL, NULL,', 'APR_HOOK_MIDDLE);', 'ap_hook_handler(apachelbplugin_handle_req, NULL, NULL,', 'APR_HOOK_LAST);', '}', 'Appreciate any help in this regard', '', 'thanks', 'K.Srinivasan', '--', '', '-------------------------------------------------------------I want to know how God created universe, rest are just details', '- Albert Einstein', 'Ptolemy created a universe that existed for 1000 years;', 'Copernicus created a universe that existed for 400 years;', 'Now Einstein has created a universe;', "I don't know how long this will live", '- G.Bernard Shaw', '---------------------------------------------------------------', '', '--------------------------------------------------------------------To unsubscribe, e-mail: apache-modules-unsubscribe@covalent.net', 'For additional commands, e-mail: apache-modules-help@covalent.net', '[prev in list] [next in list] [prev in thread] [next in thread]', 'Configure | About | News | Add a list | Sponsored by KoreLogic', '', 'https://marc.info/?l=apache-modules&m=106265471724340&w=2', '', '2/2', '', '']
NeuronRain Human Name Parsing by Context - nameparser(): name substring -  Kannan  - found in context =  Kannan Srinivasan <Kannan.Srinivasan () Sun ! COM>
NeuronRain Human Name Parsing by Context - nameparser(): second_name : Kannan
NeuronRain Human Name Parsing by Context - nameparser(): first_name : Srinivasan
=============================================================================
HumanName Parser - parsed name (wrong): <HumanName : [
	title: '' 
	first: 'Kannan' 
	middle: '' 
	last: 'Srinivasan' 
	suffix: ''
	nickname: ''
]>
nametokenized =  ['Kannan', 'Srinivasan']
contexttokenized =  ['14/09/2019', '', "'[users@httpd] problem with subprocess_env' - MARC", '', '[prev in list] [next in list] [prev in thread] [next in thread]', '', 'List:', 'Subject:', 'From:', 'Date:', '', 'apache-httpd-users', '[users@httpd] problem with subprocess_env', 'Kannan Srinivasan <Kannan.Srinivasan () Sun ! COM>', '2003-02-17 9:58:49', '', '[Download RAW message or body]', 'Hi,', '', 'My module has two phases: 1) name translation 2) request handling.', 'In the name translation phase, I store something in the request_rec', 'structure by adding a name-value pair to subprocess_env table of the', 'request_rec.', 'Then I retrieve it in the request handler function using', 'table_get(r->subprocess_env).', 'Now the problem I face is that I get the bus error as below and', 'apache subprocess is crashing. Loading the core into dbx causes dbx', 'itself to crash. What am I doing wrong?', '[Mon Feb 17 15:14:32 2003] [alert] (9) before setting', 'name_trans_lbplugin_ptr ...', '[Mon Feb 17 15:14:32 2003] [alert] (9) after setting', 'name_trans_lbplugin_ptr ...', '[Mon Feb 17 15:14:33 2003] [notice] child pid 2434 exit signal Bus Error', '(10)', '(NOTE: I also tried adding to request_rec->notes and', 'request_rec->request_config but the result was same)', 'thanks,', 'K.Srinivasan', '[Attachment #3 (text/html)]', '<html>', '<head>', '</head>', '<body>', 'Hi,<br>', '&nbsp;&nbsp;&nbsp; My module has two phases: 1) name translation 2) request \\', 'handling.<br> &nbsp;&nbsp;&nbsp; In the name translation phase, I store something in \\', 'the request_rec structure by adding a name-value pair to subprocess_env table of the \\', 'request_rec.<br> &nbsp;&nbsp;&nbsp; Then I retrieve it in the request handler \\', 'function using table_get(r-&gt;subprocess_env).<br> &nbsp;&nbsp;&nbsp; Now the \\', 'problem I face is that I get the bus error as below and apache subprocess is \\', 'crashing. Loading the core into dbx causes dbx itself to crash. What am I doing \\', 'wrong?<br> <b>[Mon Feb 17 15:14:32 2003] [alert] (9) before setting \\', 'name_trans_lbplugin_ptr', '...<br>', '[Mon Feb 17 15:14:32 2003] [alert] (9) after setting name_trans_lbplugin_ptr', '...<br>', '[Mon Feb 17 15:14:33 2003] [notice] child pid 2434 exit signal Bus Error', '(10)</b><br>', '&nbsp;&nbsp;&nbsp; (NOTE: I also tried adding to request_rec-&gt;notes and \\', 'request_rec-&gt;request_config but the result was same)<br>', '<br>', 'thanks,<br>', 'K.Srinivasan<br>', '</body>', '</html>', '', '[prev in list] [next in list] [prev in thread] [next in thread]', 'Configure | About | News | Add a list | Sponsored by KoreLogic', 'https://marc.info/?l=apache-httpd-users&m=104547592901593&w=2', '', '1/1', '', '']
NeuronRain Human Name Parsing by Context - nameparser(): name substring -  Kannan  - found in context =  Kannan Srinivasan <Kannan.Srinivasan () Sun ! COM>
NeuronRain Human Name Parsing by Context - nameparser(): second_name : Kannan
NeuronRain Human Name Parsing by Context - nameparser(): first_name : Srinivasan
=============================================================================
HumanName Parser - parsed name (wrong): <HumanName : [
	title: '' 
	first: 'Kannan' 
	middle: '' 
	last: 'Srinivasan' 
	suffix: ''
	nickname: ''
]>
nametokenized =  ['Kannan', 'Srinivasan']
contexttokenized =  ['14/09/2019', '', "'[users@httpd] problem with subprocess_env' - MARC", '', '[prev in list] [next in list] [prev in thread] [next in thread]', '', 'List:', 'Subject:', 'From:', 'Date:', '', 'apache-httpd-users', '[users@httpd] problem with subprocess_env', 'Kannan Srinivasan <Kannan.Srinivasan () Sun ! COM>', '2003-02-17 9:58:49', '', '[Download RAW message or body]', 'Hi,', '', 'My module has two phases: 1) name translation 2) request handling.', 'In the name translation phase, I store something in the request_rec', 'structure by adding a name-value pair to subprocess_env table of the', 'request_rec.', 'Then I retrieve it in the request handler function using', 'table_get(r->subprocess_env).', 'Now the problem I face is that I get the bus error as below and', 'apache subprocess is crashing. Loading the core into dbx causes dbx', 'itself to crash. What am I doing wrong?', '[Mon Feb 17 15:14:32 2003] [alert] (9) before setting', 'name_trans_lbplugin_ptr ...', '[Mon Feb 17 15:14:32 2003] [alert] (9) after setting', 'name_trans_lbplugin_ptr ...', '[Mon Feb 17 15:14:33 2003] [notice] child pid 2434 exit signal Bus Error', '(10)', '(NOTE: I also tried adding to request_rec->notes and', 'request_rec->request_config but the result was same)', 'thanks,', 'K.Srinivasan', '[Attachment #3 (text/html)]', '<html>', '<head>', '</head>', '<body>', 'Hi,<br>', '&nbsp;&nbsp;&nbsp; My module has two phases: 1) name translation 2) request \\', 'handling.<br> &nbsp;&nbsp;&nbsp; In the name translation phase, I store something in \\', 'the request_rec structure by adding a name-value pair to subprocess_env table of the \\', 'request_rec.<br> &nbsp;&nbsp;&nbsp; Then I retrieve it in the request handler \\', 'function using table_get(r-&gt;subprocess_env).<br> &nbsp;&nbsp;&nbsp; Now the \\', 'problem I face is that I get the bus error as below and apache subprocess is \\', 'crashing. Loading the core into dbx causes dbx itself to crash. What am I doing \\', 'wrong?<br> <b>[Mon Feb 17 15:14:32 2003] [alert] (9) before setting \\', 'name_trans_lbplugin_ptr', '...<br>', '[Mon Feb 17 15:14:32 2003] [alert] (9) after setting name_trans_lbplugin_ptr', '...<br>', '[Mon Feb 17 15:14:33 2003] [notice] child pid 2434 exit signal Bus Error', '(10)</b><br>', '&nbsp;&nbsp;&nbsp; (NOTE: I also tried adding to request_rec-&gt;notes and \\', 'request_rec-&gt;request_config but the result was same)<br>', '<br>', 'thanks,<br>', 'K.Srinivasan<br>', '</body>', '</html>', '', '[prev in list] [next in list] [prev in thread] [next in thread]', 'Configure | About | News | Add a list | Sponsored by KoreLogic', 'https://marc.info/?l=apache-httpd-users&m=104547592901593&w=2', '', '1/1', '', '']
NeuronRain Human Name Parsing by Context - nameparser(): name substring -  Kannan  - found in context =  Kannan Srinivasan <Kannan.Srinivasan () Sun ! COM>
NeuronRain Human Name Parsing by Context - nameparser(): second_name : Kannan
NeuronRain Human Name Parsing by Context - nameparser(): first_name : Srinivasan
=============================================================================
HumanName Parser - parsed name (wrong): <HumanName : [
	title: '' 
	first: 'Kannan' 
	middle: '' 
	last: 'Srinivasan' 
	suffix: ''
	nickname: ''
]>
nametokenized =  ['Kannan', 'Srinivasan']
contexttokenized =  ['14/09/2019', '', "'Re: [apache-modules] SEGV in ap_set_string_slot (apache 2.0.47)' - MARC", '', '[prev in list] [next in list] [prev in thread] [next in thread]', '', 'List:', 'Subject:', 'From:', 'Date:', '', 'apache-modules', 'Re: [apache-modules] SEGV in ap_set_string_slot (apache 2.0.47)', 'Kannan Srinivasan <Kannan.Srinivasan () Sun ! COM>', '2003-09-04 10:20:09', '', '[Download RAW message or body]', 'Neils,', '', 'Thanks very much. I made it to work by writing my own functions and', 'after some hacking .', 'regards', 'K.Srinivasan', 'Niels Erik Holm wrote:', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '', 'Hi', 'I had the same problems.', 'It seems that ap_set_string_slot and similar routines are NOT working for server \\', 'config parameters, but only for per-directory configuration parameters.', 'The only solution I found was to have a dedicated procedure for each configuration \\', 'parameter, which is a bit boring if you have many of them. It must be possible to \\', 'write a variant of ap_set_xx_slot that works for server config as well, but I \\', "haven't had the time so far.", 'Best regards', 'Niels Erik Holm', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '', '-----Original Message----From: Kannan Srinivasan [mailto:Kannan.Srinivasan@Sun.COM]', 'Sent: Thursday, September 04, 2003 07:52', 'To: apache-modules@covalent.net', 'Subject: [apache-modules] SEGV in ap_set_string_slot (apache 2.0.47)', 'Hi all,', 'I am developing a C++ module. I am using ap_set_string_slot to', 'populate', 'server config structure. But I am getting a crash as below:', 't@1 (l@1) terminated by signal SEGV (no mapping at the fault address)', '0x00033998: ap_set_string_slot+0x000c: st', '%o2, [%o1 + %o3]', '(.../share/forte_dev,v6.2/SUNWspro/bin//../WS6U2/bin/sparcv9/dbx)', 'where', 'current thread: t@1', '=>[1] ap_set_string_slot(0x0, 0x0, 0xc9e88, 0x0, 0x0, 0xfec8265c), at', '0x33998', '[2] invoke_cmd(0xfde7c890, 0xffbefa68, 0x0, 0xb37f8, 0x79a70,', '0xc6519), at 0x329f8', '[3] ap_walk_config_sub(0x0, 0xffbefa68, 0xc62f8, 0x118, 0x118,', '0x93d10), at 0x33710', '[4] ap_walk_config(0xb37d8, 0xffbefa68, 0xc62f8, 0xc8380, 0x55,', '0xb2e78), at 0x337b4', '[5] virtualhost_section(0xffbefa68, 0x94378, 0xc8370, 0x43f58, 0x0,', '0xfe39aa98), at 0x44008', '[6] invoke_cmd(0x5a39c, 0xffbefa68, 0x94378, 0xb2e98, 0x79a70,', '0xff0000), at 0x329f8', '[7] ap_walk_config_sub(0x0, 0xffbefa68, 0x94268, 0xfe137ec8,', '0xff31eb94, 0xfec31fb0), at 0x33710', '[8] ap_walk_config(0xb2e78, 0xffbefa68, 0x94268, 0x6e538,', '0xffffffff,', '', 'https://marc.info/?l=apache-modules&m=106267009905554&we: [apache-modules] SEGV in ap_set_string_slot (apache 2.0.47)' - MARC", '', '0xffffffff), at 0x337b4', '[9] ap_process_config_tree(0x93ca0, 0x95810, 0x79a70, 0xa5b20, 0x0,', '0x0), at 0x342a8', '[10] main(0x93ca0, 0x79a70, 0xffbefbc8, 0x7085c, 0x0, 0x0),', 'at 0x369dc', 'My code snippet is as below:', '---------------------static command_rec config_lbplugin_cmds[] = {', '{"config-file", NULL,', '(void*)APR_OFFSETOF(APACHELBPLUGIN_SERVER_CONFIG, CONFIG_FILE_PATH),', 'OR_ALL, TAKE1, "the lb.xml file"},', '{"locale", NULL,', '(void*)APR_OFFSETOF(APACHELBPLUGIN_SERVER_CONFIG, LOCALE), OR_ALL,', 'TAKE1, "the locale"},', '{NULL,NULL, NULL, 0, cmd_how(0), NULL }', '};', 'I initialise the cmd_func fields set to NULL above, inside', 'register_hooks function as below. (This is a hack since it was', 'refusing', 'to compile under Forte 6.2 C++ compiler probably due to', 'missing support', 'of designated initializers).', '/* Register Hooks */', 'static void apachelbplugin_register_hooks(apr_pool_t *p)', '{', 'config_lbplugin_cmds[0].func.take1 = ap_set_string_slot;', 'config_lbplugin_cmds[1].func.take1 = ap_set_string_slot;', 'ap_hook_post_config(apachelbplugin_init, NULL, NULL,', 'APR_HOOK_FIRST);', 'ap_hook_translate_name(apachelbplugin_name_trans, NULL, NULL,', 'APR_HOOK_MIDDLE);', 'ap_hook_handler(apachelbplugin_handle_req, NULL, NULL,', 'APR_HOOK_LAST);', '}', 'Appreciate any help in this regard', '', 'thanks', 'K.Srinivasan', '--', '', '-------------------------------------------------------------I want to know how God created universe, rest are just details', '- Albert Einstein', 'Ptolemy created a universe that existed for 1000 years;', 'Copernicus created a universe that existed for 400 years;', 'Now Einstein has created a universe;', "I don't know how long this will live", '- G.Bernard Shaw', '---------------------------------------------------------------', '', 'https://marc.info/?l=apache-modules&m=106267009905554&w=2', '', '2/3', '', '', '14/09/2019', '', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '', "'Re: [apache-modules] SEGV in ap_set_string_slot (apache 2.0.47)' - MARC", '', '>', '> --------------------------------------------------------------------> To unsubscribe, e-mail: apache-modules-unsubscribe@covalent.net', '> For additional commands, e-mail: apache-modules-help@covalent.net', '>', '>', '--------------------------------------------------------------------To unsubscribe, e-mail: apache-modules-unsubscribe@covalent.net', 'For additional commands, e-mail: apache-modules-help@covalent.net', '', '--', '', '-------------------------------------------------------------I want to know how God created universe, rest are just details', '- Albert Einstein', 'Ptolemy created a universe that existed for 1000 years;', 'Copernicus created a universe that existed for 400 years;', 'Now Einstein has created a universe;', "I don't know how long this will live", '- G.Bernard Shaw', '---------------------------------------------------------------', '', '[prev in list] [next in list] [prev in thread] [next in thread]', 'Configure | About | News | Add a list | Sponsored by KoreLogic', '', 'https://marc.info/?l=apache-modules&m=106267009905554&w=2', '', '3/3', '', '']
NeuronRain Human Name Parsing by Context - nameparser(): name substring -  Kannan  - found in context =  Kannan Srinivasan <Kannan.Srinivasan () Sun ! COM>
NeuronRain Human Name Parsing by Context - nameparser(): second_name : Kannan
NeuronRain Human Name Parsing by Context - nameparser(): first_name : Srinivasan
=============================================================================
HumanName Parser - parsed name (wrong): <HumanName : [
	title: '' 
	first: 'Kannan' 
	middle: '' 
	last: 'Srinivasan' 
	suffix: ''
	nickname: ''
]>
nametokenized =  ['Kannan', 'Srinivasan']
contexttokenized =  ['14/09/2019', '', "'Re: [apache-modules] SEGV in ap_set_string_slot (apache 2.0.47)' - MARC", '', '[prev in list] [next in list] [prev in thread] [next in thread]', '', 'List:', 'Subject:', 'From:', 'Date:', '', 'apache-modules', 'Re: [apache-modules] SEGV in ap_set_string_slot (apache 2.0.47)', 'Kannan Srinivasan <Kannan.Srinivasan () Sun ! COM>', '2003-09-04 10:20:09', '', '[Download RAW message or body]', 'Neils,', '', 'Thanks very much. I made it to work by writing my own functions and', 'after some hacking .', 'regards', 'K.Srinivasan', 'Niels Erik Holm wrote:', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '', 'Hi', 'I had the same problems.', 'It seems that ap_set_string_slot and similar routines are NOT working for server \\', 'config parameters, but only for per-directory configuration parameters.', 'The only solution I found was to have a dedicated procedure for each configuration \\', 'parameter, which is a bit boring if you have many of them. It must be possible to \\', 'write a variant of ap_set_xx_slot that works for server config as well, but I \\', "haven't had the time so far.", 'Best regards', 'Niels Erik Holm', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '', '-----Original Message----From: Kannan Srinivasan [mailto:Kannan.Srinivasan@Sun.COM]', 'Sent: Thursday, September 04, 2003 07:52', 'To: apache-modules@covalent.net', 'Subject: [apache-modules] SEGV in ap_set_string_slot (apache 2.0.47)', 'Hi all,', 'I am developing a C++ module. I am using ap_set_string_slot to', 'populate', 'server config structure. But I am getting a crash as below:', 't@1 (l@1) terminated by signal SEGV (no mapping at the fault address)', '0x00033998: ap_set_string_slot+0x000c: st', '%o2, [%o1 + %o3]', '(.../share/forte_dev,v6.2/SUNWspro/bin//../WS6U2/bin/sparcv9/dbx)', 'where', 'current thread: t@1', '=>[1] ap_set_string_slot(0x0, 0x0, 0xc9e88, 0x0, 0x0, 0xfec8265c), at', '0x33998', '[2] invoke_cmd(0xfde7c890, 0xffbefa68, 0x0, 0xb37f8, 0x79a70,', '0xc6519), at 0x329f8', '[3] ap_walk_config_sub(0x0, 0xffbefa68, 0xc62f8, 0x118, 0x118,', '0x93d10), at 0x33710', '[4] ap_walk_config(0xb37d8, 0xffbefa68, 0xc62f8, 0xc8380, 0x55,', '0xb2e78), at 0x337b4', '[5] virtualhost_section(0xffbefa68, 0x94378, 0xc8370, 0x43f58, 0x0,', '0xfe39aa98), at 0x44008', '[6] invoke_cmd(0x5a39c, 0xffbefa68, 0x94378, 0xb2e98, 0x79a70,', '0xff0000), at 0x329f8', '[7] ap_walk_config_sub(0x0, 0xffbefa68, 0x94268, 0xfe137ec8,', '0xff31eb94, 0xfec31fb0), at 0x33710', '[8] ap_walk_config(0xb2e78, 0xffbefa68, 0x94268, 0x6e538,', '0xffffffff,', '', 'https://marc.info/?l=apache-modules&m=106267009905554&we: [apache-modules] SEGV in ap_set_string_slot (apache 2.0.47)' - MARC", '', '0xffffffff), at 0x337b4', '[9] ap_process_config_tree(0x93ca0, 0x95810, 0x79a70, 0xa5b20, 0x0,', '0x0), at 0x342a8', '[10] main(0x93ca0, 0x79a70, 0xffbefbc8, 0x7085c, 0x0, 0x0),', 'at 0x369dc', 'My code snippet is as below:', '---------------------static command_rec config_lbplugin_cmds[] = {', '{"config-file", NULL,', '(void*)APR_OFFSETOF(APACHELBPLUGIN_SERVER_CONFIG, CONFIG_FILE_PATH),', 'OR_ALL, TAKE1, "the lb.xml file"},', '{"locale", NULL,', '(void*)APR_OFFSETOF(APACHELBPLUGIN_SERVER_CONFIG, LOCALE), OR_ALL,', 'TAKE1, "the locale"},', '{NULL,NULL, NULL, 0, cmd_how(0), NULL }', '};', 'I initialise the cmd_func fields set to NULL above, inside', 'register_hooks function as below. (This is a hack since it was', 'refusing', 'to compile under Forte 6.2 C++ compiler probably due to', 'missing support', 'of designated initializers).', '/* Register Hooks */', 'static void apachelbplugin_register_hooks(apr_pool_t *p)', '{', 'config_lbplugin_cmds[0].func.take1 = ap_set_string_slot;', 'config_lbplugin_cmds[1].func.take1 = ap_set_string_slot;', 'ap_hook_post_config(apachelbplugin_init, NULL, NULL,', 'APR_HOOK_FIRST);', 'ap_hook_translate_name(apachelbplugin_name_trans, NULL, NULL,', 'APR_HOOK_MIDDLE);', 'ap_hook_handler(apachelbplugin_handle_req, NULL, NULL,', 'APR_HOOK_LAST);', '}', 'Appreciate any help in this regard', '', 'thanks', 'K.Srinivasan', '--', '', '-------------------------------------------------------------I want to know how God created universe, rest are just details', '- Albert Einstein', 'Ptolemy created a universe that existed for 1000 years;', 'Copernicus created a universe that existed for 400 years;', 'Now Einstein has created a universe;', "I don't know how long this will live", '- G.Bernard Shaw', '---------------------------------------------------------------', '', 'https://marc.info/?l=apache-modules&m=106267009905554&w=2', '', '2/3', '', '', '14/09/2019', '', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '>', '', "'Re: [apache-modules] SEGV in ap_set_string_slot (apache 2.0.47)' - MARC", '', '>', '> --------------------------------------------------------------------> To unsubscribe, e-mail: apache-modules-unsubscribe@covalent.net', '> For additional commands, e-mail: apache-modules-help@covalent.net', '>', '>', '--------------------------------------------------------------------To unsubscribe, e-mail: apache-modules-unsubscribe@covalent.net', 'For additional commands, e-mail: apache-modules-help@covalent.net', '', '--', '', '-------------------------------------------------------------I want to know how God created universe, rest are just details', '- Albert Einstein', 'Ptolemy created a universe that existed for 1000 years;', 'Copernicus created a universe that existed for 400 years;', 'Now Einstein has created a universe;', "I don't know how long this will live", '- G.Bernard Shaw', '---------------------------------------------------------------', '', '[prev in list] [next in list] [prev in thread] [next in thread]', 'Configure | About | News | Add a list | Sponsored by KoreLogic', '', 'https://marc.info/?l=apache-modules&m=106267009905554&w=2', '', '3/3', '', '']
NeuronRain Human Name Parsing by Context - nameparser(): name substring -  Kannan  - found in context =  Kannan Srinivasan <Kannan.Srinivasan () Sun ! COM>
NeuronRain Human Name Parsing by Context - nameparser(): second_name : Kannan
NeuronRain Human Name Parsing by Context - nameparser(): first_name : Srinivasan
=============================================================================
HumanName Parser - parsed name (wrong): <HumanName : [
	title: '' 
	first: 'Kannan' 
	middle: '' 
	last: 'Srinivasan' 
	suffix: ''
	nickname: ''
]>
nametokenized =  ['Kannan', 'Srinivasan']
contexttokenized =  ['14/09/2019', '', 'Search:', '[ ] List [', '', "'Kannan Srinivasan <Kannan.Srinivasan () Sun ! COM>' posts - MARC", '', 'Search', '', '] Subjects [', '', 'Reset', '', '] Authors [ ] Bodies (must pick a list first)', '', 'Set Page Width: [ 80 ] [ 90 ] [ 100 ] [ 120 ]', '', "Viewing messages posted by 'Kannan Srinivasan <Kannan.Srinivasan () Sun ! COM>' (3 msg)", '1. 2003-09-04', '2. 2003-09-04', '3. 2003-02-17', '', '[1] Re: [apache-modules] SEGV in ap_set_string_slot (apa apache-mo', '[1] [apache-modules] SEGV in ap_set_string_slot (apache apache-mo', '[1] [users@httpd] problem with subprocess_env', 'apache-ht', 'Configure | About | News | Add a list | Sponsored by KoreLogic', '', 'https://marc.info/?a=104547613400001&r=1&w=2', '', '1/1', '', '']
NeuronRain Human Name Parsing by Context - nameparser(): name substring -  Kannan  - found in context =  'Kannan Srinivasan <Kannan.Srinivasan () Sun ! COM>' posts - MARC
NeuronRain Human Name Parsing by Context - nameparser(): second_name : Kannan
NeuronRain Human Name Parsing by Context - nameparser(): first_name : Srinivasan
=============================================================================
HumanName Parser - parsed name (wrong): <HumanName : [
	title: '' 
	first: 'Kannan' 
	middle: '' 
	last: 'Srinivasan' 
	suffix: ''
	nickname: ''
]>
nametokenized =  ['Kannan', 'Srinivasan']
contexttokenized =  ['14/09/2019', '', 'Search:', '[ ] List [', '', "'Kannan Srinivasan <Kannan.Srinivasan () Sun ! COM>' posts - MARC", '', 'Search', '', '] Subjects [', '', 'Reset', '', '] Authors [ ] Bodies (must pick a list first)', '', 'Set Page Width: [ 80 ] [ 90 ] [ 100 ] [ 120 ]', '', "Viewing messages posted by 'Kannan Srinivasan <Kannan.Srinivasan () Sun ! COM>' (3 msg)", '1. 2003-09-04', '2. 2003-09-04', '3. 2003-02-17', '', '[1] Re: [apache-modules] SEGV in ap_set_string_slot (apa apache-mo', '[1] [apache-modules] SEGV in ap_set_string_slot (apache apache-mo', '[1] [users@httpd] problem with subprocess_env', 'apache-ht', 'Configure | About | News | Add a list | Sponsored by KoreLogic', '', 'https://marc.info/?a=104547613400001&r=1&w=2', '', '1/1', '', '']
NeuronRain Human Name Parsing by Context - nameparser(): name substring -  Kannan  - found in context =  'Kannan Srinivasan <Kannan.Srinivasan () Sun ! COM>' posts - MARC
NeuronRain Human Name Parsing by Context - nameparser(): second_name : Kannan
NeuronRain Human Name Parsing by Context - nameparser(): first_name : Srinivasan
=============================================================================
HumanName Parser - parsed name (wrong): <HumanName : [
	title: '' 
	first: 'Kannan' 
	middle: '' 
	last: 'Srinivasan' 
	suffix: ''
	nickname: ''
]>
nametokenized =  ['Kannan', 'Srinivasan']
contexttokenized =  ['14/09/2019', '', "'[apache-modules] Urgent: Apache 1.3.27 question on absolute URI' - MARC", '', '[prev in list] [next in list] [prev in thread] [next in thread]', '', 'List:', 'Subject:', 'From:', 'Date:', '', 'apache-modules', '[apache-modules] Urgent: Apache 1.3.27 question on absolute URI', 'srinivasan kannan <kannan.srinivasan () sun ! com>', '2003-06-20 9:26:31', '', '[Download RAW message or body]', 'Dear all,', '', 'How do I get the absolute URI (scheme://host:port ...) of the request in', 'apache 1.3.27 ? Is there an API for it ?', 'Infact my problem is as below:', 'I have a module which I have built for apache 1.3.27 . I want to use the', 'same module without recompilation in apache-1.3.27 + mod_ssl. The', 'problem comes here. I am using ap_http_method() to get the scheme of the', 'request to distinguish secure and non-secure requests. But', 'ap_http_method is a macro which is defined differently for EAPI using', '#ifdef. This creates the problem when I use the module as-is , without', 'rebuilding, in apache+mod_ssl. All I need is a way to get the scheme of', 'the request or atleast a way to get absolute URI so that I can do', 'strncmp().', 'thanks in advance', 'K.Srinivasan', '--', '', '-------------------------------------------------------------I want to know how God created universe, rest are just details', '- Albert Einstein', 'Ptolemy created a universe that existed for 1000 years;', 'Copernicus created a universe that existed for 400 years;', 'Now Einstein has created a universe;', "I don't know how long this will live", '- G.Bernard Shaw', '---------------------------------------------------------------', '', '--------------------------------------------------------------------To unsubscribe, e-mail: apache-modules-unsubscribe@covalent.net', 'For additional commands, e-mail: apache-modules-help@covalent.net', '[prev in list] [next in list] [prev in thread] [next in thread]', 'Configure | About | News | Add a list | Sponsored by KoreLogic', '', 'https://marc.info/?l=apache-modules&m=105610024116012', '', '1/1', '', '']
NeuronRain Human Name Parsing by Context - nameparser(): name substring -  Srinivasan  - found in context =  K.Srinivasan
NeuronRain Human Name Parsing by Context - nameparser(): second_name : K
NeuronRain Human Name Parsing by Context - nameparser(): first_name : Srinivasan
=============================================================================
HumanName Parser - parsed name (wrong): <HumanName : [
	title: '' 
	first: 'Kannan' 
	middle: '' 
	last: 'Srinivasan' 
	suffix: ''
	nickname: ''
]>
nametokenized =  ['Kannan', 'Srinivasan']
contexttokenized =  ['14/09/2019', '', "'[apache-modules] Urgent: Apache 1.3.27 question on absolute URI' - MARC", '', '[prev in list] [next in list] [prev in thread] [next in thread]', '', 'List:', 'Subject:', 'From:', 'Date:', '', 'apache-modules', '[apache-modules] Urgent: Apache 1.3.27 question on absolute URI', 'srinivasan kannan <kannan.srinivasan () sun ! com>', '2003-06-20 9:26:31', '', '[Download RAW message or body]', 'Dear all,', '', 'How do I get the absolute URI (scheme://host:port ...) of the request in', 'apache 1.3.27 ? Is there an API for it ?', 'Infact my problem is as below:', 'I have a module which I have built for apache 1.3.27 . I want to use the', 'same module without recompilation in apache-1.3.27 + mod_ssl. The', 'problem comes here. I am using ap_http_method() to get the scheme of the', 'request to distinguish secure and non-secure requests. But', 'ap_http_method is a macro which is defined differently for EAPI using', '#ifdef. This creates the problem when I use the module as-is , without', 'rebuilding, in apache+mod_ssl. All I need is a way to get the scheme of', 'the request or atleast a way to get absolute URI so that I can do', 'strncmp().', 'thanks in advance', 'K.Srinivasan', '--', '', '-------------------------------------------------------------I want to know how God created universe, rest are just details', '- Albert Einstein', 'Ptolemy created a universe that existed for 1000 years;', 'Copernicus created a universe that existed for 400 years;', 'Now Einstein has created a universe;', "I don't know how long this will live", '- G.Bernard Shaw', '---------------------------------------------------------------', '', '--------------------------------------------------------------------To unsubscribe, e-mail: apache-modules-unsubscribe@covalent.net', 'For additional commands, e-mail: apache-modules-help@covalent.net', '[prev in list] [next in list] [prev in thread] [next in thread]', 'Configure | About | News | Add a list | Sponsored by KoreLogic', '', 'https://marc.info/?l=apache-modules&m=105610024116012', '', '1/1', '', '']
NeuronRain Human Name Parsing by Context - nameparser(): name substring -  Srinivasan  - found in context =  K.Srinivasan
==============================================================================
HumanName Parser - parsed name (wrong): <HumanName : [
	title: '' 
	first: 'Kannan' 
	middle: '' 
	last: 'Srinivasan' 
	suffix: ''
	nickname: ''
]>
nametokenized =  ['Kannan', 'Srinivasan']
contexttokenized =  ['17/07/2017', '', 'ெவளிேய', 'English', '1967 ( அல்ல', '', 'Proﬁle - Public Distribution System', '', 'என் விவரம்', ') 1800-425-5901', '', 'உண ப் ெபா ள் வழங்கல் மற் ம்', '', 'ெபா', '', 'கர்ேவார் பா காப் த்', '', 'ைறயின் அதிகாரப் ர்வ இைணயதளம், தமிழ் நா', '', 'அர', '', 'விநிேயாகத் திட்டம்', '', 'கப்', 'தன்ைம', 'தன்ைம', 'நியாய விைலக் கைடகள்', 'ம்ப அட்ைடகள்', 'விவரம்', 'G.O ஆவணங்கள்', 'அைமப்', 'பணி விவரம்', 'அமலாக்கம்', 'ைற தீர்க் ம் வழி ைற', 'ஆய் மற் ம் கண்காணிப் அைமப்', 'கர்ேவார் பா காப்', 'அறிக்ைககள்', 'ெபா விநிேயாகத் திட்ட அறிக்ைககள்', 'NFSA அறிக்ைககள்', 'NFSA விற்பைன பரிவர்த்தைன அறிக்ைககள்', 'ேகள்விகள்', 'ெதாடர் க்', '', 'என் விவரம்', 'https://www.tnpds.gov.in/pages/proﬁle.xhtml', '', '1/3', '', '', '17/07/2017', '', 'Proﬁle - Public Distribution System', '', 'ஸ்மார்ட் கார்', 'மாற்றம் New', '', 'விவர', '', 'ஸ்மார்ட் கார்', 'ெசயலாக்கம் New', 'ம்ப தைலவர்', 'ைகப்படம் New', 'ம்ப உ ப்பினர்கள்', '', 'ம்ப உ ப்பினர்கள்', '#', '', 'ெபயர்', '', 'வய', '', 'பிறந்த ேததி', '', '1', '', 'சீனிவாசன் கண்ணன்', '', '79', '', '19-Oct-1937', '', '2', '', 'கண்ணன் அலேம', '', '76', '', '12-May-1941', '', 'தாய்', '', '3', '', 'கண்ணன் சீனிவாசன்', '', '40', '', '19-May-1977', '', 'மகன்', '', 'உற', '', 'ெசயல்', '', 'ம்ப தைலவர்', '', 'ஆதார் எண்கள்', 'உரிைம வழங்கல்', '', 'தன்ைம', '', 'பரிவர்த்தைனகள்', '', 'தன்ைம', 'நியாய', 'ைறகள்விைலக் கைடகள்', 'ம்ப அட்ைடகள்', 'க விவரம்', 'த்', 'பணி விவரம்', 'கவரி', '', 'அட்', 'ைட பிறழ்', 'அமலாக்', 'கம் கள்', 'ைற தீர்க் ம் வழி ைற', '', 'உரிமம்', 'கா காணிப்', 'த்தல் அைமப்', 'ஆய் விட்', 'மற் க்', 'ம் ெ', 'கண்', 'கர்ேவார் பா காப்', 'மற்ற இைணப் கள்', '', 'அைமப்', 'ெபா விநிேயாகத் திட்ட அறிக்ைககள்', 'ேகள்விகள்', 'ெதாடர் க்', 'ச கப் பகிர்', 'https://www.tnpds.gov.in/pages/proﬁle.xhtml', '', '2/3', '', '', '17/07/2017', '', '1967 ( அல்ல', '', 'Proﬁle - Public Distribution System', '', ') 1800-425-5901', '', 'support@tnpds.com', '', 'பதிப் ரிைம © 2017 உண', '', 'ெபா ள் வழங்கல் மற் ம்', '', 'கர்ேவார் பா காப்', '', 'ைற , தமிழ்நா', '', 'அர', '', 'இயக்கம்', 'Live Chat', 'Top', '', 'https://www.tnpds.gov.in/pages/proﬁle.xhtml', '', '3/3', '', '']
HumanName Parser - parsed name (wrong): <HumanName : [
	title: '' 
	first: 'kannan' 
	middle: '' 
	last: 'srinivasan' 
	suffix: ''
	nickname: ''
]>
nametokenized =  ['kannan', 'srinivasan']
contexttokenized =  ['17/07/2017', '', 'ெவளிேய', 'english', '1967 ( அல்ல', '', 'proﬁle - public distribution system', '', 'என் விவரம்', ') 1800-425-5901', '', 'உண ப் ெபா ள் வழங்கல் மற் ம்', '', 'ெபா', '', 'கர்ேவார் பா காப் த்', '', 'ைறயின் அதிகாரப் ர்வ இைணயதளம், தமிழ் நா', '', 'அர', '', 'விநிேயாகத் திட்டம்', '', 'கப்', 'தன்ைம', 'தன்ைம', 'நியாய விைலக் கைடகள்', 'ம்ப அட்ைடகள்', 'விவரம்', 'g.o ஆவணங்கள்', 'அைமப்', 'பணி விவரம்', 'அமலாக்கம்', 'ைற தீர்க் ம் வழி ைற', 'ஆய் மற் ம் கண்காணிப் அைமப்', 'கர்ேவார் பா காப்', 'அறிக்ைககள்', 'ெபா விநிேயாகத் திட்ட அறிக்ைககள்', 'nfsa அறிக்ைககள்', 'nfsa விற்பைன பரிவர்த்தைன அறிக்ைககள்', 'ேகள்விகள்', 'ெதாடர் க்', '', 'என் விவரம்', 'https://www.tnpds.gov.in/pages/proﬁle.xhtml', '', '1/3', '', '', '17/07/2017', '', 'proﬁle - public distribution system', '', 'ஸ்மார்ட் கார்', 'மாற்றம் new', '', 'விவர', '', 'ஸ்மார்ட் கார்', 'ெசயலாக்கம் new', 'ம்ப தைலவர்', 'ைகப்படம் new', 'ம்ப உ ப்பினர்கள்', '', 'ம்ப உ ப்பினர்கள்', '#', '', 'ெபயர்', '', 'வய', '', 'பிறந்த ேததி', '', '1', '', 'சீனிவாசன் கண்ணன்', '', '79', '', '19-oct-1937', '', '2', '', 'கண்ணன் அலேம', '', '76', '', '12-may-1941', '', 'தாய்', '', '3', '', 'கண்ணன் சீனிவாசன்', '', '40', '', '19-may-1977', '', 'மகன்', '', 'உற', '', 'ெசயல்', '', 'ம்ப தைலவர்', '', 'ஆதார் எண்கள்', 'உரிைம வழங்கல்', '', 'தன்ைம', '', 'பரிவர்த்தைனகள்', '', 'தன்ைம', 'நியாய', 'ைறகள்விைலக் கைடகள்', 'ம்ப அட்ைடகள்', 'க விவரம்', 'த்', 'பணி விவரம்', 'கவரி', '', 'அட்', 'ைட பிறழ்', 'அமலாக்', 'கம் கள்', 'ைற தீர்க் ம் வழி ைற', '', 'உரிமம்', 'கா காணிப்', 'த்தல் அைமப்', 'ஆய் விட்', 'மற் க்', 'ம் ெ', 'கண்', 'கர்ேவார் பா காப்', 'மற்ற இைணப் கள்', '', 'அைமப்', 'ெபா விநிேயாகத் திட்ட அறிக்ைககள்', 'ேகள்விகள்', 'ெதாடர் க்', 'ச கப் பகிர்', 'https://www.tnpds.gov.in/pages/proﬁle.xhtml', '', '2/3', '', '', '17/07/2017', '', '1967 ( அல்ல', '', 'proﬁle - public distribution system', '', ') 1800-425-5901', '', 'support@tnpds.com', '', 'பதிப் ரிைம © 2017 உண', '', 'ெபா ள் வழங்கல் மற் ம்', '', 'கர்ேவார் பா காப்', '', 'ைற , தமிழ்நா', '', 'அர', '', 'இயக்கம்', 'live chat', 'top', '', 'https://www.tnpds.gov.in/pages/proﬁle.xhtml', '', '3/3', '', '']
==============================================================================
==============================================================================
HumanName Parser - parsed name (wrong): <HumanName : [
	title: '' 
	first: 'Kannan' 
	middle: '' 
	last: 'Srinivasan' 
	suffix: ''
	nickname: ''
]>
nametokenized =  ['Kannan', 'Srinivasan']
contexttokenized =  ['17/07/2017', '', 'ெவளிேய', 'English', '1967 ( அல்ல', '', 'Proﬁle - Public Distribution System', '', 'என் விவரம்', ') 1800-425-5901', '', 'உண ப் ெபா ள் வழங்கல் மற் ம்', '', 'ெபா', '', 'கர்ேவார் பா காப் த்', '', 'ைறயின் அதிகாரப் ர்வ இைணயதளம், தமிழ் நா', '', 'அர', '', 'விநிேயாகத் திட்டம்', '', 'கப்', 'தன்ைம', 'தன்ைம', 'நியாய விைலக் கைடகள்', 'ம்ப அட்ைடகள்', 'விவரம்', 'G.O ஆவணங்கள்', 'அைமப்', 'பணி விவரம்', 'அமலாக்கம்', 'ைற தீர்க் ம் வழி ைற', 'ஆய் மற் ம் கண்காணிப் அைமப்', 'கர்ேவார் பா காப்', 'அறிக்ைககள்', 'ெபா விநிேயாகத் திட்ட அறிக்ைககள்', 'NFSA அறிக்ைககள்', 'NFSA விற்பைன பரிவர்த்தைன அறிக்ைககள்', 'ேகள்விகள்', 'ெதாடர் க்', '', 'என் விவரம்', 'https://www.tnpds.gov.in/pages/proﬁle.xhtml', '', '1/6', '', '', '17/07/2017', '', 'Proﬁle - Public Distribution System', '', 'ஸ்மார்ட் கார்', 'மாற்றம் New', '', 'விவர', '', 'ஸ்மார்ட் கார்', 'ெசயலாக்கம் New', 'ம்ப தைலவர்', 'ைகப்படம் New', 'ம்ப உ ப்பினர்கள்', 'ஆதார் எண்கள்', '', 'ஸ்மார்ட் கார்', 'ஸ்மார்ட் கார்', '', 'விவர மாற்றம்', 'விவரங்கள்', '', 'ம்ப அட்ைட எண் 18G0180449', 'என்எப்எஸ்எ அட்ைட வைக NPHH', 'ஸ்மார்ட் கார்', '', 'எண் (UFC) 333314565811', '', 'கைட றியீ 19DD024PN', 'ம்ப தைலவர் ைகப்படம் *', '', 'உரிைம வழங்கல்', 'பரிவர்த்தைனகள்', 'ைறகள்', 'க த்', 'கவரி', 'அட்ைட பிறழ் கள்', 'உரிமம் விட் க்ெகா த்தல்', '', 'https://www.tnpds.gov.in/pages/proﬁle.xhtml', '', '2/6', '', '', '17/07/2017', '', 'Proﬁle - Public Distribution System', '', 'பதிேவற்றம்', 'பி ப்', 'தாங்கள் 10 KB க் ள் உள்ள jpeg, jpg, png ேகாப்ைப பதிேவற்றம் ெசய்யலாம்', 'ம்ப தைலவர் விவரங்கள்', 'ம்ப தைலவர் ேதர் * Kannan Srinivasan', 'ெபயர் Kannan Srinivasan', 'ெபயர் * சீனிவாசன் கண்ணன்', 'ஆதார் எண் 953301029767', 'தந்ைத / கணவர் ெபயர் Srinivasan', 'தந்ைத / கணவர் ெபயர் * சீனிவாசன்', 'பாலினம் Male', 'பிறந்த ேததி * 19-Oct-1937', 'தி த்த', 'ம்ப உ ப்பினர்களின் விபரங்கள்', '', 'https://www.tnpds.gov.in/pages/proﬁle.xhtml', '', 'உ ப்பினைர ேசர்க்க', '', '3/6', '', '', '17/07/2017', '', 'Proﬁle - Public Distribution System', '', 'ெபரியவர்கள் - 3', 'வ.எண்', '', 'ழந்ைதகள் - 0 ெமாத்த', '', 'ெபயர்', '', 'ெபயர்', '', '1', '', 'Srinivasan Kannan கண்ணன் சீனிவாசன்', '', '2', '', 'Alamelu Kannan கண்ணன் அலேம', '', 'ம்ப அள', '', '-3', '', 'பாலினம்', '', 'பிறந்த', 'ேததி', '', 'M', '', '19May1977', '', 'Son', '', '772717942542', '', 'F', '', '12May1941', '', 'Mother', '', '880237813337', '', 'உற', '', 'ஆதார் எண்', '', 'ெசயல்', '', 'றிப் :', '1. தங்கள ஸ்மார்ட் அட்ைட இைணக்கப்பட் ள்ள நியாய விைலக் கைடயின் POS சாதனம்', 'லம் திதாக ேசர்க்கப்பட்ட உ ப்பினரின் ஆதார் ஸ்ேகன் ெசய்யப்ப வைத உ திப்ப த்த ம்', '2. நீங்கள்', 'ம்பத்தில் இ ந் ஒ உ ப்பினைர நீக்க ேவண் ெமன்றால் தய ெசய் அட்ைட', 'ேமலாண்ைம லம் ேகாரிக்ைக ெசய்ய ம்.', 'கவரி விவரம்', 'கவரி வரி 1 *', '172', '172', 'கவரி வரி 2', 'காந்திய கள் சாைல', 'காந்திய கள் சாைல', 'கவரி வரி 3', 'ம்பேகாணம்', 'ம்பேகாணம்', 'மாவட்டம் *', 'Thanjavur', 'தஞ்சா ர்', 'https://www.tnpds.gov.in/pages/proﬁle.xhtml', '', '4/6', '', '', '17/07/2017', '', 'Proﬁle - Public Distribution System', '', 'வட்டம் *', 'Kumbakonam (Tk)', 'ம்பேகாணம் (வ)', 'கிராமம் *', 'Kumbakonam', 'ம்பேகாணம்', 'அஞ்சல் றியீ *', '612001', 'தி த்த', 'ஒப் க்ெகாள்', '', 'தல்', '', 'ம்ப தைலவர் என்ற ைறயில் ேமேல ெசய்யப்பட்ட தி த்தம் / மாற்றம் அைனத் ம் எனக்', 'ெதரிந்தவைரயில் உண்ைமெயன சான் அளிக்கிேறன். இதில், ஏேத ம் தவ கள்', 'கண்டறியப்பட்டால் என் ைடய', 'ம்ப அட்ைட இரத் ெசய்யப்ப ம் என்பைத அறிந்', 'ெகாண்ேடன்.', 'ரத்', '', 'ெசய்ய', '', 'ஒப் த க்காக சமர்ப்பிக்க', '', 'தன்ைம', '', 'தன்ைம', 'நியாய விைலக் கைடகள்', 'ம்ப அட்ைடகள்', 'விவரம்', 'பணி விவரம்', '', 'அமலாக்கம்', 'ைற தீர்க் ம் வழி ைற', 'ஆய் மற் ம் கண்காணிப் அைமப்', 'கர்ேவார் பா காப்', 'https://www.tnpds.gov.in/pages/proﬁle.xhtml', '', '5/6', '', '', '17/07/2017', '', 'Proﬁle - Public Distribution System', '', 'மற்ற இைணப் கள்', '', 'அைமப்', 'ெபா விநிேயாகத் திட்ட அறிக்ைககள்', 'ேகள்விகள்', 'ெதாடர் க்', 'ச கப் பகிர்', '', '1967 ( அல்ல', '', ') 1800-425-5901', '', 'support@tnpds.com', '', 'பதிப் ரிைம © 2017 உண', '', 'ெபா ள் வழங்கல் மற் ம்', '', 'கர்ேவார் பா காப்', '', 'ைற , தமிழ்நா', '', 'அர', '', 'இயக்கம்', 'Live Chat', 'Top', '', 'https://www.tnpds.gov.in/pages/proﬁle.xhtml', '', '6/6', '', '', '']
NeuronRain Human Name Parsing by Context - nameparser(): name substring -  Kannan  - found in context =  ம்ப தைலவர் ேதர் * Kannan Srinivasan
NeuronRain Human Name Parsing by Context - nameparser(): second_name : ப
NeuronRain Human Name Parsing by Context - nameparser(): first_name : த
HumanName Parser - parsed name (wrong): <HumanName : [
	title: '' 
	first: 'kannan' 
	middle: '' 
	last: 'srinivasan' 
	suffix: ''
	nickname: ''
]>
nametokenized =  ['kannan', 'srinivasan']
contexttokenized =  ['17/07/2017', '', 'ெவளிேய', 'english', '1967 ( அல்ல', '', 'proﬁle - public distribution system', '', 'என் விவரம்', ') 1800-425-5901', '', 'உண ப் ெபா ள் வழங்கல் மற் ம்', '', 'ெபா', '', 'கர்ேவார் பா காப் த்', '', 'ைறயின் அதிகாரப் ர்வ இைணயதளம், தமிழ் நா', '', 'அர', '', 'விநிேயாகத் திட்டம்', '', 'கப்', 'தன்ைம', 'தன்ைம', 'நியாய விைலக் கைடகள்', 'ம்ப அட்ைடகள்', 'விவரம்', 'g.o ஆவணங்கள்', 'அைமப்', 'பணி விவரம்', 'அமலாக்கம்', 'ைற தீர்க் ம் வழி ைற', 'ஆய் மற் ம் கண்காணிப் அைமப்', 'கர்ேவார் பா காப்', 'அறிக்ைககள்', 'ெபா விநிேயாகத் திட்ட அறிக்ைககள்', 'nfsa அறிக்ைககள்', 'nfsa விற்பைன பரிவர்த்தைன அறிக்ைககள்', 'ேகள்விகள்', 'ெதாடர் க்', '', 'என் விவரம்', 'https://www.tnpds.gov.in/pages/proﬁle.xhtml', '', '1/6', '', '', '17/07/2017', '', 'proﬁle - public distribution system', '', 'ஸ்மார்ட் கார்', 'மாற்றம் new', '', 'விவர', '', 'ஸ்மார்ட் கார்', 'ெசயலாக்கம் new', 'ம்ப தைலவர்', 'ைகப்படம் new', 'ம்ப உ ப்பினர்கள்', 'ஆதார் எண்கள்', '', 'ஸ்மார்ட் கார்', 'ஸ்மார்ட் கார்', '', 'விவர மாற்றம்', 'விவரங்கள்', '', 'ம்ப அட்ைட எண் 18g0180449', 'என்எப்எஸ்எ அட்ைட வைக nphh', 'ஸ்மார்ட் கார்', '', 'எண் (ufc) 333314565811', '', 'கைட றியீ 19dd024pn', 'ம்ப தைலவர் ைகப்படம் *', '', 'உரிைம வழங்கல்', 'பரிவர்த்தைனகள்', 'ைறகள்', 'க த்', 'கவரி', 'அட்ைட பிறழ் கள்', 'உரிமம் விட் க்ெகா த்தல்', '', 'https://www.tnpds.gov.in/pages/proﬁle.xhtml', '', '2/6', '', '', '17/07/2017', '', 'proﬁle - public distribution system', '', 'பதிேவற்றம்', 'பி ப்', 'தாங்கள் 10 kb க் ள் உள்ள jpeg, jpg, png ேகாப்ைப பதிேவற்றம் ெசய்யலாம்', 'ம்ப தைலவர் விவரங்கள்', 'ம்ப தைலவர் ேதர் * kannan srinivasan', 'ெபயர் kannan srinivasan', 'ெபயர் * சீனிவாசன் கண்ணன்', 'ஆதார் எண் 953301029767', 'தந்ைத / கணவர் ெபயர் srinivasan', 'தந்ைத / கணவர் ெபயர் * சீனிவாசன்', 'பாலினம் male', 'பிறந்த ேததி * 19-oct-1937', 'தி த்த', 'ம்ப உ ப்பினர்களின் விபரங்கள்', '', 'https://www.tnpds.gov.in/pages/proﬁle.xhtml', '', 'உ ப்பினைர ேசர்க்க', '', '3/6', '', '', '17/07/2017', '', 'proﬁle - public distribution system', '', 'ெபரியவர்கள் - 3', 'வ.எண்', '', 'ழந்ைதகள் - 0 ெமாத்த', '', 'ெபயர்', '', 'ெபயர்', '', '1', '', 'srinivasan kannan கண்ணன் சீனிவாசன்', '', '2', '', 'alamelu kannan கண்ணன் அலேம', '', 'ம்ப அள', '', '-3', '', 'பாலினம்', '', 'பிறந்த', 'ேததி', '', 'm', '', '19may1977', '', 'son', '', '772717942542', '', 'f', '', '12may1941', '', 'mother', '', '880237813337', '', 'உற', '', 'ஆதார் எண்', '', 'ெசயல்', '', 'றிப் :', '1. தங்கள ஸ்மார்ட் அட்ைட இைணக்கப்பட் ள்ள நியாய விைலக் கைடயின் pos சாதனம்', 'லம் திதாக ேசர்க்கப்பட்ட உ ப்பினரின் ஆதார் ஸ்ேகன் ெசய்யப்ப வைத உ திப்ப த்த ம்', '2. நீங்கள்', 'ம்பத்தில் இ ந் ஒ உ ப்பினைர நீக்க ேவண் ெமன்றால் தய ெசய் அட்ைட', 'ேமலாண்ைம லம் ேகாரிக்ைக ெசய்ய ம்.', 'கவரி விவரம்', 'கவரி வரி 1 *', '172', '172', 'கவரி வரி 2', 'காந்திய கள் சாைல', 'காந்திய கள் சாைல', 'கவரி வரி 3', 'ம்பேகாணம்', 'ம்பேகாணம்', 'மாவட்டம் *', 'thanjavur', 'தஞ்சா ர்', 'https://www.tnpds.gov.in/pages/proﬁle.xhtml', '', '4/6', '', '', '17/07/2017', '', 'proﬁle - public distribution system', '', 'வட்டம் *', 'kumbakonam (tk)', 'ம்பேகாணம் (வ)', 'கிராமம் *', 'kumbakonam', 'ம்பேகாணம்', 'அஞ்சல் றியீ *', '612001', 'தி த்த', 'ஒப் க்ெகாள்', '', 'தல்', '', 'ம்ப தைலவர் என்ற ைறயில் ேமேல ெசய்யப்பட்ட தி த்தம் / மாற்றம் அைனத் ம் எனக்', 'ெதரிந்தவைரயில் உண்ைமெயன சான் அளிக்கிேறன். இதில், ஏேத ம் தவ கள்', 'கண்டறியப்பட்டால் என் ைடய', 'ம்ப அட்ைட இரத் ெசய்யப்ப ம் என்பைத அறிந்', 'ெகாண்ேடன்.', 'ரத்', '', 'ெசய்ய', '', 'ஒப் த க்காக சமர்ப்பிக்க', '', 'தன்ைம', '', 'தன்ைம', 'நியாய விைலக் கைடகள்', 'ம்ப அட்ைடகள்', 'விவரம்', 'பணி விவரம்', '', 'அமலாக்கம்', 'ைற தீர்க் ம் வழி ைற', 'ஆய் மற் ம் கண்காணிப் அைமப்', 'கர்ேவார் பா காப்', 'https://www.tnpds.gov.in/pages/proﬁle.xhtml', '', '5/6', '', '', '17/07/2017', '', 'proﬁle - public distribution system', '', 'மற்ற இைணப் கள்', '', 'அைமப்', 'ெபா விநிேயாகத் திட்ட அறிக்ைககள்', 'ேகள்விகள்', 'ெதாடர் க்', 'ச கப் பகிர்', '', '1967 ( அல்ல', '', ') 1800-425-5901', '', 'support@tnpds.com', '', 'பதிப் ரிைம © 2017 உண', '', 'ெபா ள் வழங்கல் மற் ம்', '', 'கர்ேவார் பா காப்', '', 'ைற , தமிழ்நா', '', 'அர', '', 'இயக்கம்', 'live chat', 'top', '', 'https://www.tnpds.gov.in/pages/proﬁle.xhtml', '', '6/6', '', '', '']
NeuronRain Human Name Parsing by Context - nameparser(): name substring -  kannan  - found in context =  ம்ப தைலவர் ேதர் * kannan srinivasan
NeuronRain Human Name Parsing by Context - nameparser(): second_name : ப
NeuronRain Human Name Parsing by Context - nameparser(): first_name : த
==============================================================================
==============================================================================
HumanName Parser - parsed name (wrong): <HumanName : [
	title: '' 
	first: 'Kannan' 
	middle: '' 
	last: 'Srinivasan' 
	suffix: ''
	nickname: ''
]>
nametokenized =  ['Kannan', 'Srinivasan']
contexttokenized =  ['______L___  ?______  Aovps2844F(  _    _____   ______', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '_   --  -', '___  lpERmANENTAccouNTNumBEi   _3 ,_,_ ,_?', '', '', '_ / N A m E', '  KANNAN SRINIVASAN', '', '', '', '', 'Fbnm_ /,A,HER,s,AmE           l', '', ' KANNAM SRINIVAsAN', "' 'l,                           l", "''_", '', '__ / _ n T E o F B _ _ H', '_   1 9', '- o 5- 1 g 7 7', '_m /s_GNATuRE                ,_!___', "__'--_            '", "'    ,                 __ _ ( _ _ t", ",  _ _  '____ ??__m   c      ,,     c   , o  t", 'l______Omm_!S! n\'_\'O n\'Om_e!\'X__PUe_\' Pe\'"_O__}']
HumanName Parser - parsed name (wrong): <HumanName : [
	title: '' 
	first: 'kannan' 
	middle: '' 
	last: 'srinivasan' 
	suffix: ''
	nickname: ''
]>
nametokenized =  ['kannan', 'srinivasan']
contexttokenized =  ['______l___  ?______  aovps2844f(  _    _____   ______', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '_   --  -', '___  lpermanentaccountnumbei   _3 ,_,_ ,_?', '', '', '_ / n a m e', '  kannan srinivasan', '', '', '', '', 'fbnm_ /,a,her,s,ame           l', '', ' kannam srinivasan', "' 'l,                           l", "''_", '', '__ / _ n t e o f b _ _ h', '_   1 9', '- o 5- 1 g 7 7', '_m /s_gnature                ,_!___', "__'--_            '", "'    ,                 __ _ ( _ _ t", ",  _ _  '____ ??__m   c      ,,     c   , o  t", 'l______omm_!s! n\'_\'o n\'om_e!\'x__pue_\' pe\'"_o__}']
NeuronRain Human Name Parsing by Context - nameparser(): name substring -  kannan  - found in context =    kannan srinivasan
NeuronRain Human Name Parsing by Context - nameparser(): second_name : kannan
NeuronRain Human Name Parsing by Context - nameparser(): first_name : srinivasan
==============================================================================
#####################################################################################################
Vowelless Syllable Vector Compression for text -  Shrinivaasan : (['Shrini', 'vaasan'], 'Shr_n_-v__s_n')
Alphabet vectorspace embedding of text: [['S', 'h', 'r', 'i', 'n', 'i', 'v', 'a', 'a', 's', 'a', 'n']]
#####################################################################################################
Vowelless Syllable Vector Compression for text -  Shrinivas : (['Shrini', 'vas'], 'Shr_n_-v_s')
Alphabet vectorspace embedding of text: [['S', 'h', 'r', 'i', 'n', 'i', 'v', 'a', 's']]
#####################################################################################################
Vowelless Syllable Vector Compression for text -  Srinivasan : (['Srini', 'vasan'], 'Sr_n_-v_s_n')
Alphabet vectorspace embedding of text: [['S', 'r', 'i', 'n', 'i', 'v', 'a', 's', 'a', 'n']]
Exception: word length exceeded
======================================================================
Match Rating Codex 
======================================================================
Match ratings for same name of differing spellings - [Shrinivaasan,Shrinivas,Srinivasan]: ['SHRVSN', 'SHRNVS', 'SRNVSN']
search_engine_rank_correlation(): res =  SpearmanrResult(correlation=-0.12781954887218044, pvalue=0.5912462398946646)
