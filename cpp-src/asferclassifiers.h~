#include <iostream>
#include <fstream>
#include <list>
#include "NaiveBayesClassifier.h"
#include "DecisionTreeClassifier.h"

using namespace std;

int main()
{

	NaiveBayesClassifier nb_classifier;
	std::list<int> testset;
	ifstream testsettxt;
	cout << "---------------------------------------" << endl;
	cout << "1 -- NAIVE BAYESIAN CLASSIFIER running" << endl;
	cout << "---------------------------------------" << endl;

	testsettxt.open("test-set.txt", ifstream::in);
	char line[256];
	char *tail;
	testsettxt.getline(line, 256);
	while(testsettxt.good())
	{
		int article_id = strtol(line, &tail, 0);
		testset.push_back(article_id);
		testsettxt.getline(line, 256);
	}

	cout << "NAIVE BAYESIAN CLASSIFIER RESULTS" << endl;
	cout << "---------------------------------" << endl;
	nb_classifier.doNBMultinomialClassification(testset);
	cout << "---------------------------------------" << endl;
	cout << "2 -- DECISION TREE CLASSIFIER running" << endl;
	cout << "---------------------------------------" << endl;

	DecisionTreeClassifier dt_classifier;
	ifstream dttrainingset;
	ifstream dttestset;
	const std::vector<attr_set*>* decisionset = dt_classifier.readTrainingSet();
	dttrainingset.open("decisiontree-training.txt", ifstream::in);
	dttestset.open("decisiontree-test.txt", ifstream::in);
	dttrainingset.getline(line, 256);
	char* line2 = strdup(line);
	char* token = strtok(line, " ");
	int no_of_attrs=0;
	while(token != NULL)
	{
		no_of_attrs++;
		token = strtok(NULL, " ");
	}
	char attr_names[no_of_attrs][256];
	token = strtok(line2, " ");
	int i=0;
	while(token != NULL && i < no_of_attrs)
	{
		strcpy(attr_names[i], token);
		i++;
		token = strtok(NULL, " ");
	}	
	dt_classifier.decisionTree(decisionset, attr_names, no_of_attrs, dt_classifier.getNodeId());
	std::vector<attr_set*>* testsetvec = dt_classifier.readTestSet();
	dt_classifier.doDecisionTreeClassification(testsetvec);
}
